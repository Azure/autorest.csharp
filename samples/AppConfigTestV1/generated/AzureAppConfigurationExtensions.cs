// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Appconfiguration
{
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for AzureAppConfiguration.
    /// </summary>
    public static partial class AzureAppConfigurationExtensions
    {
            /// <summary>
            /// Gets a list of keys.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='name'>
            /// A filter for the name of the returned keys.
            /// </param>
            /// <param name='after'>
            /// Instructs the server to return elements that appear after the element
            /// referred to by the specified token.
            /// </param>
            /// <param name='acceptDatetime'>
            /// Requests the server to respond with the state of the resource at the
            /// specified time.
            /// </param>
            public static KeyListResult GetKeys(this IAzureAppConfiguration operations, string name = default(string), string after = default(string), string acceptDatetime = default(string))
            {
                return operations.GetKeysAsync(name, after, acceptDatetime).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets a list of keys.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='name'>
            /// A filter for the name of the returned keys.
            /// </param>
            /// <param name='after'>
            /// Instructs the server to return elements that appear after the element
            /// referred to by the specified token.
            /// </param>
            /// <param name='acceptDatetime'>
            /// Requests the server to respond with the state of the resource at the
            /// specified time.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<KeyListResult> GetKeysAsync(this IAzureAppConfiguration operations, string name = default(string), string after = default(string), string acceptDatetime = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetKeysWithHttpMessagesAsync(name, after, acceptDatetime, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Requests the headers and status of the given resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='name'>
            /// A filter for the name of the returned keys.
            /// </param>
            /// <param name='after'>
            /// Instructs the server to return elements that appear after the element
            /// referred to by the specified token.
            /// </param>
            /// <param name='acceptDatetime'>
            /// Requests the server to respond with the state of the resource at the
            /// specified time.
            /// </param>
            public static CheckKeysHeaders CheckKeys(this IAzureAppConfiguration operations, string name = default(string), string after = default(string), string acceptDatetime = default(string))
            {
                return operations.CheckKeysAsync(name, after, acceptDatetime).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Requests the headers and status of the given resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='name'>
            /// A filter for the name of the returned keys.
            /// </param>
            /// <param name='after'>
            /// Instructs the server to return elements that appear after the element
            /// referred to by the specified token.
            /// </param>
            /// <param name='acceptDatetime'>
            /// Requests the server to respond with the state of the resource at the
            /// specified time.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CheckKeysHeaders> CheckKeysAsync(this IAzureAppConfiguration operations, string name = default(string), string after = default(string), string acceptDatetime = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CheckKeysWithHttpMessagesAsync(name, after, acceptDatetime, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Headers;
                }
            }

            /// <summary>
            /// Gets a list of key-values.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='key'>
            /// A filter used to match keys.
            /// </param>
            /// <param name='label'>
            /// A filter used to match labels
            /// </param>
            /// <param name='after'>
            /// Instructs the server to return elements that appear after the element
            /// referred to by the specified token.
            /// </param>
            /// <param name='acceptDatetime'>
            /// Requests the server to respond with the state of the resource at the
            /// specified time.
            /// </param>
            /// <param name='select'>
            /// Used to select what fields are present in the returned resource(s).
            /// </param>
            public static KeyValueListResult GetKeyValues(this IAzureAppConfiguration operations, string key = default(string), string label = default(string), string after = default(string), string acceptDatetime = default(string), IList<string> select = default(IList<string>))
            {
                return operations.GetKeyValuesAsync(key, label, after, acceptDatetime, select).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets a list of key-values.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='key'>
            /// A filter used to match keys.
            /// </param>
            /// <param name='label'>
            /// A filter used to match labels
            /// </param>
            /// <param name='after'>
            /// Instructs the server to return elements that appear after the element
            /// referred to by the specified token.
            /// </param>
            /// <param name='acceptDatetime'>
            /// Requests the server to respond with the state of the resource at the
            /// specified time.
            /// </param>
            /// <param name='select'>
            /// Used to select what fields are present in the returned resource(s).
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<KeyValueListResult> GetKeyValuesAsync(this IAzureAppConfiguration operations, string key = default(string), string label = default(string), string after = default(string), string acceptDatetime = default(string), IList<string> select = default(IList<string>), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetKeyValuesWithHttpMessagesAsync(key, label, after, acceptDatetime, select, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Requests the headers and status of the given resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='key'>
            /// A filter used to match keys.
            /// </param>
            /// <param name='label'>
            /// A filter used to match labels
            /// </param>
            /// <param name='after'>
            /// Instructs the server to return elements that appear after the element
            /// referred to by the specified token.
            /// </param>
            /// <param name='acceptDatetime'>
            /// Requests the server to respond with the state of the resource at the
            /// specified time.
            /// </param>
            /// <param name='select'>
            /// Used to select what fields are present in the returned resource(s).
            /// </param>
            public static CheckKeyValuesHeaders CheckKeyValues(this IAzureAppConfiguration operations, string key = default(string), string label = default(string), string after = default(string), string acceptDatetime = default(string), IList<string> select = default(IList<string>))
            {
                return operations.CheckKeyValuesAsync(key, label, after, acceptDatetime, select).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Requests the headers and status of the given resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='key'>
            /// A filter used to match keys.
            /// </param>
            /// <param name='label'>
            /// A filter used to match labels
            /// </param>
            /// <param name='after'>
            /// Instructs the server to return elements that appear after the element
            /// referred to by the specified token.
            /// </param>
            /// <param name='acceptDatetime'>
            /// Requests the server to respond with the state of the resource at the
            /// specified time.
            /// </param>
            /// <param name='select'>
            /// Used to select what fields are present in the returned resource(s).
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CheckKeyValuesHeaders> CheckKeyValuesAsync(this IAzureAppConfiguration operations, string key = default(string), string label = default(string), string after = default(string), string acceptDatetime = default(string), IList<string> select = default(IList<string>), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CheckKeyValuesWithHttpMessagesAsync(key, label, after, acceptDatetime, select, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Headers;
                }
            }

            /// <summary>
            /// Gets a single key-value.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='key'>
            /// The key of the key-value to retrieve.
            /// </param>
            /// <param name='label'>
            /// The label of the key-value to retrieve.
            /// </param>
            /// <param name='acceptDatetime'>
            /// Requests the server to respond with the state of the resource at the
            /// specified time.
            /// </param>
            /// <param name='ifMatch'>
            /// Used to perform an operation only if the targeted resource's etag matches
            /// the value provided.
            /// </param>
            /// <param name='ifNoneMatch'>
            /// Used to perform an operation only if the targeted resource's etag does not
            /// match the value provided.
            /// </param>
            /// <param name='select'>
            /// Used to select what fields are present in the returned resource(s).
            /// </param>
            public static KeyValue GetKeyValue(this IAzureAppConfiguration operations, string key, string label = default(string), string acceptDatetime = default(string), string ifMatch = default(string), string ifNoneMatch = default(string), IList<string> select = default(IList<string>))
            {
                return operations.GetKeyValueAsync(key, label, acceptDatetime, ifMatch, ifNoneMatch, select).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets a single key-value.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='key'>
            /// The key of the key-value to retrieve.
            /// </param>
            /// <param name='label'>
            /// The label of the key-value to retrieve.
            /// </param>
            /// <param name='acceptDatetime'>
            /// Requests the server to respond with the state of the resource at the
            /// specified time.
            /// </param>
            /// <param name='ifMatch'>
            /// Used to perform an operation only if the targeted resource's etag matches
            /// the value provided.
            /// </param>
            /// <param name='ifNoneMatch'>
            /// Used to perform an operation only if the targeted resource's etag does not
            /// match the value provided.
            /// </param>
            /// <param name='select'>
            /// Used to select what fields are present in the returned resource(s).
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<KeyValue> GetKeyValueAsync(this IAzureAppConfiguration operations, string key, string label = default(string), string acceptDatetime = default(string), string ifMatch = default(string), string ifNoneMatch = default(string), IList<string> select = default(IList<string>), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetKeyValueWithHttpMessagesAsync(key, label, acceptDatetime, ifMatch, ifNoneMatch, select, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates a key-value.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='key'>
            /// The key of the key-value to create.
            /// </param>
            /// <param name='label'>
            /// The label of the key-value to create.
            /// </param>
            /// <param name='entity'>
            /// The key-value to create.
            /// </param>
            /// <param name='ifMatch'>
            /// Used to perform an operation only if the targeted resource's etag matches
            /// the value provided.
            /// </param>
            /// <param name='ifNoneMatch'>
            /// Used to perform an operation only if the targeted resource's etag does not
            /// match the value provided.
            /// </param>
            public static KeyValue PutKeyValue(this IAzureAppConfiguration operations, string key, string label = default(string), KeyValue entity = default(KeyValue), string ifMatch = default(string), string ifNoneMatch = default(string))
            {
                return operations.PutKeyValueAsync(key, label, entity, ifMatch, ifNoneMatch).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates a key-value.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='key'>
            /// The key of the key-value to create.
            /// </param>
            /// <param name='label'>
            /// The label of the key-value to create.
            /// </param>
            /// <param name='entity'>
            /// The key-value to create.
            /// </param>
            /// <param name='ifMatch'>
            /// Used to perform an operation only if the targeted resource's etag matches
            /// the value provided.
            /// </param>
            /// <param name='ifNoneMatch'>
            /// Used to perform an operation only if the targeted resource's etag does not
            /// match the value provided.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<KeyValue> PutKeyValueAsync(this IAzureAppConfiguration operations, string key, string label = default(string), KeyValue entity = default(KeyValue), string ifMatch = default(string), string ifNoneMatch = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.PutKeyValueWithHttpMessagesAsync(key, label, entity, ifMatch, ifNoneMatch, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes a key-value.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='key'>
            /// The key of the key-value to delete.
            /// </param>
            /// <param name='label'>
            /// The label of the key-value to delete.
            /// </param>
            /// <param name='ifMatch'>
            /// Used to perform an operation only if the targeted resource's etag matches
            /// the value provided.
            /// </param>
            public static KeyValue DeleteKeyValue(this IAzureAppConfiguration operations, string key, string label = default(string), string ifMatch = default(string))
            {
                return operations.DeleteKeyValueAsync(key, label, ifMatch).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes a key-value.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='key'>
            /// The key of the key-value to delete.
            /// </param>
            /// <param name='label'>
            /// The label of the key-value to delete.
            /// </param>
            /// <param name='ifMatch'>
            /// Used to perform an operation only if the targeted resource's etag matches
            /// the value provided.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<KeyValue> DeleteKeyValueAsync(this IAzureAppConfiguration operations, string key, string label = default(string), string ifMatch = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.DeleteKeyValueWithHttpMessagesAsync(key, label, ifMatch, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Requests the headers and status of the given resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='key'>
            /// The key of the key-value to retrieve.
            /// </param>
            /// <param name='label'>
            /// The label of the key-value to retrieve.
            /// </param>
            /// <param name='acceptDatetime'>
            /// Requests the server to respond with the state of the resource at the
            /// specified time.
            /// </param>
            /// <param name='ifMatch'>
            /// Used to perform an operation only if the targeted resource's etag matches
            /// the value provided.
            /// </param>
            /// <param name='ifNoneMatch'>
            /// Used to perform an operation only if the targeted resource's etag does not
            /// match the value provided.
            /// </param>
            /// <param name='select'>
            /// Used to select what fields are present in the returned resource(s).
            /// </param>
            public static CheckKeyValueHeaders CheckKeyValue(this IAzureAppConfiguration operations, string key, string label = default(string), string acceptDatetime = default(string), string ifMatch = default(string), string ifNoneMatch = default(string), IList<string> select = default(IList<string>))
            {
                return operations.CheckKeyValueAsync(key, label, acceptDatetime, ifMatch, ifNoneMatch, select).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Requests the headers and status of the given resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='key'>
            /// The key of the key-value to retrieve.
            /// </param>
            /// <param name='label'>
            /// The label of the key-value to retrieve.
            /// </param>
            /// <param name='acceptDatetime'>
            /// Requests the server to respond with the state of the resource at the
            /// specified time.
            /// </param>
            /// <param name='ifMatch'>
            /// Used to perform an operation only if the targeted resource's etag matches
            /// the value provided.
            /// </param>
            /// <param name='ifNoneMatch'>
            /// Used to perform an operation only if the targeted resource's etag does not
            /// match the value provided.
            /// </param>
            /// <param name='select'>
            /// Used to select what fields are present in the returned resource(s).
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CheckKeyValueHeaders> CheckKeyValueAsync(this IAzureAppConfiguration operations, string key, string label = default(string), string acceptDatetime = default(string), string ifMatch = default(string), string ifNoneMatch = default(string), IList<string> select = default(IList<string>), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CheckKeyValueWithHttpMessagesAsync(key, label, acceptDatetime, ifMatch, ifNoneMatch, select, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Headers;
                }
            }

            /// <summary>
            /// Gets a list of labels.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='name'>
            /// A filter for the name of the returned labels.
            /// </param>
            /// <param name='after'>
            /// Instructs the server to return elements that appear after the element
            /// referred to by the specified token.
            /// </param>
            /// <param name='acceptDatetime'>
            /// Requests the server to respond with the state of the resource at the
            /// specified time.
            /// </param>
            /// <param name='select'>
            /// Used to select what fields are present in the returned resource(s).
            /// </param>
            public static LabelListResult GetLabels(this IAzureAppConfiguration operations, string name = default(string), string after = default(string), string acceptDatetime = default(string), IList<string> select = default(IList<string>))
            {
                return operations.GetLabelsAsync(name, after, acceptDatetime, select).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets a list of labels.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='name'>
            /// A filter for the name of the returned labels.
            /// </param>
            /// <param name='after'>
            /// Instructs the server to return elements that appear after the element
            /// referred to by the specified token.
            /// </param>
            /// <param name='acceptDatetime'>
            /// Requests the server to respond with the state of the resource at the
            /// specified time.
            /// </param>
            /// <param name='select'>
            /// Used to select what fields are present in the returned resource(s).
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<LabelListResult> GetLabelsAsync(this IAzureAppConfiguration operations, string name = default(string), string after = default(string), string acceptDatetime = default(string), IList<string> select = default(IList<string>), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetLabelsWithHttpMessagesAsync(name, after, acceptDatetime, select, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Requests the headers and status of the given resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='name'>
            /// A filter for the name of the returned labels.
            /// </param>
            /// <param name='after'>
            /// Instructs the server to return elements that appear after the element
            /// referred to by the specified token.
            /// </param>
            /// <param name='acceptDatetime'>
            /// Requests the server to respond with the state of the resource at the
            /// specified time.
            /// </param>
            /// <param name='select'>
            /// Used to select what fields are present in the returned resource(s).
            /// </param>
            public static CheckLabelsHeaders CheckLabels(this IAzureAppConfiguration operations, string name = default(string), string after = default(string), string acceptDatetime = default(string), IList<string> select = default(IList<string>))
            {
                return operations.CheckLabelsAsync(name, after, acceptDatetime, select).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Requests the headers and status of the given resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='name'>
            /// A filter for the name of the returned labels.
            /// </param>
            /// <param name='after'>
            /// Instructs the server to return elements that appear after the element
            /// referred to by the specified token.
            /// </param>
            /// <param name='acceptDatetime'>
            /// Requests the server to respond with the state of the resource at the
            /// specified time.
            /// </param>
            /// <param name='select'>
            /// Used to select what fields are present in the returned resource(s).
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CheckLabelsHeaders> CheckLabelsAsync(this IAzureAppConfiguration operations, string name = default(string), string after = default(string), string acceptDatetime = default(string), IList<string> select = default(IList<string>), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CheckLabelsWithHttpMessagesAsync(name, after, acceptDatetime, select, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Headers;
                }
            }

            /// <summary>
            /// Locks a key-value.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='key'>
            /// The key of the key-value to lock.
            /// </param>
            /// <param name='label'>
            /// The label, if any, of the key-value to lock.
            /// </param>
            /// <param name='ifMatch'>
            /// Used to perform an operation only if the targeted resource's etag matches
            /// the value provided.
            /// </param>
            /// <param name='ifNoneMatch'>
            /// Used to perform an operation only if the targeted resource's etag does not
            /// match the value provided.
            /// </param>
            public static KeyValue PutLock(this IAzureAppConfiguration operations, string key, string label = default(string), string ifMatch = default(string), string ifNoneMatch = default(string))
            {
                return operations.PutLockAsync(key, label, ifMatch, ifNoneMatch).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Locks a key-value.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='key'>
            /// The key of the key-value to lock.
            /// </param>
            /// <param name='label'>
            /// The label, if any, of the key-value to lock.
            /// </param>
            /// <param name='ifMatch'>
            /// Used to perform an operation only if the targeted resource's etag matches
            /// the value provided.
            /// </param>
            /// <param name='ifNoneMatch'>
            /// Used to perform an operation only if the targeted resource's etag does not
            /// match the value provided.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<KeyValue> PutLockAsync(this IAzureAppConfiguration operations, string key, string label = default(string), string ifMatch = default(string), string ifNoneMatch = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.PutLockWithHttpMessagesAsync(key, label, ifMatch, ifNoneMatch, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Unlocks a key-value.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='key'>
            /// The key of the key-value to unlock.
            /// </param>
            /// <param name='label'>
            /// The label, if any, of the key-value to unlock.
            /// </param>
            /// <param name='ifMatch'>
            /// Used to perform an operation only if the targeted resource's etag matches
            /// the value provided.
            /// </param>
            /// <param name='ifNoneMatch'>
            /// Used to perform an operation only if the targeted resource's etag does not
            /// match the value provided.
            /// </param>
            public static KeyValue DeleteLock(this IAzureAppConfiguration operations, string key, string label = default(string), string ifMatch = default(string), string ifNoneMatch = default(string))
            {
                return operations.DeleteLockAsync(key, label, ifMatch, ifNoneMatch).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Unlocks a key-value.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='key'>
            /// The key of the key-value to unlock.
            /// </param>
            /// <param name='label'>
            /// The label, if any, of the key-value to unlock.
            /// </param>
            /// <param name='ifMatch'>
            /// Used to perform an operation only if the targeted resource's etag matches
            /// the value provided.
            /// </param>
            /// <param name='ifNoneMatch'>
            /// Used to perform an operation only if the targeted resource's etag does not
            /// match the value provided.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<KeyValue> DeleteLockAsync(this IAzureAppConfiguration operations, string key, string label = default(string), string ifMatch = default(string), string ifNoneMatch = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.DeleteLockWithHttpMessagesAsync(key, label, ifMatch, ifNoneMatch, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets a list of key-value revisions.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='key'>
            /// A filter used to match keys.
            /// </param>
            /// <param name='label'>
            /// A filter used to match labels
            /// </param>
            /// <param name='after'>
            /// Instructs the server to return elements that appear after the element
            /// referred to by the specified token.
            /// </param>
            /// <param name='acceptDatetime'>
            /// Requests the server to respond with the state of the resource at the
            /// specified time.
            /// </param>
            /// <param name='select'>
            /// Used to select what fields are present in the returned resource(s).
            /// </param>
            public static KeyValueListResult GetRevisions(this IAzureAppConfiguration operations, string key = default(string), string label = default(string), string after = default(string), string acceptDatetime = default(string), IList<string> select = default(IList<string>))
            {
                return operations.GetRevisionsAsync(key, label, after, acceptDatetime, select).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets a list of key-value revisions.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='key'>
            /// A filter used to match keys.
            /// </param>
            /// <param name='label'>
            /// A filter used to match labels
            /// </param>
            /// <param name='after'>
            /// Instructs the server to return elements that appear after the element
            /// referred to by the specified token.
            /// </param>
            /// <param name='acceptDatetime'>
            /// Requests the server to respond with the state of the resource at the
            /// specified time.
            /// </param>
            /// <param name='select'>
            /// Used to select what fields are present in the returned resource(s).
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<KeyValueListResult> GetRevisionsAsync(this IAzureAppConfiguration operations, string key = default(string), string label = default(string), string after = default(string), string acceptDatetime = default(string), IList<string> select = default(IList<string>), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetRevisionsWithHttpMessagesAsync(key, label, after, acceptDatetime, select, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Requests the headers and status of the given resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='key'>
            /// A filter used to match keys.
            /// </param>
            /// <param name='label'>
            /// A filter used to match labels
            /// </param>
            /// <param name='after'>
            /// Instructs the server to return elements that appear after the element
            /// referred to by the specified token.
            /// </param>
            /// <param name='acceptDatetime'>
            /// Requests the server to respond with the state of the resource at the
            /// specified time.
            /// </param>
            /// <param name='select'>
            /// Used to select what fields are present in the returned resource(s).
            /// </param>
            public static CheckRevisionsHeaders CheckRevisions(this IAzureAppConfiguration operations, string key = default(string), string label = default(string), string after = default(string), string acceptDatetime = default(string), IList<string> select = default(IList<string>))
            {
                return operations.CheckRevisionsAsync(key, label, after, acceptDatetime, select).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Requests the headers and status of the given resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='key'>
            /// A filter used to match keys.
            /// </param>
            /// <param name='label'>
            /// A filter used to match labels
            /// </param>
            /// <param name='after'>
            /// Instructs the server to return elements that appear after the element
            /// referred to by the specified token.
            /// </param>
            /// <param name='acceptDatetime'>
            /// Requests the server to respond with the state of the resource at the
            /// specified time.
            /// </param>
            /// <param name='select'>
            /// Used to select what fields are present in the returned resource(s).
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CheckRevisionsHeaders> CheckRevisionsAsync(this IAzureAppConfiguration operations, string key = default(string), string label = default(string), string after = default(string), string acceptDatetime = default(string), IList<string> select = default(IList<string>), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CheckRevisionsWithHttpMessagesAsync(key, label, after, acceptDatetime, select, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Headers;
                }
            }

    }
}
