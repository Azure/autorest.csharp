// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.Storage.Blobs.Models
{
    /// <summary> An enumeration of containers. </summary>
    public partial class BlobContainersSegment
    {
        /// <summary> Initializes a new instance of BlobContainersSegment. </summary>
        /// <param name="serviceEndpoint"> . </param>
        /// <param name="nextMarker"> . </param>
        /// <exception cref="ArgumentNullException"> <paramref name="serviceEndpoint"/> or <paramref name="nextMarker"/> is null. </exception>
        internal BlobContainersSegment(string serviceEndpoint, string nextMarker)
        {
            if (serviceEndpoint == null)
            {
                throw new ArgumentNullException(nameof(serviceEndpoint));
            }
            if (nextMarker == null)
            {
                throw new ArgumentNullException(nameof(nextMarker));
            }

            ServiceEndpoint = serviceEndpoint;
            NextMarker = nextMarker;
            BlobContainerItems = new ChangeTrackingList<BlobContainerItem>();
        }

        /// <summary> Initializes a new instance of BlobContainersSegment. </summary>
        /// <param name="serviceEndpoint"> . </param>
        /// <param name="prefix"> . </param>
        /// <param name="marker"> . </param>
        /// <param name="maxResults"> . </param>
        /// <param name="nextMarker"> . </param>
        /// <param name="blobContainerItems"> . </param>
        internal BlobContainersSegment(string serviceEndpoint, string prefix, string marker, int? maxResults, string nextMarker, IReadOnlyList<BlobContainerItem> blobContainerItems)
        {
            ServiceEndpoint = serviceEndpoint;
            Prefix = prefix;
            Marker = marker;
            MaxResults = maxResults;
            NextMarker = nextMarker;
            BlobContainerItems = blobContainerItems;
        }

        public string ServiceEndpoint { get; }
        public string Prefix { get; }
        public string Marker { get; }
        public int? MaxResults { get; }
        public string NextMarker { get; }
        public IReadOnlyList<BlobContainerItem> BlobContainerItems { get; }
    }
}
