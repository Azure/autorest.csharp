// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.Storage.Blobs.Models
{
    /// <summary> A user delegation key. </summary>
    public partial class UserDelegationKey
    {
        /// <summary> Initializes a new instance of UserDelegationKey. </summary>
        /// <param name="signedObjectId"> The Azure Active Directory object ID in GUID format. </param>
        /// <param name="signedTenantId"> The Azure Active Directory tenant ID in GUID format. </param>
        /// <param name="signedService"> Abbreviation of the Azure Storage service that accepts the key. </param>
        /// <param name="signedVersion"> The service version that created the key. </param>
        /// <param name="value"> The key as a base64 string. </param>
        /// <param name="signedExpiresOn"> The date-time the key expires. </param>
        /// <param name="signedStartsOn"> The date-time the key is active. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="signedObjectId"/>, <paramref name="signedTenantId"/>, <paramref name="signedService"/>, <paramref name="signedVersion"/>, or <paramref name="value"/> is null. </exception>
        internal UserDelegationKey(string signedObjectId, string signedTenantId, string signedService, string signedVersion, string value, DateTimeOffset signedExpiresOn, DateTimeOffset signedStartsOn)
        {
            if (signedObjectId == null)
            {
                throw new ArgumentNullException(nameof(signedObjectId));
            }
            if (signedTenantId == null)
            {
                throw new ArgumentNullException(nameof(signedTenantId));
            }
            if (signedService == null)
            {
                throw new ArgumentNullException(nameof(signedService));
            }
            if (signedVersion == null)
            {
                throw new ArgumentNullException(nameof(signedVersion));
            }
            if (value == null)
            {
                throw new ArgumentNullException(nameof(value));
            }

            SignedObjectId = signedObjectId;
            SignedTenantId = signedTenantId;
            SignedService = signedService;
            SignedVersion = signedVersion;
            Value = value;
            SignedExpiresOn = signedExpiresOn;
            SignedStartsOn = signedStartsOn;
        }

        /// <summary> The Azure Active Directory object ID in GUID format. </summary>
        public string SignedObjectId { get; }
        /// <summary> The Azure Active Directory tenant ID in GUID format. </summary>
        public string SignedTenantId { get; }
        /// <summary> Abbreviation of the Azure Storage service that accepts the key. </summary>
        public string SignedService { get; }
        /// <summary> The service version that created the key. </summary>
        public string SignedVersion { get; }
        /// <summary> The key as a base64 string. </summary>
        public string Value { get; }
        /// <summary> The date-time the key expires. </summary>
        public DateTimeOffset SignedExpiresOn { get; }
        /// <summary> The date-time the key is active. </summary>
        public DateTimeOffset SignedStartsOn { get; }
    }
}
