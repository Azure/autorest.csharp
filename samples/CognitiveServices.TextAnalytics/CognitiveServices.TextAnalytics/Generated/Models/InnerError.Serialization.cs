// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace CognitiveServices.TextAnalytics.Models
{
    public partial class InnerError
    {
        internal static InnerError DeserializeInnerError(JsonElement element)
        {
            InnerErrorCodeValue code = default;
            string message = default;
            Optional<IReadOnlyDictionary<string, string>> details = default;
            Optional<string> target = default;
            Optional<InnerError> innerError = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("code"))
                {
                    code = property.Value.GetString().ToInnerErrorCodeValue();
                    continue;
                }
                if (property.NameEquals("message"))
                {
                    message = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("details"))
                {
                    Dictionary<string, string> dictionary = new Dictionary<string, string>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, property0.Value.GetString());
                    }
                    details = dictionary;
                    continue;
                }
                if (property.NameEquals("target"))
                {
                    target = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("innerError"))
                {
                    innerError = DeserializeInnerError(property.Value);
                    continue;
                }
            }
            return new InnerError(code, message, Optional.ToDictionary(details), target.Value, innerError.Value);
        }
    }
}
