// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace CognitiveServices.TextAnalytics.Models
{
    public partial class DocumentSentiment
    {
        internal static DocumentSentiment DeserializeDocumentSentiment(JsonElement element)
        {
            DocumentSentiment result = new DocumentSentiment();
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    result.Id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("sentiment"))
                {
                    result.Sentiment = property.Value.GetString().ToDocumentSentimentValue();
                    continue;
                }
                if (property.NameEquals("statistics"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.Statistics = DocumentStatistics.DeserializeDocumentStatistics(property.Value);
                    continue;
                }
                if (property.NameEquals("documentScores"))
                {
                    result.DocumentScores = SentimentConfidenceScorePerLabel.DeserializeSentimentConfidenceScorePerLabel(property.Value);
                    continue;
                }
                if (property.NameEquals("sentences"))
                {
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        result.Sentences.Add(SentenceSentiment.DeserializeSentenceSentiment(item));
                    }
                    continue;
                }
            }
            return result;
        }
    }
}
