// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.AI.DocumentTranslation.Samples
{
    public class Samples_DocumentTranslationClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetDocumentStatus()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new DocumentTranslationClient("<https://my-service.azure.com>", credential);

            Response response = client.GetDocumentStatus(Guid.NewGuid(), Guid.NewGuid());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("sourcePath").ToString());
            Console.WriteLine(result.GetProperty("createdDateTimeUtc").ToString());
            Console.WriteLine(result.GetProperty("lastActionDateTimeUtc").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("to").ToString());
            Console.WriteLine(result.GetProperty("progress").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetTranslationStatus()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new DocumentTranslationClient("<https://my-service.azure.com>", credential);

            Response response = client.GetTranslationStatus(Guid.NewGuid());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("createdDateTimeUtc").ToString());
            Console.WriteLine(result.GetProperty("lastActionDateTimeUtc").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("summary").GetProperty("total").ToString());
            Console.WriteLine(result.GetProperty("summary").GetProperty("failed").ToString());
            Console.WriteLine(result.GetProperty("summary").GetProperty("success").ToString());
            Console.WriteLine(result.GetProperty("summary").GetProperty("inProgress").ToString());
            Console.WriteLine(result.GetProperty("summary").GetProperty("notYetStarted").ToString());
            Console.WriteLine(result.GetProperty("summary").GetProperty("cancelled").ToString());
            Console.WriteLine(result.GetProperty("summary").GetProperty("totalCharacterCharged").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CancelTranslation()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new DocumentTranslationClient("<https://my-service.azure.com>", credential);

            Response response = client.CancelTranslation(Guid.NewGuid());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("createdDateTimeUtc").ToString());
            Console.WriteLine(result.GetProperty("lastActionDateTimeUtc").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("summary").GetProperty("total").ToString());
            Console.WriteLine(result.GetProperty("summary").GetProperty("failed").ToString());
            Console.WriteLine(result.GetProperty("summary").GetProperty("success").ToString());
            Console.WriteLine(result.GetProperty("summary").GetProperty("inProgress").ToString());
            Console.WriteLine(result.GetProperty("summary").GetProperty("notYetStarted").ToString());
            Console.WriteLine(result.GetProperty("summary").GetProperty("cancelled").ToString());
            Console.WriteLine(result.GetProperty("summary").GetProperty("totalCharacterCharged").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSupportedDocumentFormats()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new DocumentTranslationClient("<https://my-service.azure.com>", credential);

            Response response = client.GetSupportedDocumentFormats();

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("format").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("fileExtensions")[0].ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("contentTypes")[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSupportedGlossaryFormats()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new DocumentTranslationClient("<https://my-service.azure.com>", credential);

            Response response = client.GetSupportedGlossaryFormats();

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("format").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("fileExtensions")[0].ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("contentTypes")[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSupportedStorageSources()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new DocumentTranslationClient("<https://my-service.azure.com>", credential);

            Response response = client.GetSupportedStorageSources();

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetTranslationsStatus()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new DocumentTranslationClient("<https://my-service.azure.com>", credential);

            foreach (var data in client.GetTranslationsStatus())
            {
                JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("createdDateTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("lastActionDateTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("status").ToString());
                Console.WriteLine(result.GetProperty("summary").GetProperty("total").ToString());
                Console.WriteLine(result.GetProperty("summary").GetProperty("failed").ToString());
                Console.WriteLine(result.GetProperty("summary").GetProperty("success").ToString());
                Console.WriteLine(result.GetProperty("summary").GetProperty("inProgress").ToString());
                Console.WriteLine(result.GetProperty("summary").GetProperty("notYetStarted").ToString());
                Console.WriteLine(result.GetProperty("summary").GetProperty("cancelled").ToString());
                Console.WriteLine(result.GetProperty("summary").GetProperty("totalCharacterCharged").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetDocumentsStatus()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new DocumentTranslationClient("<https://my-service.azure.com>", credential);

            foreach (var data in client.GetDocumentsStatus(Guid.NewGuid()))
            {
                JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("sourcePath").ToString());
                Console.WriteLine(result.GetProperty("createdDateTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("lastActionDateTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("status").ToString());
                Console.WriteLine(result.GetProperty("to").ToString());
                Console.WriteLine(result.GetProperty("progress").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StartTranslation()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new DocumentTranslationClient("<https://my-service.azure.com>", credential);

            var data = new
            {
                inputs = new[] {
        new {
            source = new {
                sourceUrl = "<sourceUrl>",
            },
            targets = new[] {
                new {
                    targetUrl = "<targetUrl>",
                    language = "<language>",
                }
            },
        }
    },
            };

            var operation = client.StartTranslation(WaitUntil.Completed, RequestContent.Create(data), ContentType.ApplicationOctetStream);

            Console.WriteLine(operation.GetRawResponse().Status);
        }
    }
}
