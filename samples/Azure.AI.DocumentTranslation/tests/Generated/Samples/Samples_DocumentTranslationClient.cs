// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.AI.DocumentTranslation;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.AI.DocumentTranslation.Samples
{
    public partial class Samples_DocumentTranslationClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetDocumentStatus_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

            Response response = client.GetDocumentStatus(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));

            JsonElement element = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(element.GetProperty("sourcePath").ToString());
            Console.WriteLine(element.GetProperty("createdDateTimeUtc").ToString());
            Console.WriteLine(element.GetProperty("lastActionDateTimeUtc").ToString());
            Console.WriteLine(element.GetProperty("status").ToString());
            Console.WriteLine(element.GetProperty("to").ToString());
            Console.WriteLine(element.GetProperty("progress").ToString());
            Console.WriteLine(element.GetProperty("id").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetDocumentStatus_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

            Response response = await client.GetDocumentStatusAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));

            JsonElement element = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(element.GetProperty("sourcePath").ToString());
            Console.WriteLine(element.GetProperty("createdDateTimeUtc").ToString());
            Console.WriteLine(element.GetProperty("lastActionDateTimeUtc").ToString());
            Console.WriteLine(element.GetProperty("status").ToString());
            Console.WriteLine(element.GetProperty("to").ToString());
            Console.WriteLine(element.GetProperty("progress").ToString());
            Console.WriteLine(element.GetProperty("id").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetDocumentStatus_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

            Response response = client.GetDocumentStatus(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));

            JsonElement element = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(element.GetProperty("path").ToString());
            Console.WriteLine(element.GetProperty("sourcePath").ToString());
            Console.WriteLine(element.GetProperty("createdDateTimeUtc").ToString());
            Console.WriteLine(element.GetProperty("lastActionDateTimeUtc").ToString());
            Console.WriteLine(element.GetProperty("status").ToString());
            Console.WriteLine(element.GetProperty("to").ToString());
            Console.WriteLine(element.GetProperty("error").GetProperty("code").ToString());
            Console.WriteLine(element.GetProperty("error").GetProperty("message").ToString());
            Console.WriteLine(element.GetProperty("error").GetProperty("target").ToString());
            Console.WriteLine(element.GetProperty("error").GetProperty("innerError").GetProperty("code").ToString());
            Console.WriteLine(element.GetProperty("error").GetProperty("innerError").GetProperty("message").ToString());
            Console.WriteLine(element.GetProperty("error").GetProperty("innerError").GetProperty("target").ToString());
            Console.WriteLine(element.GetProperty("progress").ToString());
            Console.WriteLine(element.GetProperty("id").ToString());
            Console.WriteLine(element.GetProperty("characterCharged").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetDocumentStatus_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

            Response response = await client.GetDocumentStatusAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));

            JsonElement element = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(element.GetProperty("path").ToString());
            Console.WriteLine(element.GetProperty("sourcePath").ToString());
            Console.WriteLine(element.GetProperty("createdDateTimeUtc").ToString());
            Console.WriteLine(element.GetProperty("lastActionDateTimeUtc").ToString());
            Console.WriteLine(element.GetProperty("status").ToString());
            Console.WriteLine(element.GetProperty("to").ToString());
            Console.WriteLine(element.GetProperty("error").GetProperty("code").ToString());
            Console.WriteLine(element.GetProperty("error").GetProperty("message").ToString());
            Console.WriteLine(element.GetProperty("error").GetProperty("target").ToString());
            Console.WriteLine(element.GetProperty("error").GetProperty("innerError").GetProperty("code").ToString());
            Console.WriteLine(element.GetProperty("error").GetProperty("innerError").GetProperty("message").ToString());
            Console.WriteLine(element.GetProperty("error").GetProperty("innerError").GetProperty("target").ToString());
            Console.WriteLine(element.GetProperty("progress").ToString());
            Console.WriteLine(element.GetProperty("id").ToString());
            Console.WriteLine(element.GetProperty("characterCharged").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetTranslationStatus_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

            Response response = client.GetTranslationStatus(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));

            JsonElement element = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(element.GetProperty("id").ToString());
            Console.WriteLine(element.GetProperty("createdDateTimeUtc").ToString());
            Console.WriteLine(element.GetProperty("lastActionDateTimeUtc").ToString());
            Console.WriteLine(element.GetProperty("status").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("total").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("failed").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("success").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("inProgress").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("notYetStarted").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("cancelled").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("totalCharacterCharged").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetTranslationStatus_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

            Response response = await client.GetTranslationStatusAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));

            JsonElement element = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(element.GetProperty("id").ToString());
            Console.WriteLine(element.GetProperty("createdDateTimeUtc").ToString());
            Console.WriteLine(element.GetProperty("lastActionDateTimeUtc").ToString());
            Console.WriteLine(element.GetProperty("status").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("total").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("failed").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("success").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("inProgress").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("notYetStarted").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("cancelled").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("totalCharacterCharged").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetTranslationStatus_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

            Response response = client.GetTranslationStatus(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));

            JsonElement element = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(element.GetProperty("id").ToString());
            Console.WriteLine(element.GetProperty("createdDateTimeUtc").ToString());
            Console.WriteLine(element.GetProperty("lastActionDateTimeUtc").ToString());
            Console.WriteLine(element.GetProperty("status").ToString());
            Console.WriteLine(element.GetProperty("error").GetProperty("code").ToString());
            Console.WriteLine(element.GetProperty("error").GetProperty("message").ToString());
            Console.WriteLine(element.GetProperty("error").GetProperty("target").ToString());
            Console.WriteLine(element.GetProperty("error").GetProperty("innerError").GetProperty("code").ToString());
            Console.WriteLine(element.GetProperty("error").GetProperty("innerError").GetProperty("message").ToString());
            Console.WriteLine(element.GetProperty("error").GetProperty("innerError").GetProperty("target").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("total").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("failed").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("success").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("inProgress").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("notYetStarted").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("cancelled").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("totalCharacterCharged").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetTranslationStatus_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

            Response response = await client.GetTranslationStatusAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));

            JsonElement element = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(element.GetProperty("id").ToString());
            Console.WriteLine(element.GetProperty("createdDateTimeUtc").ToString());
            Console.WriteLine(element.GetProperty("lastActionDateTimeUtc").ToString());
            Console.WriteLine(element.GetProperty("status").ToString());
            Console.WriteLine(element.GetProperty("error").GetProperty("code").ToString());
            Console.WriteLine(element.GetProperty("error").GetProperty("message").ToString());
            Console.WriteLine(element.GetProperty("error").GetProperty("target").ToString());
            Console.WriteLine(element.GetProperty("error").GetProperty("innerError").GetProperty("code").ToString());
            Console.WriteLine(element.GetProperty("error").GetProperty("innerError").GetProperty("message").ToString());
            Console.WriteLine(element.GetProperty("error").GetProperty("innerError").GetProperty("target").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("total").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("failed").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("success").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("inProgress").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("notYetStarted").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("cancelled").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("totalCharacterCharged").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CancelTranslation_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

            Response response = client.CancelTranslation(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));

            JsonElement element = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(element.GetProperty("id").ToString());
            Console.WriteLine(element.GetProperty("createdDateTimeUtc").ToString());
            Console.WriteLine(element.GetProperty("lastActionDateTimeUtc").ToString());
            Console.WriteLine(element.GetProperty("status").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("total").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("failed").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("success").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("inProgress").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("notYetStarted").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("cancelled").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("totalCharacterCharged").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CancelTranslation_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

            Response response = await client.CancelTranslationAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));

            JsonElement element = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(element.GetProperty("id").ToString());
            Console.WriteLine(element.GetProperty("createdDateTimeUtc").ToString());
            Console.WriteLine(element.GetProperty("lastActionDateTimeUtc").ToString());
            Console.WriteLine(element.GetProperty("status").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("total").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("failed").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("success").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("inProgress").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("notYetStarted").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("cancelled").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("totalCharacterCharged").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CancelTranslation_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

            Response response = client.CancelTranslation(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));

            JsonElement element = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(element.GetProperty("id").ToString());
            Console.WriteLine(element.GetProperty("createdDateTimeUtc").ToString());
            Console.WriteLine(element.GetProperty("lastActionDateTimeUtc").ToString());
            Console.WriteLine(element.GetProperty("status").ToString());
            Console.WriteLine(element.GetProperty("error").GetProperty("code").ToString());
            Console.WriteLine(element.GetProperty("error").GetProperty("message").ToString());
            Console.WriteLine(element.GetProperty("error").GetProperty("target").ToString());
            Console.WriteLine(element.GetProperty("error").GetProperty("innerError").GetProperty("code").ToString());
            Console.WriteLine(element.GetProperty("error").GetProperty("innerError").GetProperty("message").ToString());
            Console.WriteLine(element.GetProperty("error").GetProperty("innerError").GetProperty("target").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("total").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("failed").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("success").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("inProgress").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("notYetStarted").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("cancelled").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("totalCharacterCharged").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CancelTranslation_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

            Response response = await client.CancelTranslationAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));

            JsonElement element = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(element.GetProperty("id").ToString());
            Console.WriteLine(element.GetProperty("createdDateTimeUtc").ToString());
            Console.WriteLine(element.GetProperty("lastActionDateTimeUtc").ToString());
            Console.WriteLine(element.GetProperty("status").ToString());
            Console.WriteLine(element.GetProperty("error").GetProperty("code").ToString());
            Console.WriteLine(element.GetProperty("error").GetProperty("message").ToString());
            Console.WriteLine(element.GetProperty("error").GetProperty("target").ToString());
            Console.WriteLine(element.GetProperty("error").GetProperty("innerError").GetProperty("code").ToString());
            Console.WriteLine(element.GetProperty("error").GetProperty("innerError").GetProperty("message").ToString());
            Console.WriteLine(element.GetProperty("error").GetProperty("innerError").GetProperty("target").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("total").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("failed").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("success").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("inProgress").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("notYetStarted").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("cancelled").ToString());
            Console.WriteLine(element.GetProperty("summary").GetProperty("totalCharacterCharged").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSupportedDocumentFormats_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

            Response response = client.GetSupportedDocumentFormats();

            JsonElement element = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(element.GetProperty("value")[0].GetProperty("format").ToString());
            Console.WriteLine(element.GetProperty("value")[0].GetProperty("fileExtensions")[0].ToString());
            Console.WriteLine(element.GetProperty("value")[0].GetProperty("contentTypes")[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSupportedDocumentFormats_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

            Response response = await client.GetSupportedDocumentFormatsAsync();

            JsonElement element = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(element.GetProperty("value")[0].GetProperty("format").ToString());
            Console.WriteLine(element.GetProperty("value")[0].GetProperty("fileExtensions")[0].ToString());
            Console.WriteLine(element.GetProperty("value")[0].GetProperty("contentTypes")[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSupportedDocumentFormats_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

            Response response = client.GetSupportedDocumentFormats();

            JsonElement element = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(element.GetProperty("value")[0].GetProperty("format").ToString());
            Console.WriteLine(element.GetProperty("value")[0].GetProperty("fileExtensions")[0].ToString());
            Console.WriteLine(element.GetProperty("value")[0].GetProperty("contentTypes")[0].ToString());
            Console.WriteLine(element.GetProperty("value")[0].GetProperty("defaultVersion").ToString());
            Console.WriteLine(element.GetProperty("value")[0].GetProperty("versions")[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSupportedDocumentFormats_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

            Response response = await client.GetSupportedDocumentFormatsAsync();

            JsonElement element = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(element.GetProperty("value")[0].GetProperty("format").ToString());
            Console.WriteLine(element.GetProperty("value")[0].GetProperty("fileExtensions")[0].ToString());
            Console.WriteLine(element.GetProperty("value")[0].GetProperty("contentTypes")[0].ToString());
            Console.WriteLine(element.GetProperty("value")[0].GetProperty("defaultVersion").ToString());
            Console.WriteLine(element.GetProperty("value")[0].GetProperty("versions")[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSupportedGlossaryFormats_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

            Response response = client.GetSupportedGlossaryFormats();

            JsonElement element = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(element.GetProperty("value")[0].GetProperty("format").ToString());
            Console.WriteLine(element.GetProperty("value")[0].GetProperty("fileExtensions")[0].ToString());
            Console.WriteLine(element.GetProperty("value")[0].GetProperty("contentTypes")[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSupportedGlossaryFormats_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

            Response response = await client.GetSupportedGlossaryFormatsAsync();

            JsonElement element = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(element.GetProperty("value")[0].GetProperty("format").ToString());
            Console.WriteLine(element.GetProperty("value")[0].GetProperty("fileExtensions")[0].ToString());
            Console.WriteLine(element.GetProperty("value")[0].GetProperty("contentTypes")[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSupportedGlossaryFormats_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

            Response response = client.GetSupportedGlossaryFormats();

            JsonElement element = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(element.GetProperty("value")[0].GetProperty("format").ToString());
            Console.WriteLine(element.GetProperty("value")[0].GetProperty("fileExtensions")[0].ToString());
            Console.WriteLine(element.GetProperty("value")[0].GetProperty("contentTypes")[0].ToString());
            Console.WriteLine(element.GetProperty("value")[0].GetProperty("defaultVersion").ToString());
            Console.WriteLine(element.GetProperty("value")[0].GetProperty("versions")[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSupportedGlossaryFormats_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

            Response response = await client.GetSupportedGlossaryFormatsAsync();

            JsonElement element = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(element.GetProperty("value")[0].GetProperty("format").ToString());
            Console.WriteLine(element.GetProperty("value")[0].GetProperty("fileExtensions")[0].ToString());
            Console.WriteLine(element.GetProperty("value")[0].GetProperty("contentTypes")[0].ToString());
            Console.WriteLine(element.GetProperty("value")[0].GetProperty("defaultVersion").ToString());
            Console.WriteLine(element.GetProperty("value")[0].GetProperty("versions")[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSupportedStorageSources_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

            Response response = client.GetSupportedStorageSources();

            JsonElement element = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(element.GetProperty("value")[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSupportedStorageSources_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

            Response response = await client.GetSupportedStorageSourcesAsync();

            JsonElement element = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(element.GetProperty("value")[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSupportedStorageSources_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

            Response response = client.GetSupportedStorageSources();

            JsonElement element = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(element.GetProperty("value")[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSupportedStorageSources_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

            Response response = await client.GetSupportedStorageSourcesAsync();

            JsonElement element = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(element.GetProperty("value")[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetTranslationsStatus_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

            foreach (BinaryData item in client.GetTranslationsStatus())
            {
                JsonElement element = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(element.GetProperty("id").ToString());
                Console.WriteLine(element.GetProperty("createdDateTimeUtc").ToString());
                Console.WriteLine(element.GetProperty("lastActionDateTimeUtc").ToString());
                Console.WriteLine(element.GetProperty("status").ToString());
                Console.WriteLine(element.GetProperty("summary").GetProperty("total").ToString());
                Console.WriteLine(element.GetProperty("summary").GetProperty("failed").ToString());
                Console.WriteLine(element.GetProperty("summary").GetProperty("success").ToString());
                Console.WriteLine(element.GetProperty("summary").GetProperty("inProgress").ToString());
                Console.WriteLine(element.GetProperty("summary").GetProperty("notYetStarted").ToString());
                Console.WriteLine(element.GetProperty("summary").GetProperty("cancelled").ToString());
                Console.WriteLine(element.GetProperty("summary").GetProperty("totalCharacterCharged").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetTranslationsStatus_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

            await foreach (BinaryData item in client.GetTranslationsStatusAsync())
            {
                JsonElement element = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(element.GetProperty("id").ToString());
                Console.WriteLine(element.GetProperty("createdDateTimeUtc").ToString());
                Console.WriteLine(element.GetProperty("lastActionDateTimeUtc").ToString());
                Console.WriteLine(element.GetProperty("status").ToString());
                Console.WriteLine(element.GetProperty("summary").GetProperty("total").ToString());
                Console.WriteLine(element.GetProperty("summary").GetProperty("failed").ToString());
                Console.WriteLine(element.GetProperty("summary").GetProperty("success").ToString());
                Console.WriteLine(element.GetProperty("summary").GetProperty("inProgress").ToString());
                Console.WriteLine(element.GetProperty("summary").GetProperty("notYetStarted").ToString());
                Console.WriteLine(element.GetProperty("summary").GetProperty("cancelled").ToString());
                Console.WriteLine(element.GetProperty("summary").GetProperty("totalCharacterCharged").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetTranslationsStatus_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

            foreach (BinaryData item in client.GetTranslationsStatus(top: 1234, skip: 1234, maxpagesize: 1234, ids: new Guid[] { Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a") }, statuses: new string[] { "<statuses>" }, createdDateTimeUtcStart: DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), createdDateTimeUtcEnd: DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), orderBy: new string[] { "<orderBy>" }))
            {
                JsonElement element = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(element.GetProperty("id").ToString());
                Console.WriteLine(element.GetProperty("createdDateTimeUtc").ToString());
                Console.WriteLine(element.GetProperty("lastActionDateTimeUtc").ToString());
                Console.WriteLine(element.GetProperty("status").ToString());
                Console.WriteLine(element.GetProperty("error").GetProperty("code").ToString());
                Console.WriteLine(element.GetProperty("error").GetProperty("message").ToString());
                Console.WriteLine(element.GetProperty("error").GetProperty("target").ToString());
                Console.WriteLine(element.GetProperty("error").GetProperty("innerError").GetProperty("code").ToString());
                Console.WriteLine(element.GetProperty("error").GetProperty("innerError").GetProperty("message").ToString());
                Console.WriteLine(element.GetProperty("error").GetProperty("innerError").GetProperty("target").ToString());
                Console.WriteLine(element.GetProperty("summary").GetProperty("total").ToString());
                Console.WriteLine(element.GetProperty("summary").GetProperty("failed").ToString());
                Console.WriteLine(element.GetProperty("summary").GetProperty("success").ToString());
                Console.WriteLine(element.GetProperty("summary").GetProperty("inProgress").ToString());
                Console.WriteLine(element.GetProperty("summary").GetProperty("notYetStarted").ToString());
                Console.WriteLine(element.GetProperty("summary").GetProperty("cancelled").ToString());
                Console.WriteLine(element.GetProperty("summary").GetProperty("totalCharacterCharged").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetTranslationsStatus_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

            await foreach (BinaryData item in client.GetTranslationsStatusAsync(top: 1234, skip: 1234, maxpagesize: 1234, ids: new Guid[] { Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a") }, statuses: new string[] { "<statuses>" }, createdDateTimeUtcStart: DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), createdDateTimeUtcEnd: DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), orderBy: new string[] { "<orderBy>" }))
            {
                JsonElement element = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(element.GetProperty("id").ToString());
                Console.WriteLine(element.GetProperty("createdDateTimeUtc").ToString());
                Console.WriteLine(element.GetProperty("lastActionDateTimeUtc").ToString());
                Console.WriteLine(element.GetProperty("status").ToString());
                Console.WriteLine(element.GetProperty("error").GetProperty("code").ToString());
                Console.WriteLine(element.GetProperty("error").GetProperty("message").ToString());
                Console.WriteLine(element.GetProperty("error").GetProperty("target").ToString());
                Console.WriteLine(element.GetProperty("error").GetProperty("innerError").GetProperty("code").ToString());
                Console.WriteLine(element.GetProperty("error").GetProperty("innerError").GetProperty("message").ToString());
                Console.WriteLine(element.GetProperty("error").GetProperty("innerError").GetProperty("target").ToString());
                Console.WriteLine(element.GetProperty("summary").GetProperty("total").ToString());
                Console.WriteLine(element.GetProperty("summary").GetProperty("failed").ToString());
                Console.WriteLine(element.GetProperty("summary").GetProperty("success").ToString());
                Console.WriteLine(element.GetProperty("summary").GetProperty("inProgress").ToString());
                Console.WriteLine(element.GetProperty("summary").GetProperty("notYetStarted").ToString());
                Console.WriteLine(element.GetProperty("summary").GetProperty("cancelled").ToString());
                Console.WriteLine(element.GetProperty("summary").GetProperty("totalCharacterCharged").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetDocumentsStatus_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

            foreach (BinaryData item in client.GetDocumentsStatus(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a")))
            {
                JsonElement element = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(element.GetProperty("sourcePath").ToString());
                Console.WriteLine(element.GetProperty("createdDateTimeUtc").ToString());
                Console.WriteLine(element.GetProperty("lastActionDateTimeUtc").ToString());
                Console.WriteLine(element.GetProperty("status").ToString());
                Console.WriteLine(element.GetProperty("to").ToString());
                Console.WriteLine(element.GetProperty("progress").ToString());
                Console.WriteLine(element.GetProperty("id").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetDocumentsStatus_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

            await foreach (BinaryData item in client.GetDocumentsStatusAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a")))
            {
                JsonElement element = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(element.GetProperty("sourcePath").ToString());
                Console.WriteLine(element.GetProperty("createdDateTimeUtc").ToString());
                Console.WriteLine(element.GetProperty("lastActionDateTimeUtc").ToString());
                Console.WriteLine(element.GetProperty("status").ToString());
                Console.WriteLine(element.GetProperty("to").ToString());
                Console.WriteLine(element.GetProperty("progress").ToString());
                Console.WriteLine(element.GetProperty("id").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetDocumentsStatus_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

            foreach (BinaryData item in client.GetDocumentsStatus(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), top: 1234, skip: 1234, maxpagesize: 1234, ids: new Guid[] { Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a") }, statuses: new string[] { "<statuses>" }, createdDateTimeUtcStart: DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), createdDateTimeUtcEnd: DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), orderBy: new string[] { "<orderBy>" }))
            {
                JsonElement element = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(element.GetProperty("path").ToString());
                Console.WriteLine(element.GetProperty("sourcePath").ToString());
                Console.WriteLine(element.GetProperty("createdDateTimeUtc").ToString());
                Console.WriteLine(element.GetProperty("lastActionDateTimeUtc").ToString());
                Console.WriteLine(element.GetProperty("status").ToString());
                Console.WriteLine(element.GetProperty("to").ToString());
                Console.WriteLine(element.GetProperty("error").GetProperty("code").ToString());
                Console.WriteLine(element.GetProperty("error").GetProperty("message").ToString());
                Console.WriteLine(element.GetProperty("error").GetProperty("target").ToString());
                Console.WriteLine(element.GetProperty("error").GetProperty("innerError").GetProperty("code").ToString());
                Console.WriteLine(element.GetProperty("error").GetProperty("innerError").GetProperty("message").ToString());
                Console.WriteLine(element.GetProperty("error").GetProperty("innerError").GetProperty("target").ToString());
                Console.WriteLine(element.GetProperty("progress").ToString());
                Console.WriteLine(element.GetProperty("id").ToString());
                Console.WriteLine(element.GetProperty("characterCharged").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetDocumentsStatus_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

            await foreach (BinaryData item in client.GetDocumentsStatusAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), top: 1234, skip: 1234, maxpagesize: 1234, ids: new Guid[] { Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a") }, statuses: new string[] { "<statuses>" }, createdDateTimeUtcStart: DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), createdDateTimeUtcEnd: DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), orderBy: new string[] { "<orderBy>" }))
            {
                JsonElement element = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(element.GetProperty("path").ToString());
                Console.WriteLine(element.GetProperty("sourcePath").ToString());
                Console.WriteLine(element.GetProperty("createdDateTimeUtc").ToString());
                Console.WriteLine(element.GetProperty("lastActionDateTimeUtc").ToString());
                Console.WriteLine(element.GetProperty("status").ToString());
                Console.WriteLine(element.GetProperty("to").ToString());
                Console.WriteLine(element.GetProperty("error").GetProperty("code").ToString());
                Console.WriteLine(element.GetProperty("error").GetProperty("message").ToString());
                Console.WriteLine(element.GetProperty("error").GetProperty("target").ToString());
                Console.WriteLine(element.GetProperty("error").GetProperty("innerError").GetProperty("code").ToString());
                Console.WriteLine(element.GetProperty("error").GetProperty("innerError").GetProperty("message").ToString());
                Console.WriteLine(element.GetProperty("error").GetProperty("innerError").GetProperty("target").ToString());
                Console.WriteLine(element.GetProperty("progress").ToString());
                Console.WriteLine(element.GetProperty("id").ToString());
                Console.WriteLine(element.GetProperty("characterCharged").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StartTranslation_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

            RequestContent content = RequestContent.Create(new
            {
                inputs = new object[]
            {
new
{
source = new
{
sourceUrl = "<sourceUrl>",
},
targets = new object[]
{
new
{
targetUrl = "<targetUrl>",
language = "<language>",
}
},
}
            },
            });
            Operation operation = client.StartTranslation(WaitUntil.Completed, content, new ContentType("application/json"));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StartTranslation_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

            RequestContent content = RequestContent.Create(new
            {
                inputs = new object[]
            {
new
{
source = new
{
sourceUrl = "<sourceUrl>",
},
targets = new object[]
{
new
{
targetUrl = "<targetUrl>",
language = "<language>",
}
},
}
            },
            });
            Operation operation = await client.StartTranslationAsync(WaitUntil.Completed, content, new ContentType("application/json"));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StartTranslation_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

            RequestContent content = RequestContent.Create(new
            {
                inputs = new object[]
            {
new
{
source = new
{
sourceUrl = "<sourceUrl>",
filter = new
{
prefix = "<prefix>",
suffix = "<suffix>",
},
language = "<language>",
storageSource = "AzureBlob",
},
targets = new object[]
{
new
{
targetUrl = "<targetUrl>",
category = "<category>",
language = "<language>",
glossaries = new object[]
{
new
{
glossaryUrl = "<glossaryUrl>",
format = "<format>",
version = "<version>",
storageSource = "AzureBlob",
}
},
storageSource = "AzureBlob",
}
},
storageType = "Folder",
}
            },
            });
            Operation operation = client.StartTranslation(WaitUntil.Completed, content, new ContentType("application/json"));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StartTranslation_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

            RequestContent content = RequestContent.Create(new
            {
                inputs = new object[]
            {
new
{
source = new
{
sourceUrl = "<sourceUrl>",
filter = new
{
prefix = "<prefix>",
suffix = "<suffix>",
},
language = "<language>",
storageSource = "AzureBlob",
},
targets = new object[]
{
new
{
targetUrl = "<targetUrl>",
category = "<category>",
language = "<language>",
glossaries = new object[]
{
new
{
glossaryUrl = "<glossaryUrl>",
format = "<format>",
version = "<version>",
storageSource = "AzureBlob",
}
},
storageSource = "AzureBlob",
}
},
storageType = "Folder",
}
            },
            });
            Operation operation = await client.StartTranslationAsync(WaitUntil.Completed, content, new ContentType("application/json"));
        }
    }
}
