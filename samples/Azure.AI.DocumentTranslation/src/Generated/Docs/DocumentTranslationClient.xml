<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetDocumentStatusAsync(Guid,Guid,RequestContext)">
      <example>
This sample shows how to call GetDocumentStatusAsync and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

Response response = await client.GetDocumentStatusAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("sourcePath").ToString());
Console.WriteLine(result.GetProperty("createdDateTimeUtc").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTimeUtc").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("to").ToString());
Console.WriteLine(result.GetProperty("progress").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call GetDocumentStatusAsync with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

Response response = await client.GetDocumentStatusAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("path").ToString());
Console.WriteLine(result.GetProperty("sourcePath").ToString());
Console.WriteLine(result.GetProperty("createdDateTimeUtc").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTimeUtc").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("to").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("progress").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("characterCharged").ToString());
]]></code></example>
    </member>
    <member name="GetDocumentStatus(Guid,Guid,RequestContext)">
      <example>
This sample shows how to call GetDocumentStatus and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

Response response = client.GetDocumentStatus(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("sourcePath").ToString());
Console.WriteLine(result.GetProperty("createdDateTimeUtc").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTimeUtc").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("to").ToString());
Console.WriteLine(result.GetProperty("progress").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call GetDocumentStatus with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

Response response = client.GetDocumentStatus(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("path").ToString());
Console.WriteLine(result.GetProperty("sourcePath").ToString());
Console.WriteLine(result.GetProperty("createdDateTimeUtc").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTimeUtc").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("to").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("progress").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("characterCharged").ToString());
]]></code></example>
    </member>
    <member name="GetTranslationStatusAsync(Guid,RequestContext)">
      <example>
This sample shows how to call GetTranslationStatusAsync and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

Response response = await client.GetTranslationStatusAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("createdDateTimeUtc").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTimeUtc").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("success").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("inProgress").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("notYetStarted").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("cancelled").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("totalCharacterCharged").ToString());
]]></code>
This sample shows how to call GetTranslationStatusAsync with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

Response response = await client.GetTranslationStatusAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("createdDateTimeUtc").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTimeUtc").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("success").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("inProgress").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("notYetStarted").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("cancelled").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("totalCharacterCharged").ToString());
]]></code></example>
    </member>
    <member name="GetTranslationStatus(Guid,RequestContext)">
      <example>
This sample shows how to call GetTranslationStatus and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

Response response = client.GetTranslationStatus(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("createdDateTimeUtc").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTimeUtc").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("success").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("inProgress").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("notYetStarted").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("cancelled").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("totalCharacterCharged").ToString());
]]></code>
This sample shows how to call GetTranslationStatus with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

Response response = client.GetTranslationStatus(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("createdDateTimeUtc").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTimeUtc").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("success").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("inProgress").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("notYetStarted").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("cancelled").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("totalCharacterCharged").ToString());
]]></code></example>
    </member>
    <member name="CancelTranslationAsync(Guid,RequestContext)">
      <example>
This sample shows how to call CancelTranslationAsync and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

Response response = await client.CancelTranslationAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("createdDateTimeUtc").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTimeUtc").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("success").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("inProgress").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("notYetStarted").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("cancelled").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("totalCharacterCharged").ToString());
]]></code>
This sample shows how to call CancelTranslationAsync with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

Response response = await client.CancelTranslationAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("createdDateTimeUtc").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTimeUtc").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("success").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("inProgress").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("notYetStarted").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("cancelled").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("totalCharacterCharged").ToString());
]]></code></example>
    </member>
    <member name="CancelTranslation(Guid,RequestContext)">
      <example>
This sample shows how to call CancelTranslation and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

Response response = client.CancelTranslation(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("createdDateTimeUtc").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTimeUtc").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("success").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("inProgress").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("notYetStarted").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("cancelled").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("totalCharacterCharged").ToString());
]]></code>
This sample shows how to call CancelTranslation with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

Response response = client.CancelTranslation(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("createdDateTimeUtc").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTimeUtc").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("success").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("inProgress").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("notYetStarted").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("cancelled").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("totalCharacterCharged").ToString());
]]></code></example>
    </member>
    <member name="GetSupportedDocumentFormatsAsync(RequestContext)">
      <example>
This sample shows how to call GetSupportedDocumentFormatsAsync and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

Response response = await client.GetSupportedDocumentFormatsAsync();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("format").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("fileExtensions")[0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("contentTypes")[0].ToString());
]]></code>
This sample shows how to call GetSupportedDocumentFormatsAsync with all request content and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

Response response = await client.GetSupportedDocumentFormatsAsync();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("format").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("fileExtensions")[0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("contentTypes")[0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("defaultVersion").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("versions")[0].ToString());
]]></code></example>
    </member>
    <member name="GetSupportedDocumentFormats(RequestContext)">
      <example>
This sample shows how to call GetSupportedDocumentFormats and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

Response response = client.GetSupportedDocumentFormats();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("format").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("fileExtensions")[0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("contentTypes")[0].ToString());
]]></code>
This sample shows how to call GetSupportedDocumentFormats with all request content and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

Response response = client.GetSupportedDocumentFormats();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("format").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("fileExtensions")[0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("contentTypes")[0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("defaultVersion").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("versions")[0].ToString());
]]></code></example>
    </member>
    <member name="GetSupportedGlossaryFormatsAsync(RequestContext)">
      <example>
This sample shows how to call GetSupportedGlossaryFormatsAsync and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

Response response = await client.GetSupportedGlossaryFormatsAsync();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("format").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("fileExtensions")[0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("contentTypes")[0].ToString());
]]></code>
This sample shows how to call GetSupportedGlossaryFormatsAsync with all request content and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

Response response = await client.GetSupportedGlossaryFormatsAsync();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("format").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("fileExtensions")[0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("contentTypes")[0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("defaultVersion").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("versions")[0].ToString());
]]></code></example>
    </member>
    <member name="GetSupportedGlossaryFormats(RequestContext)">
      <example>
This sample shows how to call GetSupportedGlossaryFormats and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

Response response = client.GetSupportedGlossaryFormats();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("format").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("fileExtensions")[0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("contentTypes")[0].ToString());
]]></code>
This sample shows how to call GetSupportedGlossaryFormats with all request content and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

Response response = client.GetSupportedGlossaryFormats();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("format").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("fileExtensions")[0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("contentTypes")[0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("defaultVersion").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("versions")[0].ToString());
]]></code></example>
    </member>
    <member name="GetSupportedStorageSourcesAsync(RequestContext)">
      <example>
This sample shows how to call GetSupportedStorageSourcesAsync and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

Response response = await client.GetSupportedStorageSourcesAsync();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].ToString());
]]></code>
This sample shows how to call GetSupportedStorageSourcesAsync with all request content and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

Response response = await client.GetSupportedStorageSourcesAsync();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].ToString());
]]></code></example>
    </member>
    <member name="GetSupportedStorageSources(RequestContext)">
      <example>
This sample shows how to call GetSupportedStorageSources and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

Response response = client.GetSupportedStorageSources();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].ToString());
]]></code>
This sample shows how to call GetSupportedStorageSources with all request content and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

Response response = client.GetSupportedStorageSources();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].ToString());
]]></code></example>
    </member>
    <member name="GetTranslationsStatusAsync(int?,int?,int?,IEnumerable{Guid},IEnumerable{string},DateTimeOffset?,DateTimeOffset?,IEnumerable{string},RequestContext)">
      <example>
This sample shows how to call GetTranslationsStatusAsync and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

await foreach (BinaryData item in client.GetTranslationsStatusAsync())
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("id").ToString());
    Console.WriteLine(result[0].GetProperty("createdDateTimeUtc").ToString());
    Console.WriteLine(result[0].GetProperty("lastActionDateTimeUtc").ToString());
    Console.WriteLine(result[0].GetProperty("status").ToString());
    Console.WriteLine(result[0].GetProperty("summary").GetProperty("total").ToString());
    Console.WriteLine(result[0].GetProperty("summary").GetProperty("failed").ToString());
    Console.WriteLine(result[0].GetProperty("summary").GetProperty("success").ToString());
    Console.WriteLine(result[0].GetProperty("summary").GetProperty("inProgress").ToString());
    Console.WriteLine(result[0].GetProperty("summary").GetProperty("notYetStarted").ToString());
    Console.WriteLine(result[0].GetProperty("summary").GetProperty("cancelled").ToString());
    Console.WriteLine(result[0].GetProperty("summary").GetProperty("totalCharacterCharged").ToString());
}
]]></code>
This sample shows how to call GetTranslationsStatusAsync with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

await foreach (BinaryData item in client.GetTranslationsStatusAsync(top: 1234, skip: 1234, maxpagesize: 1234, ids: new List<Guid>()
{
    Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a")
}, statuses: new List<string>()
{
    "<statuses>"
}, createdDateTimeUtcStart: DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), createdDateTimeUtcEnd: DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), orderBy: new List<string>()
{
    "<orderBy>"
}))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("id").ToString());
    Console.WriteLine(result[0].GetProperty("createdDateTimeUtc").ToString());
    Console.WriteLine(result[0].GetProperty("lastActionDateTimeUtc").ToString());
    Console.WriteLine(result[0].GetProperty("status").ToString());
    Console.WriteLine(result[0].GetProperty("error").GetProperty("code").ToString());
    Console.WriteLine(result[0].GetProperty("error").GetProperty("message").ToString());
    Console.WriteLine(result[0].GetProperty("error").GetProperty("target").ToString());
    Console.WriteLine(result[0].GetProperty("error").GetProperty("innerError").GetProperty("code").ToString());
    Console.WriteLine(result[0].GetProperty("error").GetProperty("innerError").GetProperty("message").ToString());
    Console.WriteLine(result[0].GetProperty("error").GetProperty("innerError").GetProperty("target").ToString());
    Console.WriteLine(result[0].GetProperty("summary").GetProperty("total").ToString());
    Console.WriteLine(result[0].GetProperty("summary").GetProperty("failed").ToString());
    Console.WriteLine(result[0].GetProperty("summary").GetProperty("success").ToString());
    Console.WriteLine(result[0].GetProperty("summary").GetProperty("inProgress").ToString());
    Console.WriteLine(result[0].GetProperty("summary").GetProperty("notYetStarted").ToString());
    Console.WriteLine(result[0].GetProperty("summary").GetProperty("cancelled").ToString());
    Console.WriteLine(result[0].GetProperty("summary").GetProperty("totalCharacterCharged").ToString());
}
]]></code></example>
    </member>
    <member name="GetTranslationsStatus(int?,int?,int?,IEnumerable{Guid},IEnumerable{string},DateTimeOffset?,DateTimeOffset?,IEnumerable{string},RequestContext)">
      <example>
This sample shows how to call GetTranslationsStatus and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

foreach (BinaryData item in client.GetTranslationsStatus())
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("id").ToString());
    Console.WriteLine(result[0].GetProperty("createdDateTimeUtc").ToString());
    Console.WriteLine(result[0].GetProperty("lastActionDateTimeUtc").ToString());
    Console.WriteLine(result[0].GetProperty("status").ToString());
    Console.WriteLine(result[0].GetProperty("summary").GetProperty("total").ToString());
    Console.WriteLine(result[0].GetProperty("summary").GetProperty("failed").ToString());
    Console.WriteLine(result[0].GetProperty("summary").GetProperty("success").ToString());
    Console.WriteLine(result[0].GetProperty("summary").GetProperty("inProgress").ToString());
    Console.WriteLine(result[0].GetProperty("summary").GetProperty("notYetStarted").ToString());
    Console.WriteLine(result[0].GetProperty("summary").GetProperty("cancelled").ToString());
    Console.WriteLine(result[0].GetProperty("summary").GetProperty("totalCharacterCharged").ToString());
}
]]></code>
This sample shows how to call GetTranslationsStatus with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

foreach (BinaryData item in client.GetTranslationsStatus(top: 1234, skip: 1234, maxpagesize: 1234, ids: new List<Guid>()
{
    Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a")
}, statuses: new List<string>()
{
    "<statuses>"
}, createdDateTimeUtcStart: DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), createdDateTimeUtcEnd: DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), orderBy: new List<string>()
{
    "<orderBy>"
}))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("id").ToString());
    Console.WriteLine(result[0].GetProperty("createdDateTimeUtc").ToString());
    Console.WriteLine(result[0].GetProperty("lastActionDateTimeUtc").ToString());
    Console.WriteLine(result[0].GetProperty("status").ToString());
    Console.WriteLine(result[0].GetProperty("error").GetProperty("code").ToString());
    Console.WriteLine(result[0].GetProperty("error").GetProperty("message").ToString());
    Console.WriteLine(result[0].GetProperty("error").GetProperty("target").ToString());
    Console.WriteLine(result[0].GetProperty("error").GetProperty("innerError").GetProperty("code").ToString());
    Console.WriteLine(result[0].GetProperty("error").GetProperty("innerError").GetProperty("message").ToString());
    Console.WriteLine(result[0].GetProperty("error").GetProperty("innerError").GetProperty("target").ToString());
    Console.WriteLine(result[0].GetProperty("summary").GetProperty("total").ToString());
    Console.WriteLine(result[0].GetProperty("summary").GetProperty("failed").ToString());
    Console.WriteLine(result[0].GetProperty("summary").GetProperty("success").ToString());
    Console.WriteLine(result[0].GetProperty("summary").GetProperty("inProgress").ToString());
    Console.WriteLine(result[0].GetProperty("summary").GetProperty("notYetStarted").ToString());
    Console.WriteLine(result[0].GetProperty("summary").GetProperty("cancelled").ToString());
    Console.WriteLine(result[0].GetProperty("summary").GetProperty("totalCharacterCharged").ToString());
}
]]></code></example>
    </member>
    <member name="GetDocumentsStatusAsync(Guid,int?,int?,int?,IEnumerable{Guid},IEnumerable{string},DateTimeOffset?,DateTimeOffset?,IEnumerable{string},RequestContext)">
      <example>
This sample shows how to call GetDocumentsStatusAsync and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

await foreach (BinaryData item in client.GetDocumentsStatusAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a")))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("sourcePath").ToString());
    Console.WriteLine(result[0].GetProperty("createdDateTimeUtc").ToString());
    Console.WriteLine(result[0].GetProperty("lastActionDateTimeUtc").ToString());
    Console.WriteLine(result[0].GetProperty("status").ToString());
    Console.WriteLine(result[0].GetProperty("to").ToString());
    Console.WriteLine(result[0].GetProperty("progress").ToString());
    Console.WriteLine(result[0].GetProperty("id").ToString());
}
]]></code>
This sample shows how to call GetDocumentsStatusAsync with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

await foreach (BinaryData item in client.GetDocumentsStatusAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), top: 1234, skip: 1234, maxpagesize: 1234, ids: new List<Guid>()
{
    Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a")
}, statuses: new List<string>()
{
    "<statuses>"
}, createdDateTimeUtcStart: DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), createdDateTimeUtcEnd: DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), orderBy: new List<string>()
{
    "<orderBy>"
}))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("path").ToString());
    Console.WriteLine(result[0].GetProperty("sourcePath").ToString());
    Console.WriteLine(result[0].GetProperty("createdDateTimeUtc").ToString());
    Console.WriteLine(result[0].GetProperty("lastActionDateTimeUtc").ToString());
    Console.WriteLine(result[0].GetProperty("status").ToString());
    Console.WriteLine(result[0].GetProperty("to").ToString());
    Console.WriteLine(result[0].GetProperty("error").GetProperty("code").ToString());
    Console.WriteLine(result[0].GetProperty("error").GetProperty("message").ToString());
    Console.WriteLine(result[0].GetProperty("error").GetProperty("target").ToString());
    Console.WriteLine(result[0].GetProperty("error").GetProperty("innerError").GetProperty("code").ToString());
    Console.WriteLine(result[0].GetProperty("error").GetProperty("innerError").GetProperty("message").ToString());
    Console.WriteLine(result[0].GetProperty("error").GetProperty("innerError").GetProperty("target").ToString());
    Console.WriteLine(result[0].GetProperty("progress").ToString());
    Console.WriteLine(result[0].GetProperty("id").ToString());
    Console.WriteLine(result[0].GetProperty("characterCharged").ToString());
}
]]></code></example>
    </member>
    <member name="GetDocumentsStatus(Guid,int?,int?,int?,IEnumerable{Guid},IEnumerable{string},DateTimeOffset?,DateTimeOffset?,IEnumerable{string},RequestContext)">
      <example>
This sample shows how to call GetDocumentsStatus and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

foreach (BinaryData item in client.GetDocumentsStatus(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a")))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("sourcePath").ToString());
    Console.WriteLine(result[0].GetProperty("createdDateTimeUtc").ToString());
    Console.WriteLine(result[0].GetProperty("lastActionDateTimeUtc").ToString());
    Console.WriteLine(result[0].GetProperty("status").ToString());
    Console.WriteLine(result[0].GetProperty("to").ToString());
    Console.WriteLine(result[0].GetProperty("progress").ToString());
    Console.WriteLine(result[0].GetProperty("id").ToString());
}
]]></code>
This sample shows how to call GetDocumentsStatus with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

foreach (BinaryData item in client.GetDocumentsStatus(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), top: 1234, skip: 1234, maxpagesize: 1234, ids: new List<Guid>()
{
    Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a")
}, statuses: new List<string>()
{
    "<statuses>"
}, createdDateTimeUtcStart: DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), createdDateTimeUtcEnd: DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), orderBy: new List<string>()
{
    "<orderBy>"
}))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("path").ToString());
    Console.WriteLine(result[0].GetProperty("sourcePath").ToString());
    Console.WriteLine(result[0].GetProperty("createdDateTimeUtc").ToString());
    Console.WriteLine(result[0].GetProperty("lastActionDateTimeUtc").ToString());
    Console.WriteLine(result[0].GetProperty("status").ToString());
    Console.WriteLine(result[0].GetProperty("to").ToString());
    Console.WriteLine(result[0].GetProperty("error").GetProperty("code").ToString());
    Console.WriteLine(result[0].GetProperty("error").GetProperty("message").ToString());
    Console.WriteLine(result[0].GetProperty("error").GetProperty("target").ToString());
    Console.WriteLine(result[0].GetProperty("error").GetProperty("innerError").GetProperty("code").ToString());
    Console.WriteLine(result[0].GetProperty("error").GetProperty("innerError").GetProperty("message").ToString());
    Console.WriteLine(result[0].GetProperty("error").GetProperty("innerError").GetProperty("target").ToString());
    Console.WriteLine(result[0].GetProperty("progress").ToString());
    Console.WriteLine(result[0].GetProperty("id").ToString());
    Console.WriteLine(result[0].GetProperty("characterCharged").ToString());
}
]]></code></example>
    </member>
    <member name="StartTranslationAsync(WaitUntil,RequestContent,ContentType,RequestContext)">
      <example>
This sample shows how to call StartTranslationAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

RequestContent content = RequestContent.Create(new
{
    inputs = new List<object>()
    {
        new
        {
            source = new
            {
                sourceUrl = "<sourceUrl>",
            },
            targets = new List<object>()
            {
                new
                {
                    targetUrl = "<targetUrl>",
                    language = "<language>",
                }
            },
        }
    },
});
Operation operation = await client.StartTranslationAsync(WaitUntil.Completed, content, new ContentType("application/json"));
]]></code>
This sample shows how to call StartTranslationAsync with all parameters and request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

RequestContent content = RequestContent.Create(new
{
    inputs = new List<object>()
    {
        new
        {
            source = new
            {
                sourceUrl = "<sourceUrl>",
                filter = new
                {
                    prefix = "<prefix>",
                    suffix = "<suffix>",
                },
                language = "<language>",
                storageSource = "AzureBlob",
            },
            targets = new List<object>()
            {
                new
                {
                    targetUrl = "<targetUrl>",
                    category = "<category>",
                    language = "<language>",
                    glossaries = new List<object>()
                    {
                        new
                        {
                            glossaryUrl = "<glossaryUrl>",
                            format = "<format>",
                            version = "<version>",
                            storageSource = "AzureBlob",
                        }
                    },
                    storageSource = "AzureBlob",
                }
            },
            storageType = "Folder",
        }
    },
});
Operation operation = await client.StartTranslationAsync(WaitUntil.Completed, content, new ContentType("application/json"));
]]></code></example>
    </member>
    <member name="StartTranslation(WaitUntil,RequestContent,ContentType,RequestContext)">
      <example>
This sample shows how to call StartTranslation.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

RequestContent content = RequestContent.Create(new
{
    inputs = new List<object>()
    {
        new
        {
            source = new
            {
                sourceUrl = "<sourceUrl>",
            },
            targets = new List<object>()
            {
                new
                {
                    targetUrl = "<targetUrl>",
                    language = "<language>",
                }
            },
        }
    },
});
Operation operation = client.StartTranslation(WaitUntil.Completed, content, new ContentType("application/json"));
]]></code>
This sample shows how to call StartTranslation with all parameters and request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentTranslationClient client = new DocumentTranslationClient("<Endpoint>", credential);

RequestContent content = RequestContent.Create(new
{
    inputs = new List<object>()
    {
        new
        {
            source = new
            {
                sourceUrl = "<sourceUrl>",
                filter = new
                {
                    prefix = "<prefix>",
                    suffix = "<suffix>",
                },
                language = "<language>",
                storageSource = "AzureBlob",
            },
            targets = new List<object>()
            {
                new
                {
                    targetUrl = "<targetUrl>",
                    category = "<category>",
                    language = "<language>",
                    glossaries = new List<object>()
                    {
                        new
                        {
                            glossaryUrl = "<glossaryUrl>",
                            format = "<format>",
                            version = "<version>",
                            storageSource = "AzureBlob",
                        }
                    },
                    storageSource = "AzureBlob",
                }
            },
            storageType = "Folder",
        }
    },
});
Operation operation = client.StartTranslation(WaitUntil.Completed, content, new ContentType("application/json"));
]]></code></example>
    </member>
  </members>
</doc>