<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetDocumentStatusAsync(Guid,Guid,RequestContext)">
<example>
This sample shows how to call GetDocumentStatusAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new DocumentTranslationClient("<https://my-service.azure.com>", credential);

Response response = await client.GetDocumentStatusAsync(Guid.NewGuid(), Guid.NewGuid(), new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("path").ToString());
Console.WriteLine(result.GetProperty("sourcePath").ToString());
Console.WriteLine(result.GetProperty("createdDateTimeUtc").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTimeUtc").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("to").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("progress").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("characterCharged").ToString());
]]></code>
</example>
    </member>
    <member name="GetDocumentStatus(Guid,Guid,RequestContext)">
<example>
This sample shows how to call GetDocumentStatus with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new DocumentTranslationClient("<https://my-service.azure.com>", credential);

Response response = client.GetDocumentStatus(Guid.NewGuid(), Guid.NewGuid(), new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("path").ToString());
Console.WriteLine(result.GetProperty("sourcePath").ToString());
Console.WriteLine(result.GetProperty("createdDateTimeUtc").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTimeUtc").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("to").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("progress").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("characterCharged").ToString());
]]></code>
</example>
    </member>
    <member name="GetTranslationStatusAsync(Guid,RequestContext)">
<example>
This sample shows how to call GetTranslationStatusAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new DocumentTranslationClient("<https://my-service.azure.com>", credential);

Response response = await client.GetTranslationStatusAsync(Guid.NewGuid(), new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("createdDateTimeUtc").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTimeUtc").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("success").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("inProgress").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("notYetStarted").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("cancelled").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("totalCharacterCharged").ToString());
]]></code>
</example>
    </member>
    <member name="GetTranslationStatus(Guid,RequestContext)">
<example>
This sample shows how to call GetTranslationStatus with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new DocumentTranslationClient("<https://my-service.azure.com>", credential);

Response response = client.GetTranslationStatus(Guid.NewGuid(), new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("createdDateTimeUtc").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTimeUtc").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("success").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("inProgress").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("notYetStarted").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("cancelled").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("totalCharacterCharged").ToString());
]]></code>
</example>
    </member>
    <member name="CancelTranslationAsync(Guid,RequestContext)">
<example>
This sample shows how to call CancelTranslationAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new DocumentTranslationClient("<https://my-service.azure.com>", credential);

Response response = await client.CancelTranslationAsync(Guid.NewGuid(), new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("createdDateTimeUtc").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTimeUtc").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("success").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("inProgress").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("notYetStarted").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("cancelled").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("totalCharacterCharged").ToString());
]]></code>
</example>
    </member>
    <member name="CancelTranslation(Guid,RequestContext)">
<example>
This sample shows how to call CancelTranslation with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new DocumentTranslationClient("<https://my-service.azure.com>", credential);

Response response = client.CancelTranslation(Guid.NewGuid(), new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("createdDateTimeUtc").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTimeUtc").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("success").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("inProgress").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("notYetStarted").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("cancelled").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("totalCharacterCharged").ToString());
]]></code>
</example>
    </member>
    <member name="GetSupportedDocumentFormatsAsync(RequestContext)">
<example>
This sample shows how to call GetSupportedDocumentFormatsAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new DocumentTranslationClient("<https://my-service.azure.com>", credential);

Response response = await client.GetSupportedDocumentFormatsAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("format").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("fileExtensions")[0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("contentTypes")[0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("defaultVersion").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("versions")[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetSupportedDocumentFormats(RequestContext)">
<example>
This sample shows how to call GetSupportedDocumentFormats and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new DocumentTranslationClient("<https://my-service.azure.com>", credential);

Response response = client.GetSupportedDocumentFormats(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("format").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("fileExtensions")[0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("contentTypes")[0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("defaultVersion").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("versions")[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetSupportedGlossaryFormatsAsync(RequestContext)">
<example>
This sample shows how to call GetSupportedGlossaryFormatsAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new DocumentTranslationClient("<https://my-service.azure.com>", credential);

Response response = await client.GetSupportedGlossaryFormatsAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("format").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("fileExtensions")[0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("contentTypes")[0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("defaultVersion").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("versions")[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetSupportedGlossaryFormats(RequestContext)">
<example>
This sample shows how to call GetSupportedGlossaryFormats and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new DocumentTranslationClient("<https://my-service.azure.com>", credential);

Response response = client.GetSupportedGlossaryFormats(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("format").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("fileExtensions")[0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("contentTypes")[0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("defaultVersion").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("versions")[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetSupportedStorageSourcesAsync(RequestContext)">
<example>
This sample shows how to call GetSupportedStorageSourcesAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new DocumentTranslationClient("<https://my-service.azure.com>", credential);

Response response = await client.GetSupportedStorageSourcesAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetSupportedStorageSources(RequestContext)">
<example>
This sample shows how to call GetSupportedStorageSources and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new DocumentTranslationClient("<https://my-service.azure.com>", credential);

Response response = client.GetSupportedStorageSources(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetTranslationsStatusAsync(int?,int?,int?,IEnumerable{Guid},IEnumerable{string},DateTimeOffset?,DateTimeOffset?,IEnumerable{string},RequestContext)">
<example>
This sample shows how to call GetTranslationsStatusAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new DocumentTranslationClient("<https://my-service.azure.com>", credential);

await foreach (var item in client.GetTranslationsStatusAsync())
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("createdDateTimeUtc").ToString());
    Console.WriteLine(result.GetProperty("lastActionDateTimeUtc").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("total").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("failed").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("success").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("inProgress").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("notYetStarted").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("cancelled").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("totalCharacterCharged").ToString());
}
]]></code>
This sample shows how to call GetTranslationsStatusAsync with all parameters, and how to parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new DocumentTranslationClient("<https://my-service.azure.com>", credential);

await foreach (var item in client.GetTranslationsStatusAsync(1234, 1234, 1234, new Guid[]{Guid.NewGuid()}, new String[]{"<statuses>"}, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, new String[]{"<orderBy>"}, new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("createdDateTimeUtc").ToString());
    Console.WriteLine(result.GetProperty("lastActionDateTimeUtc").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("message").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("target").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("total").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("failed").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("success").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("inProgress").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("notYetStarted").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("cancelled").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("totalCharacterCharged").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetTranslationsStatus(int?,int?,int?,IEnumerable{Guid},IEnumerable{string},DateTimeOffset?,DateTimeOffset?,IEnumerable{string},RequestContext)">
<example>
This sample shows how to call GetTranslationsStatus and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new DocumentTranslationClient("<https://my-service.azure.com>", credential);

foreach (var item in client.GetTranslationsStatus())
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("createdDateTimeUtc").ToString());
    Console.WriteLine(result.GetProperty("lastActionDateTimeUtc").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("total").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("failed").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("success").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("inProgress").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("notYetStarted").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("cancelled").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("totalCharacterCharged").ToString());
}
]]></code>
This sample shows how to call GetTranslationsStatus with all parameters, and how to parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new DocumentTranslationClient("<https://my-service.azure.com>", credential);

foreach (var item in client.GetTranslationsStatus(1234, 1234, 1234, new Guid[]{Guid.NewGuid()}, new String[]{"<statuses>"}, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, new String[]{"<orderBy>"}, new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("createdDateTimeUtc").ToString());
    Console.WriteLine(result.GetProperty("lastActionDateTimeUtc").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("message").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("target").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("total").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("failed").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("success").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("inProgress").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("notYetStarted").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("cancelled").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("totalCharacterCharged").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetDocumentsStatusAsync(Guid,int?,int?,int?,IEnumerable{Guid},IEnumerable{string},DateTimeOffset?,DateTimeOffset?,IEnumerable{string},RequestContext)">
<example>
This sample shows how to call GetDocumentsStatusAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new DocumentTranslationClient("<https://my-service.azure.com>", credential);

await foreach (var item in client.GetDocumentsStatusAsync(Guid.NewGuid()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("sourcePath").ToString());
    Console.WriteLine(result.GetProperty("createdDateTimeUtc").ToString());
    Console.WriteLine(result.GetProperty("lastActionDateTimeUtc").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("to").ToString());
    Console.WriteLine(result.GetProperty("progress").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
}
]]></code>
This sample shows how to call GetDocumentsStatusAsync with all parameters, and how to parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new DocumentTranslationClient("<https://my-service.azure.com>", credential);

await foreach (var item in client.GetDocumentsStatusAsync(Guid.NewGuid(), 1234, 1234, 1234, new Guid[]{Guid.NewGuid()}, new String[]{"<statuses>"}, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, new String[]{"<orderBy>"}, new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("path").ToString());
    Console.WriteLine(result.GetProperty("sourcePath").ToString());
    Console.WriteLine(result.GetProperty("createdDateTimeUtc").ToString());
    Console.WriteLine(result.GetProperty("lastActionDateTimeUtc").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("to").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("message").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("target").ToString());
    Console.WriteLine(result.GetProperty("progress").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("characterCharged").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetDocumentsStatus(Guid,int?,int?,int?,IEnumerable{Guid},IEnumerable{string},DateTimeOffset?,DateTimeOffset?,IEnumerable{string},RequestContext)">
<example>
This sample shows how to call GetDocumentsStatus with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new DocumentTranslationClient("<https://my-service.azure.com>", credential);

foreach (var item in client.GetDocumentsStatus(Guid.NewGuid()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("sourcePath").ToString());
    Console.WriteLine(result.GetProperty("createdDateTimeUtc").ToString());
    Console.WriteLine(result.GetProperty("lastActionDateTimeUtc").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("to").ToString());
    Console.WriteLine(result.GetProperty("progress").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
}
]]></code>
This sample shows how to call GetDocumentsStatus with all parameters, and how to parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new DocumentTranslationClient("<https://my-service.azure.com>", credential);

foreach (var item in client.GetDocumentsStatus(Guid.NewGuid(), 1234, 1234, 1234, new Guid[]{Guid.NewGuid()}, new String[]{"<statuses>"}, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, new String[]{"<orderBy>"}, new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("path").ToString());
    Console.WriteLine(result.GetProperty("sourcePath").ToString());
    Console.WriteLine(result.GetProperty("createdDateTimeUtc").ToString());
    Console.WriteLine(result.GetProperty("lastActionDateTimeUtc").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("to").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("message").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("innerError").GetProperty("target").ToString());
    Console.WriteLine(result.GetProperty("progress").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("characterCharged").ToString());
}
]]></code>
</example>
    </member>
    <member name="StartTranslationAsync(WaitUntil,RequestContent,ContentType,RequestContext)">
<example>
This sample shows how to call StartTranslationAsync with required parameters and request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new DocumentTranslationClient("<https://my-service.azure.com>", credential);

var data = new {
    inputs = new[] {
        new {
            source = new {
                sourceUrl = "<sourceUrl>",
                filter = new {
                    prefix = "<prefix>",
                    suffix = "<suffix>",
                },
                language = "<language>",
                storageSource = "AzureBlob",
            },
            targets = new[] {
                new {
                    targetUrl = "<targetUrl>",
                    category = "<category>",
                    language = "<language>",
                    glossaries = new[] {
                        new {
                            glossaryUrl = "<glossaryUrl>",
                            format = "<format>",
                            version = "<version>",
                            storageSource = "AzureBlob",
                        }
                    },
                    storageSource = "AzureBlob",
                }
            },
            storageType = "Folder",
        }
    },
};

var operation = await client.StartTranslationAsync(WaitUntil.Completed, RequestContent.Create(data), ContentType.ApplicationOctetStream, new RequestContext());

Console.WriteLine(operation.GetRawResponse().Status);
]]></code>
</example>
    </member>
    <member name="StartTranslation(WaitUntil,RequestContent,ContentType,RequestContext)">
<example>
This sample shows how to call StartTranslation with required parameters and request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new DocumentTranslationClient("<https://my-service.azure.com>", credential);

var data = new {
    inputs = new[] {
        new {
            source = new {
                sourceUrl = "<sourceUrl>",
                filter = new {
                    prefix = "<prefix>",
                    suffix = "<suffix>",
                },
                language = "<language>",
                storageSource = "AzureBlob",
            },
            targets = new[] {
                new {
                    targetUrl = "<targetUrl>",
                    category = "<category>",
                    language = "<language>",
                    glossaries = new[] {
                        new {
                            glossaryUrl = "<glossaryUrl>",
                            format = "<format>",
                            version = "<version>",
                            storageSource = "AzureBlob",
                        }
                    },
                    storageSource = "AzureBlob",
                }
            },
            storageType = "Folder",
        }
    },
};

var operation = client.StartTranslation(WaitUntil.Completed, RequestContent.Create(data), ContentType.ApplicationOctetStream, new RequestContext());

Console.WriteLine(operation.GetRawResponse().Status);
]]></code>
</example>
    </member>
  </members>
</doc>