// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Storage.Tables.Models;

namespace Azure.Storage.Tables
{
    /// <summary> Model factory for AzureStorageTables read-only models. </summary>
    public static partial class AzureStorageTablesModelFactory
    {
        /// <summary> Initializes new instance of TableQueryResponse class. </summary>
        /// <param name="odataMetadata"> The metadata response of the table. </param>
        /// <param name="value"> List of tables. </param>
        /// <returns> A new <see cref="Models.TableQueryResponse"/> instance for mocking. </returns>
        public static TableQueryResponse TableQueryResponse(string odataMetadata = default, IReadOnlyList<TableResponseProperties> value = default)
        {
            value ??= new List<TableResponseProperties>();
            return new TableQueryResponse(odataMetadata, value);
        }

        /// <summary> Initializes new instance of TableResponseProperties class. </summary>
        /// <param name="tableName"> The name of the table. </param>
        /// <param name="odataType"> The odata type of the table. </param>
        /// <param name="odataId"> The id of the table. </param>
        /// <param name="odataEditLink"> The edit link of the table. </param>
        /// <returns> A new <see cref="Models.TableResponseProperties"/> instance for mocking. </returns>
        public static TableResponseProperties TableResponseProperties(string tableName = default, string odataType = default, string odataId = default, string odataEditLink = default)
        {
            return new TableResponseProperties(tableName, odataType, odataId, odataEditLink);
        }

        /// <summary> Initializes new instance of TableResponse class. </summary>
        /// <param name="tableName"> The name of the table. </param>
        /// <param name="odataType"> The odata type of the table. </param>
        /// <param name="odataId"> The id of the table. </param>
        /// <param name="odataEditLink"> The edit link of the table. </param>
        /// <param name="odataMetadata"> The metadata response of the table. </param>
        /// <returns> A new <see cref="Models.TableResponse"/> instance for mocking. </returns>
        public static TableResponse TableResponse(string tableName = default, string odataType = default, string odataId = default, string odataEditLink = default, string odataMetadata = default)
        {
            return new TableResponse(tableName, odataType, odataId, odataEditLink, odataMetadata);
        }

        /// <summary> Initializes new instance of TableEntityQueryResponse class. </summary>
        /// <param name="odataMetadata"> The metadata response of the table. </param>
        /// <param name="value"> List of table entities. </param>
        /// <returns> A new <see cref="Models.TableEntityQueryResponse"/> instance for mocking. </returns>
        public static TableEntityQueryResponse TableEntityQueryResponse(string odataMetadata = default, IReadOnlyList<IDictionary<string, object>> value = default)
        {
            value ??= new List<IDictionary<string, object>>();
            return new TableEntityQueryResponse(odataMetadata, value);
        }

        /// <summary> Initializes new instance of StorageServiceStats class. </summary>
        /// <param name="geoReplication"> Geo-Replication information for the Secondary Storage Service. </param>
        /// <returns> A new <see cref="Models.StorageServiceStats"/> instance for mocking. </returns>
        public static StorageServiceStats StorageServiceStats(GeoReplication geoReplication = default)
        {
            return new StorageServiceStats(geoReplication);
        }

        /// <summary> Initializes new instance of GeoReplication class. </summary>
        /// <param name="status"> The status of the secondary location. </param>
        /// <param name="lastSyncTime"> A GMT date/time value, to the second. All primary writes preceding this value are guaranteed to be available for read operations at the secondary. Primary writes after this point in time may or may not be available for reads. </param>
        /// <returns> A new <see cref="Models.GeoReplication"/> instance for mocking. </returns>
        public static GeoReplication GeoReplication(GeoReplicationStatusType status = default, DateTimeOffset lastSyncTime = default)
        {
            return new GeoReplication(status, lastSyncTime);
        }
    }
}
