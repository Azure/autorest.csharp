// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Xml;
using System.Xml.Linq;
using Azure.Core;

namespace Azure.Storage.Tables.Models
{
    public partial class StorageServiceProperties : IXmlSerializable
    {
        void IXmlSerializable.Write(XmlWriter writer, string nameHint)
        {
            writer.WriteStartElement(nameHint ?? "StorageServiceProperties");
            if (Logging != null)
            {
                writer.WriteObjectValue(Logging, "Logging");
            }
            if (HourMetrics != null)
            {
                writer.WriteObjectValue(HourMetrics, "HourMetrics");
            }
            if (MinuteMetrics != null)
            {
                writer.WriteObjectValue(MinuteMetrics, "MinuteMetrics");
            }
            if (Cors != null)
            {
                writer.WriteStartElement("Cors");
                foreach (var item in Cors)
                {
                    writer.WriteObjectValue(item, "CorsRule");
                }
                writer.WriteEndElement();
            }
            writer.WriteEndElement();
        }

        internal static StorageServiceProperties DeserializeStorageServiceProperties(XElement element)
        {
            var obj = new StorageServiceProperties();
            if (element.Element("Logging") is XElement logging)
            {
                obj.Logging = Logging.DeserializeLogging(logging);
            }
            if (element.Element("HourMetrics") is XElement hourMetrics)
            {
                obj.HourMetrics = Metrics.DeserializeMetrics(hourMetrics);
            }
            if (element.Element("MinuteMetrics") is XElement minuteMetrics)
            {
                obj.MinuteMetrics = Metrics.DeserializeMetrics(minuteMetrics);
            }
            if (element.Element("Cors") is XElement cors)
            {
                var array = new List<CorsRule>();
                foreach (var e in cors.Elements("CorsRule"))
                {
                    array.Add(CorsRule.DeserializeCorsRule(e));
                }
                obj.Cors = array;
            }
            return obj;
        }
    }
}
