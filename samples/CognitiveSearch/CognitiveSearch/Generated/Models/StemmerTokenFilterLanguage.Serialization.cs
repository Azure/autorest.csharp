// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

using System;

namespace CognitiveSearch.Models
{
    internal static class StemmerTokenFilterLanguageExtensions
    {
        public static string ToSerialString(this StemmerTokenFilterLanguage value) => value switch
        {
            StemmerTokenFilterLanguage.Arabic => "arabic",
            StemmerTokenFilterLanguage.Armenian => "armenian",
            StemmerTokenFilterLanguage.Basque => "basque",
            StemmerTokenFilterLanguage.Brazilian => "brazilian",
            StemmerTokenFilterLanguage.Bulgarian => "bulgarian",
            StemmerTokenFilterLanguage.Catalan => "catalan",
            StemmerTokenFilterLanguage.Czech => "czech",
            StemmerTokenFilterLanguage.Danish => "danish",
            StemmerTokenFilterLanguage.Dutch => "dutch",
            StemmerTokenFilterLanguage.DutchKp => "dutchKp",
            StemmerTokenFilterLanguage.English => "english",
            StemmerTokenFilterLanguage.LightEnglish => "lightEnglish",
            StemmerTokenFilterLanguage.MinimalEnglish => "minimalEnglish",
            StemmerTokenFilterLanguage.PossessiveEnglish => "possessiveEnglish",
            StemmerTokenFilterLanguage.Porter2 => "porter2",
            StemmerTokenFilterLanguage.Lovins => "lovins",
            StemmerTokenFilterLanguage.Finnish => "finnish",
            StemmerTokenFilterLanguage.LightFinnish => "lightFinnish",
            StemmerTokenFilterLanguage.French => "french",
            StemmerTokenFilterLanguage.LightFrench => "lightFrench",
            StemmerTokenFilterLanguage.MinimalFrench => "minimalFrench",
            StemmerTokenFilterLanguage.Galician => "galician",
            StemmerTokenFilterLanguage.MinimalGalician => "minimalGalician",
            StemmerTokenFilterLanguage.German => "german",
            StemmerTokenFilterLanguage.German2 => "german2",
            StemmerTokenFilterLanguage.LightGerman => "lightGerman",
            StemmerTokenFilterLanguage.MinimalGerman => "minimalGerman",
            StemmerTokenFilterLanguage.Greek => "greek",
            StemmerTokenFilterLanguage.Hindi => "hindi",
            StemmerTokenFilterLanguage.Hungarian => "hungarian",
            StemmerTokenFilterLanguage.LightHungarian => "lightHungarian",
            StemmerTokenFilterLanguage.Indonesian => "indonesian",
            StemmerTokenFilterLanguage.Irish => "irish",
            StemmerTokenFilterLanguage.Italian => "italian",
            StemmerTokenFilterLanguage.LightItalian => "lightItalian",
            StemmerTokenFilterLanguage.Sorani => "sorani",
            StemmerTokenFilterLanguage.Latvian => "latvian",
            StemmerTokenFilterLanguage.Norwegian => "norwegian",
            StemmerTokenFilterLanguage.LightNorwegian => "lightNorwegian",
            StemmerTokenFilterLanguage.MinimalNorwegian => "minimalNorwegian",
            StemmerTokenFilterLanguage.LightNynorsk => "lightNynorsk",
            StemmerTokenFilterLanguage.MinimalNynorsk => "minimalNynorsk",
            StemmerTokenFilterLanguage.Portuguese => "portuguese",
            StemmerTokenFilterLanguage.LightPortuguese => "lightPortuguese",
            StemmerTokenFilterLanguage.MinimalPortuguese => "minimalPortuguese",
            StemmerTokenFilterLanguage.PortugueseRslp => "portugueseRslp",
            StemmerTokenFilterLanguage.Romanian => "romanian",
            StemmerTokenFilterLanguage.Russian => "russian",
            StemmerTokenFilterLanguage.LightRussian => "lightRussian",
            StemmerTokenFilterLanguage.Spanish => "spanish",
            StemmerTokenFilterLanguage.LightSpanish => "lightSpanish",
            StemmerTokenFilterLanguage.Swedish => "swedish",
            StemmerTokenFilterLanguage.LightSwedish => "lightSwedish",
            StemmerTokenFilterLanguage.Turkish => "turkish",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown StemmerTokenFilterLanguage value.")
        };

        public static StemmerTokenFilterLanguage ToStemmerTokenFilterLanguage(this string value) => value switch
        {
            "arabic" => StemmerTokenFilterLanguage.Arabic,
            "armenian" => StemmerTokenFilterLanguage.Armenian,
            "basque" => StemmerTokenFilterLanguage.Basque,
            "brazilian" => StemmerTokenFilterLanguage.Brazilian,
            "bulgarian" => StemmerTokenFilterLanguage.Bulgarian,
            "catalan" => StemmerTokenFilterLanguage.Catalan,
            "czech" => StemmerTokenFilterLanguage.Czech,
            "danish" => StemmerTokenFilterLanguage.Danish,
            "dutch" => StemmerTokenFilterLanguage.Dutch,
            "dutchKp" => StemmerTokenFilterLanguage.DutchKp,
            "english" => StemmerTokenFilterLanguage.English,
            "lightEnglish" => StemmerTokenFilterLanguage.LightEnglish,
            "minimalEnglish" => StemmerTokenFilterLanguage.MinimalEnglish,
            "possessiveEnglish" => StemmerTokenFilterLanguage.PossessiveEnglish,
            "porter2" => StemmerTokenFilterLanguage.Porter2,
            "lovins" => StemmerTokenFilterLanguage.Lovins,
            "finnish" => StemmerTokenFilterLanguage.Finnish,
            "lightFinnish" => StemmerTokenFilterLanguage.LightFinnish,
            "french" => StemmerTokenFilterLanguage.French,
            "lightFrench" => StemmerTokenFilterLanguage.LightFrench,
            "minimalFrench" => StemmerTokenFilterLanguage.MinimalFrench,
            "galician" => StemmerTokenFilterLanguage.Galician,
            "minimalGalician" => StemmerTokenFilterLanguage.MinimalGalician,
            "german" => StemmerTokenFilterLanguage.German,
            "german2" => StemmerTokenFilterLanguage.German2,
            "lightGerman" => StemmerTokenFilterLanguage.LightGerman,
            "minimalGerman" => StemmerTokenFilterLanguage.MinimalGerman,
            "greek" => StemmerTokenFilterLanguage.Greek,
            "hindi" => StemmerTokenFilterLanguage.Hindi,
            "hungarian" => StemmerTokenFilterLanguage.Hungarian,
            "lightHungarian" => StemmerTokenFilterLanguage.LightHungarian,
            "indonesian" => StemmerTokenFilterLanguage.Indonesian,
            "irish" => StemmerTokenFilterLanguage.Irish,
            "italian" => StemmerTokenFilterLanguage.Italian,
            "lightItalian" => StemmerTokenFilterLanguage.LightItalian,
            "sorani" => StemmerTokenFilterLanguage.Sorani,
            "latvian" => StemmerTokenFilterLanguage.Latvian,
            "norwegian" => StemmerTokenFilterLanguage.Norwegian,
            "lightNorwegian" => StemmerTokenFilterLanguage.LightNorwegian,
            "minimalNorwegian" => StemmerTokenFilterLanguage.MinimalNorwegian,
            "lightNynorsk" => StemmerTokenFilterLanguage.LightNynorsk,
            "minimalNynorsk" => StemmerTokenFilterLanguage.MinimalNynorsk,
            "portuguese" => StemmerTokenFilterLanguage.Portuguese,
            "lightPortuguese" => StemmerTokenFilterLanguage.LightPortuguese,
            "minimalPortuguese" => StemmerTokenFilterLanguage.MinimalPortuguese,
            "portugueseRslp" => StemmerTokenFilterLanguage.PortugueseRslp,
            "romanian" => StemmerTokenFilterLanguage.Romanian,
            "russian" => StemmerTokenFilterLanguage.Russian,
            "lightRussian" => StemmerTokenFilterLanguage.LightRussian,
            "spanish" => StemmerTokenFilterLanguage.Spanish,
            "lightSpanish" => StemmerTokenFilterLanguage.LightSpanish,
            "swedish" => StemmerTokenFilterLanguage.Swedish,
            "lightSwedish" => StemmerTokenFilterLanguage.LightSwedish,
            "turkish" => StemmerTokenFilterLanguage.Turkish,
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown StemmerTokenFilterLanguage value.")
        };
    }
}
