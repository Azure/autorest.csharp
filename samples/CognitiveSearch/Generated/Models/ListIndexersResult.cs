// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace CognitiveSearch.Models
{
    /// <summary> Response from a List Indexers request. If successful, it includes the full definitions of all indexers. </summary>
    public partial class ListIndexersResult
    {
        /// <summary> Initializes a new instance of ListIndexersResult. </summary>
        /// <param name="indexers"> The indexers in the Search service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="indexers"/> is null. </exception>
        internal ListIndexersResult(IEnumerable<Indexer> indexers)
        {
            if (indexers == null)
            {
                throw new ArgumentNullException(nameof(indexers));
            }

            Indexers = indexers.ToList();
        }

        /// <summary> Initializes a new instance of ListIndexersResult. </summary>
        /// <param name="indexers"> The indexers in the Search service. </param>
        internal ListIndexersResult(IReadOnlyList<Indexer> indexers)
        {
            Indexers = indexers;
        }

        /// <summary> The indexers in the Search service. </summary>
        public IReadOnlyList<Indexer> Indexers { get; }
    }
}
