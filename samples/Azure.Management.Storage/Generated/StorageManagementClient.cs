// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.Core.Pipeline;
using Azure.Management.Storage;

namespace Azure.Management.Storage
{
    /// <summary> Storage service management client. </summary>
    public class StorageManagementClient
    {
        private readonly ClientDiagnostics _clientDiagnostics;
        private readonly HttpPipeline _pipeline;
        private readonly string _subscriptionId;
        private readonly Uri _endpoint;

        /// <summary> Initializes a new instance of StorageManagementClient for mocking. </summary>
        protected StorageManagementClient()
        {
        }

        /// <summary> Initializes a new instance of StorageManagementClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="tokenCredential"> The OAuth token for making client requests. </param>
        /// <param name="options"> The options for configuring the client. </param>
        public StorageManagementClient(string subscriptionId, TokenCredential tokenCredential, StorageManagementClientOptions options = null) : this(subscriptionId, null, tokenCredential, options)
        {
        }
        /// <summary> Initializes a new instance of StorageManagementClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="tokenCredential"> The OAuth token for making client requests. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> is null. </exception>
        public StorageManagementClient(string subscriptionId, Uri endpoint, TokenCredential tokenCredential, StorageManagementClientOptions options = null)
        {
            if (subscriptionId == null)
            {
                throw new ArgumentNullException(nameof(subscriptionId));
            }
            endpoint ??= new Uri("https://management.azure.com");

            options ??= new StorageManagementClientOptions();
            _clientDiagnostics = new ClientDiagnostics(options);
            _pipeline = ManagementPipelineBuilder.Build(tokenCredential, endpoint, options);
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
        }

        /// <summary> Returns an instance of BlobServicesOperations. </summary>
        public virtual BlobServicesOperations BlobServices => new BlobServicesOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of BlobContainersOperations. </summary>
        public virtual BlobContainersOperations BlobContainers => new BlobContainersOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of FileServicesOperations. </summary>
        public virtual FileServicesOperations FileServices => new FileServicesOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of FileSharesOperations. </summary>
        public virtual FileSharesOperations FileShares => new FileSharesOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of Operations. </summary>
        public virtual Operations Operations => new Operations(_clientDiagnostics, _pipeline, _endpoint);

        /// <summary> Returns an instance of SkusOperations. </summary>
        public virtual SkusOperations Skus => new SkusOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of StorageAccountsOperations. </summary>
        public virtual StorageAccountsOperations StorageAccounts => new StorageAccountsOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of UsagesOperations. </summary>
        public virtual UsagesOperations Usages => new UsagesOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of ManagementPoliciesOperations. </summary>
        public virtual ManagementPoliciesOperations ManagementPolicies => new ManagementPoliciesOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of PrivateEndpointConnectionsOperations. </summary>
        public virtual PrivateEndpointConnectionsOperations PrivateEndpointConnections => new PrivateEndpointConnectionsOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of PrivateLinkResourcesOperations. </summary>
        public virtual PrivateLinkResourcesOperations PrivateLinkResources => new PrivateLinkResourcesOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of ObjectReplicationPoliciesOperations. </summary>
        public virtual ObjectReplicationPoliciesOperations ObjectReplicationPolicies => new ObjectReplicationPoliciesOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of EncryptionScopesOperations. </summary>
        public virtual EncryptionScopesOperations EncryptionScopes => new EncryptionScopesOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);
    }
}
