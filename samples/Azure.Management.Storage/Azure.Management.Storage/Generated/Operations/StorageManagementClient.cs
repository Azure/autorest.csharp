// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.Management.Storage;

namespace Azure.Management.Storage
{
    /// <summary> Storage service management client. </summary>
    public class StorageManagementClient
    {
        private readonly StorageManagementClientOptions _options;
        private readonly TokenCredential _tokenCredential;
        private readonly string _subscriptionId;

        /// <summary> Initializes a new instance of StorageManagementClient for mocking. </summary>
        protected StorageManagementClient()
        {
        }

        /// <summary> Initializes a new instance of StorageManagementClient. </summary>
        public StorageManagementClient(string subscriptionId, TokenCredential tokenCredential, StorageManagementClientOptions options = null)
        {
            _options = options ?? new StorageManagementClientOptions();
            _tokenCredential = tokenCredential;
            _subscriptionId = subscriptionId;
        }

        /// <summary> Creates a new instance of BlobServicesClient. </summary>
        public BlobServicesClient GetBlobServicesClient()
        {
            return new BlobServicesClient(_subscriptionId, _tokenCredential, _options);
        }

        /// <summary> Creates a new instance of BlobContainersClient. </summary>
        public BlobContainersClient GetBlobContainersClient()
        {
            return new BlobContainersClient(_subscriptionId, _tokenCredential, _options);
        }

        /// <summary> Creates a new instance of FileServicesClient. </summary>
        public FileServicesClient GetFileServicesClient()
        {
            return new FileServicesClient(_subscriptionId, _tokenCredential, _options);
        }

        /// <summary> Creates a new instance of FileSharesClient. </summary>
        public FileSharesClient GetFileSharesClient()
        {
            return new FileSharesClient(_subscriptionId, _tokenCredential, _options);
        }

        /// <summary> Creates a new instance of OperationsClient. </summary>
        public OperationsClient GetOperationsClient()
        {
            return new OperationsClient(_tokenCredential, _options);
        }

        /// <summary> Creates a new instance of SkusClient. </summary>
        public SkusClient GetSkusClient()
        {
            return new SkusClient(_subscriptionId, _tokenCredential, _options);
        }

        /// <summary> Creates a new instance of StorageAccountsClient. </summary>
        public StorageAccountsClient GetStorageAccountsClient()
        {
            return new StorageAccountsClient(_subscriptionId, _tokenCredential, _options);
        }

        /// <summary> Creates a new instance of UsagesClient. </summary>
        public UsagesClient GetUsagesClient()
        {
            return new UsagesClient(_subscriptionId, _tokenCredential, _options);
        }

        /// <summary> Creates a new instance of ManagementPoliciesClient. </summary>
        public ManagementPoliciesClient GetManagementPoliciesClient()
        {
            return new ManagementPoliciesClient(_subscriptionId, _tokenCredential, _options);
        }

        /// <summary> Creates a new instance of PrivateEndpointConnectionsClient. </summary>
        public PrivateEndpointConnectionsClient GetPrivateEndpointConnectionsClient()
        {
            return new PrivateEndpointConnectionsClient(_subscriptionId, _tokenCredential, _options);
        }

        /// <summary> Creates a new instance of PrivateLinkResourcesClient. </summary>
        public PrivateLinkResourcesClient GetPrivateLinkResourcesClient()
        {
            return new PrivateLinkResourcesClient(_subscriptionId, _tokenCredential, _options);
        }

        /// <summary> Creates a new instance of EncryptionScopesClient. </summary>
        public EncryptionScopesClient GetEncryptionScopesClient()
        {
            return new EncryptionScopesClient(_subscriptionId, _tokenCredential, _options);
        }
    }
}
