{
 "$id": "1",
 "Name": "AnomalyDetector",
 "ApiVersions": [
  "v1.1"
 ],
 "Enums": [
  {
   "$id": "2",
   "Kind": "enum",
   "Name": "MultivariateBatchDetectionStatus",
   "CrossLanguageDefinitionId": "AnomalyDetector.Multivariate.MultivariateBatchDetectionStatus",
   "ValueType": {
    "$id": "3",
    "Kind": "string",
    "Name": "string",
    "CrossLanguageDefinitionId": "TypeSpec.string"
   },
   "Values": [
    {
     "$id": "4",
     "Name": "Created",
     "Value": "CREATED"
    },
    {
     "$id": "5",
     "Name": "Running",
     "Value": "RUNNING"
    },
    {
     "$id": "6",
     "Name": "Ready",
     "Value": "READY"
    },
    {
     "$id": "7",
     "Name": "Failed",
     "Value": "FAILED"
    }
   ],
   "Description": "The batch detection status.",
   "IsExtensible": false,
   "Usage": "Output,Json"
  },
  {
   "$id": "8",
   "Kind": "enum",
   "Name": "DataSchema",
   "CrossLanguageDefinitionId": "AnomalyDetector.Multivariate.DataSchema",
   "ValueType": {
    "$id": "9",
    "Kind": "string",
    "Name": "string",
    "CrossLanguageDefinitionId": "TypeSpec.string"
   },
   "Values": [
    {
     "$id": "10",
     "Name": "OneTable",
     "Value": "OneTable",
     "Description": "OneTable means that your input data are all in one CSV file, which contains one 'timestamp' column and several variable columns. The default DataSchema is OneTable."
    },
    {
     "$id": "11",
     "Name": "MultiTable",
     "Value": "MultiTable",
     "Description": "MultiTable means that your input data are separated in multiple CSV files, in each file containing one 'timestamp' column and one 'variable' column, and the CSV file name should indicate the name of the variable. The default DataSchema is OneTable."
    }
   ],
   "Description": "Data schema of input data source: OneTable or MultiTable. The default DataSchema is OneTable.",
   "IsExtensible": true,
   "Usage": "Input,Output,Json"
  },
  {
   "$id": "12",
   "Kind": "enum",
   "Name": "AlignMode",
   "CrossLanguageDefinitionId": "AnomalyDetector.Multivariate.AlignMode",
   "ValueType": {
    "$id": "13",
    "Kind": "string",
    "Name": "string",
    "CrossLanguageDefinitionId": "TypeSpec.string"
   },
   "Values": [
    {
     "$id": "14",
     "Name": "Inner",
     "Value": "Inner"
    },
    {
     "$id": "15",
     "Name": "Outer",
     "Value": "Outer"
    }
   ],
   "Description": "The alignment mode.",
   "IsExtensible": false,
   "Usage": "Input,Output,Json"
  },
  {
   "$id": "16",
   "Kind": "enum",
   "Name": "FillNAMethod",
   "CrossLanguageDefinitionId": "AnomalyDetector.Multivariate.FillNAMethod",
   "ValueType": {
    "$id": "17",
    "Kind": "string",
    "Name": "string",
    "CrossLanguageDefinitionId": "TypeSpec.string"
   },
   "Values": [
    {
     "$id": "18",
     "Name": "Previous",
     "Value": "Previous"
    },
    {
     "$id": "19",
     "Name": "Subsequent",
     "Value": "Subsequent"
    },
    {
     "$id": "20",
     "Name": "Linear",
     "Value": "Linear"
    },
    {
     "$id": "21",
     "Name": "Zero",
     "Value": "Zero"
    },
    {
     "$id": "22",
     "Name": "Fixed",
     "Value": "Fixed"
    }
   ],
   "Description": "An optional field, indicating how missing values will be filled. One of Previous, Subsequent, Linear, Zero, Fixed.",
   "IsExtensible": true,
   "Usage": "Input,Output,Json"
  },
  {
   "$id": "23",
   "Kind": "enum",
   "Name": "ModelStatus",
   "CrossLanguageDefinitionId": "AnomalyDetector.Multivariate.ModelStatus",
   "ValueType": {
    "$id": "24",
    "Kind": "string",
    "Name": "string",
    "CrossLanguageDefinitionId": "TypeSpec.string"
   },
   "Values": [
    {
     "$id": "25",
     "Name": "Created",
     "Value": "CREATED"
    },
    {
     "$id": "26",
     "Name": "Running",
     "Value": "RUNNING"
    },
    {
     "$id": "27",
     "Name": "Ready",
     "Value": "READY"
    },
    {
     "$id": "28",
     "Name": "Failed",
     "Value": "FAILED"
    }
   ],
   "Description": "the model status.",
   "IsExtensible": false,
   "Usage": "Input,Output,Json"
  },
  {
   "$id": "29",
   "Kind": "enum",
   "Name": "TimeGranularity",
   "CrossLanguageDefinitionId": "AnomalyDetector.Univariate.TimeGranularity",
   "ValueType": {
    "$id": "30",
    "Kind": "string",
    "Name": "string",
    "CrossLanguageDefinitionId": "TypeSpec.string"
   },
   "Values": [
    {
     "$id": "31",
     "Name": "Yearly",
     "Value": "yearly"
    },
    {
     "$id": "32",
     "Name": "Monthly",
     "Value": "monthly"
    },
    {
     "$id": "33",
     "Name": "Weekly",
     "Value": "weekly"
    },
    {
     "$id": "34",
     "Name": "Daily",
     "Value": "daily"
    },
    {
     "$id": "35",
     "Name": "Hourly",
     "Value": "hourly"
    },
    {
     "$id": "36",
     "Name": "PerMinute",
     "Value": "minutely"
    },
    {
     "$id": "37",
     "Name": "PerSecond",
     "Value": "secondly"
    },
    {
     "$id": "38",
     "Name": "Microsecond",
     "Value": "microsecond"
    },
    {
     "$id": "39",
     "Name": "None",
     "Value": "none"
    }
   ],
   "Description": "the time granularity of the data points.",
   "IsExtensible": false,
   "Usage": "Input,Json"
  },
  {
   "$id": "40",
   "Kind": "enum",
   "Name": "ImputeMode",
   "CrossLanguageDefinitionId": "AnomalyDetector.Univariate.ImputeMode",
   "ValueType": {
    "$id": "41",
    "Kind": "string",
    "Name": "string",
    "CrossLanguageDefinitionId": "TypeSpec.string"
   },
   "Values": [
    {
     "$id": "42",
     "Name": "Auto",
     "Value": "auto"
    },
    {
     "$id": "43",
     "Name": "Previous",
     "Value": "previous"
    },
    {
     "$id": "44",
     "Name": "Linear",
     "Value": "linear"
    },
    {
     "$id": "45",
     "Name": "Fixed",
     "Value": "fixed"
    },
    {
     "$id": "46",
     "Name": "Zero",
     "Value": "zero"
    },
    {
     "$id": "47",
     "Name": "NotFill",
     "Value": "notFill"
    }
   ],
   "Description": "The impute mode.",
   "IsExtensible": true,
   "Usage": "Input,Json"
  },
  {
   "$id": "48",
   "Kind": "enum",
   "Name": "AnomalyDetectorErrorCodes",
   "CrossLanguageDefinitionId": "AnomalyDetector.Univariate.AnomalyDetectorErrorCodes",
   "ValueType": {
    "$id": "49",
    "Kind": "string",
    "Name": "string",
    "CrossLanguageDefinitionId": "TypeSpec.string"
   },
   "Values": [
    {
     "$id": "50",
     "Name": "InvalidCustomInterval",
     "Value": "InvalidCustomInterval"
    },
    {
     "$id": "51",
     "Name": "BadArgument",
     "Value": "BadArgument"
    },
    {
     "$id": "52",
     "Name": "InvalidGranularity",
     "Value": "InvalidGranularity"
    },
    {
     "$id": "53",
     "Name": "InvalidPeriod",
     "Value": "InvalidPeriod"
    },
    {
     "$id": "54",
     "Name": "InvalidModelArgument",
     "Value": "InvalidModelArgument"
    },
    {
     "$id": "55",
     "Name": "InvalidSeries",
     "Value": "InvalidSeries"
    },
    {
     "$id": "56",
     "Name": "InvalidJsonFormat",
     "Value": "InvalidJsonFormat"
    },
    {
     "$id": "57",
     "Name": "RequiredGranularity",
     "Value": "RequiredGranularity"
    },
    {
     "$id": "58",
     "Name": "RequiredSeries",
     "Value": "RequiredSeries"
    },
    {
     "$id": "59",
     "Name": "InvalidImputeMode",
     "Value": "InvalidImputeMode"
    },
    {
     "$id": "60",
     "Name": "InvalidImputeFixedValue",
     "Value": "InvalidImputeFixedValue"
    }
   ],
   "IsExtensible": false,
   "Usage": "Output,Json"
  },
  {
   "$id": "61",
   "Kind": "enum",
   "Name": "APIVersion",
   "CrossLanguageDefinitionId": "AnomalyDetector.APIVersion",
   "ValueType": {
    "$id": "62",
    "Kind": "string",
    "Name": "string",
    "CrossLanguageDefinitionId": "TypeSpec.string"
   },
   "Values": [
    {
     "$id": "63",
     "Name": "v1_1",
     "Value": "v1.1"
    }
   ],
   "IsExtensible": true,
   "Usage": "Input"
  },
  {
   "$id": "64",
   "Kind": "enum",
   "Name": "Versions",
   "CrossLanguageDefinitionId": "AnomalyDetector.Versions",
   "ValueType": {
    "$id": "65",
    "Kind": "string",
    "Name": "string",
    "CrossLanguageDefinitionId": "TypeSpec.string"
   },
   "Values": [
    {
     "$id": "66",
     "Name": "v1_1",
     "Value": "v1.1"
    }
   ],
   "IsExtensible": false,
   "Usage": "ApiVersionEnum"
  }
 ],
 "Models": [
  {
   "$id": "67",
   "Kind": "model",
   "Name": "MultivariateDetectionResult",
   "CrossLanguageDefinitionId": "AnomalyDetector.Multivariate.MultivariateDetectionResult",
   "Usage": "Output,Json",
   "Description": "Detection results for the given resultId.",
   "Properties": [
    {
     "$id": "68",
     "Name": "resultId",
     "SerializedName": "resultId",
     "Description": "Result identifier, which is used to fetch the results of an inference call.",
     "Type": {
      "$id": "69",
      "Kind": "string",
      "Name": "uuid",
      "CrossLanguageDefinitionId": "Azure.Core.uuid",
      "BaseType": {
       "$id": "70",
       "Kind": "string",
       "Name": "string",
       "CrossLanguageDefinitionId": "TypeSpec.string"
      }
     },
     "IsRequired": true,
     "IsReadOnly": true
    },
    {
     "$id": "71",
     "Name": "summary",
     "SerializedName": "summary",
     "Description": "Multivariate anomaly detection status.",
     "Type": {
      "$id": "72",
      "Kind": "model",
      "Name": "MultivariateBatchDetectionResultSummary",
      "CrossLanguageDefinitionId": "AnomalyDetector.Multivariate.MultivariateBatchDetectionResultSummary",
      "Usage": "Output,Json",
      "Description": "Multivariate anomaly detection status.",
      "Properties": [
       {
        "$id": "73",
        "Name": "status",
        "SerializedName": "status",
        "Description": "Status of detection results. One of CREATED, RUNNING, READY, and FAILED.",
        "Type": {
         "$ref": "2"
        },
        "IsRequired": true,
        "IsReadOnly": false
       },
       {
        "$id": "74",
        "Name": "errors",
        "SerializedName": "errors",
        "Description": "Error message when detection is failed.",
        "Type": {
         "$id": "75",
         "Kind": "array",
         "Name": "ArrayErrorResponse",
         "ValueType": {
          "$id": "76",
          "Kind": "model",
          "Name": "ErrorResponse",
          "CrossLanguageDefinitionId": "AnomalyDetector.Multivariate.ErrorResponse",
          "Usage": "Output,Error,Json",
          "Description": "ErrorResponse contains code and message that shows the error information.",
          "Properties": [
           {
            "$id": "77",
            "Name": "code",
            "SerializedName": "code",
            "Description": "The error code.",
            "Type": {
             "$id": "78",
             "Kind": "string",
             "Name": "string",
             "CrossLanguageDefinitionId": "TypeSpec.string"
            },
            "IsRequired": true,
            "IsReadOnly": false
           },
           {
            "$id": "79",
            "Name": "message",
            "SerializedName": "message",
            "Description": "The message explaining the error reported by the service.",
            "Type": {
             "$id": "80",
             "Kind": "string",
             "Name": "string",
             "CrossLanguageDefinitionId": "TypeSpec.string"
            },
            "IsRequired": true,
            "IsReadOnly": false
           }
          ]
         },
         "CrossLanguageDefinitionId": "TypeSpec.Array"
        },
        "IsRequired": false,
        "IsReadOnly": false
       },
       {
        "$id": "81",
        "Name": "variableStates",
        "SerializedName": "variableStates",
        "Description": "Variable Status.",
        "Type": {
         "$id": "82",
         "Kind": "array",
         "Name": "ArrayVariableState",
         "ValueType": {
          "$id": "83",
          "Kind": "model",
          "Name": "VariableState",
          "CrossLanguageDefinitionId": "AnomalyDetector.Multivariate.VariableState",
          "Usage": "Input,Output,Json",
          "Description": "Variable Status.",
          "Properties": [
           {
            "$id": "84",
            "Name": "variable",
            "SerializedName": "variable",
            "Description": "Variable name in variable states.",
            "Type": {
             "$id": "85",
             "Kind": "string",
             "Name": "string",
             "CrossLanguageDefinitionId": "TypeSpec.string"
            },
            "IsRequired": false,
            "IsReadOnly": false
           },
           {
            "$id": "86",
            "Name": "filledNARatio",
            "SerializedName": "filledNARatio",
            "Description": "Proportion of missing values that need to be filled by fillNAMethod.",
            "Type": {
             "$id": "87",
             "Kind": "float32",
             "Name": "float32",
             "CrossLanguageDefinitionId": "TypeSpec.float32"
            },
            "IsRequired": false,
            "IsReadOnly": false
           },
           {
            "$id": "88",
            "Name": "effectiveCount",
            "SerializedName": "effectiveCount",
            "Description": "Number of effective data points before applying fillNAMethod.",
            "Type": {
             "$id": "89",
             "Kind": "int32",
             "Name": "int32",
             "CrossLanguageDefinitionId": "TypeSpec.int32"
            },
            "IsRequired": false,
            "IsReadOnly": false
           },
           {
            "$id": "90",
            "Name": "firstTimestamp",
            "SerializedName": "firstTimestamp",
            "Description": "First valid timestamp with value of input data.",
            "Type": {
             "$id": "91",
             "Kind": "utcDateTime",
             "Name": "utcDateTime",
             "Encode": "rfc3339",
             "WireType": {
              "$id": "92",
              "Kind": "string",
              "Name": "string",
              "CrossLanguageDefinitionId": "TypeSpec.string"
             },
             "CrossLanguageDefinitionId": "TypeSpec.utcDateTime"
            },
            "IsRequired": false,
            "IsReadOnly": false
           },
           {
            "$id": "93",
            "Name": "lastTimestamp",
            "SerializedName": "lastTimestamp",
            "Description": "Last valid timestamp with value of input data.",
            "Type": {
             "$id": "94",
             "Kind": "utcDateTime",
             "Name": "utcDateTime",
             "Encode": "rfc3339",
             "WireType": {
              "$id": "95",
              "Kind": "string",
              "Name": "string",
              "CrossLanguageDefinitionId": "TypeSpec.string"
             },
             "CrossLanguageDefinitionId": "TypeSpec.utcDateTime"
            },
            "IsRequired": false,
            "IsReadOnly": false
           }
          ]
         },
         "CrossLanguageDefinitionId": "TypeSpec.Array"
        },
        "IsRequired": false,
        "IsReadOnly": false
       },
       {
        "$id": "96",
        "Name": "setupInfo",
        "SerializedName": "setupInfo",
        "Description": "Detection request for batch inference. This is an asynchronous inference which\nwill need another API to get detection results.",
        "Type": {
         "$id": "97",
         "Kind": "model",
         "Name": "MultivariateBatchDetectionOptions",
         "CrossLanguageDefinitionId": "AnomalyDetector.Multivariate.MultivariateBatchDetectionOptions",
         "Usage": "Input,Output,Json",
         "Description": "Detection request for batch inference. This is an asynchronous inference which\nwill need another API to get detection results.",
         "Properties": [
          {
           "$id": "98",
           "Name": "dataSource",
           "SerializedName": "dataSource",
           "Description": "Source link to the input data to indicate an accessible Azure storage Uri,\neither pointed to an Azure blob storage folder, or pointed to a CSV file in\nAzure blob storage based on you data schema selection. The data schema should\nbe exactly the same with those used in the training phase.",
           "Type": {
            "$id": "99",
            "Kind": "url",
            "Name": "url",
            "CrossLanguageDefinitionId": "TypeSpec.url"
           },
           "IsRequired": true,
           "IsReadOnly": false
          },
          {
           "$id": "100",
           "Name": "topContributorCount",
           "SerializedName": "topContributorCount",
           "Description": "An optional field, which is used to specify the number of top contributed\nvariables for one anomalous timestamp in the response. The default number is\n10.",
           "Type": {
            "$id": "101",
            "Kind": "int32",
            "Name": "int32",
            "CrossLanguageDefinitionId": "TypeSpec.int32"
           },
           "IsRequired": true,
           "IsReadOnly": false
          },
          {
           "$id": "102",
           "Name": "startTime",
           "SerializedName": "startTime",
           "Description": "A required field, indicating the start time of data for detection, which should\nbe date-time of ISO 8601 format.",
           "Type": {
            "$id": "103",
            "Kind": "utcDateTime",
            "Name": "utcDateTime",
            "Encode": "rfc3339",
            "WireType": {
             "$id": "104",
             "Kind": "string",
             "Name": "string",
             "CrossLanguageDefinitionId": "TypeSpec.string"
            },
            "CrossLanguageDefinitionId": "TypeSpec.utcDateTime"
           },
           "IsRequired": true,
           "IsReadOnly": false
          },
          {
           "$id": "105",
           "Name": "endTime",
           "SerializedName": "endTime",
           "Description": "A required field, indicating the end time of data for detection, which should\nbe date-time of ISO 8601 format.",
           "Type": {
            "$id": "106",
            "Kind": "utcDateTime",
            "Name": "utcDateTime",
            "Encode": "rfc3339",
            "WireType": {
             "$id": "107",
             "Kind": "string",
             "Name": "string",
             "CrossLanguageDefinitionId": "TypeSpec.string"
            },
            "CrossLanguageDefinitionId": "TypeSpec.utcDateTime"
           },
           "IsRequired": true,
           "IsReadOnly": false
          }
         ]
        },
        "IsRequired": true,
        "IsReadOnly": false
       }
      ]
     },
     "IsRequired": true,
     "IsReadOnly": false
    },
    {
     "$id": "108",
     "Name": "results",
     "SerializedName": "results",
     "Description": "Detection result for each timestamp.",
     "Type": {
      "$id": "109",
      "Kind": "array",
      "Name": "ArrayAnomalyState",
      "ValueType": {
       "$id": "110",
       "Kind": "model",
       "Name": "AnomalyState",
       "CrossLanguageDefinitionId": "AnomalyDetector.Multivariate.AnomalyState",
       "Usage": "Output,Json",
       "Description": "Anomaly status and information.",
       "Properties": [
        {
         "$id": "111",
         "Name": "timestamp",
         "SerializedName": "timestamp",
         "Description": "The timestamp for this anomaly.",
         "Type": {
          "$id": "112",
          "Kind": "utcDateTime",
          "Name": "utcDateTime",
          "Encode": "rfc3339",
          "WireType": {
           "$id": "113",
           "Kind": "string",
           "Name": "string",
           "CrossLanguageDefinitionId": "TypeSpec.string"
          },
          "CrossLanguageDefinitionId": "TypeSpec.utcDateTime"
         },
         "IsRequired": true,
         "IsReadOnly": false
        },
        {
         "$id": "114",
         "Name": "value",
         "SerializedName": "value",
         "Description": "The detailed value of this anomalous timestamp.",
         "Type": {
          "$id": "115",
          "Kind": "model",
          "Name": "AnomalyValue",
          "CrossLanguageDefinitionId": "AnomalyDetector.Multivariate.AnomalyValue",
          "Usage": "Output,Json",
          "Description": "Detailed information of the anomalous timestamp.",
          "Properties": [
           {
            "$id": "116",
            "Name": "isAnomaly",
            "SerializedName": "isAnomaly",
            "Description": "True if an anomaly is detected at the current timestamp.",
            "Type": {
             "$id": "117",
             "Kind": "boolean",
             "Name": "boolean",
             "CrossLanguageDefinitionId": "TypeSpec.boolean"
            },
            "IsRequired": true,
            "IsReadOnly": false
           },
           {
            "$id": "118",
            "Name": "severity",
            "SerializedName": "severity",
            "Description": "Indicates the significance of the anomaly. The higher the severity, the more\nsignificant the anomaly is.",
            "Type": {
             "$id": "119",
             "Kind": "float32",
             "Name": "float32",
             "CrossLanguageDefinitionId": "TypeSpec.float32"
            },
            "IsRequired": true,
            "IsReadOnly": false
           },
           {
            "$id": "120",
            "Name": "score",
            "SerializedName": "score",
            "Description": "Raw anomaly score of severity, will help indicate the degree of abnormality as\nwell.",
            "Type": {
             "$id": "121",
             "Kind": "float32",
             "Name": "float32",
             "CrossLanguageDefinitionId": "TypeSpec.float32"
            },
            "IsRequired": true,
            "IsReadOnly": false
           },
           {
            "$id": "122",
            "Name": "interpretation",
            "SerializedName": "interpretation",
            "Description": "Interpretation of this anomalous timestamp.",
            "Type": {
             "$id": "123",
             "Kind": "array",
             "Name": "ArrayAnomalyInterpretation",
             "ValueType": {
              "$id": "124",
              "Kind": "model",
              "Name": "AnomalyInterpretation",
              "CrossLanguageDefinitionId": "AnomalyDetector.Multivariate.AnomalyInterpretation",
              "Usage": "Output,Json",
              "Description": "Interpretation of the anomalous timestamp.",
              "Properties": [
               {
                "$id": "125",
                "Name": "variable",
                "SerializedName": "variable",
                "Description": "Variable.",
                "Type": {
                 "$id": "126",
                 "Kind": "string",
                 "Name": "string",
                 "CrossLanguageDefinitionId": "TypeSpec.string"
                },
                "IsRequired": false,
                "IsReadOnly": false
               },
               {
                "$id": "127",
                "Name": "contributionScore",
                "SerializedName": "contributionScore",
                "Description": "This score shows the percentage contributing to the anomalous timestamp. A\nnumber between 0 and 1.",
                "Type": {
                 "$id": "128",
                 "Kind": "float32",
                 "Name": "float32",
                 "CrossLanguageDefinitionId": "TypeSpec.float32"
                },
                "IsRequired": false,
                "IsReadOnly": false
               },
               {
                "$id": "129",
                "Name": "correlationChanges",
                "SerializedName": "correlationChanges",
                "Description": "Correlation changes among the anomalous variables",
                "Type": {
                 "$id": "130",
                 "Kind": "model",
                 "Name": "CorrelationChanges",
                 "CrossLanguageDefinitionId": "AnomalyDetector.Multivariate.CorrelationChanges",
                 "Usage": "Output,Json",
                 "Description": "Correlation changes among the anomalous variables",
                 "Properties": [
                  {
                   "$id": "131",
                   "Name": "changedVariables",
                   "SerializedName": "changedVariables",
                   "Description": "The correlated variables that have correlation changes under an anomaly.",
                   "Type": {
                    "$id": "132",
                    "Kind": "array",
                    "Name": "Array",
                    "ValueType": {
                     "$id": "133",
                     "Kind": "string",
                     "Name": "string",
                     "CrossLanguageDefinitionId": "TypeSpec.string"
                    },
                    "CrossLanguageDefinitionId": "TypeSpec.Array"
                   },
                   "IsRequired": false,
                   "IsReadOnly": false
                  }
                 ]
                },
                "IsRequired": false,
                "IsReadOnly": false
               }
              ]
             },
             "CrossLanguageDefinitionId": "TypeSpec.Array"
            },
            "IsRequired": false,
            "IsReadOnly": false
           }
          ]
         },
         "IsRequired": false,
         "IsReadOnly": false
        },
        {
         "$id": "134",
         "Name": "errors",
         "SerializedName": "errors",
         "Description": "Error message for the current timestamp.",
         "Type": {
          "$id": "135",
          "Kind": "array",
          "Name": "ArrayErrorResponse",
          "ValueType": {
           "$ref": "76"
          },
          "CrossLanguageDefinitionId": "TypeSpec.Array"
         },
         "IsRequired": false,
         "IsReadOnly": false
        }
       ]
      },
      "CrossLanguageDefinitionId": "TypeSpec.Array"
     },
     "IsRequired": true,
     "IsReadOnly": false
    }
   ]
  },
  {
   "$ref": "72"
  },
  {
   "$ref": "76"
  },
  {
   "$ref": "83"
  },
  {
   "$ref": "97"
  },
  {
   "$ref": "110"
  },
  {
   "$ref": "115"
  },
  {
   "$ref": "124"
  },
  {
   "$ref": "130"
  },
  {
   "$id": "136",
   "Kind": "model",
   "Name": "ModelInfo",
   "CrossLanguageDefinitionId": "AnomalyDetector.Multivariate.ModelInfo",
   "Usage": "Input,Output,Json",
   "Description": "Training result of a model including its status, errors and diagnostics\ninformation.",
   "Properties": [
    {
     "$id": "137",
     "Name": "dataSource",
     "SerializedName": "dataSource",
     "Description": "Source link to the input data to indicate an accessible Azure storage Uri,\neither pointed to an Azure blob storage folder, or pointed to a CSV file in\nAzure blob storage based on you data schema selection. ",
     "Type": {
      "$id": "138",
      "Kind": "string",
      "Name": "string",
      "CrossLanguageDefinitionId": "TypeSpec.string"
     },
     "IsRequired": true,
     "IsReadOnly": false
    },
    {
     "$id": "139",
     "Name": "dataSchema",
     "SerializedName": "dataSchema",
     "Description": "Data schema of input data source: OneTable or MultiTable. The default\nDataSchema is OneTable.",
     "Type": {
      "$ref": "8"
     },
     "IsRequired": false,
     "IsReadOnly": false
    },
    {
     "$id": "140",
     "Name": "startTime",
     "SerializedName": "startTime",
     "Description": "A required field, indicating the start time of training data, which should be\ndate-time of ISO 8601 format.",
     "Type": {
      "$id": "141",
      "Kind": "utcDateTime",
      "Name": "utcDateTime",
      "Encode": "rfc3339",
      "WireType": {
       "$id": "142",
       "Kind": "string",
       "Name": "string",
       "CrossLanguageDefinitionId": "TypeSpec.string"
      },
      "CrossLanguageDefinitionId": "TypeSpec.utcDateTime"
     },
     "IsRequired": true,
     "IsReadOnly": false
    },
    {
     "$id": "143",
     "Name": "endTime",
     "SerializedName": "endTime",
     "Description": "A required field, indicating the end time of training data, which should be\ndate-time of ISO 8601 format.",
     "Type": {
      "$id": "144",
      "Kind": "utcDateTime",
      "Name": "utcDateTime",
      "Encode": "rfc3339",
      "WireType": {
       "$id": "145",
       "Kind": "string",
       "Name": "string",
       "CrossLanguageDefinitionId": "TypeSpec.string"
      },
      "CrossLanguageDefinitionId": "TypeSpec.utcDateTime"
     },
     "IsRequired": true,
     "IsReadOnly": false
    },
    {
     "$id": "146",
     "Name": "displayName",
     "SerializedName": "displayName",
     "Description": "An optional field. The display name of the model whose maximum length is 24\ncharacters.",
     "Type": {
      "$id": "147",
      "Kind": "string",
      "Name": "string",
      "CrossLanguageDefinitionId": "TypeSpec.string"
     },
     "IsRequired": false,
     "IsReadOnly": false
    },
    {
     "$id": "148",
     "Name": "slidingWindow",
     "SerializedName": "slidingWindow",
     "Description": "An optional field, indicating how many previous timestamps will be used to\ndetect whether the timestamp is anomaly or not. ",
     "Type": {
      "$id": "149",
      "Kind": "int32",
      "Name": "int32",
      "CrossLanguageDefinitionId": "TypeSpec.int32"
     },
     "IsRequired": false,
     "IsReadOnly": false
    },
    {
     "$id": "150",
     "Name": "alignPolicy",
     "SerializedName": "alignPolicy",
     "Description": "An optional field, indicating the manner to align multiple variables.",
     "Type": {
      "$id": "151",
      "Kind": "model",
      "Name": "AlignPolicy",
      "CrossLanguageDefinitionId": "AnomalyDetector.Multivariate.AlignPolicy",
      "Usage": "Input,Output,Json",
      "Description": "An optional field, indicating the manner to align multiple variables.",
      "Properties": [
       {
        "$id": "152",
        "Name": "alignMode",
        "SerializedName": "alignMode",
        "Description": "An optional field, indicating how to align different variables to the same\ntime-range. Either Inner or Outer. ",
        "Type": {
         "$ref": "12"
        },
        "IsRequired": false,
        "IsReadOnly": false
       },
       {
        "$id": "153",
        "Name": "fillNAMethod",
        "SerializedName": "fillNAMethod",
        "Description": "An optional field, indicating how missing values will be filled. One of\nPrevious, Subsequent, Linear, Zero, Fixed.",
        "Type": {
         "$ref": "16"
        },
        "IsRequired": false,
        "IsReadOnly": false
       },
       {
        "$id": "154",
        "Name": "paddingValue",
        "SerializedName": "paddingValue",
        "Description": "An optional field. Required when fillNAMethod is Fixed.",
        "Type": {
         "$id": "155",
         "Kind": "float32",
         "Name": "float32",
         "CrossLanguageDefinitionId": "TypeSpec.float32"
        },
        "IsRequired": false,
        "IsReadOnly": false
       }
      ]
     },
     "IsRequired": false,
     "IsReadOnly": false
    },
    {
     "$id": "156",
     "Name": "status",
     "SerializedName": "status",
     "Description": "Model status. One of CREATED, RUNNING, READY, and FAILED.",
     "Type": {
      "$ref": "23"
     },
     "IsRequired": false,
     "IsReadOnly": false
    },
    {
     "$id": "157",
     "Name": "errors",
     "SerializedName": "errors",
     "Description": "Error messages when failed to create a model.",
     "Type": {
      "$id": "158",
      "Kind": "array",
      "Name": "ArrayErrorResponse",
      "ValueType": {
       "$ref": "76"
      },
      "CrossLanguageDefinitionId": "TypeSpec.Array"
     },
     "IsRequired": false,
     "IsReadOnly": true
    },
    {
     "$id": "159",
     "Name": "diagnosticsInfo",
     "SerializedName": "diagnosticsInfo",
     "Description": "Diagnostics information to help inspect the states of model or variable.",
     "Type": {
      "$id": "160",
      "Kind": "model",
      "Name": "DiagnosticsInfo",
      "CrossLanguageDefinitionId": "AnomalyDetector.Multivariate.DiagnosticsInfo",
      "Usage": "Input,Output,Json",
      "Description": "Diagnostics information to help inspect the states of model or variable.",
      "Properties": [
       {
        "$id": "161",
        "Name": "modelState",
        "SerializedName": "modelState",
        "Description": "Model status.",
        "Type": {
         "$id": "162",
         "Kind": "model",
         "Name": "ModelState",
         "CrossLanguageDefinitionId": "AnomalyDetector.Multivariate.ModelState",
         "Usage": "Input,Output,Json",
         "Description": "Model status.",
         "Properties": [
          {
           "$id": "163",
           "Name": "epochIds",
           "SerializedName": "epochIds",
           "Description": "This indicates the number of passes of the entire training dataset the\nalgorithm has completed.",
           "Type": {
            "$id": "164",
            "Kind": "array",
            "Name": "Array",
            "ValueType": {
             "$id": "165",
             "Kind": "int32",
             "Name": "int32",
             "CrossLanguageDefinitionId": "TypeSpec.int32"
            },
            "CrossLanguageDefinitionId": "TypeSpec.Array"
           },
           "IsRequired": false,
           "IsReadOnly": false
          },
          {
           "$id": "166",
           "Name": "trainLosses",
           "SerializedName": "trainLosses",
           "Description": "List of metrics used to assess how the model fits the training data for each\nepoch.",
           "Type": {
            "$id": "167",
            "Kind": "array",
            "Name": "Array",
            "ValueType": {
             "$id": "168",
             "Kind": "float32",
             "Name": "float32",
             "CrossLanguageDefinitionId": "TypeSpec.float32"
            },
            "CrossLanguageDefinitionId": "TypeSpec.Array"
           },
           "IsRequired": false,
           "IsReadOnly": false
          },
          {
           "$id": "169",
           "Name": "validationLosses",
           "SerializedName": "validationLosses",
           "Description": "List of metrics used to assess how the model fits the validation set for each\nepoch.",
           "Type": {
            "$id": "170",
            "Kind": "array",
            "Name": "Array",
            "ValueType": {
             "$id": "171",
             "Kind": "float32",
             "Name": "float32",
             "CrossLanguageDefinitionId": "TypeSpec.float32"
            },
            "CrossLanguageDefinitionId": "TypeSpec.Array"
           },
           "IsRequired": false,
           "IsReadOnly": false
          },
          {
           "$id": "172",
           "Name": "latenciesInSeconds",
           "SerializedName": "latenciesInSeconds",
           "Description": "Latency for each epoch. ",
           "Type": {
            "$id": "173",
            "Kind": "array",
            "Name": "Array",
            "ValueType": {
             "$id": "174",
             "Kind": "float32",
             "Name": "float32",
             "CrossLanguageDefinitionId": "TypeSpec.float32"
            },
            "CrossLanguageDefinitionId": "TypeSpec.Array"
           },
           "IsRequired": false,
           "IsReadOnly": false
          }
         ]
        },
        "IsRequired": false,
        "IsReadOnly": false
       },
       {
        "$id": "175",
        "Name": "variableStates",
        "SerializedName": "variableStates",
        "Description": "Variable Status.",
        "Type": {
         "$id": "176",
         "Kind": "array",
         "Name": "ArrayVariableState",
         "ValueType": {
          "$ref": "83"
         },
         "CrossLanguageDefinitionId": "TypeSpec.Array"
        },
        "IsRequired": false,
        "IsReadOnly": false
       }
      ]
     },
     "IsRequired": false,
     "IsReadOnly": false
    }
   ]
  },
  {
   "$ref": "151"
  },
  {
   "$ref": "160"
  },
  {
   "$ref": "162"
  },
  {
   "$id": "177",
   "Kind": "model",
   "Name": "AnomalyDetectionModel",
   "CrossLanguageDefinitionId": "AnomalyDetector.Multivariate.AnomalyDetectionModel",
   "Usage": "Output,Json",
   "Description": "Response of getting a model.",
   "Properties": [
    {
     "$id": "178",
     "Name": "modelId",
     "SerializedName": "modelId",
     "Description": "Model identifier.",
     "Type": {
      "$id": "179",
      "Kind": "string",
      "Name": "uuid",
      "CrossLanguageDefinitionId": "Azure.Core.uuid",
      "BaseType": {
       "$id": "180",
       "Kind": "string",
       "Name": "string",
       "CrossLanguageDefinitionId": "TypeSpec.string"
      }
     },
     "IsRequired": true,
     "IsReadOnly": true
    },
    {
     "$id": "181",
     "Name": "createdTime",
     "SerializedName": "createdTime",
     "Description": "Date and time (UTC) when the model was created.",
     "Type": {
      "$id": "182",
      "Kind": "utcDateTime",
      "Name": "utcDateTime",
      "Encode": "rfc3339",
      "WireType": {
       "$id": "183",
       "Kind": "string",
       "Name": "string",
       "CrossLanguageDefinitionId": "TypeSpec.string"
      },
      "CrossLanguageDefinitionId": "TypeSpec.utcDateTime"
     },
     "IsRequired": true,
     "IsReadOnly": false
    },
    {
     "$id": "184",
     "Name": "lastUpdatedTime",
     "SerializedName": "lastUpdatedTime",
     "Description": "Date and time (UTC) when the model was last updated.",
     "Type": {
      "$id": "185",
      "Kind": "utcDateTime",
      "Name": "utcDateTime",
      "Encode": "rfc3339",
      "WireType": {
       "$id": "186",
       "Kind": "string",
       "Name": "string",
       "CrossLanguageDefinitionId": "TypeSpec.string"
      },
      "CrossLanguageDefinitionId": "TypeSpec.utcDateTime"
     },
     "IsRequired": true,
     "IsReadOnly": false
    },
    {
     "$id": "187",
     "Name": "modelInfo",
     "SerializedName": "modelInfo",
     "Description": "Training result of a model including its status, errors and diagnostics\ninformation.",
     "Type": {
      "$ref": "136"
     },
     "IsRequired": false,
     "IsReadOnly": false
    }
   ]
  },
  {
   "$id": "188",
   "Kind": "model",
   "Name": "ModelList",
   "CrossLanguageDefinitionId": "AnomalyDetector.Multivariate.ModelList",
   "Usage": "Output,Json",
   "Description": "Response of listing models.",
   "Properties": [
    {
     "$id": "189",
     "Name": "models",
     "SerializedName": "models",
     "Description": "List of models.",
     "Type": {
      "$id": "190",
      "Kind": "array",
      "Name": "ArrayAnomalyDetectionModel",
      "ValueType": {
       "$ref": "177"
      },
      "CrossLanguageDefinitionId": "TypeSpec.Array"
     },
     "IsRequired": true,
     "IsReadOnly": false
    },
    {
     "$id": "191",
     "Name": "currentCount",
     "SerializedName": "currentCount",
     "Description": "Number of trained multivariate models.",
     "Type": {
      "$id": "192",
      "Kind": "int32",
      "Name": "int32",
      "CrossLanguageDefinitionId": "TypeSpec.int32"
     },
     "IsRequired": true,
     "IsReadOnly": false
    },
    {
     "$id": "193",
     "Name": "maxCount",
     "SerializedName": "maxCount",
     "Description": "Maximum number of models that can be trained for this Anomaly Detector resource.",
     "Type": {
      "$id": "194",
      "Kind": "int32",
      "Name": "int32",
      "CrossLanguageDefinitionId": "TypeSpec.int32"
     },
     "IsRequired": true,
     "IsReadOnly": false
    },
    {
     "$id": "195",
     "Name": "nextLink",
     "SerializedName": "nextLink",
     "Description": "The link to fetch more models.",
     "Type": {
      "$id": "196",
      "Kind": "string",
      "Name": "string",
      "CrossLanguageDefinitionId": "TypeSpec.string"
     },
     "IsRequired": false,
     "IsReadOnly": false
    }
   ]
  },
  {
   "$id": "197",
   "Kind": "model",
   "Name": "MultivariateLastDetectionOptions",
   "CrossLanguageDefinitionId": "AnomalyDetector.Multivariate.MultivariateLastDetectionOptions",
   "Usage": "Input,Json",
   "Description": "Request of last detection.",
   "Properties": [
    {
     "$id": "198",
     "Name": "variables",
     "SerializedName": "variables",
     "Description": "This contains the inference data, including the name, timestamps(ISO 8601) and\nvalues of variables.",
     "Type": {
      "$id": "199",
      "Kind": "array",
      "Name": "ArrayVariableValues",
      "ValueType": {
       "$id": "200",
       "Kind": "model",
       "Name": "VariableValues",
       "CrossLanguageDefinitionId": "AnomalyDetector.Multivariate.VariableValues",
       "Usage": "Input,Json",
       "Description": "Variable values.",
       "Properties": [
        {
         "$id": "201",
         "Name": "variable",
         "SerializedName": "variable",
         "Description": "Variable name of last detection request.",
         "Type": {
          "$id": "202",
          "Kind": "string",
          "Name": "string",
          "CrossLanguageDefinitionId": "TypeSpec.string"
         },
         "IsRequired": true,
         "IsReadOnly": false
        },
        {
         "$id": "203",
         "Name": "timestamps",
         "SerializedName": "timestamps",
         "Description": "Timestamps of last detection request",
         "Type": {
          "$id": "204",
          "Kind": "array",
          "Name": "Array",
          "ValueType": {
           "$id": "205",
           "Kind": "string",
           "Name": "string",
           "CrossLanguageDefinitionId": "TypeSpec.string"
          },
          "CrossLanguageDefinitionId": "TypeSpec.Array"
         },
         "IsRequired": true,
         "IsReadOnly": false
        },
        {
         "$id": "206",
         "Name": "values",
         "SerializedName": "values",
         "Description": "Values of variables.",
         "Type": {
          "$id": "207",
          "Kind": "array",
          "Name": "Array",
          "ValueType": {
           "$id": "208",
           "Kind": "float32",
           "Name": "float32",
           "CrossLanguageDefinitionId": "TypeSpec.float32"
          },
          "CrossLanguageDefinitionId": "TypeSpec.Array"
         },
         "IsRequired": true,
         "IsReadOnly": false
        }
       ]
      },
      "CrossLanguageDefinitionId": "TypeSpec.Array"
     },
     "IsRequired": true,
     "IsReadOnly": false
    },
    {
     "$id": "209",
     "Name": "topContributorCount",
     "SerializedName": "topContributorCount",
     "Description": "An optional field, which is used to specify the number of top contributed\nvariables for one anomalous timestamp in the response. The default number is\n10.",
     "Type": {
      "$id": "210",
      "Kind": "int32",
      "Name": "int32",
      "CrossLanguageDefinitionId": "TypeSpec.int32"
     },
     "IsRequired": true,
     "IsReadOnly": false
    }
   ]
  },
  {
   "$ref": "200"
  },
  {
   "$id": "211",
   "Kind": "model",
   "Name": "MultivariateLastDetectionResult",
   "CrossLanguageDefinitionId": "AnomalyDetector.Multivariate.MultivariateLastDetectionResult",
   "Usage": "Output,Json",
   "Description": "Results of last detection.",
   "Properties": [
    {
     "$id": "212",
     "Name": "variableStates",
     "SerializedName": "variableStates",
     "Description": "Variable Status.",
     "Type": {
      "$id": "213",
      "Kind": "array",
      "Name": "ArrayVariableState",
      "ValueType": {
       "$ref": "83"
      },
      "CrossLanguageDefinitionId": "TypeSpec.Array"
     },
     "IsRequired": false,
     "IsReadOnly": false
    },
    {
     "$id": "214",
     "Name": "results",
     "SerializedName": "results",
     "Description": "Anomaly status and information.",
     "Type": {
      "$id": "215",
      "Kind": "array",
      "Name": "ArrayAnomalyState",
      "ValueType": {
       "$ref": "110"
      },
      "CrossLanguageDefinitionId": "TypeSpec.Array"
     },
     "IsRequired": false,
     "IsReadOnly": false
    }
   ]
  },
  {
   "$id": "216",
   "Kind": "model",
   "Name": "UnivariateDetectionOptions",
   "CrossLanguageDefinitionId": "AnomalyDetector.Univariate.UnivariateDetectionOptions",
   "Usage": "Input,Json",
   "Description": "The request of entire or last anomaly detection.",
   "Properties": [
    {
     "$id": "217",
     "Name": "series",
     "SerializedName": "series",
     "Description": "Time series data points. Points should be sorted by timestamp in ascending\norder to match the anomaly detection result. If the data is not sorted\ncorrectly or there is duplicated timestamp, the API will not work. In such\ncase, an error message will be returned.",
     "Type": {
      "$id": "218",
      "Kind": "array",
      "Name": "ArrayTimeSeriesPoint",
      "ValueType": {
       "$id": "219",
       "Kind": "model",
       "Name": "TimeSeriesPoint",
       "CrossLanguageDefinitionId": "AnomalyDetector.Univariate.TimeSeriesPoint",
       "Usage": "Input,Json",
       "Description": "The definition of input timeseries points.",
       "Properties": [
        {
         "$id": "220",
         "Name": "timestamp",
         "SerializedName": "timestamp",
         "Description": "Optional argument, timestamp of a data point (ISO8601 format).",
         "Type": {
          "$id": "221",
          "Kind": "utcDateTime",
          "Name": "utcDateTime",
          "Encode": "rfc3339",
          "WireType": {
           "$id": "222",
           "Kind": "string",
           "Name": "string",
           "CrossLanguageDefinitionId": "TypeSpec.string"
          },
          "CrossLanguageDefinitionId": "TypeSpec.utcDateTime"
         },
         "IsRequired": false,
         "IsReadOnly": false
        },
        {
         "$id": "223",
         "Name": "value",
         "SerializedName": "value",
         "Description": "The measurement of that point, should be float.",
         "Type": {
          "$id": "224",
          "Kind": "float32",
          "Name": "float32",
          "CrossLanguageDefinitionId": "TypeSpec.float32"
         },
         "IsRequired": true,
         "IsReadOnly": false
        }
       ]
      },
      "CrossLanguageDefinitionId": "TypeSpec.Array"
     },
     "IsRequired": true,
     "IsReadOnly": false
    },
    {
     "$id": "225",
     "Name": "granularity",
     "SerializedName": "granularity",
     "Description": "Optional argument, can be one of yearly, monthly, weekly, daily, hourly,\nminutely, secondly, microsecond or none. If granularity is not present, it will\nbe none by default. If granularity is none, the timestamp property in time\nseries point can be absent.",
     "Type": {
      "$ref": "29"
     },
     "IsRequired": false,
     "IsReadOnly": false
    },
    {
     "$id": "226",
     "Name": "customInterval",
     "SerializedName": "customInterval",
     "Description": "Custom Interval is used to set non-standard time interval, for example, if the\nseries is 5 minutes, request can be set as {\"granularity\":\"minutely\",\n\"customInterval\":5}.",
     "Type": {
      "$id": "227",
      "Kind": "int32",
      "Name": "int32",
      "CrossLanguageDefinitionId": "TypeSpec.int32"
     },
     "IsRequired": false,
     "IsReadOnly": false
    },
    {
     "$id": "228",
     "Name": "period",
     "SerializedName": "period",
     "Description": "Optional argument, periodic value of a time series. If the value is null or\ndoes not present, the API will determine the period automatically.",
     "Type": {
      "$id": "229",
      "Kind": "int32",
      "Name": "int32",
      "CrossLanguageDefinitionId": "TypeSpec.int32"
     },
     "IsRequired": false,
     "IsReadOnly": false
    },
    {
     "$id": "230",
     "Name": "maxAnomalyRatio",
     "SerializedName": "maxAnomalyRatio",
     "Description": "Optional argument, advanced model parameter, max anomaly ratio in a time series.",
     "Type": {
      "$id": "231",
      "Kind": "float32",
      "Name": "float32",
      "CrossLanguageDefinitionId": "TypeSpec.float32"
     },
     "IsRequired": false,
     "IsReadOnly": false
    },
    {
     "$id": "232",
     "Name": "sensitivity",
     "SerializedName": "sensitivity",
     "Description": "Optional argument, advanced model parameter, between 0-99, the lower the value\nis, the larger the margin value will be which means less anomalies will be\naccepted.",
     "Type": {
      "$id": "233",
      "Kind": "int32",
      "Name": "int32",
      "CrossLanguageDefinitionId": "TypeSpec.int32"
     },
     "IsRequired": false,
     "IsReadOnly": false
    },
    {
     "$id": "234",
     "Name": "imputeMode",
     "SerializedName": "imputeMode",
     "Description": "Used to specify how to deal with missing values in the input series, it's used\nwhen granularity is not \"none\".",
     "Type": {
      "$ref": "40"
     },
     "IsRequired": false,
     "IsReadOnly": false
    },
    {
     "$id": "235",
     "Name": "imputeFixedValue",
     "SerializedName": "imputeFixedValue",
     "Description": "Used to specify the value to fill, it's used when granularity is not \"none\"\nand imputeMode is \"fixed\".",
     "Type": {
      "$id": "236",
      "Kind": "float32",
      "Name": "float32",
      "CrossLanguageDefinitionId": "TypeSpec.float32"
     },
     "IsRequired": false,
     "IsReadOnly": false
    }
   ]
  },
  {
   "$ref": "219"
  },
  {
   "$id": "237",
   "Kind": "model",
   "Name": "UnivariateEntireDetectionResult",
   "CrossLanguageDefinitionId": "AnomalyDetector.Univariate.UnivariateEntireDetectionResult",
   "Usage": "Output,Json",
   "Description": "The response of entire anomaly detection.",
   "Properties": [
    {
     "$id": "238",
     "Name": "period",
     "SerializedName": "period",
     "Description": "Frequency extracted from the series, zero means no recurrent pattern has been\nfound.",
     "Type": {
      "$id": "239",
      "Kind": "int32",
      "Name": "int32",
      "CrossLanguageDefinitionId": "TypeSpec.int32"
     },
     "IsRequired": true,
     "IsReadOnly": false
    },
    {
     "$id": "240",
     "Name": "expectedValues",
     "SerializedName": "expectedValues",
     "Description": "ExpectedValues contain expected value for each input point. The index of the\narray is consistent with the input series.",
     "Type": {
      "$id": "241",
      "Kind": "array",
      "Name": "Array",
      "ValueType": {
       "$id": "242",
       "Kind": "float32",
       "Name": "float32",
       "CrossLanguageDefinitionId": "TypeSpec.float32"
      },
      "CrossLanguageDefinitionId": "TypeSpec.Array"
     },
     "IsRequired": true,
     "IsReadOnly": false
    },
    {
     "$id": "243",
     "Name": "upperMargins",
     "SerializedName": "upperMargins",
     "Description": "UpperMargins contain upper margin of each input point. UpperMargin is used to\ncalculate upperBoundary, which equals to expectedValue + (100 -\nmarginScale)*upperMargin. Anomalies in response can be filtered by\nupperBoundary and lowerBoundary. By adjusting marginScale value, less\nsignificant anomalies can be filtered in client side. The index of the array is\nconsistent with the input series.",
     "Type": {
      "$id": "244",
      "Kind": "array",
      "Name": "Array",
      "ValueType": {
       "$id": "245",
       "Kind": "float32",
       "Name": "float32",
       "CrossLanguageDefinitionId": "TypeSpec.float32"
      },
      "CrossLanguageDefinitionId": "TypeSpec.Array"
     },
     "IsRequired": true,
     "IsReadOnly": false
    },
    {
     "$id": "246",
     "Name": "lowerMargins",
     "SerializedName": "lowerMargins",
     "Description": "LowerMargins contain lower margin of each input point. LowerMargin is used to\ncalculate lowerBoundary, which equals to expectedValue - (100 -\nmarginScale)*lowerMargin. Points between the boundary can be marked as normal\nones in client side. The index of the array is consistent with the input\nseries.",
     "Type": {
      "$id": "247",
      "Kind": "array",
      "Name": "Array",
      "ValueType": {
       "$id": "248",
       "Kind": "float32",
       "Name": "float32",
       "CrossLanguageDefinitionId": "TypeSpec.float32"
      },
      "CrossLanguageDefinitionId": "TypeSpec.Array"
     },
     "IsRequired": true,
     "IsReadOnly": false
    },
    {
     "$id": "249",
     "Name": "isAnomaly",
     "SerializedName": "isAnomaly",
     "Description": "IsAnomaly contains anomaly properties for each input point. True means an\nanomaly either negative or positive has been detected. The index of the array\nis consistent with the input series.",
     "Type": {
      "$id": "250",
      "Kind": "array",
      "Name": "Array",
      "ValueType": {
       "$id": "251",
       "Kind": "boolean",
       "Name": "boolean",
       "CrossLanguageDefinitionId": "TypeSpec.boolean"
      },
      "CrossLanguageDefinitionId": "TypeSpec.Array"
     },
     "IsRequired": true,
     "IsReadOnly": false
    },
    {
     "$id": "252",
     "Name": "isNegativeAnomaly",
     "SerializedName": "isNegativeAnomaly",
     "Description": "IsNegativeAnomaly contains anomaly status in negative direction for each input\npoint. True means a negative anomaly has been detected. A negative anomaly\nmeans the point is detected as an anomaly and its real value is smaller than\nthe expected one. The index of the array is consistent with the input series.",
     "Type": {
      "$id": "253",
      "Kind": "array",
      "Name": "Array",
      "ValueType": {
       "$id": "254",
       "Kind": "boolean",
       "Name": "boolean",
       "CrossLanguageDefinitionId": "TypeSpec.boolean"
      },
      "CrossLanguageDefinitionId": "TypeSpec.Array"
     },
     "IsRequired": true,
     "IsReadOnly": false
    },
    {
     "$id": "255",
     "Name": "isPositiveAnomaly",
     "SerializedName": "isPositiveAnomaly",
     "Description": "IsPositiveAnomaly contain anomaly status in positive direction for each input\npoint. True means a positive anomaly has been detected. A positive anomaly\nmeans the point is detected as an anomaly and its real value is larger than the\nexpected one. The index of the array is consistent with the input series.",
     "Type": {
      "$id": "256",
      "Kind": "array",
      "Name": "Array",
      "ValueType": {
       "$id": "257",
       "Kind": "boolean",
       "Name": "boolean",
       "CrossLanguageDefinitionId": "TypeSpec.boolean"
      },
      "CrossLanguageDefinitionId": "TypeSpec.Array"
     },
     "IsRequired": true,
     "IsReadOnly": false
    },
    {
     "$id": "258",
     "Name": "severity",
     "SerializedName": "severity",
     "Description": "The severity score for each input point. The larger the value is, the more\nsever the anomaly is. For normal points, the \"severity\" is always 0.",
     "Type": {
      "$id": "259",
      "Kind": "array",
      "Name": "Array",
      "ValueType": {
       "$id": "260",
       "Kind": "float32",
       "Name": "float32",
       "CrossLanguageDefinitionId": "TypeSpec.float32"
      },
      "CrossLanguageDefinitionId": "TypeSpec.Array"
     },
     "IsRequired": false,
     "IsReadOnly": false
    }
   ]
  },
  {
   "$id": "261",
   "Kind": "model",
   "Name": "AnomalyDetectorError",
   "CrossLanguageDefinitionId": "AnomalyDetector.Univariate.AnomalyDetectorError",
   "Usage": "Output,Error,Json",
   "Description": "Error information returned by the API.",
   "Properties": [
    {
     "$id": "262",
     "Name": "code",
     "SerializedName": "code",
     "Description": "The error code.",
     "Type": {
      "$ref": "48"
     },
     "IsRequired": false,
     "IsReadOnly": false
    },
    {
     "$id": "263",
     "Name": "message",
     "SerializedName": "message",
     "Description": "A message explaining the error reported by the service.",
     "Type": {
      "$id": "264",
      "Kind": "string",
      "Name": "string",
      "CrossLanguageDefinitionId": "TypeSpec.string"
     },
     "IsRequired": false,
     "IsReadOnly": false
    }
   ]
  },
  {
   "$id": "265",
   "Kind": "model",
   "Name": "UnivariateLastDetectionResult",
   "CrossLanguageDefinitionId": "AnomalyDetector.Univariate.UnivariateLastDetectionResult",
   "Usage": "Output,Json",
   "Description": "The response of last anomaly detection.",
   "Properties": [
    {
     "$id": "266",
     "Name": "period",
     "SerializedName": "period",
     "Description": "Frequency extracted from the series, zero means no recurrent pattern has been\nfound.",
     "Type": {
      "$id": "267",
      "Kind": "int32",
      "Name": "int32",
      "CrossLanguageDefinitionId": "TypeSpec.int32"
     },
     "IsRequired": true,
     "IsReadOnly": false
    },
    {
     "$id": "268",
     "Name": "suggestedWindow",
     "SerializedName": "suggestedWindow",
     "Description": "Suggested input series points needed for detecting the latest point.",
     "Type": {
      "$id": "269",
      "Kind": "int32",
      "Name": "int32",
      "CrossLanguageDefinitionId": "TypeSpec.int32"
     },
     "IsRequired": true,
     "IsReadOnly": false
    },
    {
     "$id": "270",
     "Name": "expectedValue",
     "SerializedName": "expectedValue",
     "Description": "Expected value of the latest point.",
     "Type": {
      "$id": "271",
      "Kind": "float32",
      "Name": "float32",
      "CrossLanguageDefinitionId": "TypeSpec.float32"
     },
     "IsRequired": true,
     "IsReadOnly": false
    },
    {
     "$id": "272",
     "Name": "upperMargin",
     "SerializedName": "upperMargin",
     "Description": "Upper margin of the latest point. UpperMargin is used to calculate\nupperBoundary, which equals to expectedValue + (100 - marginScale)*upperMargin.\nIf the value of latest point is between upperBoundary and lowerBoundary, it\nshould be treated as normal value. By adjusting marginScale value, anomaly\nstatus of latest point can be changed.",
     "Type": {
      "$id": "273",
      "Kind": "float32",
      "Name": "float32",
      "CrossLanguageDefinitionId": "TypeSpec.float32"
     },
     "IsRequired": true,
     "IsReadOnly": false
    },
    {
     "$id": "274",
     "Name": "lowerMargin",
     "SerializedName": "lowerMargin",
     "Description": "Lower margin of the latest point. LowerMargin is used to calculate\nlowerBoundary, which equals to expectedValue - (100 - marginScale)*lowerMargin.\n",
     "Type": {
      "$id": "275",
      "Kind": "float32",
      "Name": "float32",
      "CrossLanguageDefinitionId": "TypeSpec.float32"
     },
     "IsRequired": true,
     "IsReadOnly": false
    },
    {
     "$id": "276",
     "Name": "isAnomaly",
     "SerializedName": "isAnomaly",
     "Description": "Anomaly status of the latest point, true means the latest point is an anomaly\neither in negative direction or positive direction.",
     "Type": {
      "$id": "277",
      "Kind": "boolean",
      "Name": "boolean",
      "CrossLanguageDefinitionId": "TypeSpec.boolean"
     },
     "IsRequired": true,
     "IsReadOnly": false
    },
    {
     "$id": "278",
     "Name": "isNegativeAnomaly",
     "SerializedName": "isNegativeAnomaly",
     "Description": "Anomaly status in negative direction of the latest point. True means the latest\npoint is an anomaly and its real value is smaller than the expected one.",
     "Type": {
      "$id": "279",
      "Kind": "boolean",
      "Name": "boolean",
      "CrossLanguageDefinitionId": "TypeSpec.boolean"
     },
     "IsRequired": true,
     "IsReadOnly": false
    },
    {
     "$id": "280",
     "Name": "isPositiveAnomaly",
     "SerializedName": "isPositiveAnomaly",
     "Description": "Anomaly status in positive direction of the latest point. True means the latest\npoint is an anomaly and its real value is larger than the expected one.",
     "Type": {
      "$id": "281",
      "Kind": "boolean",
      "Name": "boolean",
      "CrossLanguageDefinitionId": "TypeSpec.boolean"
     },
     "IsRequired": true,
     "IsReadOnly": false
    },
    {
     "$id": "282",
     "Name": "severity",
     "SerializedName": "severity",
     "Description": "The severity score for the last input point. The larger the value is, the more\nsever the anomaly is. For normal points, the \"severity\" is always 0.",
     "Type": {
      "$id": "283",
      "Kind": "float32",
      "Name": "float32",
      "CrossLanguageDefinitionId": "TypeSpec.float32"
     },
     "IsRequired": false,
     "IsReadOnly": false
    }
   ]
  },
  {
   "$id": "284",
   "Kind": "model",
   "Name": "UnivariateChangePointDetectionOptions",
   "CrossLanguageDefinitionId": "AnomalyDetector.Univariate.UnivariateChangePointDetectionOptions",
   "Usage": "Input,Json",
   "Description": "The request of change point detection.",
   "Properties": [
    {
     "$id": "285",
     "Name": "series",
     "SerializedName": "series",
     "Description": "Time series data points. Points should be sorted by timestamp in ascending\norder to match the change point detection result.",
     "Type": {
      "$id": "286",
      "Kind": "array",
      "Name": "ArrayTimeSeriesPoint",
      "ValueType": {
       "$ref": "219"
      },
      "CrossLanguageDefinitionId": "TypeSpec.Array"
     },
     "IsRequired": true,
     "IsReadOnly": false
    },
    {
     "$id": "287",
     "Name": "granularity",
     "SerializedName": "granularity",
     "Description": "Can only be one of yearly, monthly, weekly, daily, hourly, minutely or\nsecondly. Granularity is used for verify whether input series is valid.",
     "Type": {
      "$ref": "29"
     },
     "IsRequired": true,
     "IsReadOnly": false
    },
    {
     "$id": "288",
     "Name": "customInterval",
     "SerializedName": "customInterval",
     "Description": "Custom Interval is used to set non-standard time interval, for example, if the\nseries is 5 minutes, request can be set as {\"granularity\":\"minutely\",\n\"customInterval\":5}.",
     "Type": {
      "$id": "289",
      "Kind": "int32",
      "Name": "int32",
      "CrossLanguageDefinitionId": "TypeSpec.int32"
     },
     "IsRequired": false,
     "IsReadOnly": false
    },
    {
     "$id": "290",
     "Name": "period",
     "SerializedName": "period",
     "Description": "Optional argument, periodic value of a time series. If the value is null or\ndoes not present, the API will determine the period automatically.",
     "Type": {
      "$id": "291",
      "Kind": "int32",
      "Name": "int32",
      "CrossLanguageDefinitionId": "TypeSpec.int32"
     },
     "IsRequired": false,
     "IsReadOnly": false
    },
    {
     "$id": "292",
     "Name": "stableTrendWindow",
     "SerializedName": "stableTrendWindow",
     "Description": "Optional argument, advanced model parameter, a default stableTrendWindow will\nbe used in detection.",
     "Type": {
      "$id": "293",
      "Kind": "int32",
      "Name": "int32",
      "CrossLanguageDefinitionId": "TypeSpec.int32"
     },
     "IsRequired": false,
     "IsReadOnly": false
    },
    {
     "$id": "294",
     "Name": "threshold",
     "SerializedName": "threshold",
     "Description": "Optional argument, advanced model parameter, between 0.0-1.0, the lower the\nvalue is, the larger the trend error will be which means less change point will\nbe accepted.",
     "Type": {
      "$id": "295",
      "Kind": "float32",
      "Name": "float32",
      "CrossLanguageDefinitionId": "TypeSpec.float32"
     },
     "IsRequired": false,
     "IsReadOnly": false
    }
   ]
  },
  {
   "$id": "296",
   "Kind": "model",
   "Name": "UnivariateChangePointDetectionResult",
   "CrossLanguageDefinitionId": "AnomalyDetector.Univariate.UnivariateChangePointDetectionResult",
   "Usage": "Output,Json",
   "Description": "The response of change point detection.",
   "Properties": [
    {
     "$id": "297",
     "Name": "period",
     "SerializedName": "period",
     "Description": "Frequency extracted from the series, zero means no recurrent pattern has been\nfound.",
     "Type": {
      "$id": "298",
      "Kind": "int32",
      "Name": "int32",
      "CrossLanguageDefinitionId": "TypeSpec.int32"
     },
     "IsRequired": false,
     "IsReadOnly": true
    },
    {
     "$id": "299",
     "Name": "isChangePoint",
     "SerializedName": "isChangePoint",
     "Description": "isChangePoint contains change point properties for each input point. True means\nan anomaly either negative or positive has been detected. The index of the\narray is consistent with the input series.",
     "Type": {
      "$id": "300",
      "Kind": "array",
      "Name": "Array",
      "ValueType": {
       "$id": "301",
       "Kind": "boolean",
       "Name": "boolean",
       "CrossLanguageDefinitionId": "TypeSpec.boolean"
      },
      "CrossLanguageDefinitionId": "TypeSpec.Array"
     },
     "IsRequired": false,
     "IsReadOnly": false
    },
    {
     "$id": "302",
     "Name": "confidenceScores",
     "SerializedName": "confidenceScores",
     "Description": "the change point confidence of each point",
     "Type": {
      "$id": "303",
      "Kind": "array",
      "Name": "Array",
      "ValueType": {
       "$id": "304",
       "Kind": "float32",
       "Name": "float32",
       "CrossLanguageDefinitionId": "TypeSpec.float32"
      },
      "CrossLanguageDefinitionId": "TypeSpec.Array"
     },
     "IsRequired": false,
     "IsReadOnly": false
    }
   ]
  }
 ],
 "Clients": [
  {
   "$id": "305",
   "Name": "AnomalyDetectorClient",
   "Description": "The Anomaly Detector API detects anomalies automatically in time series data.\nIt supports two kinds of mode, one is for stateless using, another is for\nstateful using. In stateless mode, there are three functionalities. Entire\nDetect is for detecting the whole series with model trained by the time series,\nLast Detect is detecting last point with model trained by points before.\nChangePoint Detect is for detecting trend changes in time series. In stateful\nmode, user can store time series, the stored time series will be used for\ndetection anomalies. Under this mode, user can still use the above three\nfunctionalities by only giving a time range without preparing time series in\nclient side. Besides the above three functionalities, stateful model also\nprovide group based detection and labeling service. By leveraging labeling\nservice user can provide labels for each detection result, these labels will be\nused for retuning or regenerating detection models. Inconsistency detection is\na kind of group based detection, this detection will find inconsistency ones in\na set of time series. By using anomaly detector service, business customers can\ndiscover incidents and establish a logic flow for root cause analysis.",
   "Operations": [],
   "Protocol": {
    "$id": "306"
   },
   "Parameters": [
    {
     "$id": "307",
     "Name": "Endpoint",
     "NameInRequest": "Endpoint",
     "Description": "Supported Cognitive Services endpoints (protocol and hostname, for example:\nhttps://westus2.api.cognitive.microsoft.com).",
     "Type": {
      "$id": "308",
      "Kind": "url",
      "Name": "url",
      "CrossLanguageDefinitionId": "TypeSpec.url"
     },
     "Location": "Uri",
     "IsApiVersion": false,
     "IsResourceParameter": false,
     "IsContentType": false,
     "IsRequired": true,
     "IsEndpoint": true,
     "SkipUrlEncoding": false,
     "Explode": false,
     "Kind": "Client"
    },
    {
     "$id": "309",
     "Name": "ApiVersion",
     "NameInRequest": "ApiVersion",
     "Description": "Api Version",
     "Type": {
      "$ref": "61"
     },
     "Location": "Uri",
     "IsApiVersion": true,
     "IsResourceParameter": false,
     "IsContentType": false,
     "IsRequired": true,
     "IsEndpoint": false,
     "SkipUrlEncoding": false,
     "Explode": false,
     "Kind": "Client",
     "DefaultValue": {
      "$id": "310",
      "Type": {
       "$id": "311",
       "Kind": "string",
       "Name": "string",
       "CrossLanguageDefinitionId": "TypeSpec.string"
      },
      "Value": "v1.1"
     }
    }
   ]
  },
  {
   "$id": "312",
   "Name": "Univariate",
   "Operations": [
    {
     "$id": "313",
     "Name": "DetectUnivariateEntireSeries",
     "ResourceName": "Univariate",
     "Summary": "Detect anomalies for the entire series in batch.",
     "Description": "This operation generates a model with an entire series, each point is detected\nwith the same model. With this method, points before and after a certain point\nare used to determine whether it is an anomaly. The entire detection can give\nuser an overall status of the time series.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "314",
       "Name": "Endpoint",
       "NameInRequest": "Endpoint",
       "Description": "Supported Cognitive Services endpoints (protocol and hostname, for example:\nhttps://westus2.api.cognitive.microsoft.com).",
       "Type": {
        "$id": "315",
        "Kind": "url",
        "Name": "url",
        "CrossLanguageDefinitionId": "TypeSpec.url"
       },
       "Location": "Uri",
       "IsApiVersion": false,
       "IsResourceParameter": false,
       "IsContentType": false,
       "IsRequired": true,
       "IsEndpoint": true,
       "SkipUrlEncoding": false,
       "Explode": false,
       "Kind": "Client"
      },
      {
       "$id": "316",
       "Name": "ApiVersion",
       "NameInRequest": "ApiVersion",
       "Description": "Api Version",
       "Type": {
        "$ref": "61"
       },
       "Location": "Uri",
       "IsApiVersion": true,
       "IsResourceParameter": false,
       "IsContentType": false,
       "IsRequired": true,
       "IsEndpoint": false,
       "SkipUrlEncoding": false,
       "Explode": false,
       "Kind": "Client",
       "DefaultValue": {
        "$id": "317",
        "Type": {
         "$id": "318",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "v1.1"
       }
      },
      {
       "$id": "319",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Description": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "320",
        "Kind": "constant",
        "ValueType": {
         "$id": "321",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "application/json"
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant"
      },
      {
       "$id": "322",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "323",
        "Kind": "constant",
        "ValueType": {
         "$id": "324",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "application/json"
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant"
      },
      {
       "$id": "325",
       "Name": "options",
       "NameInRequest": "options",
       "Description": "Method of univariate anomaly detection.",
       "Type": {
        "$ref": "216"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method"
      }
     ],
     "Responses": [
      {
       "$id": "326",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "237"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{Endpoint}/anomalydetector/{ApiVersion}",
     "Path": "/timeseries/entire/detect",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true
    },
    {
     "$id": "327",
     "Name": "DetectUnivariateLastPoint",
     "ResourceName": "Univariate",
     "Summary": "Detect anomaly status of the latest point in time series.",
     "Description": "This operation generates a model using the points that you sent into the API,\nand based on all data to determine whether the last point is anomalous.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$ref": "314"
      },
      {
       "$ref": "316"
      },
      {
       "$id": "328",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Description": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "329",
        "Kind": "constant",
        "ValueType": {
         "$id": "330",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "application/json"
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant"
      },
      {
       "$id": "331",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "332",
        "Kind": "constant",
        "ValueType": {
         "$id": "333",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "application/json"
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant"
      },
      {
       "$id": "334",
       "Name": "options",
       "NameInRequest": "options",
       "Description": "Method of univariate anomaly detection.",
       "Type": {
        "$ref": "216"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method"
      }
     ],
     "Responses": [
      {
       "$id": "335",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "265"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{Endpoint}/anomalydetector/{ApiVersion}",
     "Path": "/timeseries/last/detect",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true
    },
    {
     "$id": "336",
     "Name": "DetectUnivariateChangePoint",
     "ResourceName": "Univariate",
     "Summary": "Detect change point for the entire series",
     "Description": "Evaluate change point score of every series point",
     "Accessibility": "public",
     "Parameters": [
      {
       "$ref": "314"
      },
      {
       "$ref": "316"
      },
      {
       "$id": "337",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Description": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "338",
        "Kind": "constant",
        "ValueType": {
         "$id": "339",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "application/json"
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant"
      },
      {
       "$id": "340",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "341",
        "Kind": "constant",
        "ValueType": {
         "$id": "342",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "application/json"
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant"
      },
      {
       "$id": "343",
       "Name": "options",
       "NameInRequest": "options",
       "Description": "Method of univariate anomaly detection.",
       "Type": {
        "$ref": "284"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method"
      }
     ],
     "Responses": [
      {
       "$id": "344",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "296"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{Endpoint}/anomalydetector/{ApiVersion}",
     "Path": "/timeseries/changepoint/detect",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true
    }
   ],
   "Protocol": {
    "$id": "345"
   },
   "Parent": "AnomalyDetectorClient",
   "Parameters": [
    {
     "$ref": "314"
    },
    {
     "$ref": "316"
    }
   ]
  },
  {
   "$id": "346",
   "Name": "Multivariate",
   "Operations": [
    {
     "$id": "347",
     "Name": "GetMultivariateBatchDetectionResult",
     "ResourceName": "Multivariate",
     "Summary": "Get Multivariate Anomaly Detection Result",
     "Description": "For asynchronous inference, get multivariate anomaly detection result based on\nresultId returned by the BatchDetectAnomaly api.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "348",
       "Name": "Endpoint",
       "NameInRequest": "Endpoint",
       "Description": "Supported Cognitive Services endpoints (protocol and hostname, for example:\nhttps://westus2.api.cognitive.microsoft.com).",
       "Type": {
        "$id": "349",
        "Kind": "url",
        "Name": "url",
        "CrossLanguageDefinitionId": "TypeSpec.url"
       },
       "Location": "Uri",
       "IsApiVersion": false,
       "IsResourceParameter": false,
       "IsContentType": false,
       "IsRequired": true,
       "IsEndpoint": true,
       "SkipUrlEncoding": false,
       "Explode": false,
       "Kind": "Client"
      },
      {
       "$id": "350",
       "Name": "ApiVersion",
       "NameInRequest": "ApiVersion",
       "Description": "Api Version",
       "Type": {
        "$ref": "61"
       },
       "Location": "Uri",
       "IsApiVersion": true,
       "IsResourceParameter": false,
       "IsContentType": false,
       "IsRequired": true,
       "IsEndpoint": false,
       "SkipUrlEncoding": false,
       "Explode": false,
       "Kind": "Client",
       "DefaultValue": {
        "$id": "351",
        "Type": {
         "$id": "352",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "v1.1"
       }
      },
      {
       "$id": "353",
       "Name": "resultId",
       "NameInRequest": "resultId",
       "Description": "ID of a batch detection result.",
       "Type": {
        "$id": "354",
        "Kind": "string",
        "Name": "uuid",
        "CrossLanguageDefinitionId": "Azure.Core.uuid",
        "BaseType": {
         "$id": "355",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string"
        }
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method"
      },
      {
       "$id": "356",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "357",
        "Kind": "constant",
        "ValueType": {
         "$id": "358",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "application/json"
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant"
      }
     ],
     "Responses": [
      {
       "$id": "359",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "67"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{Endpoint}/anomalydetector/{ApiVersion}",
     "Path": "/multivariate/detect-batch/{resultId}",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true
    },
    {
     "$id": "360",
     "Name": "TrainMultivariateModel",
     "ResourceName": "Multivariate",
     "Summary": "Train a Multivariate Anomaly Detection Model",
     "Description": "Create and train a multivariate anomaly detection model. The request must\ninclude a source parameter to indicate an externally accessible Azure blob\nstorage URI.There are two types of data input: An URI pointed to an Azure blob\nstorage folder which contains multiple CSV files, and each CSV file contains\ntwo columns, timestamp and variable. Another type of input is an URI pointed to\na CSV file in Azure blob storage, which contains all the variables and a\ntimestamp column.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$ref": "348"
      },
      {
       "$ref": "350"
      },
      {
       "$id": "361",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Description": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "362",
        "Kind": "constant",
        "ValueType": {
         "$id": "363",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "application/json"
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant"
      },
      {
       "$id": "364",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "365",
        "Kind": "constant",
        "ValueType": {
         "$id": "366",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "application/json"
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant"
      },
      {
       "$id": "367",
       "Name": "modelInfo",
       "NameInRequest": "modelInfo",
       "Description": "Model information.",
       "Type": {
        "$ref": "136"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method"
      }
     ],
     "Responses": [
      {
       "$id": "368",
       "StatusCodes": [
        201
       ],
       "BodyType": {
        "$ref": "177"
       },
       "BodyMediaType": "Json",
       "Headers": [
        {
         "$id": "369",
         "Name": "Location",
         "NameInResponse": "location",
         "Description": "Location and ID of the model.",
         "Type": {
          "$id": "370",
          "Kind": "string",
          "Name": "string",
          "CrossLanguageDefinitionId": "TypeSpec.string"
         }
        }
       ],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{Endpoint}/anomalydetector/{ApiVersion}",
     "Path": "/multivariate/models",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true
    },
    {
     "$id": "371",
     "Name": "ListMultivariateModels",
     "ResourceName": "Multivariate",
     "Summary": "List Multivariate Models",
     "Description": "List models of a resource.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$ref": "348"
      },
      {
       "$ref": "350"
      },
      {
       "$id": "372",
       "Name": "skip",
       "NameInRequest": "skip",
       "Description": "Skip indicates how many models will be skipped.",
       "Type": {
        "$id": "373",
        "Kind": "int32",
        "Name": "int32",
        "CrossLanguageDefinitionId": "TypeSpec.int32"
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method"
      },
      {
       "$id": "374",
       "Name": "top",
       "NameInRequest": "top",
       "Description": "Top indicates how many models will be fetched.",
       "Type": {
        "$id": "375",
        "Kind": "int32",
        "Name": "int32",
        "CrossLanguageDefinitionId": "TypeSpec.int32"
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method"
      },
      {
       "$id": "376",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "377",
        "Kind": "constant",
        "ValueType": {
         "$id": "378",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "application/json"
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant"
      }
     ],
     "Responses": [
      {
       "$id": "379",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "188"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{Endpoint}/anomalydetector/{ApiVersion}",
     "Path": "/multivariate/models",
     "BufferResponse": true,
     "Paging": {
      "$id": "380",
      "ItemName": "models",
      "NextLinkName": "nextLink"
     },
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true
    },
    {
     "$id": "381",
     "Name": "DeleteMultivariateModel",
     "ResourceName": "Multivariate",
     "Summary": "Delete Multivariate Model",
     "Description": "Delete an existing multivariate model according to the modelId",
     "Accessibility": "public",
     "Parameters": [
      {
       "$ref": "348"
      },
      {
       "$ref": "350"
      },
      {
       "$id": "382",
       "Name": "modelId",
       "NameInRequest": "modelId",
       "Description": "Model identifier.",
       "Type": {
        "$id": "383",
        "Kind": "string",
        "Name": "string",
        "CrossLanguageDefinitionId": "TypeSpec.string"
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method"
      },
      {
       "$id": "384",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "385",
        "Kind": "constant",
        "ValueType": {
         "$id": "386",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "application/json"
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant"
      }
     ],
     "Responses": [
      {
       "$id": "387",
       "StatusCodes": [
        204
       ],
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false
      }
     ],
     "HttpMethod": "DELETE",
     "RequestBodyMediaType": "None",
     "Uri": "{Endpoint}/anomalydetector/{ApiVersion}",
     "Path": "/multivariate/models/{modelId}",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true
    },
    {
     "$id": "388",
     "Name": "GetMultivariateModel",
     "ResourceName": "Multivariate",
     "Summary": "Get Multivariate Model",
     "Description": "Get detailed information of multivariate model, including the training status\nand variables used in the model.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$ref": "348"
      },
      {
       "$ref": "350"
      },
      {
       "$id": "389",
       "Name": "modelId",
       "NameInRequest": "modelId",
       "Description": "Model identifier.",
       "Type": {
        "$id": "390",
        "Kind": "string",
        "Name": "string",
        "CrossLanguageDefinitionId": "TypeSpec.string"
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method"
      },
      {
       "$id": "391",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "392",
        "Kind": "constant",
        "ValueType": {
         "$id": "393",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "application/json"
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant"
      }
     ],
     "Responses": [
      {
       "$id": "394",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "177"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{Endpoint}/anomalydetector/{ApiVersion}",
     "Path": "/multivariate/models/{modelId}",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true
    },
    {
     "$id": "395",
     "Name": "DetectMultivariateBatchAnomaly",
     "ResourceName": "Multivariate",
     "Summary": "Detect Multivariate Anomaly",
     "Description": "Submit multivariate anomaly detection task with the modelId of trained model\nand inference data, the input schema should be the same with the training\nrequest. The request will complete asynchronously and return a resultId to\nquery the detection result.The request should be a source link to indicate an\nexternally accessible Azure storage Uri, either pointed to an Azure blob\nstorage folder, or pointed to a CSV file in Azure blob storage.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$ref": "348"
      },
      {
       "$ref": "350"
      },
      {
       "$id": "396",
       "Name": "modelId",
       "NameInRequest": "modelId",
       "Description": "Model identifier.",
       "Type": {
        "$id": "397",
        "Kind": "string",
        "Name": "string",
        "CrossLanguageDefinitionId": "TypeSpec.string"
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method"
      },
      {
       "$id": "398",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Description": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "399",
        "Kind": "constant",
        "ValueType": {
         "$id": "400",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "application/json"
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant"
      },
      {
       "$id": "401",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "402",
        "Kind": "constant",
        "ValueType": {
         "$id": "403",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "application/json"
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant"
      },
      {
       "$id": "404",
       "Name": "options",
       "NameInRequest": "options",
       "Description": "Request of multivariate anomaly detection.",
       "Type": {
        "$ref": "97"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method"
      }
     ],
     "Responses": [
      {
       "$id": "405",
       "StatusCodes": [
        202
       ],
       "BodyType": {
        "$ref": "67"
       },
       "BodyMediaType": "Json",
       "Headers": [
        {
         "$id": "406",
         "Name": "Operation-Id",
         "NameInResponse": "operation-id",
         "Description": "Id of the detection result.",
         "Type": {
          "$id": "407",
          "Kind": "string",
          "Name": "string",
          "CrossLanguageDefinitionId": "TypeSpec.string"
         }
        },
        {
         "$id": "408",
         "Name": "Operation-Location",
         "NameInResponse": "operation-location",
         "Description": "Location of the detection result.",
         "Type": {
          "$id": "409",
          "Kind": "string",
          "Name": "string",
          "CrossLanguageDefinitionId": "TypeSpec.string"
         }
        }
       ],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{Endpoint}/anomalydetector/{ApiVersion}",
     "Path": "/multivariate/models/{modelId}:detect-batch",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true
    },
    {
     "$id": "410",
     "Name": "DetectMultivariateLastAnomaly",
     "ResourceName": "Multivariate",
     "Summary": "Detect anomalies in the last point of the request body",
     "Description": "Submit multivariate anomaly detection task with the modelId of trained model\nand inference data, and the inference data should be put into request body in a\nJSON format. The request will complete synchronously and return the detection\nimmediately in the response body.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$ref": "348"
      },
      {
       "$ref": "350"
      },
      {
       "$id": "411",
       "Name": "modelId",
       "NameInRequest": "modelId",
       "Description": "Model identifier.",
       "Type": {
        "$id": "412",
        "Kind": "string",
        "Name": "string",
        "CrossLanguageDefinitionId": "TypeSpec.string"
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method"
      },
      {
       "$id": "413",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Description": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "414",
        "Kind": "constant",
        "ValueType": {
         "$id": "415",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "application/json"
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant"
      },
      {
       "$id": "416",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "417",
        "Kind": "constant",
        "ValueType": {
         "$id": "418",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "application/json"
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant"
      },
      {
       "$id": "419",
       "Name": "options",
       "NameInRequest": "options",
       "Description": "Request of last detection.",
       "Type": {
        "$ref": "197"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method"
      }
     ],
     "Responses": [
      {
       "$id": "420",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "211"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{Endpoint}/anomalydetector/{ApiVersion}",
     "Path": "/multivariate/models/{modelId}:detect-last",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true
    }
   ],
   "Protocol": {
    "$id": "421"
   },
   "Parent": "AnomalyDetectorClient",
   "Parameters": [
    {
     "$ref": "348"
    },
    {
     "$ref": "350"
    }
   ]
  }
 ],
 "Auth": {
  "$id": "422",
  "ApiKey": {
   "$id": "423",
   "Name": "Ocp-Apim-Subscription-Key"
  }
 }
}
