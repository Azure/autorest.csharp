// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace AzureSample.ResourceManager.Sample.Models
{
    /// <summary>
    /// Describes Compute Resource Usage.
    /// Serialized Name: Usage
    /// </summary>
    public partial class AzureSampleResourceManagerSampleUsage
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="AzureSampleResourceManagerSampleUsage"/>. </summary>
        /// <param name="currentValue">
        /// The current usage of the resource.
        /// Serialized Name: Usage.currentValue
        /// </param>
        /// <param name="limit">
        /// The maximum permitted usage of the resource.
        /// Serialized Name: Usage.limit
        /// </param>
        /// <param name="name">
        /// The name of the type of usage.
        /// Serialized Name: Usage.name
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> is null. </exception>
        internal AzureSampleResourceManagerSampleUsage(int currentValue, long limit, AzureSampleResourceManagerSampleUsageName name)
        {
            Argument.AssertNotNull(name, nameof(name));

            Unit = UsageUnit.Count;
            CurrentValue = currentValue;
            Limit = limit;
            Name = name;
        }

        /// <summary> Initializes a new instance of <see cref="AzureSampleResourceManagerSampleUsage"/>. </summary>
        /// <param name="unit">
        /// An enum describing the unit of usage measurement.
        /// Serialized Name: Usage.unit
        /// </param>
        /// <param name="currentValue">
        /// The current usage of the resource.
        /// Serialized Name: Usage.currentValue
        /// </param>
        /// <param name="limit">
        /// The maximum permitted usage of the resource.
        /// Serialized Name: Usage.limit
        /// </param>
        /// <param name="name">
        /// The name of the type of usage.
        /// Serialized Name: Usage.name
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal AzureSampleResourceManagerSampleUsage(UsageUnit unit, int currentValue, long limit, AzureSampleResourceManagerSampleUsageName name, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Unit = unit;
            CurrentValue = currentValue;
            Limit = limit;
            Name = name;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="AzureSampleResourceManagerSampleUsage"/> for deserialization. </summary>
        internal AzureSampleResourceManagerSampleUsage()
        {
        }

        /// <summary>
        /// An enum describing the unit of usage measurement.
        /// Serialized Name: Usage.unit
        /// </summary>
        [WirePath("unit")]
        public UsageUnit Unit { get; }
        /// <summary>
        /// The current usage of the resource.
        /// Serialized Name: Usage.currentValue
        /// </summary>
        [WirePath("currentValue")]
        public int CurrentValue { get; }
        /// <summary>
        /// The maximum permitted usage of the resource.
        /// Serialized Name: Usage.limit
        /// </summary>
        [WirePath("limit")]
        public long Limit { get; }
        /// <summary>
        /// The name of the type of usage.
        /// Serialized Name: Usage.name
        /// </summary>
        [WirePath("name")]
        public AzureSampleResourceManagerSampleUsageName Name { get; }
    }
}
