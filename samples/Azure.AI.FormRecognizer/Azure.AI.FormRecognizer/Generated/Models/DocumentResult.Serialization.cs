// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.AI.FormRecognizer.Models
{
    public partial class DocumentResult
    {
        internal static DocumentResult DeserializeDocumentResult(JsonElement element)
        {
            DocumentResult result;
            string docType = default;
            IList<int> pageRange = new List<int>();
            IDictionary<string, FieldValue> fields = new Dictionary<string, FieldValue>();
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("docType"))
                {
                    docType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("pageRange"))
                {
                    List<int> array = new List<int>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetInt32());
                    }
                    pageRange = array;
                    continue;
                }
                if (property.NameEquals("fields"))
                {
                    Dictionary<string, FieldValue> array = new Dictionary<string, FieldValue>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        array.Add(property0.Name, FieldValue.DeserializeFieldValue(property0.Value));
                    }
                    fields = array;
                    continue;
                }
            }
            result = new DocumentResult(docType, pageRange, fields);
            return result;
        }
    }
}
