// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.ClientModel.Primitives;
using System.Text.Json;
using Azure.Core;

namespace AzureSample.ResourceManager.Storage.Models
{
    public partial class EncryptionServices : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Blob))
            {
                writer.WritePropertyName("blob"u8);
                ((IJsonModel<EncryptionService>)Blob).Write(writer, ModelSerializationExtensions.WireOptions);
            }
            if (Optional.IsDefined(File))
            {
                writer.WritePropertyName("file"u8);
                ((IJsonModel<EncryptionService>)File).Write(writer, ModelSerializationExtensions.WireOptions);
            }
            if (Optional.IsDefined(Table))
            {
                writer.WritePropertyName("table"u8);
                ((IJsonModel<EncryptionService>)Table).Write(writer, ModelSerializationExtensions.WireOptions);
            }
            if (Optional.IsDefined(Queue))
            {
                writer.WritePropertyName("queue"u8);
                ((IJsonModel<EncryptionService>)Queue).Write(writer, ModelSerializationExtensions.WireOptions);
            }
            writer.WriteEndObject();
        }

        internal static EncryptionServices DeserializeEncryptionServices(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            EncryptionService blob = default;
            EncryptionService file = default;
            EncryptionService table = default;
            EncryptionService queue = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("blob"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    blob = EncryptionService.DeserializeEncryptionService(property.Value);
                    continue;
                }
                if (property.NameEquals("file"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    file = EncryptionService.DeserializeEncryptionService(property.Value);
                    continue;
                }
                if (property.NameEquals("table"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    table = EncryptionService.DeserializeEncryptionService(property.Value);
                    continue;
                }
                if (property.NameEquals("queue"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    queue = EncryptionService.DeserializeEncryptionService(property.Value);
                    continue;
                }
            }
            return new EncryptionServices(blob, file, table, queue);
        }
    }
}
