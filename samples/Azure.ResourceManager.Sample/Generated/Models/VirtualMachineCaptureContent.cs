// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Sample.Models
{
    /// <summary>
    /// Capture Virtual Machine parameters.
    /// Serialized Name: VirtualMachineCaptureParameters
    /// </summary>
    public partial class VirtualMachineCaptureContent
    {
        private Dictionary<string, BinaryData> _rawData;

        /// <summary>
        /// Initializes a new instance of global::Azure.ResourceManager.Sample.Models.VirtualMachineCaptureContent
        ///
        /// </summary>
        /// <param name="vhdPrefix">
        /// The captured virtual hard disk's name prefix.
        /// Serialized Name: VirtualMachineCaptureParameters.vhdPrefix
        /// </param>
        /// <param name="destinationContainerName">
        /// The destination container name.
        /// Serialized Name: VirtualMachineCaptureParameters.destinationContainerName
        /// </param>
        /// <param name="overwriteVhds">
        /// Specifies whether to overwrite the destination virtual hard disk, in case of conflict.
        /// Serialized Name: VirtualMachineCaptureParameters.overwriteVhds
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="vhdPrefix"/> or <paramref name="destinationContainerName"/> is null. </exception>
        public VirtualMachineCaptureContent(string vhdPrefix, string destinationContainerName, bool overwriteVhds)
        {
            Argument.AssertNotNull(vhdPrefix, nameof(vhdPrefix));
            Argument.AssertNotNull(destinationContainerName, nameof(destinationContainerName));

            VhdPrefix = vhdPrefix;
            DestinationContainerName = destinationContainerName;
            OverwriteVhds = overwriteVhds;
        }

        /// <summary>
        /// Initializes a new instance of global::Azure.ResourceManager.Sample.Models.VirtualMachineCaptureContent
        ///
        /// </summary>
        /// <param name="vhdPrefix">
        /// The captured virtual hard disk's name prefix.
        /// Serialized Name: VirtualMachineCaptureParameters.vhdPrefix
        /// </param>
        /// <param name="destinationContainerName">
        /// The destination container name.
        /// Serialized Name: VirtualMachineCaptureParameters.destinationContainerName
        /// </param>
        /// <param name="overwriteVhds">
        /// Specifies whether to overwrite the destination virtual hard disk, in case of conflict.
        /// Serialized Name: VirtualMachineCaptureParameters.overwriteVhds
        /// </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal VirtualMachineCaptureContent(string vhdPrefix, string destinationContainerName, bool overwriteVhds, Dictionary<string, BinaryData> rawData)
        {
            VhdPrefix = vhdPrefix;
            DestinationContainerName = destinationContainerName;
            OverwriteVhds = overwriteVhds;
            _rawData = rawData;
        }

        /// <summary> Initializes a new instance of <see cref="VirtualMachineCaptureContent"/> for deserialization. </summary>
        internal VirtualMachineCaptureContent()
        {
        }

        /// <summary>
        /// The captured virtual hard disk's name prefix.
        /// Serialized Name: VirtualMachineCaptureParameters.vhdPrefix
        /// </summary>
        public string VhdPrefix { get; }
        /// <summary>
        /// The destination container name.
        /// Serialized Name: VirtualMachineCaptureParameters.destinationContainerName
        /// </summary>
        public string DestinationContainerName { get; }
        /// <summary>
        /// Specifies whether to overwrite the destination virtual hard disk, in case of conflict.
        /// Serialized Name: VirtualMachineCaptureParameters.overwriteVhds
        /// </summary>
        public bool OverwriteVhds { get; }
    }
}
