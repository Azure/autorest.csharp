// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Network.Management.Interface.Models
{
    public partial class EffectiveNetworkSecurityRule
    {
        internal static EffectiveNetworkSecurityRule DeserializeEffectiveNetworkSecurityRule(JsonElement element)
        {
            EffectiveNetworkSecurityRule result = new EffectiveNetworkSecurityRule();
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("name"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.Name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("protocol"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.Protocol = new EffectiveSecurityRuleProtocol(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("sourcePortRange"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.SourcePortRange = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("destinationPortRange"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.DestinationPortRange = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("sourcePortRanges"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.SourcePortRanges = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        result.SourcePortRanges.Add(item.GetString());
                    }
                    continue;
                }
                if (property.NameEquals("destinationPortRanges"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.DestinationPortRanges = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        result.DestinationPortRanges.Add(item.GetString());
                    }
                    continue;
                }
                if (property.NameEquals("sourceAddressPrefix"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.SourceAddressPrefix = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("destinationAddressPrefix"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.DestinationAddressPrefix = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("sourceAddressPrefixes"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.SourceAddressPrefixes = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        result.SourceAddressPrefixes.Add(item.GetString());
                    }
                    continue;
                }
                if (property.NameEquals("destinationAddressPrefixes"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.DestinationAddressPrefixes = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        result.DestinationAddressPrefixes.Add(item.GetString());
                    }
                    continue;
                }
                if (property.NameEquals("expandedSourceAddressPrefix"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.ExpandedSourceAddressPrefix = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        result.ExpandedSourceAddressPrefix.Add(item.GetString());
                    }
                    continue;
                }
                if (property.NameEquals("expandedDestinationAddressPrefix"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.ExpandedDestinationAddressPrefix = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        result.ExpandedDestinationAddressPrefix.Add(item.GetString());
                    }
                    continue;
                }
                if (property.NameEquals("access"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.Access = new SecurityRuleAccess(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("priority"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.Priority = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("direction"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.Direction = new SecurityRuleDirection(property.Value.GetString());
                    continue;
                }
            }
            return result;
        }
    }
}
