<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="Put201CreatingSucceeded200Async(WaitUntil,RequestContent,RequestContext)">
<example>
This sample shows how to call Put201CreatingSucceeded200Async with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LRORetrysClient(credential);

var data = new {};

var operation = await client.Put201CreatingSucceeded200Async(WaitUntil.Completed, RequestContent.Create(data));

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call Put201CreatingSucceeded200Async with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LRORetrysClient(credential);

var data = new {
    properties = new {
        provisioningState = "<provisioningState>",
    },
    tags = new {
        key = "<String>",
    },
    location = "<location>",
};

var operation = await client.Put201CreatingSucceeded200Async(WaitUntil.Completed, RequestContent.Create(data), new RequestContext());

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningStateValues").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("tags").GetProperty("<test>").ToString());
Console.WriteLine(result.GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
    </member>
    <member name="Put201CreatingSucceeded200(WaitUntil,RequestContent,RequestContext)">
<example>
This sample shows how to call Put201CreatingSucceeded200 with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LRORetrysClient(credential);

var data = new {};

var operation = client.Put201CreatingSucceeded200(WaitUntil.Completed, RequestContent.Create(data));

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call Put201CreatingSucceeded200 with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LRORetrysClient(credential);

var data = new {
    properties = new {
        provisioningState = "<provisioningState>",
    },
    tags = new {
        key = "<String>",
    },
    location = "<location>",
};

var operation = client.Put201CreatingSucceeded200(WaitUntil.Completed, RequestContent.Create(data), new RequestContext());

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningStateValues").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("tags").GetProperty("<test>").ToString());
Console.WriteLine(result.GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
    </member>
    <member name="PutAsyncRelativeRetrySucceededAsync(WaitUntil,RequestContent,RequestContext)">
<example>
This sample shows how to call PutAsyncRelativeRetrySucceededAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LRORetrysClient(credential);

var data = new {};

var operation = await client.PutAsyncRelativeRetrySucceededAsync(WaitUntil.Completed, RequestContent.Create(data));

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call PutAsyncRelativeRetrySucceededAsync with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LRORetrysClient(credential);

var data = new {
    properties = new {
        provisioningState = "<provisioningState>",
    },
    tags = new {
        key = "<String>",
    },
    location = "<location>",
};

var operation = await client.PutAsyncRelativeRetrySucceededAsync(WaitUntil.Completed, RequestContent.Create(data), new RequestContext());

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningStateValues").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("tags").GetProperty("<test>").ToString());
Console.WriteLine(result.GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
    </member>
    <member name="PutAsyncRelativeRetrySucceeded(WaitUntil,RequestContent,RequestContext)">
<example>
This sample shows how to call PutAsyncRelativeRetrySucceeded with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LRORetrysClient(credential);

var data = new {};

var operation = client.PutAsyncRelativeRetrySucceeded(WaitUntil.Completed, RequestContent.Create(data));

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call PutAsyncRelativeRetrySucceeded with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LRORetrysClient(credential);

var data = new {
    properties = new {
        provisioningState = "<provisioningState>",
    },
    tags = new {
        key = "<String>",
    },
    location = "<location>",
};

var operation = client.PutAsyncRelativeRetrySucceeded(WaitUntil.Completed, RequestContent.Create(data), new RequestContext());

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningStateValues").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("tags").GetProperty("<test>").ToString());
Console.WriteLine(result.GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
    </member>
    <member name="DeleteProvisioning202Accepted200SucceededAsync(WaitUntil,RequestContext)">
<example>
This sample shows how to call DeleteProvisioning202Accepted200SucceededAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LRORetrysClient(credential);

var operation = await client.DeleteProvisioning202Accepted200SucceededAsync(WaitUntil.Completed, new RequestContext());

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningStateValues").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("tags").GetProperty("<test>").ToString());
Console.WriteLine(result.GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
    </member>
    <member name="DeleteProvisioning202Accepted200Succeeded(WaitUntil,RequestContext)">
<example>
This sample shows how to call DeleteProvisioning202Accepted200Succeeded with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LRORetrysClient(credential);

var operation = client.DeleteProvisioning202Accepted200Succeeded(WaitUntil.Completed, new RequestContext());

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningStateValues").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("tags").GetProperty("<test>").ToString());
Console.WriteLine(result.GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
    </member>
    <member name="Delete202Retry200Async(WaitUntil,RequestContext)">
<example>
This sample shows how to call Delete202Retry200Async with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LRORetrysClient(credential);

var operation = await client.Delete202Retry200Async(WaitUntil.Completed, new RequestContext());

Console.WriteLine(operation.GetRawResponse().Status);
]]></code>
</example>
    </member>
    <member name="Delete202Retry200(WaitUntil,RequestContext)">
<example>
This sample shows how to call Delete202Retry200 with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LRORetrysClient(credential);

var operation = client.Delete202Retry200(WaitUntil.Completed, new RequestContext());

Console.WriteLine(operation.GetRawResponse().Status);
]]></code>
</example>
    </member>
    <member name="DeleteAsyncRelativeRetrySucceededAsync(WaitUntil,RequestContext)">
<example>
This sample shows how to call DeleteAsyncRelativeRetrySucceededAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LRORetrysClient(credential);

var operation = await client.DeleteAsyncRelativeRetrySucceededAsync(WaitUntil.Completed, new RequestContext());

Console.WriteLine(operation.GetRawResponse().Status);
]]></code>
</example>
    </member>
    <member name="DeleteAsyncRelativeRetrySucceeded(WaitUntil,RequestContext)">
<example>
This sample shows how to call DeleteAsyncRelativeRetrySucceeded with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LRORetrysClient(credential);

var operation = client.DeleteAsyncRelativeRetrySucceeded(WaitUntil.Completed, new RequestContext());

Console.WriteLine(operation.GetRawResponse().Status);
]]></code>
</example>
    </member>
    <member name="Post202Retry200Async(WaitUntil,RequestContent,RequestContext)">
<example>
This sample shows how to call Post202Retry200Async with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LRORetrysClient(credential);

var data = new {};

var operation = await client.Post202Retry200Async(WaitUntil.Completed, RequestContent.Create(data));

Console.WriteLine(operation.GetRawResponse().Status);
]]></code>
This sample shows how to call Post202Retry200Async with all parameters and request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LRORetrysClient(credential);

var data = new {
    properties = new {
        provisioningState = "<provisioningState>",
    },
    tags = new {
        key = "<String>",
    },
    location = "<location>",
};

var operation = await client.Post202Retry200Async(WaitUntil.Completed, RequestContent.Create(data), new RequestContext());

Console.WriteLine(operation.GetRawResponse().Status);
]]></code>
</example>
    </member>
    <member name="Post202Retry200(WaitUntil,RequestContent,RequestContext)">
<example>
This sample shows how to call Post202Retry200 with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LRORetrysClient(credential);

var data = new {};

var operation = client.Post202Retry200(WaitUntil.Completed, RequestContent.Create(data));

Console.WriteLine(operation.GetRawResponse().Status);
]]></code>
This sample shows how to call Post202Retry200 with all parameters and request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LRORetrysClient(credential);

var data = new {
    properties = new {
        provisioningState = "<provisioningState>",
    },
    tags = new {
        key = "<String>",
    },
    location = "<location>",
};

var operation = client.Post202Retry200(WaitUntil.Completed, RequestContent.Create(data), new RequestContext());

Console.WriteLine(operation.GetRawResponse().Status);
]]></code>
</example>
    </member>
    <member name="PostAsyncRelativeRetrySucceededAsync(WaitUntil,RequestContent,RequestContext)">
<example>
This sample shows how to call PostAsyncRelativeRetrySucceededAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LRORetrysClient(credential);

var data = new {};

var operation = await client.PostAsyncRelativeRetrySucceededAsync(WaitUntil.Completed, RequestContent.Create(data));

Console.WriteLine(operation.GetRawResponse().Status);
]]></code>
This sample shows how to call PostAsyncRelativeRetrySucceededAsync with all parameters and request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LRORetrysClient(credential);

var data = new {
    properties = new {
        provisioningState = "<provisioningState>",
    },
    tags = new {
        key = "<String>",
    },
    location = "<location>",
};

var operation = await client.PostAsyncRelativeRetrySucceededAsync(WaitUntil.Completed, RequestContent.Create(data), new RequestContext());

Console.WriteLine(operation.GetRawResponse().Status);
]]></code>
</example>
    </member>
    <member name="PostAsyncRelativeRetrySucceeded(WaitUntil,RequestContent,RequestContext)">
<example>
This sample shows how to call PostAsyncRelativeRetrySucceeded with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LRORetrysClient(credential);

var data = new {};

var operation = client.PostAsyncRelativeRetrySucceeded(WaitUntil.Completed, RequestContent.Create(data));

Console.WriteLine(operation.GetRawResponse().Status);
]]></code>
This sample shows how to call PostAsyncRelativeRetrySucceeded with all parameters and request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LRORetrysClient(credential);

var data = new {
    properties = new {
        provisioningState = "<provisioningState>",
    },
    tags = new {
        key = "<String>",
    },
    location = "<location>",
};

var operation = client.PostAsyncRelativeRetrySucceeded(WaitUntil.Completed, RequestContent.Create(data), new RequestContext());

Console.WriteLine(operation.GetRawResponse().Status);
]]></code>
</example>
    </member>
  </members>
</doc>