<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="PutAsyncRetrySucceededAsync(WaitUntil,RequestContent,RequestContext)">
<example>
This sample shows how to call PutAsyncRetrySucceededAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LROsCustomHeaderClient(credential);

var data = new {};

var operation = await client.PutAsyncRetrySucceededAsync(WaitUntil.Completed, RequestContent.Create(data));

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call PutAsyncRetrySucceededAsync with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LROsCustomHeaderClient(credential);

var data = new {
    properties = new {
        provisioningState = "<provisioningState>",
    },
    tags = new {
        key = "<String>",
    },
    location = "<location>",
};

var operation = await client.PutAsyncRetrySucceededAsync(WaitUntil.Completed, RequestContent.Create(data), new RequestContext());

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningStateValues").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("tags").GetProperty("<test>").ToString());
Console.WriteLine(result.GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
    </member>
    <member name="PutAsyncRetrySucceeded(WaitUntil,RequestContent,RequestContext)">
<example>
This sample shows how to call PutAsyncRetrySucceeded with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LROsCustomHeaderClient(credential);

var data = new {};

var operation = client.PutAsyncRetrySucceeded(WaitUntil.Completed, RequestContent.Create(data));

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call PutAsyncRetrySucceeded with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LROsCustomHeaderClient(credential);

var data = new {
    properties = new {
        provisioningState = "<provisioningState>",
    },
    tags = new {
        key = "<String>",
    },
    location = "<location>",
};

var operation = client.PutAsyncRetrySucceeded(WaitUntil.Completed, RequestContent.Create(data), new RequestContext());

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningStateValues").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("tags").GetProperty("<test>").ToString());
Console.WriteLine(result.GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
    </member>
    <member name="Put201CreatingSucceeded200Async(WaitUntil,RequestContent,RequestContext)">
<example>
This sample shows how to call Put201CreatingSucceeded200Async with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LROsCustomHeaderClient(credential);

var data = new {};

var operation = await client.Put201CreatingSucceeded200Async(WaitUntil.Completed, RequestContent.Create(data));

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call Put201CreatingSucceeded200Async with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LROsCustomHeaderClient(credential);

var data = new {
    properties = new {
        provisioningState = "<provisioningState>",
    },
    tags = new {
        key = "<String>",
    },
    location = "<location>",
};

var operation = await client.Put201CreatingSucceeded200Async(WaitUntil.Completed, RequestContent.Create(data), new RequestContext());

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningStateValues").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("tags").GetProperty("<test>").ToString());
Console.WriteLine(result.GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
    </member>
    <member name="Put201CreatingSucceeded200(WaitUntil,RequestContent,RequestContext)">
<example>
This sample shows how to call Put201CreatingSucceeded200 with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LROsCustomHeaderClient(credential);

var data = new {};

var operation = client.Put201CreatingSucceeded200(WaitUntil.Completed, RequestContent.Create(data));

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call Put201CreatingSucceeded200 with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LROsCustomHeaderClient(credential);

var data = new {
    properties = new {
        provisioningState = "<provisioningState>",
    },
    tags = new {
        key = "<String>",
    },
    location = "<location>",
};

var operation = client.Put201CreatingSucceeded200(WaitUntil.Completed, RequestContent.Create(data), new RequestContext());

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningStateValues").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("tags").GetProperty("<test>").ToString());
Console.WriteLine(result.GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
    </member>
    <member name="Post202Retry200Async(WaitUntil,RequestContent,RequestContext)">
<example>
This sample shows how to call Post202Retry200Async with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LROsCustomHeaderClient(credential);

var data = new {};

var operation = await client.Post202Retry200Async(WaitUntil.Completed, RequestContent.Create(data));

Console.WriteLine(operation.GetRawResponse().Status);
]]></code>
This sample shows how to call Post202Retry200Async with all parameters and request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LROsCustomHeaderClient(credential);

var data = new {
    properties = new {
        provisioningState = "<provisioningState>",
    },
    tags = new {
        key = "<String>",
    },
    location = "<location>",
};

var operation = await client.Post202Retry200Async(WaitUntil.Completed, RequestContent.Create(data), new RequestContext());

Console.WriteLine(operation.GetRawResponse().Status);
]]></code>
</example>
    </member>
    <member name="Post202Retry200(WaitUntil,RequestContent,RequestContext)">
<example>
This sample shows how to call Post202Retry200 with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LROsCustomHeaderClient(credential);

var data = new {};

var operation = client.Post202Retry200(WaitUntil.Completed, RequestContent.Create(data));

Console.WriteLine(operation.GetRawResponse().Status);
]]></code>
This sample shows how to call Post202Retry200 with all parameters and request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LROsCustomHeaderClient(credential);

var data = new {
    properties = new {
        provisioningState = "<provisioningState>",
    },
    tags = new {
        key = "<String>",
    },
    location = "<location>",
};

var operation = client.Post202Retry200(WaitUntil.Completed, RequestContent.Create(data), new RequestContext());

Console.WriteLine(operation.GetRawResponse().Status);
]]></code>
</example>
    </member>
    <member name="PostAsyncRetrySucceededAsync(WaitUntil,RequestContent,RequestContext)">
<example>
This sample shows how to call PostAsyncRetrySucceededAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LROsCustomHeaderClient(credential);

var data = new {};

var operation = await client.PostAsyncRetrySucceededAsync(WaitUntil.Completed, RequestContent.Create(data));

Console.WriteLine(operation.GetRawResponse().Status);
]]></code>
This sample shows how to call PostAsyncRetrySucceededAsync with all parameters and request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LROsCustomHeaderClient(credential);

var data = new {
    properties = new {
        provisioningState = "<provisioningState>",
    },
    tags = new {
        key = "<String>",
    },
    location = "<location>",
};

var operation = await client.PostAsyncRetrySucceededAsync(WaitUntil.Completed, RequestContent.Create(data), new RequestContext());

Console.WriteLine(operation.GetRawResponse().Status);
]]></code>
</example>
    </member>
    <member name="PostAsyncRetrySucceeded(WaitUntil,RequestContent,RequestContext)">
<example>
This sample shows how to call PostAsyncRetrySucceeded with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LROsCustomHeaderClient(credential);

var data = new {};

var operation = client.PostAsyncRetrySucceeded(WaitUntil.Completed, RequestContent.Create(data));

Console.WriteLine(operation.GetRawResponse().Status);
]]></code>
This sample shows how to call PostAsyncRetrySucceeded with all parameters and request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new LROsCustomHeaderClient(credential);

var data = new {
    properties = new {
        provisioningState = "<provisioningState>",
    },
    tags = new {
        key = "<String>",
    },
    location = "<location>",
};

var operation = client.PostAsyncRetrySucceeded(WaitUntil.Completed, RequestContent.Create(data), new RequestContext());

Console.WriteLine(operation.GetRawResponse().Status);
]]></code>
</example>
    </member>
  </members>
</doc>