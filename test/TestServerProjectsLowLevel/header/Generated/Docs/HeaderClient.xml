<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="ParamExistingKeyAsync(String,RequestContext)">
<example>
This sample shows how to call ParamExistingKeyAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ParamExistingKeyAsync("<userAgent>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamExistingKey(String,RequestContext)">
<example>
This sample shows how to call ParamExistingKey with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ParamExistingKey("<userAgent>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseExistingKeyAsync(RequestContext)">
<example>
This sample shows how to call ResponseExistingKeyAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ResponseExistingKeyAsync();
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseExistingKey(RequestContext)">
<example>
This sample shows how to call ResponseExistingKey.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ResponseExistingKey();
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamProtectedKeyAsync(String,RequestContext)">
<example>
This sample shows how to call ParamProtectedKeyAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ParamProtectedKeyAsync("<contentType>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamProtectedKey(String,RequestContext)">
<example>
This sample shows how to call ParamProtectedKey with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ParamProtectedKey("<contentType>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseProtectedKeyAsync(RequestContext)">
<example>
This sample shows how to call ResponseProtectedKeyAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ResponseProtectedKeyAsync();
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseProtectedKey(RequestContext)">
<example>
This sample shows how to call ResponseProtectedKey.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ResponseProtectedKey();
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamIntegerAsync(String,Int32,RequestContext)">
<example>
This sample shows how to call ParamIntegerAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ParamIntegerAsync("<scenario>", 1234);
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamInteger(String,Int32,RequestContext)">
<example>
This sample shows how to call ParamInteger with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ParamInteger("<scenario>", 1234);
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseIntegerAsync(String,RequestContext)">
<example>
This sample shows how to call ResponseIntegerAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ResponseIntegerAsync("<scenario>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseInteger(String,RequestContext)">
<example>
This sample shows how to call ResponseInteger with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ResponseInteger("<scenario>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamLongAsync(String,Int64,RequestContext)">
<example>
This sample shows how to call ParamLongAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ParamLongAsync("<scenario>", 1234);
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamLong(String,Int64,RequestContext)">
<example>
This sample shows how to call ParamLong with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ParamLong("<scenario>", 1234);
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseLongAsync(String,RequestContext)">
<example>
This sample shows how to call ResponseLongAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ResponseLongAsync("<scenario>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseLong(String,RequestContext)">
<example>
This sample shows how to call ResponseLong with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ResponseLong("<scenario>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamFloatAsync(String,Single,RequestContext)">
<example>
This sample shows how to call ParamFloatAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ParamFloatAsync("<scenario>", 1234);
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamFloat(String,Single,RequestContext)">
<example>
This sample shows how to call ParamFloat with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ParamFloat("<scenario>", 1234);
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseFloatAsync(String,RequestContext)">
<example>
This sample shows how to call ResponseFloatAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ResponseFloatAsync("<scenario>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseFloat(String,RequestContext)">
<example>
This sample shows how to call ResponseFloat with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ResponseFloat("<scenario>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamDoubleAsync(String,Double,RequestContext)">
<example>
This sample shows how to call ParamDoubleAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ParamDoubleAsync("<scenario>", 1234);
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamDouble(String,Double,RequestContext)">
<example>
This sample shows how to call ParamDouble with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ParamDouble("<scenario>", 1234);
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseDoubleAsync(String,RequestContext)">
<example>
This sample shows how to call ResponseDoubleAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ResponseDoubleAsync("<scenario>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseDouble(String,RequestContext)">
<example>
This sample shows how to call ResponseDouble with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ResponseDouble("<scenario>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamBoolAsync(String,Boolean,RequestContext)">
<example>
This sample shows how to call ParamBoolAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ParamBoolAsync("<scenario>", true);
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamBool(String,Boolean,RequestContext)">
<example>
This sample shows how to call ParamBool with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ParamBool("<scenario>", true);
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseBoolAsync(String,RequestContext)">
<example>
This sample shows how to call ResponseBoolAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ResponseBoolAsync("<scenario>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseBool(String,RequestContext)">
<example>
This sample shows how to call ResponseBool with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ResponseBool("<scenario>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamStringAsync(String,String,RequestContext)">
<example>
This sample shows how to call ParamStringAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ParamStringAsync("<scenario>");
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamStringAsync with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ParamStringAsync("<scenario>", "<value>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamString(String,String,RequestContext)">
<example>
This sample shows how to call ParamString with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ParamString("<scenario>");
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamString with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ParamString("<scenario>", "<value>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseStringAsync(String,RequestContext)">
<example>
This sample shows how to call ResponseStringAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ResponseStringAsync("<scenario>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseString(String,RequestContext)">
<example>
This sample shows how to call ResponseString with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ResponseString("<scenario>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamDateAsync(String,DateTimeOffset,RequestContext)">
<example>
This sample shows how to call ParamDateAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ParamDateAsync("<scenario>", DateTimeOffset.UtcNow);
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamDate(String,DateTimeOffset,RequestContext)">
<example>
This sample shows how to call ParamDate with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ParamDate("<scenario>", DateTimeOffset.UtcNow);
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseDateAsync(String,RequestContext)">
<example>
This sample shows how to call ResponseDateAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ResponseDateAsync("<scenario>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseDate(String,RequestContext)">
<example>
This sample shows how to call ResponseDate with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ResponseDate("<scenario>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamDatetimeAsync(String,DateTimeOffset,RequestContext)">
<example>
This sample shows how to call ParamDatetimeAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ParamDatetimeAsync("<scenario>", DateTimeOffset.UtcNow);
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamDatetime(String,DateTimeOffset,RequestContext)">
<example>
This sample shows how to call ParamDatetime with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ParamDatetime("<scenario>", DateTimeOffset.UtcNow);
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseDatetimeAsync(String,RequestContext)">
<example>
This sample shows how to call ResponseDatetimeAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ResponseDatetimeAsync("<scenario>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseDatetime(String,RequestContext)">
<example>
This sample shows how to call ResponseDatetime with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ResponseDatetime("<scenario>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamDatetimeRfc1123Async(String,DateTimeOffset,RequestContext)">
<example>
This sample shows how to call ParamDatetimeRfc1123Async with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ParamDatetimeRfc1123Async("<scenario>");
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamDatetimeRfc1123Async with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ParamDatetimeRfc1123Async("<scenario>", DateTimeOffset.UtcNow);
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamDatetimeRfc1123(String,DateTimeOffset,RequestContext)">
<example>
This sample shows how to call ParamDatetimeRfc1123 with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ParamDatetimeRfc1123("<scenario>");
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamDatetimeRfc1123 with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ParamDatetimeRfc1123("<scenario>", DateTimeOffset.UtcNow);
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseDatetimeRfc1123Async(String,RequestContext)">
<example>
This sample shows how to call ResponseDatetimeRfc1123Async with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ResponseDatetimeRfc1123Async("<scenario>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseDatetimeRfc1123(String,RequestContext)">
<example>
This sample shows how to call ResponseDatetimeRfc1123 with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ResponseDatetimeRfc1123("<scenario>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamDurationAsync(String,TimeSpan,RequestContext)">
<example>
This sample shows how to call ParamDurationAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ParamDurationAsync("<scenario>", new TimeSpan(1, 2, 3));
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamDuration(String,TimeSpan,RequestContext)">
<example>
This sample shows how to call ParamDuration with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ParamDuration("<scenario>", new TimeSpan(1, 2, 3));
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseDurationAsync(String,RequestContext)">
<example>
This sample shows how to call ResponseDurationAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ResponseDurationAsync("<scenario>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseDuration(String,RequestContext)">
<example>
This sample shows how to call ResponseDuration with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ResponseDuration("<scenario>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamByteAsync(String,Byte[],RequestContext)">
<example>
This sample shows how to call ParamByteAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ParamByteAsync("<scenario>", null);
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamByte(String,Byte[],RequestContext)">
<example>
This sample shows how to call ParamByte with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ParamByte("<scenario>", null);
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseByteAsync(String,RequestContext)">
<example>
This sample shows how to call ResponseByteAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ResponseByteAsync("<scenario>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseByte(String,RequestContext)">
<example>
This sample shows how to call ResponseByte with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ResponseByte("<scenario>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamEnumAsync(String,String,RequestContext)">
<example>
This sample shows how to call ParamEnumAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ParamEnumAsync("<scenario>");
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamEnumAsync with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ParamEnumAsync("<scenario>", "<value>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamEnum(String,String,RequestContext)">
<example>
This sample shows how to call ParamEnum with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ParamEnum("<scenario>");
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamEnum with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ParamEnum("<scenario>", "<value>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseEnumAsync(String,RequestContext)">
<example>
This sample shows how to call ResponseEnumAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ResponseEnumAsync("<scenario>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseEnum(String,RequestContext)">
<example>
This sample shows how to call ResponseEnum with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ResponseEnum("<scenario>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="CustomRequestIdAsync(RequestContext)">
<example>
This sample shows how to call CustomRequestIdAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.CustomRequestIdAsync();
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="CustomRequestId(RequestContext)">
<example>
This sample shows how to call CustomRequestId.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.CustomRequestId();
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
  </members>
</doc>