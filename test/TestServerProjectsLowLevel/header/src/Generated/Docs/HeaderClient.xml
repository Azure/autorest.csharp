<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="ParamExistingKeyAsync(string,RequestContext)">
<example>
This sample shows how to call ParamExistingKeyAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ParamExistingKeyAsync("<userAgent>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamExistingKey(string,RequestContext)">
<example>
This sample shows how to call ParamExistingKey with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ParamExistingKey("<userAgent>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseExistingKeyAsync(RequestContext)">
<example>
This sample shows how to call ResponseExistingKeyAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ResponseExistingKeyAsync(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseExistingKey(RequestContext)">
<example>
This sample shows how to call ResponseExistingKey.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ResponseExistingKey(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamProtectedKeyAsync(string,RequestContext)">
<example>
This sample shows how to call ParamProtectedKeyAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ParamProtectedKeyAsync("<contentType>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamProtectedKey(string,RequestContext)">
<example>
This sample shows how to call ParamProtectedKey with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ParamProtectedKey("<contentType>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseProtectedKeyAsync(RequestContext)">
<example>
This sample shows how to call ResponseProtectedKeyAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ResponseProtectedKeyAsync(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseProtectedKey(RequestContext)">
<example>
This sample shows how to call ResponseProtectedKey.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ResponseProtectedKey(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamIntegerAsync(string,int,RequestContext)">
<example>
This sample shows how to call ParamIntegerAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ParamIntegerAsync("<scenario>", 1234, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamInteger(string,int,RequestContext)">
<example>
This sample shows how to call ParamInteger with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ParamInteger("<scenario>", 1234, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseIntegerAsync(string,RequestContext)">
<example>
This sample shows how to call ResponseIntegerAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ResponseIntegerAsync("<scenario>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseInteger(string,RequestContext)">
<example>
This sample shows how to call ResponseInteger with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ResponseInteger("<scenario>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamLongAsync(string,long,RequestContext)">
<example>
This sample shows how to call ParamLongAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ParamLongAsync("<scenario>", 1234, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamLong(string,long,RequestContext)">
<example>
This sample shows how to call ParamLong with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ParamLong("<scenario>", 1234, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseLongAsync(string,RequestContext)">
<example>
This sample shows how to call ResponseLongAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ResponseLongAsync("<scenario>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseLong(string,RequestContext)">
<example>
This sample shows how to call ResponseLong with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ResponseLong("<scenario>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamFloatAsync(string,float,RequestContext)">
<example>
This sample shows how to call ParamFloatAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ParamFloatAsync("<scenario>", 3.14f, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamFloat(string,float,RequestContext)">
<example>
This sample shows how to call ParamFloat with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ParamFloat("<scenario>", 3.14f, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseFloatAsync(string,RequestContext)">
<example>
This sample shows how to call ResponseFloatAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ResponseFloatAsync("<scenario>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseFloat(string,RequestContext)">
<example>
This sample shows how to call ResponseFloat with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ResponseFloat("<scenario>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamDoubleAsync(string,double,RequestContext)">
<example>
This sample shows how to call ParamDoubleAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ParamDoubleAsync("<scenario>", 3.14, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamDouble(string,double,RequestContext)">
<example>
This sample shows how to call ParamDouble with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ParamDouble("<scenario>", 3.14, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseDoubleAsync(string,RequestContext)">
<example>
This sample shows how to call ResponseDoubleAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ResponseDoubleAsync("<scenario>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseDouble(string,RequestContext)">
<example>
This sample shows how to call ResponseDouble with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ResponseDouble("<scenario>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamBoolAsync(string,bool,RequestContext)">
<example>
This sample shows how to call ParamBoolAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ParamBoolAsync("<scenario>", true, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamBool(string,bool,RequestContext)">
<example>
This sample shows how to call ParamBool with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ParamBool("<scenario>", true, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseBoolAsync(string,RequestContext)">
<example>
This sample shows how to call ResponseBoolAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ResponseBoolAsync("<scenario>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseBool(string,RequestContext)">
<example>
This sample shows how to call ResponseBool with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ResponseBool("<scenario>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamStringAsync(string,string,RequestContext)">
<example>
This sample shows how to call ParamStringAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ParamStringAsync("<scenario>");
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamStringAsync with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ParamStringAsync("<scenario>", "<value>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamString(string,string,RequestContext)">
<example>
This sample shows how to call ParamString with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ParamString("<scenario>");
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamString with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ParamString("<scenario>", "<value>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseStringAsync(string,RequestContext)">
<example>
This sample shows how to call ResponseStringAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ResponseStringAsync("<scenario>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseString(string,RequestContext)">
<example>
This sample shows how to call ResponseString with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ResponseString("<scenario>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamDateAsync(string,DateTimeOffset,RequestContext)">
<example>
This sample shows how to call ParamDateAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ParamDateAsync("<scenario>", DateTimeOffset.UtcNow, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamDate(string,DateTimeOffset,RequestContext)">
<example>
This sample shows how to call ParamDate with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ParamDate("<scenario>", DateTimeOffset.UtcNow, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseDateAsync(string,RequestContext)">
<example>
This sample shows how to call ResponseDateAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ResponseDateAsync("<scenario>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseDate(string,RequestContext)">
<example>
This sample shows how to call ResponseDate with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ResponseDate("<scenario>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamDatetimeAsync(string,DateTimeOffset,RequestContext)">
<example>
This sample shows how to call ParamDatetimeAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ParamDatetimeAsync("<scenario>", DateTimeOffset.UtcNow, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamDatetime(string,DateTimeOffset,RequestContext)">
<example>
This sample shows how to call ParamDatetime with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ParamDatetime("<scenario>", DateTimeOffset.UtcNow, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseDatetimeAsync(string,RequestContext)">
<example>
This sample shows how to call ResponseDatetimeAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ResponseDatetimeAsync("<scenario>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseDatetime(string,RequestContext)">
<example>
This sample shows how to call ResponseDatetime with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ResponseDatetime("<scenario>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamDatetimeRfc1123Async(string,DateTimeOffset?,RequestContext)">
<example>
This sample shows how to call ParamDatetimeRfc1123Async with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ParamDatetimeRfc1123Async("<scenario>");
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamDatetimeRfc1123Async with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ParamDatetimeRfc1123Async("<scenario>", DateTimeOffset.UtcNow, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamDatetimeRfc1123(string,DateTimeOffset?,RequestContext)">
<example>
This sample shows how to call ParamDatetimeRfc1123 with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ParamDatetimeRfc1123("<scenario>");
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamDatetimeRfc1123 with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ParamDatetimeRfc1123("<scenario>", DateTimeOffset.UtcNow, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseDatetimeRfc1123Async(string,RequestContext)">
<example>
This sample shows how to call ResponseDatetimeRfc1123Async with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ResponseDatetimeRfc1123Async("<scenario>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseDatetimeRfc1123(string,RequestContext)">
<example>
This sample shows how to call ResponseDatetimeRfc1123 with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ResponseDatetimeRfc1123("<scenario>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamDurationAsync(string,TimeSpan,RequestContext)">
<example>
This sample shows how to call ParamDurationAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ParamDurationAsync("<scenario>", new TimeSpan(1, 2, 3), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamDuration(string,TimeSpan,RequestContext)">
<example>
This sample shows how to call ParamDuration with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ParamDuration("<scenario>", new TimeSpan(1, 2, 3), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseDurationAsync(string,RequestContext)">
<example>
This sample shows how to call ResponseDurationAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ResponseDurationAsync("<scenario>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseDuration(string,RequestContext)">
<example>
This sample shows how to call ResponseDuration with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ResponseDuration("<scenario>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamByteAsync(string,BinaryData,RequestContext)">
<example>
This sample shows how to call ParamByteAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ParamByteAsync("<scenario>", BinaryData.FromString("<your binary data content>"), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamByte(string,BinaryData,RequestContext)">
<example>
This sample shows how to call ParamByte with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ParamByte("<scenario>", BinaryData.FromString("<your binary data content>"), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseByteAsync(string,RequestContext)">
<example>
This sample shows how to call ResponseByteAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ResponseByteAsync("<scenario>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseByte(string,RequestContext)">
<example>
This sample shows how to call ResponseByte with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ResponseByte("<scenario>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamEnumAsync(string,string,RequestContext)">
<example>
This sample shows how to call ParamEnumAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ParamEnumAsync("<scenario>");
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamEnumAsync with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ParamEnumAsync("<scenario>", "<value>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ParamEnum(string,string,RequestContext)">
<example>
This sample shows how to call ParamEnum with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ParamEnum("<scenario>");
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamEnum with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ParamEnum("<scenario>", "<value>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseEnumAsync(string,RequestContext)">
<example>
This sample shows how to call ResponseEnumAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.ResponseEnumAsync("<scenario>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ResponseEnum(string,RequestContext)">
<example>
This sample shows how to call ResponseEnum with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.ResponseEnum("<scenario>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="CustomRequestIdAsync(RequestContext)">
<example>
This sample shows how to call CustomRequestIdAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = await client.CustomRequestIdAsync(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="CustomRequestId(RequestContext)">
<example>
This sample shows how to call CustomRequestId.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HeaderClient(credential);

Response response = client.CustomRequestId(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
  </members>
</doc>