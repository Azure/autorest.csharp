// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using System.Xml;
using Azure;
using Azure.Identity;
using NUnit.Framework;
using header_LowLevel;

namespace header_LowLevel.Samples
{
    public class Samples_HeaderClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamExistingKey()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamExistingKey("<userAgent>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamExistingKey_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamExistingKeyAsync("<userAgent>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamExistingKey_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamExistingKey("<userAgent>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamExistingKey_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamExistingKeyAsync("<userAgent>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseExistingKey()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseExistingKey();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseExistingKey_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseExistingKeyAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseExistingKey_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseExistingKey();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseExistingKey_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseExistingKeyAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamProtectedKey()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamProtectedKey("<contentType>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamProtectedKey_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamProtectedKeyAsync("<contentType>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamProtectedKey_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamProtectedKey("<contentType>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamProtectedKey_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamProtectedKeyAsync("<contentType>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseProtectedKey()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseProtectedKey();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseProtectedKey_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseProtectedKeyAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseProtectedKey_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseProtectedKey();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseProtectedKey_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseProtectedKeyAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamInteger()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamInteger("<scenario>", 1234);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamInteger_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamIntegerAsync("<scenario>", 1234);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamInteger_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamInteger("<scenario>", 1234);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamInteger_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamIntegerAsync("<scenario>", 1234);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseInteger()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseInteger("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseInteger_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseIntegerAsync("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseInteger_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseInteger("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseInteger_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseIntegerAsync("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamLong()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamLong("<scenario>", 1234L);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamLong_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamLongAsync("<scenario>", 1234L);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamLong_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamLong("<scenario>", 1234L);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamLong_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamLongAsync("<scenario>", 1234L);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseLong()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseLong("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseLong_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseLongAsync("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseLong_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseLong("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseLong_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseLongAsync("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamFloat()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamFloat("<scenario>", 123.45F);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamFloat_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamFloatAsync("<scenario>", 123.45F);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamFloat_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamFloat("<scenario>", 123.45F);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamFloat_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamFloatAsync("<scenario>", 123.45F);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseFloat()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseFloat("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseFloat_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseFloatAsync("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseFloat_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseFloat("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseFloat_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseFloatAsync("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamDouble()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamDouble("<scenario>", 123.45);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamDouble_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamDoubleAsync("<scenario>", 123.45);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamDouble_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamDouble("<scenario>", 123.45);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamDouble_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamDoubleAsync("<scenario>", 123.45);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseDouble()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseDouble("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseDouble_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseDoubleAsync("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseDouble_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseDouble("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseDouble_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseDoubleAsync("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamBool()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamBool("<scenario>", true);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamBool_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamBoolAsync("<scenario>", true);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamBool_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamBool("<scenario>", true);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamBool_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamBoolAsync("<scenario>", true);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseBool()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseBool("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseBool_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseBoolAsync("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseBool_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseBool("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseBool_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseBoolAsync("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamString()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamString("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamString_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamStringAsync("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamString_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamString("<scenario>", "<value>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamString_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamStringAsync("<scenario>", "<value>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseString()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseString("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseString_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseStringAsync("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseString_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseString("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseString_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseStringAsync("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamDate()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamDate("<scenario>", DateTimeOffset.Parse("2022-05-10"));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamDate_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamDateAsync("<scenario>", DateTimeOffset.Parse("2022-05-10"));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamDate_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamDate("<scenario>", DateTimeOffset.Parse("2022-05-10"));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamDate_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamDateAsync("<scenario>", DateTimeOffset.Parse("2022-05-10"));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseDate()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseDate("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseDate_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseDateAsync("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseDate_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseDate("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseDate_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseDateAsync("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamDatetime()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamDatetime("<scenario>", DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamDatetime_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamDatetimeAsync("<scenario>", DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamDatetime_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamDatetime("<scenario>", DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamDatetime_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamDatetimeAsync("<scenario>", DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseDatetime()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseDatetime("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseDatetime_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseDatetimeAsync("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseDatetime_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseDatetime("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseDatetime_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseDatetimeAsync("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamDatetimeRfc1123()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamDatetimeRfc1123("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamDatetimeRfc1123_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamDatetimeRfc1123Async("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamDatetimeRfc1123_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamDatetimeRfc1123("<scenario>", DateTimeOffset.Parse("Tue, 10 May 2022 18:57:31 GMT"));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamDatetimeRfc1123_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamDatetimeRfc1123Async("<scenario>", DateTimeOffset.Parse("Tue, 10 May 2022 18:57:31 GMT"));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseDatetimeRfc1123()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseDatetimeRfc1123("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseDatetimeRfc1123_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseDatetimeRfc1123Async("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseDatetimeRfc1123_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseDatetimeRfc1123("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseDatetimeRfc1123_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseDatetimeRfc1123Async("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamDuration()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamDuration("<scenario>", XmlConvert.ToTimeSpan("PT1H23M45S"));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamDuration_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamDurationAsync("<scenario>", XmlConvert.ToTimeSpan("PT1H23M45S"));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamDuration_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamDuration("<scenario>", XmlConvert.ToTimeSpan("PT1H23M45S"));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamDuration_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamDurationAsync("<scenario>", XmlConvert.ToTimeSpan("PT1H23M45S"));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseDuration()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseDuration("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseDuration_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseDurationAsync("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseDuration_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseDuration("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseDuration_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseDurationAsync("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamByte()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamByte("<scenario>", BinaryData.FromObjectAsJson(new object()));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamByte_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamByteAsync("<scenario>", BinaryData.FromObjectAsJson(new object()));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamByte_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamByte("<scenario>", BinaryData.FromObjectAsJson(new object()));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamByte_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamByteAsync("<scenario>", BinaryData.FromObjectAsJson(new object()));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseByte()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseByte("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseByte_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseByteAsync("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseByte_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseByte("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseByte_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseByteAsync("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamEnum()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamEnum("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamEnum_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamEnumAsync("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamEnum_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamEnum("<scenario>", "White");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamEnum_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamEnumAsync("<scenario>", "White");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseEnum()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseEnum("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseEnum_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseEnumAsync("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseEnum_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseEnum("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseEnum_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseEnumAsync("<scenario>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CustomRequestId()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.CustomRequestId();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CustomRequestId_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.CustomRequestIdAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CustomRequestId_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.CustomRequestId();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CustomRequestId_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.CustomRequestIdAsync();
        }
    }
}
