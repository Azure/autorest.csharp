// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace url_LowLevel.Samples
{
    public class Samples_PathItemsClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetAllWithValues()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new PathItemsClient("<globalStringPath>", credential);

            Response response = client.GetAllWithValues("<pathItemStringPath>", "<localStringPath>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetGlobalQueryNull()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new PathItemsClient("<globalStringPath>", credential);

            Response response = client.GetGlobalQueryNull("<pathItemStringPath>", "<localStringPath>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetGlobalAndLocalQueryNull()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new PathItemsClient("<globalStringPath>", credential);

            Response response = client.GetGlobalAndLocalQueryNull("<pathItemStringPath>", "<localStringPath>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetLocalPathItemQueryNull()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new PathItemsClient("<globalStringPath>", credential);

            Response response = client.GetLocalPathItemQueryNull("<pathItemStringPath>", "<localStringPath>");
            Console.WriteLine(response.Status);
        }
    }
}
