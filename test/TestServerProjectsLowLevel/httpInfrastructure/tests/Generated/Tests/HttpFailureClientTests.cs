// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Identity;
using NUnit.Framework;
using httpInfrastructure_LowLevel;

namespace httpInfrastructure_LowLevel.Tests
{
    public class HttpFailureClientTests : httpInfrastructure_LowLevelTestBase
    {
        public HttpFailureClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        public async Task GetEmptyError_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpFailureClient client = CreateHttpFailureClient(credential, endpoint);

            Response response = await client.GetEmptyErrorAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        public async Task GetEmptyError_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpFailureClient client = CreateHttpFailureClient(credential, endpoint);

            Response response = await client.GetEmptyErrorAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        public async Task GetNoModelError_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpFailureClient client = CreateHttpFailureClient(credential, endpoint);

            Response response = await client.GetNoModelErrorAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        public async Task GetNoModelError_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpFailureClient client = CreateHttpFailureClient(credential, endpoint);

            Response response = await client.GetNoModelErrorAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        public async Task GetNoModelEmpty_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpFailureClient client = CreateHttpFailureClient(credential, endpoint);

            Response response = await client.GetNoModelEmptyAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        public async Task GetNoModelEmpty_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpFailureClient client = CreateHttpFailureClient(credential, endpoint);

            Response response = await client.GetNoModelEmptyAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }
    }
}
