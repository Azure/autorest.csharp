// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using httpInfrastructure_LowLevel;

namespace httpInfrastructure_LowLevel.Tests
{
    public class HttpClientFailureClientTests : httpInfrastructure_LowLevelTestBase
    {
        public HttpClientFailureClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        public async Task Head400_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            Response response = await client.Head400Async();
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Head400_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            Response response = await client.Head400Async();
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Get400_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            Response response = await client.Get400Async();
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Get400_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            Response response = await client.Get400Async();
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Options400_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            Response response = await client.Options400Async();
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Options400_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            Response response = await client.Options400Async();
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Put400_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            RequestContent content = null;
            Response response = await client.Put400Async(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Put400_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            RequestContent content = RequestContent.Create("true");
            Response response = await client.Put400Async(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Patch400_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            RequestContent content = null;
            Response response = await client.Patch400Async(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Patch400_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            RequestContent content = RequestContent.Create("true");
            Response response = await client.Patch400Async(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Post400_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            RequestContent content = null;
            Response response = await client.Post400Async(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Post400_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            RequestContent content = RequestContent.Create("true");
            Response response = await client.Post400Async(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Delete400_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            RequestContent content = null;
            Response response = await client.Delete400Async(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Delete400_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            RequestContent content = RequestContent.Create("true");
            Response response = await client.Delete400Async(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Head401_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            Response response = await client.Head401Async();
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Head401_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            Response response = await client.Head401Async();
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Get402_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            Response response = await client.Get402Async();
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Get402_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            Response response = await client.Get402Async();
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Options403_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            Response response = await client.Options403Async();
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Options403_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            Response response = await client.Options403Async();
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Get403_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            Response response = await client.Get403Async();
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Get403_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            Response response = await client.Get403Async();
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Put404_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            RequestContent content = null;
            Response response = await client.Put404Async(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Put404_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            RequestContent content = RequestContent.Create("true");
            Response response = await client.Put404Async(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Patch405_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            RequestContent content = null;
            Response response = await client.Patch405Async(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Patch405_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            RequestContent content = RequestContent.Create("true");
            Response response = await client.Patch405Async(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Post406_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            RequestContent content = null;
            Response response = await client.Post406Async(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Post406_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            RequestContent content = RequestContent.Create("true");
            Response response = await client.Post406Async(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Delete407_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            RequestContent content = null;
            Response response = await client.Delete407Async(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Delete407_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            RequestContent content = RequestContent.Create("true");
            Response response = await client.Delete407Async(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Put409_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            RequestContent content = null;
            Response response = await client.Put409Async(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Put409_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            RequestContent content = RequestContent.Create("true");
            Response response = await client.Put409Async(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Head410_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            Response response = await client.Head410Async();
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Head410_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            Response response = await client.Head410Async();
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Get411_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            Response response = await client.Get411Async();
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Get411_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            Response response = await client.Get411Async();
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Options412_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            Response response = await client.Options412Async();
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Options412_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            Response response = await client.Options412Async();
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Get412_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            Response response = await client.Get412Async();
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Get412_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            Response response = await client.Get412Async();
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Put413_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            RequestContent content = null;
            Response response = await client.Put413Async(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Put413_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            RequestContent content = RequestContent.Create("true");
            Response response = await client.Put413Async(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Patch414_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            RequestContent content = null;
            Response response = await client.Patch414Async(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Patch414_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            RequestContent content = RequestContent.Create("true");
            Response response = await client.Patch414Async(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Post415_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            RequestContent content = null;
            Response response = await client.Post415Async(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Post415_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            RequestContent content = RequestContent.Create("true");
            Response response = await client.Post415Async(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Get416_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            Response response = await client.Get416Async();
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Get416_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            Response response = await client.Get416Async();
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Delete417_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            RequestContent content = null;
            Response response = await client.Delete417Async(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Delete417_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            RequestContent content = RequestContent.Create("true");
            Response response = await client.Delete417Async(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Head429_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            Response response = await client.Head429Async();
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Head429_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(credential, endpoint);

            Response response = await client.Head429Async();
            Console.WriteLine(response.Status);
        }
    }
}
