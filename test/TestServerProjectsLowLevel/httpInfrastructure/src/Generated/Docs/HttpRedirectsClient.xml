<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="Head300Async(RequestContext)">
<example>
This sample shows how to call Head300Async.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpRedirectsClient(credential);

Response response = await client.Head300Async(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Head300(RequestContext)">
<example>
This sample shows how to call Head300.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpRedirectsClient(credential);

Response response = client.Head300(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Get300Async(RequestContext)">
<example>
This sample shows how to call Get300Async.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpRedirectsClient(credential);

Response response = await client.Get300Async(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Get300(RequestContext)">
<example>
This sample shows how to call Get300.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpRedirectsClient(credential);

Response response = client.Get300(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Head301Async(RequestContext)">
<example>
This sample shows how to call Head301Async.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpRedirectsClient(credential);

Response response = await client.Head301Async(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Head301(RequestContext)">
<example>
This sample shows how to call Head301.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpRedirectsClient(credential);

Response response = client.Head301(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Get301Async(RequestContext)">
<example>
This sample shows how to call Get301Async.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpRedirectsClient(credential);

Response response = await client.Get301Async(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Get301(RequestContext)">
<example>
This sample shows how to call Get301.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpRedirectsClient(credential);

Response response = client.Get301(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Put301Async(RequestContent,RequestContext)">
<example>
This sample shows how to call Put301Async with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpRedirectsClient(credential);

var data = true;

Response response = await client.Put301Async(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Put301(RequestContent,RequestContext)">
<example>
This sample shows how to call Put301 with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpRedirectsClient(credential);

var data = true;

Response response = client.Put301(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Head302Async(RequestContext)">
<example>
This sample shows how to call Head302Async.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpRedirectsClient(credential);

Response response = await client.Head302Async(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Head302(RequestContext)">
<example>
This sample shows how to call Head302.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpRedirectsClient(credential);

Response response = client.Head302(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Get302Async(RequestContext)">
<example>
This sample shows how to call Get302Async.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpRedirectsClient(credential);

Response response = await client.Get302Async(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Get302(RequestContext)">
<example>
This sample shows how to call Get302.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpRedirectsClient(credential);

Response response = client.Get302(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Patch302Async(RequestContent,RequestContext)">
<example>
This sample shows how to call Patch302Async with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpRedirectsClient(credential);

var data = true;

Response response = await client.Patch302Async(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Patch302(RequestContent,RequestContext)">
<example>
This sample shows how to call Patch302 with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpRedirectsClient(credential);

var data = true;

Response response = client.Patch302(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Post303Async(RequestContent,RequestContext)">
<example>
This sample shows how to call Post303Async with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpRedirectsClient(credential);

var data = true;

Response response = await client.Post303Async(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Post303(RequestContent,RequestContext)">
<example>
This sample shows how to call Post303 with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpRedirectsClient(credential);

var data = true;

Response response = client.Post303(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Head307Async(RequestContext)">
<example>
This sample shows how to call Head307Async.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpRedirectsClient(credential);

Response response = await client.Head307Async(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Head307(RequestContext)">
<example>
This sample shows how to call Head307.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpRedirectsClient(credential);

Response response = client.Head307(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Get307Async(RequestContext)">
<example>
This sample shows how to call Get307Async.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpRedirectsClient(credential);

Response response = await client.Get307Async(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Get307(RequestContext)">
<example>
This sample shows how to call Get307.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpRedirectsClient(credential);

Response response = client.Get307(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Options307Async(RequestContext)">
<example>
This sample shows how to call Options307Async.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpRedirectsClient(credential);

Response response = await client.Options307Async(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Options307(RequestContext)">
<example>
This sample shows how to call Options307.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpRedirectsClient(credential);

Response response = client.Options307(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Put307Async(RequestContent,RequestContext)">
<example>
This sample shows how to call Put307Async with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpRedirectsClient(credential);

var data = true;

Response response = await client.Put307Async(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Put307(RequestContent,RequestContext)">
<example>
This sample shows how to call Put307 with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpRedirectsClient(credential);

var data = true;

Response response = client.Put307(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Patch307Async(RequestContent,RequestContext)">
<example>
This sample shows how to call Patch307Async with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpRedirectsClient(credential);

var data = true;

Response response = await client.Patch307Async(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Patch307(RequestContent,RequestContext)">
<example>
This sample shows how to call Patch307 with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpRedirectsClient(credential);

var data = true;

Response response = client.Patch307(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Post307Async(RequestContent,RequestContext)">
<example>
This sample shows how to call Post307Async with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpRedirectsClient(credential);

var data = true;

Response response = await client.Post307Async(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Post307(RequestContent,RequestContext)">
<example>
This sample shows how to call Post307 with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpRedirectsClient(credential);

var data = true;

Response response = client.Post307(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Delete307Async(RequestContent,RequestContext)">
<example>
This sample shows how to call Delete307Async with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpRedirectsClient(credential);

var data = true;

Response response = await client.Delete307Async(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Delete307(RequestContent,RequestContext)">
<example>
This sample shows how to call Delete307 with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpRedirectsClient(credential);

var data = true;

Response response = client.Delete307(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
  </members>
</doc>