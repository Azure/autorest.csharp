<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="Head400Async(global::Azure.RequestContext)">
<example>
This sample shows how to call Head400Async.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

Response response = await client.Head400Async(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Head400(global::Azure.RequestContext)">
<example>
This sample shows how to call Head400.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

Response response = client.Head400(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Get400Async(global::Azure.RequestContext)">
<example>
This sample shows how to call Get400Async.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

Response response = await client.Get400Async(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Get400(global::Azure.RequestContext)">
<example>
This sample shows how to call Get400.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

Response response = client.Get400(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Options400Async(global::Azure.RequestContext)">
<example>
This sample shows how to call Options400Async.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

Response response = await client.Options400Async(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Options400(global::Azure.RequestContext)">
<example>
This sample shows how to call Options400.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

Response response = client.Options400(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Put400Async(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call Put400Async with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

var data = true;

Response response = await client.Put400Async(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Put400(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call Put400 with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

var data = true;

Response response = client.Put400(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Patch400Async(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call Patch400Async with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

var data = true;

Response response = await client.Patch400Async(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Patch400(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call Patch400 with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

var data = true;

Response response = client.Patch400(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Post400Async(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call Post400Async with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

var data = true;

Response response = await client.Post400Async(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Post400(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call Post400 with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

var data = true;

Response response = client.Post400(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Delete400Async(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call Delete400Async with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

var data = true;

Response response = await client.Delete400Async(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Delete400(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call Delete400 with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

var data = true;

Response response = client.Delete400(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Head401Async(global::Azure.RequestContext)">
<example>
This sample shows how to call Head401Async.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

Response response = await client.Head401Async(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Head401(global::Azure.RequestContext)">
<example>
This sample shows how to call Head401.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

Response response = client.Head401(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Get402Async(global::Azure.RequestContext)">
<example>
This sample shows how to call Get402Async.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

Response response = await client.Get402Async(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Get402(global::Azure.RequestContext)">
<example>
This sample shows how to call Get402.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

Response response = client.Get402(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Options403Async(global::Azure.RequestContext)">
<example>
This sample shows how to call Options403Async.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

Response response = await client.Options403Async(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Options403(global::Azure.RequestContext)">
<example>
This sample shows how to call Options403.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

Response response = client.Options403(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Get403Async(global::Azure.RequestContext)">
<example>
This sample shows how to call Get403Async.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

Response response = await client.Get403Async(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Get403(global::Azure.RequestContext)">
<example>
This sample shows how to call Get403.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

Response response = client.Get403(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Put404Async(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call Put404Async with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

var data = true;

Response response = await client.Put404Async(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Put404(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call Put404 with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

var data = true;

Response response = client.Put404(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Patch405Async(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call Patch405Async with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

var data = true;

Response response = await client.Patch405Async(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Patch405(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call Patch405 with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

var data = true;

Response response = client.Patch405(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Post406Async(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call Post406Async with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

var data = true;

Response response = await client.Post406Async(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Post406(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call Post406 with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

var data = true;

Response response = client.Post406(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Delete407Async(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call Delete407Async with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

var data = true;

Response response = await client.Delete407Async(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Delete407(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call Delete407 with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

var data = true;

Response response = client.Delete407(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Put409Async(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call Put409Async with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

var data = true;

Response response = await client.Put409Async(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Put409(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call Put409 with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

var data = true;

Response response = client.Put409(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Head410Async(global::Azure.RequestContext)">
<example>
This sample shows how to call Head410Async.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

Response response = await client.Head410Async(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Head410(global::Azure.RequestContext)">
<example>
This sample shows how to call Head410.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

Response response = client.Head410(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Get411Async(global::Azure.RequestContext)">
<example>
This sample shows how to call Get411Async.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

Response response = await client.Get411Async(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Get411(global::Azure.RequestContext)">
<example>
This sample shows how to call Get411.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

Response response = client.Get411(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Options412Async(global::Azure.RequestContext)">
<example>
This sample shows how to call Options412Async.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

Response response = await client.Options412Async(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Options412(global::Azure.RequestContext)">
<example>
This sample shows how to call Options412.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

Response response = client.Options412(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Get412Async(global::Azure.RequestContext)">
<example>
This sample shows how to call Get412Async.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

Response response = await client.Get412Async(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Get412(global::Azure.RequestContext)">
<example>
This sample shows how to call Get412.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

Response response = client.Get412(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Put413Async(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call Put413Async with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

var data = true;

Response response = await client.Put413Async(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Put413(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call Put413 with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

var data = true;

Response response = client.Put413(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Patch414Async(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call Patch414Async with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

var data = true;

Response response = await client.Patch414Async(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Patch414(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call Patch414 with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

var data = true;

Response response = client.Patch414(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Post415Async(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call Post415Async with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

var data = true;

Response response = await client.Post415Async(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Post415(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call Post415 with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

var data = true;

Response response = client.Post415(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Get416Async(global::Azure.RequestContext)">
<example>
This sample shows how to call Get416Async.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

Response response = await client.Get416Async(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Get416(global::Azure.RequestContext)">
<example>
This sample shows how to call Get416.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

Response response = client.Get416(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Delete417Async(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call Delete417Async with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

var data = true;

Response response = await client.Delete417Async(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Delete417(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call Delete417 with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

var data = true;

Response response = client.Delete417(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Head429Async(global::Azure.RequestContext)">
<example>
This sample shows how to call Head429Async.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

Response response = await client.Head429Async(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Head429(global::Azure.RequestContext)">
<example>
This sample shows how to call Head429.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new HttpClientFailureClient(credential);

Response response = client.Head429(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
  </members>
</doc>