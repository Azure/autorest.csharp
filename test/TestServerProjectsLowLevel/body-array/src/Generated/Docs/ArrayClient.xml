<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetNullAsync(RequestContext)">
      <example>
This sample shows how to call GetNullAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetNullAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetNull(RequestContext)">
      <example>
This sample shows how to call GetNull with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetNull(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetInvalidAsync(RequestContext)">
      <example>
This sample shows how to call GetInvalidAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetInvalidAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetInvalid(RequestContext)">
      <example>
This sample shows how to call GetInvalid with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetInvalid(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetEmptyAsync(RequestContext)">
      <example>
This sample shows how to call GetEmptyAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetEmptyAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetEmpty(RequestContext)">
      <example>
This sample shows how to call GetEmpty with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetEmpty(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="PutEmptyAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutEmptyAsync with required request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

RequestContent content = RequestContent.Create(new object[]
{
"<arrayBody>"
});
Response response = await client.PutEmptyAsync(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PutEmpty(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutEmpty with required request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

RequestContent content = RequestContent.Create(new object[]
{
"<arrayBody>"
});
Response response = client.PutEmpty(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetBooleanTfftAsync(RequestContext)">
      <example>
This sample shows how to call GetBooleanTfftAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetBooleanTfftAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetBooleanTfft(RequestContext)">
      <example>
This sample shows how to call GetBooleanTfft with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetBooleanTfft(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="PutBooleanTfftAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutBooleanTfftAsync with required request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

RequestContent content = RequestContent.Create(new object[]
{
true
});
Response response = await client.PutBooleanTfftAsync(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PutBooleanTfft(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutBooleanTfft with required request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

RequestContent content = RequestContent.Create(new object[]
{
true
});
Response response = client.PutBooleanTfft(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetBooleanInvalidNullAsync(RequestContext)">
      <example>
This sample shows how to call GetBooleanInvalidNullAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetBooleanInvalidNullAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetBooleanInvalidNull(RequestContext)">
      <example>
This sample shows how to call GetBooleanInvalidNull with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetBooleanInvalidNull(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetBooleanInvalidStringAsync(RequestContext)">
      <example>
This sample shows how to call GetBooleanInvalidStringAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetBooleanInvalidStringAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetBooleanInvalidString(RequestContext)">
      <example>
This sample shows how to call GetBooleanInvalidString with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetBooleanInvalidString(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetIntegerValidAsync(RequestContext)">
      <example>
This sample shows how to call GetIntegerValidAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetIntegerValidAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetIntegerValid(RequestContext)">
      <example>
This sample shows how to call GetIntegerValid with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetIntegerValid(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="PutIntegerValidAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutIntegerValidAsync with required request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

RequestContent content = RequestContent.Create(new object[]
{
1234
});
Response response = await client.PutIntegerValidAsync(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PutIntegerValid(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutIntegerValid with required request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

RequestContent content = RequestContent.Create(new object[]
{
1234
});
Response response = client.PutIntegerValid(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetIntInvalidNullAsync(RequestContext)">
      <example>
This sample shows how to call GetIntInvalidNullAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetIntInvalidNullAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetIntInvalidNull(RequestContext)">
      <example>
This sample shows how to call GetIntInvalidNull with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetIntInvalidNull(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetIntInvalidStringAsync(RequestContext)">
      <example>
This sample shows how to call GetIntInvalidStringAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetIntInvalidStringAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetIntInvalidString(RequestContext)">
      <example>
This sample shows how to call GetIntInvalidString with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetIntInvalidString(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetLongValidAsync(RequestContext)">
      <example>
This sample shows how to call GetLongValidAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetLongValidAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetLongValid(RequestContext)">
      <example>
This sample shows how to call GetLongValid with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetLongValid(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="PutLongValidAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutLongValidAsync with required request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

RequestContent content = RequestContent.Create(new object[]
{
1234L
});
Response response = await client.PutLongValidAsync(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PutLongValid(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutLongValid with required request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

RequestContent content = RequestContent.Create(new object[]
{
1234L
});
Response response = client.PutLongValid(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetLongInvalidNullAsync(RequestContext)">
      <example>
This sample shows how to call GetLongInvalidNullAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetLongInvalidNullAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetLongInvalidNull(RequestContext)">
      <example>
This sample shows how to call GetLongInvalidNull with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetLongInvalidNull(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetLongInvalidStringAsync(RequestContext)">
      <example>
This sample shows how to call GetLongInvalidStringAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetLongInvalidStringAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetLongInvalidString(RequestContext)">
      <example>
This sample shows how to call GetLongInvalidString with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetLongInvalidString(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetFloatValidAsync(RequestContext)">
      <example>
This sample shows how to call GetFloatValidAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetFloatValidAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetFloatValid(RequestContext)">
      <example>
This sample shows how to call GetFloatValid with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetFloatValid(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="PutFloatValidAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutFloatValidAsync with required request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

RequestContent content = RequestContent.Create(new object[]
{
123.45F
});
Response response = await client.PutFloatValidAsync(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PutFloatValid(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutFloatValid with required request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

RequestContent content = RequestContent.Create(new object[]
{
123.45F
});
Response response = client.PutFloatValid(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetFloatInvalidNullAsync(RequestContext)">
      <example>
This sample shows how to call GetFloatInvalidNullAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetFloatInvalidNullAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetFloatInvalidNull(RequestContext)">
      <example>
This sample shows how to call GetFloatInvalidNull with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetFloatInvalidNull(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetFloatInvalidStringAsync(RequestContext)">
      <example>
This sample shows how to call GetFloatInvalidStringAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetFloatInvalidStringAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetFloatInvalidString(RequestContext)">
      <example>
This sample shows how to call GetFloatInvalidString with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetFloatInvalidString(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetDoubleValidAsync(RequestContext)">
      <example>
This sample shows how to call GetDoubleValidAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetDoubleValidAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetDoubleValid(RequestContext)">
      <example>
This sample shows how to call GetDoubleValid with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetDoubleValid(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="PutDoubleValidAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutDoubleValidAsync with required request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

RequestContent content = RequestContent.Create(new object[]
{
123.45
});
Response response = await client.PutDoubleValidAsync(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PutDoubleValid(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutDoubleValid with required request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

RequestContent content = RequestContent.Create(new object[]
{
123.45
});
Response response = client.PutDoubleValid(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetDoubleInvalidNullAsync(RequestContext)">
      <example>
This sample shows how to call GetDoubleInvalidNullAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetDoubleInvalidNullAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetDoubleInvalidNull(RequestContext)">
      <example>
This sample shows how to call GetDoubleInvalidNull with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetDoubleInvalidNull(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetDoubleInvalidStringAsync(RequestContext)">
      <example>
This sample shows how to call GetDoubleInvalidStringAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetDoubleInvalidStringAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetDoubleInvalidString(RequestContext)">
      <example>
This sample shows how to call GetDoubleInvalidString with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetDoubleInvalidString(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetStringValidAsync(RequestContext)">
      <example>
This sample shows how to call GetStringValidAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetStringValidAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetStringValid(RequestContext)">
      <example>
This sample shows how to call GetStringValid with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetStringValid(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="PutStringValidAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutStringValidAsync with required request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

RequestContent content = RequestContent.Create(new object[]
{
"<arrayBody>"
});
Response response = await client.PutStringValidAsync(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PutStringValid(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutStringValid with required request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

RequestContent content = RequestContent.Create(new object[]
{
"<arrayBody>"
});
Response response = client.PutStringValid(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetEnumValidAsync(RequestContext)">
      <example>
This sample shows how to call GetEnumValidAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetEnumValidAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetEnumValid(RequestContext)">
      <example>
This sample shows how to call GetEnumValid with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetEnumValid(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="PutEnumValidAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutEnumValidAsync with required request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

RequestContent content = RequestContent.Create(new object[]
{
"foo1"
});
Response response = await client.PutEnumValidAsync(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PutEnumValid(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutEnumValid with required request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

RequestContent content = RequestContent.Create(new object[]
{
"foo1"
});
Response response = client.PutEnumValid(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetStringEnumValidAsync(RequestContext)">
      <example>
This sample shows how to call GetStringEnumValidAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetStringEnumValidAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetStringEnumValid(RequestContext)">
      <example>
This sample shows how to call GetStringEnumValid with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetStringEnumValid(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="PutStringEnumValidAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutStringEnumValidAsync with required request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

RequestContent content = RequestContent.Create(new object[]
{
"foo1"
});
Response response = await client.PutStringEnumValidAsync(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PutStringEnumValid(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutStringEnumValid with required request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

RequestContent content = RequestContent.Create(new object[]
{
"foo1"
});
Response response = client.PutStringEnumValid(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetStringWithNullAsync(RequestContext)">
      <example>
This sample shows how to call GetStringWithNullAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetStringWithNullAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetStringWithNull(RequestContext)">
      <example>
This sample shows how to call GetStringWithNull with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetStringWithNull(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetStringWithInvalidAsync(RequestContext)">
      <example>
This sample shows how to call GetStringWithInvalidAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetStringWithInvalidAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetStringWithInvalid(RequestContext)">
      <example>
This sample shows how to call GetStringWithInvalid with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetStringWithInvalid(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetUuidValidAsync(RequestContext)">
      <example>
This sample shows how to call GetUuidValidAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetUuidValidAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetUuidValid(RequestContext)">
      <example>
This sample shows how to call GetUuidValid with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetUuidValid(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="PutUuidValidAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutUuidValidAsync with required request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

RequestContent content = RequestContent.Create(new object[]
{
"73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"
});
Response response = await client.PutUuidValidAsync(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PutUuidValid(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutUuidValid with required request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

RequestContent content = RequestContent.Create(new object[]
{
"73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"
});
Response response = client.PutUuidValid(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetUuidInvalidCharsAsync(RequestContext)">
      <example>
This sample shows how to call GetUuidInvalidCharsAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetUuidInvalidCharsAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetUuidInvalidChars(RequestContext)">
      <example>
This sample shows how to call GetUuidInvalidChars with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetUuidInvalidChars(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetDateValidAsync(RequestContext)">
      <example>
This sample shows how to call GetDateValidAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetDateValidAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetDateValid(RequestContext)">
      <example>
This sample shows how to call GetDateValid with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetDateValid(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="PutDateValidAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutDateValidAsync with required request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

RequestContent content = RequestContent.Create(new object[]
{
"2022-05-10"
});
Response response = await client.PutDateValidAsync(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PutDateValid(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutDateValid with required request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

RequestContent content = RequestContent.Create(new object[]
{
"2022-05-10"
});
Response response = client.PutDateValid(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetDateInvalidNullAsync(RequestContext)">
      <example>
This sample shows how to call GetDateInvalidNullAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetDateInvalidNullAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetDateInvalidNull(RequestContext)">
      <example>
This sample shows how to call GetDateInvalidNull with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetDateInvalidNull(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetDateInvalidCharsAsync(RequestContext)">
      <example>
This sample shows how to call GetDateInvalidCharsAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetDateInvalidCharsAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetDateInvalidChars(RequestContext)">
      <example>
This sample shows how to call GetDateInvalidChars with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetDateInvalidChars(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetDateTimeValidAsync(RequestContext)">
      <example>
This sample shows how to call GetDateTimeValidAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetDateTimeValidAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetDateTimeValid(RequestContext)">
      <example>
This sample shows how to call GetDateTimeValid with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetDateTimeValid(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="PutDateTimeValidAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutDateTimeValidAsync with required request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

RequestContent content = RequestContent.Create(new object[]
{
"2022-05-10T18:57:31.2311892Z"
});
Response response = await client.PutDateTimeValidAsync(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PutDateTimeValid(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutDateTimeValid with required request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

RequestContent content = RequestContent.Create(new object[]
{
"2022-05-10T18:57:31.2311892Z"
});
Response response = client.PutDateTimeValid(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetDateTimeInvalidNullAsync(RequestContext)">
      <example>
This sample shows how to call GetDateTimeInvalidNullAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetDateTimeInvalidNullAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetDateTimeInvalidNull(RequestContext)">
      <example>
This sample shows how to call GetDateTimeInvalidNull with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetDateTimeInvalidNull(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetDateTimeInvalidCharsAsync(RequestContext)">
      <example>
This sample shows how to call GetDateTimeInvalidCharsAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetDateTimeInvalidCharsAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetDateTimeInvalidChars(RequestContext)">
      <example>
This sample shows how to call GetDateTimeInvalidChars with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetDateTimeInvalidChars(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetDateTimeRfc1123ValidAsync(RequestContext)">
      <example>
This sample shows how to call GetDateTimeRfc1123ValidAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetDateTimeRfc1123ValidAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetDateTimeRfc1123Valid(RequestContext)">
      <example>
This sample shows how to call GetDateTimeRfc1123Valid with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetDateTimeRfc1123Valid(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="PutDateTimeRfc1123ValidAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutDateTimeRfc1123ValidAsync with required request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

RequestContent content = RequestContent.Create(new object[]
{
"Tue, 10 May 2022 18:57:31 GMT"
});
Response response = await client.PutDateTimeRfc1123ValidAsync(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PutDateTimeRfc1123Valid(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutDateTimeRfc1123Valid with required request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

RequestContent content = RequestContent.Create(new object[]
{
"Tue, 10 May 2022 18:57:31 GMT"
});
Response response = client.PutDateTimeRfc1123Valid(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetDurationValidAsync(RequestContext)">
      <example>
This sample shows how to call GetDurationValidAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetDurationValidAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetDurationValid(RequestContext)">
      <example>
This sample shows how to call GetDurationValid with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetDurationValid(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="PutDurationValidAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutDurationValidAsync with required request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

RequestContent content = RequestContent.Create(new object[]
{
"PT1H23M45S"
});
Response response = await client.PutDurationValidAsync(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PutDurationValid(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutDurationValid with required request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

RequestContent content = RequestContent.Create(new object[]
{
"PT1H23M45S"
});
Response response = client.PutDurationValid(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetByteValidAsync(RequestContext)">
      <example>
This sample shows how to call GetByteValidAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetByteValidAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetByteValid(RequestContext)">
      <example>
This sample shows how to call GetByteValid with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetByteValid(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="PutByteValidAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutByteValidAsync with required request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

RequestContent content = RequestContent.Create(new object[]
{
new Dictionary<string, object>()
});
Response response = await client.PutByteValidAsync(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PutByteValid(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutByteValid with required request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

RequestContent content = RequestContent.Create(new object[]
{
new Dictionary<string, object>()
});
Response response = client.PutByteValid(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetByteInvalidNullAsync(RequestContext)">
      <example>
This sample shows how to call GetByteInvalidNullAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetByteInvalidNullAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetByteInvalidNull(RequestContext)">
      <example>
This sample shows how to call GetByteInvalidNull with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetByteInvalidNull(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetBase64UrlAsync(RequestContext)">
      <example>
This sample shows how to call GetBase64UrlAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetBase64UrlAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetBase64Url(RequestContext)">
      <example>
This sample shows how to call GetBase64Url with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetBase64Url(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetComplexNullAsync(RequestContext)">
      <example>
This sample shows how to call GetComplexNullAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetComplexNullAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("integer").ToString());
Console.WriteLine(result[0].GetProperty("string").ToString());
]]></code></example>
    </member>
    <member name="GetComplexNull(RequestContext)">
      <example>
This sample shows how to call GetComplexNull with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetComplexNull(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("integer").ToString());
Console.WriteLine(result[0].GetProperty("string").ToString());
]]></code></example>
    </member>
    <member name="GetComplexEmptyAsync(RequestContext)">
      <example>
This sample shows how to call GetComplexEmptyAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetComplexEmptyAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("integer").ToString());
Console.WriteLine(result[0].GetProperty("string").ToString());
]]></code></example>
    </member>
    <member name="GetComplexEmpty(RequestContext)">
      <example>
This sample shows how to call GetComplexEmpty with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetComplexEmpty(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("integer").ToString());
Console.WriteLine(result[0].GetProperty("string").ToString());
]]></code></example>
    </member>
    <member name="GetComplexItemNullAsync(RequestContext)">
      <example>
This sample shows how to call GetComplexItemNullAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetComplexItemNullAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("integer").ToString());
Console.WriteLine(result[0].GetProperty("string").ToString());
]]></code></example>
    </member>
    <member name="GetComplexItemNull(RequestContext)">
      <example>
This sample shows how to call GetComplexItemNull with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetComplexItemNull(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("integer").ToString());
Console.WriteLine(result[0].GetProperty("string").ToString());
]]></code></example>
    </member>
    <member name="GetComplexItemEmptyAsync(RequestContext)">
      <example>
This sample shows how to call GetComplexItemEmptyAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetComplexItemEmptyAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("integer").ToString());
Console.WriteLine(result[0].GetProperty("string").ToString());
]]></code></example>
    </member>
    <member name="GetComplexItemEmpty(RequestContext)">
      <example>
This sample shows how to call GetComplexItemEmpty with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetComplexItemEmpty(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("integer").ToString());
Console.WriteLine(result[0].GetProperty("string").ToString());
]]></code></example>
    </member>
    <member name="GetComplexValidAsync(RequestContext)">
      <example>
This sample shows how to call GetComplexValidAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetComplexValidAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("integer").ToString());
Console.WriteLine(result[0].GetProperty("string").ToString());
]]></code></example>
    </member>
    <member name="GetComplexValid(RequestContext)">
      <example>
This sample shows how to call GetComplexValid with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetComplexValid(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("integer").ToString());
Console.WriteLine(result[0].GetProperty("string").ToString());
]]></code></example>
    </member>
    <member name="PutComplexValidAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutComplexValidAsync with required request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

RequestContent content = RequestContent.Create(new object[]
{
new Dictionary<string, object>()
{
["integer"] = 1234,
["string"] = "<string>",
}
});
Response response = await client.PutComplexValidAsync(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PutComplexValid(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutComplexValid with required request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

RequestContent content = RequestContent.Create(new object[]
{
new Dictionary<string, object>()
{
["integer"] = 1234,
["string"] = "<string>",
}
});
Response response = client.PutComplexValid(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetArrayNullAsync(RequestContext)">
      <example>
This sample shows how to call GetArrayNullAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetArrayNullAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0][0].ToString());
]]></code></example>
    </member>
    <member name="GetArrayNull(RequestContext)">
      <example>
This sample shows how to call GetArrayNull with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetArrayNull(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0][0].ToString());
]]></code></example>
    </member>
    <member name="GetArrayEmptyAsync(RequestContext)">
      <example>
This sample shows how to call GetArrayEmptyAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetArrayEmptyAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0][0].ToString());
]]></code></example>
    </member>
    <member name="GetArrayEmpty(RequestContext)">
      <example>
This sample shows how to call GetArrayEmpty with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetArrayEmpty(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0][0].ToString());
]]></code></example>
    </member>
    <member name="GetArrayItemNullAsync(RequestContext)">
      <example>
This sample shows how to call GetArrayItemNullAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetArrayItemNullAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0][0].ToString());
]]></code></example>
    </member>
    <member name="GetArrayItemNull(RequestContext)">
      <example>
This sample shows how to call GetArrayItemNull with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetArrayItemNull(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0][0].ToString());
]]></code></example>
    </member>
    <member name="GetArrayItemEmptyAsync(RequestContext)">
      <example>
This sample shows how to call GetArrayItemEmptyAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetArrayItemEmptyAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0][0].ToString());
]]></code></example>
    </member>
    <member name="GetArrayItemEmpty(RequestContext)">
      <example>
This sample shows how to call GetArrayItemEmpty with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetArrayItemEmpty(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0][0].ToString());
]]></code></example>
    </member>
    <member name="GetArrayValidAsync(RequestContext)">
      <example>
This sample shows how to call GetArrayValidAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetArrayValidAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0][0].ToString());
]]></code></example>
    </member>
    <member name="GetArrayValid(RequestContext)">
      <example>
This sample shows how to call GetArrayValid with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetArrayValid(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0][0].ToString());
]]></code></example>
    </member>
    <member name="PutArrayValidAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutArrayValidAsync with required request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

RequestContent content = RequestContent.Create(new object[]
{
new object[]
{
"<arrayBody>"
}
});
Response response = await client.PutArrayValidAsync(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PutArrayValid(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutArrayValid with required request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

RequestContent content = RequestContent.Create(new object[]
{
new object[]
{
"<arrayBody>"
}
});
Response response = client.PutArrayValid(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetDictionaryNullAsync(RequestContext)">
      <example>
This sample shows how to call GetDictionaryNullAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetDictionaryNullAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetDictionaryNull(RequestContext)">
      <example>
This sample shows how to call GetDictionaryNull with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetDictionaryNull(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetDictionaryEmptyAsync(RequestContext)">
      <example>
This sample shows how to call GetDictionaryEmptyAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetDictionaryEmptyAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetDictionaryEmpty(RequestContext)">
      <example>
This sample shows how to call GetDictionaryEmpty with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetDictionaryEmpty(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetDictionaryItemNullAsync(RequestContext)">
      <example>
This sample shows how to call GetDictionaryItemNullAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetDictionaryItemNullAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetDictionaryItemNull(RequestContext)">
      <example>
This sample shows how to call GetDictionaryItemNull with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetDictionaryItemNull(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetDictionaryItemEmptyAsync(RequestContext)">
      <example>
This sample shows how to call GetDictionaryItemEmptyAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetDictionaryItemEmptyAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetDictionaryItemEmpty(RequestContext)">
      <example>
This sample shows how to call GetDictionaryItemEmpty with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetDictionaryItemEmpty(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetDictionaryValidAsync(RequestContext)">
      <example>
This sample shows how to call GetDictionaryValidAsync with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = await client.GetDictionaryValidAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetDictionaryValid(RequestContext)">
      <example>
This sample shows how to call GetDictionaryValid with required parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

Response response = client.GetDictionaryValid(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="PutDictionaryValidAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutDictionaryValidAsync with required request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

RequestContent content = RequestContent.Create(new object[]
{
new Dictionary<string, object>()
{
["key"] = "<arrayBody>",
}
});
Response response = await client.PutDictionaryValidAsync(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PutDictionaryValid(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutDictionaryValid with required request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ArrayClient client = new ArrayClient(credential);

RequestContent content = RequestContent.Create(new object[]
{
new Dictionary<string, object>()
{
["key"] = "<arrayBody>",
}
});
Response response = client.PutDictionaryValid(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
  </members>
</doc>