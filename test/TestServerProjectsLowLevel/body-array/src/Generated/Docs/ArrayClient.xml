<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetNullAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetNullAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetNullAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetNull(global::Azure.RequestContext)">
<example>
This sample shows how to call GetNull and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetNull(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetInvalidAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetInvalidAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetInvalidAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetInvalid(global::Azure.RequestContext)">
<example>
This sample shows how to call GetInvalid and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetInvalid(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetEmptyAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetEmptyAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetEmptyAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetEmpty(global::Azure.RequestContext)">
<example>
This sample shows how to call GetEmpty and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetEmpty(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="PutEmptyAsync(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutEmptyAsync with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

var data = new[] {
    "<String>"
};

Response response = await client.PutEmptyAsync(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="PutEmpty(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutEmpty with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

var data = new[] {
    "<String>"
};

Response response = client.PutEmpty(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetBooleanTfftAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetBooleanTfftAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetBooleanTfftAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetBooleanTfft(global::Azure.RequestContext)">
<example>
This sample shows how to call GetBooleanTfft and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetBooleanTfft(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="PutBooleanTfftAsync(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutBooleanTfftAsync with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

var data = new[] {
    true
};

Response response = await client.PutBooleanTfftAsync(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="PutBooleanTfft(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutBooleanTfft with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

var data = new[] {
    true
};

Response response = client.PutBooleanTfft(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetBooleanInvalidNullAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetBooleanInvalidNullAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetBooleanInvalidNullAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetBooleanInvalidNull(global::Azure.RequestContext)">
<example>
This sample shows how to call GetBooleanInvalidNull and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetBooleanInvalidNull(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetBooleanInvalidStringAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetBooleanInvalidStringAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetBooleanInvalidStringAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetBooleanInvalidString(global::Azure.RequestContext)">
<example>
This sample shows how to call GetBooleanInvalidString and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetBooleanInvalidString(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetIntegerValidAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetIntegerValidAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetIntegerValidAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetIntegerValid(global::Azure.RequestContext)">
<example>
This sample shows how to call GetIntegerValid and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetIntegerValid(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="PutIntegerValidAsync(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutIntegerValidAsync with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

var data = new[] {
    1234
};

Response response = await client.PutIntegerValidAsync(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="PutIntegerValid(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutIntegerValid with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

var data = new[] {
    1234
};

Response response = client.PutIntegerValid(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetIntInvalidNullAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetIntInvalidNullAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetIntInvalidNullAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetIntInvalidNull(global::Azure.RequestContext)">
<example>
This sample shows how to call GetIntInvalidNull and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetIntInvalidNull(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetIntInvalidStringAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetIntInvalidStringAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetIntInvalidStringAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetIntInvalidString(global::Azure.RequestContext)">
<example>
This sample shows how to call GetIntInvalidString and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetIntInvalidString(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetLongValidAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetLongValidAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetLongValidAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetLongValid(global::Azure.RequestContext)">
<example>
This sample shows how to call GetLongValid and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetLongValid(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="PutLongValidAsync(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutLongValidAsync with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

var data = new[] {
    1234L
};

Response response = await client.PutLongValidAsync(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="PutLongValid(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutLongValid with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

var data = new[] {
    1234L
};

Response response = client.PutLongValid(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetLongInvalidNullAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetLongInvalidNullAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetLongInvalidNullAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetLongInvalidNull(global::Azure.RequestContext)">
<example>
This sample shows how to call GetLongInvalidNull and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetLongInvalidNull(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetLongInvalidStringAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetLongInvalidStringAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetLongInvalidStringAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetLongInvalidString(global::Azure.RequestContext)">
<example>
This sample shows how to call GetLongInvalidString and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetLongInvalidString(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetFloatValidAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetFloatValidAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetFloatValidAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetFloatValid(global::Azure.RequestContext)">
<example>
This sample shows how to call GetFloatValid and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetFloatValid(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="PutFloatValidAsync(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutFloatValidAsync with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

var data = new[] {
    123.45f
};

Response response = await client.PutFloatValidAsync(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="PutFloatValid(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutFloatValid with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

var data = new[] {
    123.45f
};

Response response = client.PutFloatValid(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetFloatInvalidNullAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetFloatInvalidNullAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetFloatInvalidNullAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetFloatInvalidNull(global::Azure.RequestContext)">
<example>
This sample shows how to call GetFloatInvalidNull and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetFloatInvalidNull(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetFloatInvalidStringAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetFloatInvalidStringAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetFloatInvalidStringAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetFloatInvalidString(global::Azure.RequestContext)">
<example>
This sample shows how to call GetFloatInvalidString and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetFloatInvalidString(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetDoubleValidAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetDoubleValidAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetDoubleValidAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetDoubleValid(global::Azure.RequestContext)">
<example>
This sample shows how to call GetDoubleValid and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetDoubleValid(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="PutDoubleValidAsync(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutDoubleValidAsync with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

var data = new[] {
    123.45d
};

Response response = await client.PutDoubleValidAsync(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="PutDoubleValid(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutDoubleValid with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

var data = new[] {
    123.45d
};

Response response = client.PutDoubleValid(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetDoubleInvalidNullAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetDoubleInvalidNullAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetDoubleInvalidNullAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetDoubleInvalidNull(global::Azure.RequestContext)">
<example>
This sample shows how to call GetDoubleInvalidNull and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetDoubleInvalidNull(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetDoubleInvalidStringAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetDoubleInvalidStringAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetDoubleInvalidStringAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetDoubleInvalidString(global::Azure.RequestContext)">
<example>
This sample shows how to call GetDoubleInvalidString and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetDoubleInvalidString(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetStringValidAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetStringValidAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetStringValidAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetStringValid(global::Azure.RequestContext)">
<example>
This sample shows how to call GetStringValid and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetStringValid(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="PutStringValidAsync(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutStringValidAsync with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

var data = new[] {
    "<String>"
};

Response response = await client.PutStringValidAsync(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="PutStringValid(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutStringValid with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

var data = new[] {
    "<String>"
};

Response response = client.PutStringValid(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetEnumValidAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetEnumValidAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetEnumValidAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetEnumValid(global::Azure.RequestContext)">
<example>
This sample shows how to call GetEnumValid and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetEnumValid(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="PutEnumValidAsync(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutEnumValidAsync with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

var data = new[] {
    "foo1"
};

Response response = await client.PutEnumValidAsync(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="PutEnumValid(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutEnumValid with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

var data = new[] {
    "foo1"
};

Response response = client.PutEnumValid(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetStringEnumValidAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetStringEnumValidAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetStringEnumValidAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetStringEnumValid(global::Azure.RequestContext)">
<example>
This sample shows how to call GetStringEnumValid and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetStringEnumValid(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="PutStringEnumValidAsync(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutStringEnumValidAsync with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

var data = new[] {
    "foo1"
};

Response response = await client.PutStringEnumValidAsync(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="PutStringEnumValid(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutStringEnumValid with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

var data = new[] {
    "foo1"
};

Response response = client.PutStringEnumValid(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetStringWithNullAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetStringWithNullAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetStringWithNullAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetStringWithNull(global::Azure.RequestContext)">
<example>
This sample shows how to call GetStringWithNull and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetStringWithNull(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetStringWithInvalidAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetStringWithInvalidAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetStringWithInvalidAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetStringWithInvalid(global::Azure.RequestContext)">
<example>
This sample shows how to call GetStringWithInvalid and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetStringWithInvalid(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetUuidValidAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetUuidValidAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetUuidValidAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetUuidValid(global::Azure.RequestContext)">
<example>
This sample shows how to call GetUuidValid and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetUuidValid(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="PutUuidValidAsync(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutUuidValidAsync with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

var data = new[] {
    "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"
};

Response response = await client.PutUuidValidAsync(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="PutUuidValid(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutUuidValid with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

var data = new[] {
    "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"
};

Response response = client.PutUuidValid(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetUuidInvalidCharsAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetUuidInvalidCharsAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetUuidInvalidCharsAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetUuidInvalidChars(global::Azure.RequestContext)">
<example>
This sample shows how to call GetUuidInvalidChars and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetUuidInvalidChars(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetDateValidAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetDateValidAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetDateValidAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetDateValid(global::Azure.RequestContext)">
<example>
This sample shows how to call GetDateValid and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetDateValid(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="PutDateValidAsync(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutDateValidAsync with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

var data = new[] {
    "2022-05-10"
};

Response response = await client.PutDateValidAsync(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="PutDateValid(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutDateValid with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

var data = new[] {
    "2022-05-10"
};

Response response = client.PutDateValid(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetDateInvalidNullAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetDateInvalidNullAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetDateInvalidNullAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetDateInvalidNull(global::Azure.RequestContext)">
<example>
This sample shows how to call GetDateInvalidNull and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetDateInvalidNull(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetDateInvalidCharsAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetDateInvalidCharsAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetDateInvalidCharsAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetDateInvalidChars(global::Azure.RequestContext)">
<example>
This sample shows how to call GetDateInvalidChars and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetDateInvalidChars(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetDateTimeValidAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetDateTimeValidAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetDateTimeValidAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetDateTimeValid(global::Azure.RequestContext)">
<example>
This sample shows how to call GetDateTimeValid and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetDateTimeValid(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="PutDateTimeValidAsync(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutDateTimeValidAsync with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

var data = new[] {
    "2022-05-10T18:57:31.2311892Z"
};

Response response = await client.PutDateTimeValidAsync(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="PutDateTimeValid(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutDateTimeValid with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

var data = new[] {
    "2022-05-10T18:57:31.2311892Z"
};

Response response = client.PutDateTimeValid(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetDateTimeInvalidNullAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetDateTimeInvalidNullAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetDateTimeInvalidNullAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetDateTimeInvalidNull(global::Azure.RequestContext)">
<example>
This sample shows how to call GetDateTimeInvalidNull and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetDateTimeInvalidNull(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetDateTimeInvalidCharsAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetDateTimeInvalidCharsAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetDateTimeInvalidCharsAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetDateTimeInvalidChars(global::Azure.RequestContext)">
<example>
This sample shows how to call GetDateTimeInvalidChars and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetDateTimeInvalidChars(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetDateTimeRfc1123ValidAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetDateTimeRfc1123ValidAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetDateTimeRfc1123ValidAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetDateTimeRfc1123Valid(global::Azure.RequestContext)">
<example>
This sample shows how to call GetDateTimeRfc1123Valid and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetDateTimeRfc1123Valid(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="PutDateTimeRfc1123ValidAsync(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutDateTimeRfc1123ValidAsync with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

var data = new[] {
    "Tue, 10 May 2022 18:57:31 GMT"
};

Response response = await client.PutDateTimeRfc1123ValidAsync(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="PutDateTimeRfc1123Valid(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutDateTimeRfc1123Valid with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

var data = new[] {
    "Tue, 10 May 2022 18:57:31 GMT"
};

Response response = client.PutDateTimeRfc1123Valid(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetDurationValidAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetDurationValidAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetDurationValidAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetDurationValid(global::Azure.RequestContext)">
<example>
This sample shows how to call GetDurationValid and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetDurationValid(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="PutDurationValidAsync(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutDurationValidAsync with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

var data = new[] {
    "PT1H23M45S"
};

Response response = await client.PutDurationValidAsync(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="PutDurationValid(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutDurationValid with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

var data = new[] {
    "PT1H23M45S"
};

Response response = client.PutDurationValid(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetByteValidAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetByteValidAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetByteValidAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetByteValid(global::Azure.RequestContext)">
<example>
This sample shows how to call GetByteValid and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetByteValid(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="PutByteValidAsync(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutByteValidAsync with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

var data = new[] {
    new {}
};

Response response = await client.PutByteValidAsync(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="PutByteValid(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutByteValid with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

var data = new[] {
    new {}
};

Response response = client.PutByteValid(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetByteInvalidNullAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetByteInvalidNullAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetByteInvalidNullAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetByteInvalidNull(global::Azure.RequestContext)">
<example>
This sample shows how to call GetByteInvalidNull and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetByteInvalidNull(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetBase64UrlAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetBase64UrlAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetBase64UrlAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetBase64Url(global::Azure.RequestContext)">
<example>
This sample shows how to call GetBase64Url and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetBase64Url(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
</example>
    </member>
    <member name="GetComplexNullAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetComplexNullAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetComplexNullAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("integer").ToString());
Console.WriteLine(result[0].GetProperty("string").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>Product</c>:
<code>{
  integer: number, # Optional.
  string: string, # Optional.
}
</code>

</remarks>
    </member>
    <member name="GetComplexNull(global::Azure.RequestContext)">
<example>
This sample shows how to call GetComplexNull and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetComplexNull(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("integer").ToString());
Console.WriteLine(result[0].GetProperty("string").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>Product</c>:
<code>{
  integer: number, # Optional.
  string: string, # Optional.
}
</code>

</remarks>
    </member>
    <member name="GetComplexEmptyAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetComplexEmptyAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetComplexEmptyAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("integer").ToString());
Console.WriteLine(result[0].GetProperty("string").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>Product</c>:
<code>{
  integer: number, # Optional.
  string: string, # Optional.
}
</code>

</remarks>
    </member>
    <member name="GetComplexEmpty(global::Azure.RequestContext)">
<example>
This sample shows how to call GetComplexEmpty and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetComplexEmpty(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("integer").ToString());
Console.WriteLine(result[0].GetProperty("string").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>Product</c>:
<code>{
  integer: number, # Optional.
  string: string, # Optional.
}
</code>

</remarks>
    </member>
    <member name="GetComplexItemNullAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetComplexItemNullAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetComplexItemNullAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("integer").ToString());
Console.WriteLine(result[0].GetProperty("string").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>Product</c>:
<code>{
  integer: number, # Optional.
  string: string, # Optional.
}
</code>

</remarks>
    </member>
    <member name="GetComplexItemNull(global::Azure.RequestContext)">
<example>
This sample shows how to call GetComplexItemNull and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetComplexItemNull(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("integer").ToString());
Console.WriteLine(result[0].GetProperty("string").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>Product</c>:
<code>{
  integer: number, # Optional.
  string: string, # Optional.
}
</code>

</remarks>
    </member>
    <member name="GetComplexItemEmptyAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetComplexItemEmptyAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetComplexItemEmptyAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("integer").ToString());
Console.WriteLine(result[0].GetProperty("string").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>Product</c>:
<code>{
  integer: number, # Optional.
  string: string, # Optional.
}
</code>

</remarks>
    </member>
    <member name="GetComplexItemEmpty(global::Azure.RequestContext)">
<example>
This sample shows how to call GetComplexItemEmpty and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetComplexItemEmpty(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("integer").ToString());
Console.WriteLine(result[0].GetProperty("string").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>Product</c>:
<code>{
  integer: number, # Optional.
  string: string, # Optional.
}
</code>

</remarks>
    </member>
    <member name="GetComplexValidAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetComplexValidAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetComplexValidAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("integer").ToString());
Console.WriteLine(result[0].GetProperty("string").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>Product</c>:
<code>{
  integer: number, # Optional.
  string: string, # Optional.
}
</code>

</remarks>
    </member>
    <member name="GetComplexValid(global::Azure.RequestContext)">
<example>
This sample shows how to call GetComplexValid and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetComplexValid(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("integer").ToString());
Console.WriteLine(result[0].GetProperty("string").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>Product</c>:
<code>{
  integer: number, # Optional.
  string: string, # Optional.
}
</code>

</remarks>
    </member>
    <member name="PutComplexValidAsync(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutComplexValidAsync with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

var data = new[] {
    new {
        integer = 1234,
        @string = "<string>",
    }
};

Response response = await client.PutComplexValidAsync(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
<remarks>
Below is the JSON schema for the request payload.

Request Body:

Schema for <c>Product</c>:
<code>{
  integer: number, # Optional.
  string: string, # Optional.
}
</code>

</remarks>
    </member>
    <member name="PutComplexValid(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutComplexValid with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

var data = new[] {
    new {
        integer = 1234,
        @string = "<string>",
    }
};

Response response = client.PutComplexValid(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
<remarks>
Below is the JSON schema for the request payload.

Request Body:

Schema for <c>Product</c>:
<code>{
  integer: number, # Optional.
  string: string, # Optional.
}
</code>

</remarks>
    </member>
    <member name="GetArrayNullAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetArrayNullAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetArrayNullAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0][0].ToString());
]]></code>
</example>
    </member>
    <member name="GetArrayNull(global::Azure.RequestContext)">
<example>
This sample shows how to call GetArrayNull and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetArrayNull(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0][0].ToString());
]]></code>
</example>
    </member>
    <member name="GetArrayEmptyAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetArrayEmptyAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetArrayEmptyAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0][0].ToString());
]]></code>
</example>
    </member>
    <member name="GetArrayEmpty(global::Azure.RequestContext)">
<example>
This sample shows how to call GetArrayEmpty and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetArrayEmpty(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0][0].ToString());
]]></code>
</example>
    </member>
    <member name="GetArrayItemNullAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetArrayItemNullAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetArrayItemNullAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0][0].ToString());
]]></code>
</example>
    </member>
    <member name="GetArrayItemNull(global::Azure.RequestContext)">
<example>
This sample shows how to call GetArrayItemNull and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetArrayItemNull(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0][0].ToString());
]]></code>
</example>
    </member>
    <member name="GetArrayItemEmptyAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetArrayItemEmptyAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetArrayItemEmptyAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0][0].ToString());
]]></code>
</example>
    </member>
    <member name="GetArrayItemEmpty(global::Azure.RequestContext)">
<example>
This sample shows how to call GetArrayItemEmpty and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetArrayItemEmpty(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0][0].ToString());
]]></code>
</example>
    </member>
    <member name="GetArrayValidAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetArrayValidAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetArrayValidAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0][0].ToString());
]]></code>
</example>
    </member>
    <member name="GetArrayValid(global::Azure.RequestContext)">
<example>
This sample shows how to call GetArrayValid and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetArrayValid(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0][0].ToString());
]]></code>
</example>
    </member>
    <member name="PutArrayValidAsync(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutArrayValidAsync with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

var data = new[] {
    new[] {
        "<String>"
    }
};

Response response = await client.PutArrayValidAsync(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="PutArrayValid(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutArrayValid with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

var data = new[] {
    new[] {
        "<String>"
    }
};

Response response = client.PutArrayValid(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetDictionaryNullAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetDictionaryNullAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetDictionaryNullAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("<test>").ToString());
]]></code>
</example>
    </member>
    <member name="GetDictionaryNull(global::Azure.RequestContext)">
<example>
This sample shows how to call GetDictionaryNull and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetDictionaryNull(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("<test>").ToString());
]]></code>
</example>
    </member>
    <member name="GetDictionaryEmptyAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetDictionaryEmptyAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetDictionaryEmptyAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("<test>").ToString());
]]></code>
</example>
    </member>
    <member name="GetDictionaryEmpty(global::Azure.RequestContext)">
<example>
This sample shows how to call GetDictionaryEmpty and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetDictionaryEmpty(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("<test>").ToString());
]]></code>
</example>
    </member>
    <member name="GetDictionaryItemNullAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetDictionaryItemNullAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetDictionaryItemNullAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("<test>").ToString());
]]></code>
</example>
    </member>
    <member name="GetDictionaryItemNull(global::Azure.RequestContext)">
<example>
This sample shows how to call GetDictionaryItemNull and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetDictionaryItemNull(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("<test>").ToString());
]]></code>
</example>
    </member>
    <member name="GetDictionaryItemEmptyAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetDictionaryItemEmptyAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetDictionaryItemEmptyAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("<test>").ToString());
]]></code>
</example>
    </member>
    <member name="GetDictionaryItemEmpty(global::Azure.RequestContext)">
<example>
This sample shows how to call GetDictionaryItemEmpty and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetDictionaryItemEmpty(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("<test>").ToString());
]]></code>
</example>
    </member>
    <member name="GetDictionaryValidAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetDictionaryValidAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = await client.GetDictionaryValidAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("<test>").ToString());
]]></code>
</example>
    </member>
    <member name="GetDictionaryValid(global::Azure.RequestContext)">
<example>
This sample shows how to call GetDictionaryValid and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

Response response = client.GetDictionaryValid(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("<test>").ToString());
]]></code>
</example>
    </member>
    <member name="PutDictionaryValidAsync(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutDictionaryValidAsync with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

var data = new[] {
    new {
        key = "<String>",
    }
};

Response response = await client.PutDictionaryValidAsync(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="PutDictionaryValid(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutDictionaryValid with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ArrayClient(credential);

var data = new[] {
    new {
        key = "<String>",
    }
};

Response response = client.PutDictionaryValid(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
  </members>
</doc>