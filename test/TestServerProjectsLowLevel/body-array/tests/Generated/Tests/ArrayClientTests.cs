// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using body_array_LowLevel;

namespace body_array_LowLevel.Tests
{
    public class ArrayClientTests : body_array_LowLevelTestBase
    {
        public ArrayClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        public async Task GetNull_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetNullAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetNullAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetInvalid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetInvalidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetInvalid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetInvalidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetEmpty_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetEmptyAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetEmpty_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetEmptyAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task PutEmpty_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new List<object>()
{
"<arrayBody>"
});
            Response response = await client.PutEmptyAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task PutEmpty_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new List<object>()
{
"<arrayBody>"
});
            Response response = await client.PutEmptyAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task GetBooleanTfft_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetBooleanTfftAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetBooleanTfft_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetBooleanTfftAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task PutBooleanTfft_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new List<object>()
{
true
});
            Response response = await client.PutBooleanTfftAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task PutBooleanTfft_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new List<object>()
{
true
});
            Response response = await client.PutBooleanTfftAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task GetBooleanInvalidNull_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetBooleanInvalidNullAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetBooleanInvalidNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetBooleanInvalidNullAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetBooleanInvalidString_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetBooleanInvalidStringAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetBooleanInvalidString_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetBooleanInvalidStringAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetIntegerValid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetIntegerValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetIntegerValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetIntegerValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task PutIntegerValid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new List<object>()
{
1234
});
            Response response = await client.PutIntegerValidAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task PutIntegerValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new List<object>()
{
1234
});
            Response response = await client.PutIntegerValidAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task GetIntInvalidNull_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetIntInvalidNullAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetIntInvalidNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetIntInvalidNullAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetIntInvalidString_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetIntInvalidStringAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetIntInvalidString_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetIntInvalidStringAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetLongValid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetLongValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetLongValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetLongValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task PutLongValid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new List<object>()
{
1234L
});
            Response response = await client.PutLongValidAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task PutLongValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new List<object>()
{
1234L
});
            Response response = await client.PutLongValidAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task GetLongInvalidNull_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetLongInvalidNullAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetLongInvalidNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetLongInvalidNullAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetLongInvalidString_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetLongInvalidStringAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetLongInvalidString_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetLongInvalidStringAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetFloatValid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetFloatValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetFloatValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetFloatValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task PutFloatValid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new List<object>()
{
123.45F
});
            Response response = await client.PutFloatValidAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task PutFloatValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new List<object>()
{
123.45F
});
            Response response = await client.PutFloatValidAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task GetFloatInvalidNull_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetFloatInvalidNullAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetFloatInvalidNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetFloatInvalidNullAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetFloatInvalidString_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetFloatInvalidStringAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetFloatInvalidString_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetFloatInvalidStringAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetDoubleValid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetDoubleValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetDoubleValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetDoubleValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task PutDoubleValid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new List<object>()
{
123.45
});
            Response response = await client.PutDoubleValidAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task PutDoubleValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new List<object>()
{
123.45
});
            Response response = await client.PutDoubleValidAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task GetDoubleInvalidNull_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetDoubleInvalidNullAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetDoubleInvalidNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetDoubleInvalidNullAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetDoubleInvalidString_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetDoubleInvalidStringAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetDoubleInvalidString_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetDoubleInvalidStringAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetStringValid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetStringValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetStringValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetStringValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task PutStringValid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new List<object>()
{
"<arrayBody>"
});
            Response response = await client.PutStringValidAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task PutStringValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new List<object>()
{
"<arrayBody>"
});
            Response response = await client.PutStringValidAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task GetEnumValid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetEnumValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetEnumValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetEnumValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task PutEnumValid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new List<object>()
{
"foo1"
});
            Response response = await client.PutEnumValidAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task PutEnumValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new List<object>()
{
"foo1"
});
            Response response = await client.PutEnumValidAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task GetStringEnumValid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetStringEnumValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetStringEnumValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetStringEnumValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task PutStringEnumValid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new List<object>()
{
"foo1"
});
            Response response = await client.PutStringEnumValidAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task PutStringEnumValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new List<object>()
{
"foo1"
});
            Response response = await client.PutStringEnumValidAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task GetStringWithNull_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetStringWithNullAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetStringWithNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetStringWithNullAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetStringWithInvalid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetStringWithInvalidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetStringWithInvalid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetStringWithInvalidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetUuidValid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetUuidValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetUuidValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetUuidValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task PutUuidValid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new List<object>()
{
"73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"
});
            Response response = await client.PutUuidValidAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task PutUuidValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new List<object>()
{
"73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"
});
            Response response = await client.PutUuidValidAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task GetUuidInvalidChars_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetUuidInvalidCharsAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetUuidInvalidChars_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetUuidInvalidCharsAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetDateValid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetDateValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetDateValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetDateValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task PutDateValid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new List<object>()
{
"2022-05-10"
});
            Response response = await client.PutDateValidAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task PutDateValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new List<object>()
{
"2022-05-10"
});
            Response response = await client.PutDateValidAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task GetDateInvalidNull_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetDateInvalidNullAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetDateInvalidNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetDateInvalidNullAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetDateInvalidChars_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetDateInvalidCharsAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetDateInvalidChars_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetDateInvalidCharsAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetDateTimeValid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetDateTimeValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetDateTimeValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetDateTimeValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task PutDateTimeValid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new List<object>()
{
"2022-05-10T18:57:31.2311892Z"
});
            Response response = await client.PutDateTimeValidAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task PutDateTimeValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new List<object>()
{
"2022-05-10T18:57:31.2311892Z"
});
            Response response = await client.PutDateTimeValidAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task GetDateTimeInvalidNull_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetDateTimeInvalidNullAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetDateTimeInvalidNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetDateTimeInvalidNullAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetDateTimeInvalidChars_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetDateTimeInvalidCharsAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetDateTimeInvalidChars_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetDateTimeInvalidCharsAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetDateTimeRfc1123Valid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetDateTimeRfc1123ValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetDateTimeRfc1123Valid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetDateTimeRfc1123ValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task PutDateTimeRfc1123Valid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new List<object>()
{
"Tue, 10 May 2022 18:57:31 GMT"
});
            Response response = await client.PutDateTimeRfc1123ValidAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task PutDateTimeRfc1123Valid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new List<object>()
{
"Tue, 10 May 2022 18:57:31 GMT"
});
            Response response = await client.PutDateTimeRfc1123ValidAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task GetDurationValid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetDurationValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetDurationValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetDurationValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task PutDurationValid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new List<object>()
{
"PT1H23M45S"
});
            Response response = await client.PutDurationValidAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task PutDurationValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new List<object>()
{
"PT1H23M45S"
});
            Response response = await client.PutDurationValidAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task GetByteValid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetByteValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetByteValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetByteValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task PutByteValid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new List<object>()
{
new object()
});
            Response response = await client.PutByteValidAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task PutByteValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new List<object>()
{
new object()
});
            Response response = await client.PutByteValidAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task GetByteInvalidNull_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetByteInvalidNullAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetByteInvalidNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetByteInvalidNullAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetBase64Url_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetBase64UrlAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetBase64Url_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetBase64UrlAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetComplexNull_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetComplexNullAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetComplexNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetComplexNullAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("integer").ToString());
            Console.WriteLine(result[0].GetProperty("string").ToString());
        }

        [Test]
        public async Task GetComplexEmpty_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetComplexEmptyAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetComplexEmpty_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetComplexEmptyAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("integer").ToString());
            Console.WriteLine(result[0].GetProperty("string").ToString());
        }

        [Test]
        public async Task GetComplexItemNull_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetComplexItemNullAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetComplexItemNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetComplexItemNullAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("integer").ToString());
            Console.WriteLine(result[0].GetProperty("string").ToString());
        }

        [Test]
        public async Task GetComplexItemEmpty_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetComplexItemEmptyAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetComplexItemEmpty_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetComplexItemEmptyAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("integer").ToString());
            Console.WriteLine(result[0].GetProperty("string").ToString());
        }

        [Test]
        public async Task GetComplexValid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetComplexValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        public async Task GetComplexValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetComplexValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("integer").ToString());
            Console.WriteLine(result[0].GetProperty("string").ToString());
        }

        [Test]
        public async Task PutComplexValid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new List<object>()
{
new object()
});
            Response response = await client.PutComplexValidAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task PutComplexValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new List<object>()
{
new Dictionary<string, object>()
{
["integer"] = 1234,
["string"] = "<string>",
}
});
            Response response = await client.PutComplexValidAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task GetArrayNull_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetArrayNullAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0][0].ToString());
        }

        [Test]
        public async Task GetArrayNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetArrayNullAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0][0].ToString());
        }

        [Test]
        public async Task GetArrayEmpty_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetArrayEmptyAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0][0].ToString());
        }

        [Test]
        public async Task GetArrayEmpty_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetArrayEmptyAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0][0].ToString());
        }

        [Test]
        public async Task GetArrayItemNull_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetArrayItemNullAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0][0].ToString());
        }

        [Test]
        public async Task GetArrayItemNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetArrayItemNullAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0][0].ToString());
        }

        [Test]
        public async Task GetArrayItemEmpty_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetArrayItemEmptyAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0][0].ToString());
        }

        [Test]
        public async Task GetArrayItemEmpty_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetArrayItemEmptyAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0][0].ToString());
        }

        [Test]
        public async Task GetArrayValid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetArrayValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0][0].ToString());
        }

        [Test]
        public async Task GetArrayValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetArrayValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0][0].ToString());
        }

        [Test]
        public async Task PutArrayValid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new List<object>()
{
new List<object>()
{
"<arrayBody>"
}
});
            Response response = await client.PutArrayValidAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task PutArrayValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new List<object>()
{
new List<object>()
{
"<arrayBody>"
}
});
            Response response = await client.PutArrayValidAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task GetDictionaryNull_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetDictionaryNullAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("<key>").ToString());
        }

        [Test]
        public async Task GetDictionaryNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetDictionaryNullAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("<key>").ToString());
        }

        [Test]
        public async Task GetDictionaryEmpty_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetDictionaryEmptyAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("<key>").ToString());
        }

        [Test]
        public async Task GetDictionaryEmpty_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetDictionaryEmptyAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("<key>").ToString());
        }

        [Test]
        public async Task GetDictionaryItemNull_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetDictionaryItemNullAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("<key>").ToString());
        }

        [Test]
        public async Task GetDictionaryItemNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetDictionaryItemNullAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("<key>").ToString());
        }

        [Test]
        public async Task GetDictionaryItemEmpty_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetDictionaryItemEmptyAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("<key>").ToString());
        }

        [Test]
        public async Task GetDictionaryItemEmpty_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetDictionaryItemEmptyAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("<key>").ToString());
        }

        [Test]
        public async Task GetDictionaryValid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetDictionaryValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("<key>").ToString());
        }

        [Test]
        public async Task GetDictionaryValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            Response response = await client.GetDictionaryValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("<key>").ToString());
        }

        [Test]
        public async Task PutDictionaryValid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new List<object>()
{
new
{
key = "<arrayBody>",
}
});
            Response response = await client.PutDictionaryValidAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task PutDictionaryValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ArrayClient client = CreateArrayClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new List<object>()
{
new
{
key = "<arrayBody>",
}
});
            Response response = await client.PutDictionaryValidAsync(content);
            Console.WriteLine(response.Status);
        }
    }
}
