// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using body_complex_LowLevel;

namespace body_complex_LowLevel.Tests
{
    public class InheritanceClientTests : body_complex_LowLevelTestBase
    {
        public InheritanceClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        public async Task GetValid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            InheritanceClient client = CreateInheritanceClient(credential, endpoint);

            Response response = await client.GetValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        public async Task GetValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            InheritanceClient client = CreateInheritanceClient(credential, endpoint);

            Response response = await client.GetValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("breed").ToString());
            Console.WriteLine(result.GetProperty("color").ToString());
            Console.WriteLine(result.GetProperty("hates")[0].GetProperty("food").ToString());
            Console.WriteLine(result.GetProperty("hates")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("hates")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }

        [Test]
        public async Task PutValid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            InheritanceClient client = CreateInheritanceClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new object());
            Response response = await client.PutValidAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task PutValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            InheritanceClient client = CreateInheritanceClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new
            {
                breed = "<breed>",
                color = "<color>",
                hates = new List<object>()
{
new
{
food = "<food>",
id = 1234,
name = "<name>",
}
},
                id = 1234,
                name = "<name>",
            });
            Response response = await client.PutValidAsync(content);
            Console.WriteLine(response.Status);
        }
    }
}
