// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using body_complex_LowLevel;

namespace body_complex_LowLevel.Tests
{
    public class DictionaryClientTests : body_complex_LowLevelTestBase
    {
        public DictionaryClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        public async Task GetValid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            DictionaryClient client = CreateDictionaryClient(credential, endpoint);

            Response response = await client.GetValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        public async Task GetValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            DictionaryClient client = CreateDictionaryClient(credential, endpoint);

            Response response = await client.GetValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("defaultProgram").GetProperty("<key>").ToString());
        }

        [Test]
        public async Task PutValid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            DictionaryClient client = CreateDictionaryClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new object());
            Response response = await client.PutValidAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task PutValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            DictionaryClient client = CreateDictionaryClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new
            {
                defaultProgram = new
                {
                    key = "<defaultProgram>",
                },
            });
            Response response = await client.PutValidAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task GetEmpty_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            DictionaryClient client = CreateDictionaryClient(credential, endpoint);

            Response response = await client.GetEmptyAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        public async Task GetEmpty_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            DictionaryClient client = CreateDictionaryClient(credential, endpoint);

            Response response = await client.GetEmptyAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("defaultProgram").GetProperty("<key>").ToString());
        }

        [Test]
        public async Task PutEmpty_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            DictionaryClient client = CreateDictionaryClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new object());
            Response response = await client.PutEmptyAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task PutEmpty_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            DictionaryClient client = CreateDictionaryClient(credential, endpoint);

            RequestContent content = RequestContent.Create(new
            {
                defaultProgram = new
                {
                    key = "<defaultProgram>",
                },
            });
            Response response = await client.PutEmptyAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task GetNull_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            DictionaryClient client = CreateDictionaryClient(credential, endpoint);

            Response response = await client.GetNullAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        public async Task GetNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            DictionaryClient client = CreateDictionaryClient(credential, endpoint);

            Response response = await client.GetNullAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("defaultProgram").GetProperty("<key>").ToString());
        }

        [Test]
        public async Task GetNotProvided_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            DictionaryClient client = CreateDictionaryClient(credential, endpoint);

            Response response = await client.GetNotProvidedAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        public async Task GetNotProvided_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            DictionaryClient client = CreateDictionaryClient(credential, endpoint);

            Response response = await client.GetNotProvidedAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("defaultProgram").GetProperty("<key>").ToString());
        }
    }
}
