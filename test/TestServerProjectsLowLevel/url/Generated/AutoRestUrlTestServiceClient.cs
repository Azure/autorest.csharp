// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using Azure;
using Azure.Core;
using Azure.Core.Pipeline;

namespace url_LowLevel
{
    // Data plane generated client. The AutoRestUrlTestService service client.
    /// <summary> The AutoRestUrlTestService service client. </summary>
    public partial class AutoRestUrlTestServiceClient
    {
        private const string AuthorizationHeader = "Fake-Subscription-Key";
        private readonly AzureKeyCredential _keyCredential;
        private readonly HttpPipeline _pipeline;
        private readonly Uri _endpoint;

        /// <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        internal ClientDiagnostics ClientDiagnostics { get; }

        /// <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        public virtual HttpPipeline Pipeline => _pipeline;

        /// <summary> Initializes a new instance of AutoRestUrlTestServiceClient for mocking. </summary>
        protected AutoRestUrlTestServiceClient()
        {
        }

        /// <summary> Initializes a new instance of AutoRestUrlTestServiceClient. </summary>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="credential"/> is null. </exception>
        public AutoRestUrlTestServiceClient(AzureKeyCredential credential) : this(credential, new Uri("http://localhost:3000"), new AutoRestUrlTestServiceClientOptions())
        {
        }

        /// <summary> Initializes a new instance of AutoRestUrlTestServiceClient. </summary>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        public AutoRestUrlTestServiceClient(AzureKeyCredential credential, Uri endpoint, AutoRestUrlTestServiceClientOptions options)
        {
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new AutoRestUrlTestServiceClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _keyCredential = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new AzureKeyCredentialPolicy(_keyCredential, AuthorizationHeader) }, new ResponseClassifier());
            _endpoint = endpoint;
        }

        private Paths _cachedPaths;
        private Queries _cachedQueries;

        /// <summary> Initializes a new instance of Paths. </summary>
        public virtual Paths GetPathsClient()
        {
            return Volatile.Read(ref _cachedPaths) ?? Interlocked.CompareExchange(ref _cachedPaths, new Paths(ClientDiagnostics, _pipeline, _keyCredential, _endpoint), null) ?? _cachedPaths;
        }

        /// <summary> Initializes a new instance of Queries. </summary>
        public virtual Queries GetQueriesClient()
        {
            return Volatile.Read(ref _cachedQueries) ?? Interlocked.CompareExchange(ref _cachedQueries, new Queries(ClientDiagnostics, _pipeline, _keyCredential, _endpoint), null) ?? _cachedQueries;
        }

        /// <summary> Initializes a new instance of PathItems. </summary>
        /// <param name="globalStringPath"> A string value &apos;globalItemStringPath&apos; that appears in the path. </param>
        /// <param name="globalStringQuery"> should contain value null. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="globalStringPath"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="globalStringPath"/> is an empty string, and was expected to be non-empty. </exception>
        public virtual PathItems GetPathItemsClient(string globalStringPath, string globalStringQuery = null)
        {
            Argument.AssertNotNullOrEmpty(globalStringPath, nameof(globalStringPath));

            return new PathItems(ClientDiagnostics, _pipeline, _keyCredential, globalStringPath, _endpoint, globalStringQuery);
        }
    }
}
