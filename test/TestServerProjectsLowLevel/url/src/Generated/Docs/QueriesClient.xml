<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetBooleanTrueAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetBooleanTrueAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.GetBooleanTrueAsync(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetBooleanTrue(global::Azure.RequestContext)">
<example>
This sample shows how to call GetBooleanTrue.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.GetBooleanTrue(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetBooleanFalseAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetBooleanFalseAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.GetBooleanFalseAsync(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetBooleanFalse(global::Azure.RequestContext)">
<example>
This sample shows how to call GetBooleanFalse.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.GetBooleanFalse(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetBooleanNullAsync(bool?,global::Azure.RequestContext)">
<example>
This sample shows how to call GetBooleanNullAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.GetBooleanNullAsync();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call GetBooleanNullAsync with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.GetBooleanNullAsync(true, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetBooleanNull(bool?,global::Azure.RequestContext)">
<example>
This sample shows how to call GetBooleanNull.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.GetBooleanNull();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call GetBooleanNull with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.GetBooleanNull(true, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetIntOneMillionAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetIntOneMillionAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.GetIntOneMillionAsync(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetIntOneMillion(global::Azure.RequestContext)">
<example>
This sample shows how to call GetIntOneMillion.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.GetIntOneMillion(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetIntNegativeOneMillionAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetIntNegativeOneMillionAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.GetIntNegativeOneMillionAsync(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetIntNegativeOneMillion(global::Azure.RequestContext)">
<example>
This sample shows how to call GetIntNegativeOneMillion.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.GetIntNegativeOneMillion(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetIntNullAsync(int?,global::Azure.RequestContext)">
<example>
This sample shows how to call GetIntNullAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.GetIntNullAsync();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call GetIntNullAsync with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.GetIntNullAsync(1234, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetIntNull(int?,global::Azure.RequestContext)">
<example>
This sample shows how to call GetIntNull.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.GetIntNull();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call GetIntNull with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.GetIntNull(1234, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetTenBillionAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetTenBillionAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.GetTenBillionAsync(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetTenBillion(global::Azure.RequestContext)">
<example>
This sample shows how to call GetTenBillion.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.GetTenBillion(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetNegativeTenBillionAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetNegativeTenBillionAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.GetNegativeTenBillionAsync(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetNegativeTenBillion(global::Azure.RequestContext)">
<example>
This sample shows how to call GetNegativeTenBillion.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.GetNegativeTenBillion(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetLongNullAsync(long?,global::Azure.RequestContext)">
<example>
This sample shows how to call GetLongNullAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.GetLongNullAsync();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call GetLongNullAsync with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.GetLongNullAsync(1234, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetLongNull(long?,global::Azure.RequestContext)">
<example>
This sample shows how to call GetLongNull.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.GetLongNull();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call GetLongNull with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.GetLongNull(1234, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="FloatScientificPositiveAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call FloatScientificPositiveAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.FloatScientificPositiveAsync(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="FloatScientificPositive(global::Azure.RequestContext)">
<example>
This sample shows how to call FloatScientificPositive.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.FloatScientificPositive(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="FloatScientificNegativeAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call FloatScientificNegativeAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.FloatScientificNegativeAsync(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="FloatScientificNegative(global::Azure.RequestContext)">
<example>
This sample shows how to call FloatScientificNegative.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.FloatScientificNegative(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="FloatNullAsync(float?,global::Azure.RequestContext)">
<example>
This sample shows how to call FloatNullAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.FloatNullAsync();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call FloatNullAsync with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.FloatNullAsync(3.14f, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="FloatNull(float?,global::Azure.RequestContext)">
<example>
This sample shows how to call FloatNull.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.FloatNull();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call FloatNull with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.FloatNull(3.14f, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="DoubleDecimalPositiveAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call DoubleDecimalPositiveAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.DoubleDecimalPositiveAsync(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="DoubleDecimalPositive(global::Azure.RequestContext)">
<example>
This sample shows how to call DoubleDecimalPositive.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.DoubleDecimalPositive(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="DoubleDecimalNegativeAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call DoubleDecimalNegativeAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.DoubleDecimalNegativeAsync(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="DoubleDecimalNegative(global::Azure.RequestContext)">
<example>
This sample shows how to call DoubleDecimalNegative.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.DoubleDecimalNegative(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="DoubleNullAsync(double?,global::Azure.RequestContext)">
<example>
This sample shows how to call DoubleNullAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.DoubleNullAsync();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DoubleNullAsync with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.DoubleNullAsync(3.14, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="DoubleNull(double?,global::Azure.RequestContext)">
<example>
This sample shows how to call DoubleNull.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.DoubleNull();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DoubleNull with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.DoubleNull(3.14, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="StringUnicodeAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call StringUnicodeAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.StringUnicodeAsync(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="StringUnicode(global::Azure.RequestContext)">
<example>
This sample shows how to call StringUnicode.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.StringUnicode(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="StringUrlEncodedAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call StringUrlEncodedAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.StringUrlEncodedAsync(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="StringUrlEncoded(global::Azure.RequestContext)">
<example>
This sample shows how to call StringUrlEncoded.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.StringUrlEncoded(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="StringEmptyAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call StringEmptyAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.StringEmptyAsync(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="StringEmpty(global::Azure.RequestContext)">
<example>
This sample shows how to call StringEmpty.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.StringEmpty(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="StringNullAsync(string,global::Azure.RequestContext)">
<example>
This sample shows how to call StringNullAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.StringNullAsync();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call StringNullAsync with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.StringNullAsync("<stringQuery>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="StringNull(string,global::Azure.RequestContext)">
<example>
This sample shows how to call StringNull.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.StringNull();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call StringNull with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.StringNull("<stringQuery>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="EnumValidAsync(string,global::Azure.RequestContext)">
<example>
This sample shows how to call EnumValidAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.EnumValidAsync();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call EnumValidAsync with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.EnumValidAsync("<enumQuery>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="EnumValid(string,global::Azure.RequestContext)">
<example>
This sample shows how to call EnumValid.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.EnumValid();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call EnumValid with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.EnumValid("<enumQuery>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="EnumNullAsync(string,global::Azure.RequestContext)">
<example>
This sample shows how to call EnumNullAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.EnumNullAsync();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call EnumNullAsync with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.EnumNullAsync("<enumQuery>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="EnumNull(string,global::Azure.RequestContext)">
<example>
This sample shows how to call EnumNull.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.EnumNull();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call EnumNull with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.EnumNull("<enumQuery>", new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ByteMultiByteAsync(global::System.Byte[],global::Azure.RequestContext)">
<example>
This sample shows how to call ByteMultiByteAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.ByteMultiByteAsync();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ByteMultiByteAsync with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.ByteMultiByteAsync(null, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ByteMultiByte(global::System.Byte[],global::Azure.RequestContext)">
<example>
This sample shows how to call ByteMultiByte.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.ByteMultiByte();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ByteMultiByte with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.ByteMultiByte(null, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ByteEmptyAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call ByteEmptyAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.ByteEmptyAsync(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ByteEmpty(global::Azure.RequestContext)">
<example>
This sample shows how to call ByteEmpty.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.ByteEmpty(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ByteNullAsync(global::System.Byte[],global::Azure.RequestContext)">
<example>
This sample shows how to call ByteNullAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.ByteNullAsync();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ByteNullAsync with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.ByteNullAsync(null, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ByteNull(global::System.Byte[],global::Azure.RequestContext)">
<example>
This sample shows how to call ByteNull.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.ByteNull();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ByteNull with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.ByteNull(null, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="DateValidAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call DateValidAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.DateValidAsync(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="DateValid(global::Azure.RequestContext)">
<example>
This sample shows how to call DateValid.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.DateValid(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="DateNullAsync(global::System.DateTimeOffset?,global::Azure.RequestContext)">
<example>
This sample shows how to call DateNullAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.DateNullAsync();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DateNullAsync with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.DateNullAsync(DateTimeOffset.UtcNow, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="DateNull(global::System.DateTimeOffset?,global::Azure.RequestContext)">
<example>
This sample shows how to call DateNull.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.DateNull();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DateNull with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.DateNull(DateTimeOffset.UtcNow, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="DateTimeValidAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call DateTimeValidAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.DateTimeValidAsync(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="DateTimeValid(global::Azure.RequestContext)">
<example>
This sample shows how to call DateTimeValid.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.DateTimeValid(new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="DateTimeNullAsync(global::System.DateTimeOffset?,global::Azure.RequestContext)">
<example>
This sample shows how to call DateTimeNullAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.DateTimeNullAsync();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DateTimeNullAsync with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.DateTimeNullAsync(DateTimeOffset.UtcNow, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="DateTimeNull(global::System.DateTimeOffset?,global::Azure.RequestContext)">
<example>
This sample shows how to call DateTimeNull.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.DateTimeNull();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DateTimeNull with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.DateTimeNull(DateTimeOffset.UtcNow, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ArrayStringCsvValidAsync(global::System.Collections.Generic.IEnumerable{string},global::Azure.RequestContext)">
<example>
This sample shows how to call ArrayStringCsvValidAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.ArrayStringCsvValidAsync();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ArrayStringCsvValidAsync with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.ArrayStringCsvValidAsync(new String[]{"<arrayQuery>"}, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ArrayStringCsvValid(global::System.Collections.Generic.IEnumerable{string},global::Azure.RequestContext)">
<example>
This sample shows how to call ArrayStringCsvValid.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.ArrayStringCsvValid();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ArrayStringCsvValid with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.ArrayStringCsvValid(new String[]{"<arrayQuery>"}, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ArrayStringCsvNullAsync(global::System.Collections.Generic.IEnumerable{string},global::Azure.RequestContext)">
<example>
This sample shows how to call ArrayStringCsvNullAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.ArrayStringCsvNullAsync();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ArrayStringCsvNullAsync with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.ArrayStringCsvNullAsync(new String[]{"<arrayQuery>"}, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ArrayStringCsvNull(global::System.Collections.Generic.IEnumerable{string},global::Azure.RequestContext)">
<example>
This sample shows how to call ArrayStringCsvNull.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.ArrayStringCsvNull();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ArrayStringCsvNull with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.ArrayStringCsvNull(new String[]{"<arrayQuery>"}, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ArrayStringCsvEmptyAsync(global::System.Collections.Generic.IEnumerable{string},global::Azure.RequestContext)">
<example>
This sample shows how to call ArrayStringCsvEmptyAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.ArrayStringCsvEmptyAsync();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ArrayStringCsvEmptyAsync with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.ArrayStringCsvEmptyAsync(new String[]{"<arrayQuery>"}, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ArrayStringCsvEmpty(global::System.Collections.Generic.IEnumerable{string},global::Azure.RequestContext)">
<example>
This sample shows how to call ArrayStringCsvEmpty.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.ArrayStringCsvEmpty();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ArrayStringCsvEmpty with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.ArrayStringCsvEmpty(new String[]{"<arrayQuery>"}, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ArrayStringNoCollectionFormatEmptyAsync(global::System.Collections.Generic.IEnumerable{string},global::Azure.RequestContext)">
<example>
This sample shows how to call ArrayStringNoCollectionFormatEmptyAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.ArrayStringNoCollectionFormatEmptyAsync();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ArrayStringNoCollectionFormatEmptyAsync with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.ArrayStringNoCollectionFormatEmptyAsync(new String[]{"<arrayQuery>"}, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ArrayStringNoCollectionFormatEmpty(global::System.Collections.Generic.IEnumerable{string},global::Azure.RequestContext)">
<example>
This sample shows how to call ArrayStringNoCollectionFormatEmpty.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.ArrayStringNoCollectionFormatEmpty();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ArrayStringNoCollectionFormatEmpty with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.ArrayStringNoCollectionFormatEmpty(new String[]{"<arrayQuery>"}, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ArrayStringSsvValidAsync(global::System.Collections.Generic.IEnumerable{string},global::Azure.RequestContext)">
<example>
This sample shows how to call ArrayStringSsvValidAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.ArrayStringSsvValidAsync();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ArrayStringSsvValidAsync with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.ArrayStringSsvValidAsync(new String[]{"<arrayQuery>"}, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ArrayStringSsvValid(global::System.Collections.Generic.IEnumerable{string},global::Azure.RequestContext)">
<example>
This sample shows how to call ArrayStringSsvValid.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.ArrayStringSsvValid();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ArrayStringSsvValid with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.ArrayStringSsvValid(new String[]{"<arrayQuery>"}, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ArrayStringTsvValidAsync(global::System.Collections.Generic.IEnumerable{string},global::Azure.RequestContext)">
<example>
This sample shows how to call ArrayStringTsvValidAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.ArrayStringTsvValidAsync();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ArrayStringTsvValidAsync with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.ArrayStringTsvValidAsync(new String[]{"<arrayQuery>"}, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ArrayStringTsvValid(global::System.Collections.Generic.IEnumerable{string},global::Azure.RequestContext)">
<example>
This sample shows how to call ArrayStringTsvValid.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.ArrayStringTsvValid();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ArrayStringTsvValid with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.ArrayStringTsvValid(new String[]{"<arrayQuery>"}, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ArrayStringPipesValidAsync(global::System.Collections.Generic.IEnumerable{string},global::Azure.RequestContext)">
<example>
This sample shows how to call ArrayStringPipesValidAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.ArrayStringPipesValidAsync();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ArrayStringPipesValidAsync with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = await client.ArrayStringPipesValidAsync(new String[]{"<arrayQuery>"}, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ArrayStringPipesValid(global::System.Collections.Generic.IEnumerable{string},global::Azure.RequestContext)">
<example>
This sample shows how to call ArrayStringPipesValid.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.ArrayStringPipesValid();
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ArrayStringPipesValid with all parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new QueriesClient(credential);

Response response = client.ArrayStringPipesValid(new String[]{"<arrayQuery>"}, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
  </members>
</doc>