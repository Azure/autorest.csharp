// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Identity;
using NUnit.Framework;
using url_LowLevel;

namespace url_LowLevel.Tests
{
    public class PathItemsClientTests : url_LowLevelTestBase
    {
        public PathItemsClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        public async Task GetAllWithValues_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            PathItemsClient client = CreatePathItemsClient("<GlobalStringPath>", credential, endpoint, null);

            Response response = await client.GetAllWithValuesAsync("<pathItemStringPath>", "<localStringPath>");
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task GetAllWithValues_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            PathItemsClient client = CreatePathItemsClient("<GlobalStringPath>", credential, endpoint, "<GlobalStringQuery>");

            Response response = await client.GetAllWithValuesAsync("<pathItemStringPath>", "<localStringPath>", pathItemStringQuery: "<pathItemStringQuery>", localStringQuery: "<localStringQuery>");
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task GetGlobalQueryNull_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            PathItemsClient client = CreatePathItemsClient("<GlobalStringPath>", credential, endpoint, null);

            Response response = await client.GetGlobalQueryNullAsync("<pathItemStringPath>", "<localStringPath>");
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task GetGlobalQueryNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            PathItemsClient client = CreatePathItemsClient("<GlobalStringPath>", credential, endpoint, "<GlobalStringQuery>");

            Response response = await client.GetGlobalQueryNullAsync("<pathItemStringPath>", "<localStringPath>", pathItemStringQuery: "<pathItemStringQuery>", localStringQuery: "<localStringQuery>");
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task GetGlobalAndLocalQueryNull_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            PathItemsClient client = CreatePathItemsClient("<GlobalStringPath>", credential, endpoint, null);

            Response response = await client.GetGlobalAndLocalQueryNullAsync("<pathItemStringPath>", "<localStringPath>");
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task GetGlobalAndLocalQueryNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            PathItemsClient client = CreatePathItemsClient("<GlobalStringPath>", credential, endpoint, "<GlobalStringQuery>");

            Response response = await client.GetGlobalAndLocalQueryNullAsync("<pathItemStringPath>", "<localStringPath>", pathItemStringQuery: "<pathItemStringQuery>", localStringQuery: "<localStringQuery>");
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task GetLocalPathItemQueryNull_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            PathItemsClient client = CreatePathItemsClient("<GlobalStringPath>", credential, endpoint, null);

            Response response = await client.GetLocalPathItemQueryNullAsync("<pathItemStringPath>", "<localStringPath>");
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task GetLocalPathItemQueryNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            PathItemsClient client = CreatePathItemsClient("<GlobalStringPath>", credential, endpoint, "<GlobalStringQuery>");

            Response response = await client.GetLocalPathItemQueryNullAsync("<pathItemStringPath>", "<localStringPath>", pathItemStringQuery: "<pathItemStringQuery>", localStringQuery: "<localStringQuery>");
            Console.WriteLine(response.Status);
        }
    }
}
