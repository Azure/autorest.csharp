// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Identity;
using NUnit.Framework;
using url_LowLevel;

namespace url_LowLevel.Samples
{
    public class Samples_PathsClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetBooleanTrue()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.GetBooleanTrue();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetBooleanTrue_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.GetBooleanTrueAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetBooleanTrue_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.GetBooleanTrue();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetBooleanTrue_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.GetBooleanTrueAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetBooleanFalse()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.GetBooleanFalse();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetBooleanFalse_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.GetBooleanFalseAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetBooleanFalse_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.GetBooleanFalse();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetBooleanFalse_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.GetBooleanFalseAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetIntOneMillion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.GetIntOneMillion();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetIntOneMillion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.GetIntOneMillionAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetIntOneMillion_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.GetIntOneMillion();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetIntOneMillion_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.GetIntOneMillionAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetIntNegativeOneMillion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.GetIntNegativeOneMillion();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetIntNegativeOneMillion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.GetIntNegativeOneMillionAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetIntNegativeOneMillion_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.GetIntNegativeOneMillion();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetIntNegativeOneMillion_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.GetIntNegativeOneMillionAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetTenBillion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.GetTenBillion();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetTenBillion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.GetTenBillionAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetTenBillion_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.GetTenBillion();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetTenBillion_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.GetTenBillionAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetNegativeTenBillion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.GetNegativeTenBillion();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetNegativeTenBillion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.GetNegativeTenBillionAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetNegativeTenBillion_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.GetNegativeTenBillion();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetNegativeTenBillion_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.GetNegativeTenBillionAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FloatScientificPositive()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.FloatScientificPositive();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FloatScientificPositive_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.FloatScientificPositiveAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FloatScientificPositive_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.FloatScientificPositive();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FloatScientificPositive_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.FloatScientificPositiveAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FloatScientificNegative()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.FloatScientificNegative();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FloatScientificNegative_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.FloatScientificNegativeAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FloatScientificNegative_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.FloatScientificNegative();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FloatScientificNegative_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.FloatScientificNegativeAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DoubleDecimalPositive()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.DoubleDecimalPositive();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DoubleDecimalPositive_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.DoubleDecimalPositiveAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DoubleDecimalPositive_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.DoubleDecimalPositive();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DoubleDecimalPositive_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.DoubleDecimalPositiveAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DoubleDecimalNegative()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.DoubleDecimalNegative();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DoubleDecimalNegative_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.DoubleDecimalNegativeAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DoubleDecimalNegative_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.DoubleDecimalNegative();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DoubleDecimalNegative_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.DoubleDecimalNegativeAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringUnicode()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.StringUnicode();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringUnicode_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.StringUnicodeAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringUnicode_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.StringUnicode();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringUnicode_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.StringUnicodeAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringUrlEncoded()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.StringUrlEncoded();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringUrlEncoded_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.StringUrlEncodedAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringUrlEncoded_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.StringUrlEncoded();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringUrlEncoded_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.StringUrlEncodedAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringUrlNonEncoded()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.StringUrlNonEncoded();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringUrlNonEncoded_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.StringUrlNonEncodedAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringUrlNonEncoded_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.StringUrlNonEncoded();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringUrlNonEncoded_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.StringUrlNonEncodedAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringEmpty()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.StringEmpty();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringEmpty_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.StringEmptyAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringEmpty_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.StringEmpty();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringEmpty_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.StringEmptyAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringNull()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.StringNull("<stringPath>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringNull_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.StringNullAsync("<stringPath>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringNull_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.StringNull("<stringPath>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.StringNullAsync("<stringPath>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_EnumValid()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.EnumValid("red color");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_EnumValid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.EnumValidAsync("red color");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_EnumValid_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.EnumValid("red color");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_EnumValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.EnumValidAsync("red color");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_EnumNull()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.EnumNull("red color");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_EnumNull_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.EnumNullAsync("red color");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_EnumNull_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.EnumNull("red color");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_EnumNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.EnumNullAsync("red color");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ByteMultiByte()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.ByteMultiByte(BinaryData.FromObjectAsJson(new object()));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ByteMultiByte_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.ByteMultiByteAsync(BinaryData.FromObjectAsJson(new object()));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ByteMultiByte_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.ByteMultiByte(BinaryData.FromObjectAsJson(new object()));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ByteMultiByte_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.ByteMultiByteAsync(BinaryData.FromObjectAsJson(new object()));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ByteEmpty()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.ByteEmpty();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ByteEmpty_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.ByteEmptyAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ByteEmpty_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.ByteEmpty();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ByteEmpty_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.ByteEmptyAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ByteNull()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.ByteNull(BinaryData.FromObjectAsJson(new object()));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ByteNull_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.ByteNullAsync(BinaryData.FromObjectAsJson(new object()));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ByteNull_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.ByteNull(BinaryData.FromObjectAsJson(new object()));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ByteNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.ByteNullAsync(BinaryData.FromObjectAsJson(new object()));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DateValid()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.DateValid();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DateValid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.DateValidAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DateValid_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.DateValid();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DateValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.DateValidAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DateNull()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.DateNull(DateTimeOffset.Parse("2022-05-10"));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DateNull_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.DateNullAsync(DateTimeOffset.Parse("2022-05-10"));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DateNull_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.DateNull(DateTimeOffset.Parse("2022-05-10"));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DateNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.DateNullAsync(DateTimeOffset.Parse("2022-05-10"));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DateTimeValid()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.DateTimeValid();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DateTimeValid_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.DateTimeValidAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DateTimeValid_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.DateTimeValid();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DateTimeValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.DateTimeValidAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DateTimeNull()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.DateTimeNull(DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DateTimeNull_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.DateTimeNullAsync(DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DateTimeNull_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.DateTimeNull(DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DateTimeNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.DateTimeNullAsync(DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Base64Url()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.Base64Url(BinaryData.FromObjectAsJson(new object()));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Base64Url_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.Base64UrlAsync(BinaryData.FromObjectAsJson(new object()));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Base64Url_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.Base64Url(BinaryData.FromObjectAsJson(new object()));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Base64Url_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.Base64UrlAsync(BinaryData.FromObjectAsJson(new object()));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ArrayCsvInPath()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.ArrayCsvInPath(new string[] { "<arrayPath>" });
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ArrayCsvInPath_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.ArrayCsvInPathAsync(new string[] { "<arrayPath>" });
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ArrayCsvInPath_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.ArrayCsvInPath(new string[] { "<arrayPath>" });
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ArrayCsvInPath_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.ArrayCsvInPathAsync(new string[] { "<arrayPath>" });
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_UnixTimeUrl()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.UnixTimeUrl(DateTimeOffset.FromUnixTimeSeconds(1652209051L));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_UnixTimeUrl_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.UnixTimeUrlAsync(DateTimeOffset.FromUnixTimeSeconds(1652209051L));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_UnixTimeUrl_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.UnixTimeUrl(DateTimeOffset.FromUnixTimeSeconds(1652209051L));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_UnixTimeUrl_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.UnixTimeUrlAsync(DateTimeOffset.FromUnixTimeSeconds(1652209051L));
        }
    }
}
