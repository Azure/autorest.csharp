<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="AnalyzeBodyAsync(RequestContent,ContentType,RequestContext)">
<example>
This sample shows how to call AnalyzeBodyAsync with required parameters and request content and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new MediaTypesClient(credential);

var data = File.OpenRead("<filePath>");

Response response = await client.AnalyzeBodyAsync(RequestContent.Create(data), ContentType.ApplicationOctetStream, new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
    <member name="AnalyzeBody(RequestContent,ContentType,RequestContext)">
<example>
This sample shows how to call AnalyzeBody with required parameters and request content and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new MediaTypesClient(credential);

var data = File.OpenRead("<filePath>");

Response response = client.AnalyzeBody(RequestContent.Create(data), ContentType.ApplicationOctetStream, new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
    <member name="AnalyzeBodyNoAcceptHeaderAsync(RequestContent,ContentType,RequestContext)">
<example>
This sample shows how to call AnalyzeBodyNoAcceptHeaderAsync with required parameters and request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new MediaTypesClient(credential);

var data = File.OpenRead("<filePath>");

Response response = await client.AnalyzeBodyNoAcceptHeaderAsync(RequestContent.Create(data), ContentType.ApplicationOctetStream, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="AnalyzeBodyNoAcceptHeader(RequestContent,ContentType,RequestContext)">
<example>
This sample shows how to call AnalyzeBodyNoAcceptHeader with required parameters and request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new MediaTypesClient(credential);

var data = File.OpenRead("<filePath>");

Response response = client.AnalyzeBodyNoAcceptHeader(RequestContent.Create(data), ContentType.ApplicationOctetStream, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ContentTypeWithEncodingAsync(RequestContent,RequestContext)">
<example>
This sample shows how to call ContentTypeWithEncodingAsync with required request content and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new MediaTypesClient(credential);

var data = "<String>";

Response response = await client.ContentTypeWithEncodingAsync(RequestContent.Create(data), new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
    <member name="ContentTypeWithEncoding(RequestContent,RequestContext)">
<example>
This sample shows how to call ContentTypeWithEncoding with required request content and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new MediaTypesClient(credential);

var data = "<String>";

Response response = client.ContentTypeWithEncoding(RequestContent.Create(data), new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
    <member name="BinaryBodyWithTwoContentTypesAsync(RequestContent,ContentType,RequestContext)">
<example>
This sample shows how to call BinaryBodyWithTwoContentTypesAsync with required parameters and request content and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new MediaTypesClient(credential);

var data = File.OpenRead("<filePath>");

Response response = await client.BinaryBodyWithTwoContentTypesAsync(RequestContent.Create(data), ContentType.ApplicationOctetStream, new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
    <member name="BinaryBodyWithTwoContentTypes(RequestContent,ContentType,RequestContext)">
<example>
This sample shows how to call BinaryBodyWithTwoContentTypes with required parameters and request content and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new MediaTypesClient(credential);

var data = File.OpenRead("<filePath>");

Response response = client.BinaryBodyWithTwoContentTypes(RequestContent.Create(data), ContentType.ApplicationOctetStream, new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
    <member name="BinaryBodyWithThreeContentTypesAsync(RequestContent,ContentType,RequestContext)">
<example>
This sample shows how to call BinaryBodyWithThreeContentTypesAsync with required parameters and request content and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new MediaTypesClient(credential);

var data = File.OpenRead("<filePath>");

Response response = await client.BinaryBodyWithThreeContentTypesAsync(RequestContent.Create(data), ContentType.ApplicationOctetStream, new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
    <member name="BinaryBodyWithThreeContentTypes(RequestContent,ContentType,RequestContext)">
<example>
This sample shows how to call BinaryBodyWithThreeContentTypes with required parameters and request content and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new MediaTypesClient(credential);

var data = File.OpenRead("<filePath>");

Response response = client.BinaryBodyWithThreeContentTypes(RequestContent.Create(data), ContentType.ApplicationOctetStream, new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
    <member name="PutTextAndJsonBodyAsync(RequestContent,ContentType,RequestContext)">
<example>
This sample shows how to call PutTextAndJsonBodyAsync with required parameters and request content and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new MediaTypesClient(credential);

var data = "<String>";

Response response = await client.PutTextAndJsonBodyAsync(RequestContent.Create(data), ContentType.ApplicationOctetStream, new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
    <member name="PutTextAndJsonBody(RequestContent,ContentType,RequestContext)">
<example>
This sample shows how to call PutTextAndJsonBody with required parameters and request content and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new MediaTypesClient(credential);

var data = "<String>";

Response response = client.PutTextAndJsonBody(RequestContent.Create(data), ContentType.ApplicationOctetStream, new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
  </members>
</doc>