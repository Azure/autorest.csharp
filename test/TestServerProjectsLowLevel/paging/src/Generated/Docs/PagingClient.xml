<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetNoItemNamePagesAsync(RequestContext)">
<example>
This sample shows how to call GetNoItemNamePagesAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

await foreach (var item in client.GetNoItemNamePagesAsync(new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetNoItemNamePages(RequestContext)">
<example>
This sample shows how to call GetNoItemNamePages with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

foreach (var item in client.GetNoItemNamePages(new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetEmptyNextLinkNamePagesAsync(RequestContext)">
<example>
This sample shows how to call GetEmptyNextLinkNamePagesAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

await foreach (var item in client.GetEmptyNextLinkNamePagesAsync(new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetEmptyNextLinkNamePages(RequestContext)">
<example>
This sample shows how to call GetEmptyNextLinkNamePages with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

foreach (var item in client.GetEmptyNextLinkNamePages(new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetNullNextLinkNamePagesAsync(RequestContext)">
<example>
This sample shows how to call GetNullNextLinkNamePagesAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

await foreach (var item in client.GetNullNextLinkNamePagesAsync(new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetNullNextLinkNamePages(RequestContext)">
<example>
This sample shows how to call GetNullNextLinkNamePages with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

foreach (var item in client.GetNullNextLinkNamePages(new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetSinglePagesAsync(RequestContext)">
<example>
This sample shows how to call GetSinglePagesAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

await foreach (var item in client.GetSinglePagesAsync(new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetSinglePages(RequestContext)">
<example>
This sample shows how to call GetSinglePages with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

foreach (var item in client.GetSinglePages(new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetSinglePagesWithBodyParamsAsync(RequestContent,RequestContext)">
<example>
This sample shows how to call GetSinglePagesWithBodyParamsAsync and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

var data = new {};

await foreach (var item in client.GetSinglePagesWithBodyParamsAsync(RequestContent.Create(data)))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call GetSinglePagesWithBodyParamsAsync with all request content, and how to parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

var data = new {
    name = "<name>",
};

await foreach (var item in client.GetSinglePagesWithBodyParamsAsync(RequestContent.Create(data)))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetSinglePagesWithBodyParams(RequestContent,RequestContext)">
<example>
This sample shows how to call GetSinglePagesWithBodyParams and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

var data = new {};

foreach (var item in client.GetSinglePagesWithBodyParams(RequestContent.Create(data)))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call GetSinglePagesWithBodyParams with all request content, and how to parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

var data = new {
    name = "<name>",
};

foreach (var item in client.GetSinglePagesWithBodyParams(RequestContent.Create(data)))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="FirstResponseEmptyAsync(RequestContext)">
<example>
This sample shows how to call FirstResponseEmptyAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

await foreach (var item in client.FirstResponseEmptyAsync(new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="FirstResponseEmpty(RequestContext)">
<example>
This sample shows how to call FirstResponseEmpty with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

foreach (var item in client.FirstResponseEmpty(new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetMultiplePagesAsync(int?,int?,RequestContext)">
<example>
This sample shows how to call GetMultiplePagesAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

await foreach (var item in client.GetMultiplePagesAsync(1234, 1234, new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetMultiplePages(int?,int?,RequestContext)">
<example>
This sample shows how to call GetMultiplePages with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

foreach (var item in client.GetMultiplePages(1234, 1234, new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetWithQueryParamsAsync(int,RequestContext)">
<example>
This sample shows how to call GetWithQueryParamsAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

await foreach (var item in client.GetWithQueryParamsAsync(1234, new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetWithQueryParams(int,RequestContext)">
<example>
This sample shows how to call GetWithQueryParams with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

foreach (var item in client.GetWithQueryParams(1234, new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="DuplicateParamsAsync(string,RequestContext)">
<example>
This sample shows how to call DuplicateParamsAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

await foreach (var item in client.DuplicateParamsAsync("<filter>", new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="DuplicateParams(string,RequestContext)">
<example>
This sample shows how to call DuplicateParams with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

foreach (var item in client.DuplicateParams("<filter>", new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="PageWithMaxPageSizeAsync(string,RequestContext)">
<example>
This sample shows how to call PageWithMaxPageSizeAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

await foreach (var item in client.PageWithMaxPageSizeAsync("<maxpagesize>", new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="PageWithMaxPageSize(string,RequestContext)">
<example>
This sample shows how to call PageWithMaxPageSize with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

foreach (var item in client.PageWithMaxPageSize("<maxpagesize>", new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="NextOperationWithQueryParamsAsync(RequestContext)">
<example>
This sample shows how to call NextOperationWithQueryParamsAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

await foreach (var item in client.NextOperationWithQueryParamsAsync(new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="NextOperationWithQueryParams(RequestContext)">
<example>
This sample shows how to call NextOperationWithQueryParams with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

foreach (var item in client.NextOperationWithQueryParams(new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetOdataMultiplePagesAsync(int?,int?,RequestContext)">
<example>
This sample shows how to call GetOdataMultiplePagesAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

await foreach (var item in client.GetOdataMultiplePagesAsync(1234, 1234, new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetOdataMultiplePages(int?,int?,RequestContext)">
<example>
This sample shows how to call GetOdataMultiplePages with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

foreach (var item in client.GetOdataMultiplePages(1234, 1234, new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetMultiplePagesWithOffsetAsync(int,int?,int?,RequestContext)">
<example>
This sample shows how to call GetMultiplePagesWithOffsetAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

await foreach (var item in client.GetMultiplePagesWithOffsetAsync(1234, 1234, 1234, new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetMultiplePagesWithOffset(int,int?,int?,RequestContext)">
<example>
This sample shows how to call GetMultiplePagesWithOffset with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

foreach (var item in client.GetMultiplePagesWithOffset(1234, 1234, 1234, new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetMultiplePagesRetryFirstAsync(RequestContext)">
<example>
This sample shows how to call GetMultiplePagesRetryFirstAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

await foreach (var item in client.GetMultiplePagesRetryFirstAsync(new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetMultiplePagesRetryFirst(RequestContext)">
<example>
This sample shows how to call GetMultiplePagesRetryFirst with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

foreach (var item in client.GetMultiplePagesRetryFirst(new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetMultiplePagesRetrySecondAsync(RequestContext)">
<example>
This sample shows how to call GetMultiplePagesRetrySecondAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

await foreach (var item in client.GetMultiplePagesRetrySecondAsync(new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetMultiplePagesRetrySecond(RequestContext)">
<example>
This sample shows how to call GetMultiplePagesRetrySecond with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

foreach (var item in client.GetMultiplePagesRetrySecond(new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetSinglePagesFailureAsync(RequestContext)">
<example>
This sample shows how to call GetSinglePagesFailureAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

await foreach (var item in client.GetSinglePagesFailureAsync(new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetSinglePagesFailure(RequestContext)">
<example>
This sample shows how to call GetSinglePagesFailure with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

foreach (var item in client.GetSinglePagesFailure(new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetMultiplePagesFailureAsync(RequestContext)">
<example>
This sample shows how to call GetMultiplePagesFailureAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

await foreach (var item in client.GetMultiplePagesFailureAsync(new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetMultiplePagesFailure(RequestContext)">
<example>
This sample shows how to call GetMultiplePagesFailure with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

foreach (var item in client.GetMultiplePagesFailure(new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetMultiplePagesFailureUriAsync(RequestContext)">
<example>
This sample shows how to call GetMultiplePagesFailureUriAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

await foreach (var item in client.GetMultiplePagesFailureUriAsync(new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetMultiplePagesFailureUri(RequestContext)">
<example>
This sample shows how to call GetMultiplePagesFailureUri with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

foreach (var item in client.GetMultiplePagesFailureUri(new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetMultiplePagesFragmentNextLinkAsync(string,string,RequestContext)">
<example>
This sample shows how to call GetMultiplePagesFragmentNextLinkAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

await foreach (var item in client.GetMultiplePagesFragmentNextLinkAsync("<tenant>", "<apiVersion>", new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetMultiplePagesFragmentNextLink(string,string,RequestContext)">
<example>
This sample shows how to call GetMultiplePagesFragmentNextLink with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

foreach (var item in client.GetMultiplePagesFragmentNextLink("<tenant>", "<apiVersion>", new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetMultiplePagesFragmentWithGroupingNextLinkAsync(string,string,RequestContext)">
<example>
This sample shows how to call GetMultiplePagesFragmentWithGroupingNextLinkAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

await foreach (var item in client.GetMultiplePagesFragmentWithGroupingNextLinkAsync("<tenant>", "<apiVersion>", new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetMultiplePagesFragmentWithGroupingNextLink(string,string,RequestContext)">
<example>
This sample shows how to call GetMultiplePagesFragmentWithGroupingNextLink with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

foreach (var item in client.GetMultiplePagesFragmentWithGroupingNextLink("<tenant>", "<apiVersion>", new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="AppendApiVersionAsync(RequestContext)">
<example>
This sample shows how to call AppendApiVersionAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

await foreach (var item in client.AppendApiVersionAsync(new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="AppendApiVersion(RequestContext)">
<example>
This sample shows how to call AppendApiVersion with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

foreach (var item in client.AppendApiVersion(new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="ReplaceApiVersionAsync(RequestContext)">
<example>
This sample shows how to call ReplaceApiVersionAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

await foreach (var item in client.ReplaceApiVersionAsync(new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="ReplaceApiVersion(RequestContext)">
<example>
This sample shows how to call ReplaceApiVersion with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

foreach (var item in client.ReplaceApiVersion(new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="NextFragmentAsync(string,string,string,RequestContext)">
<example>
This sample shows how to call NextFragmentAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

await foreach (var item in client.NextFragmentAsync("<tenant>", "<nextLink>", "<apiVersion>", new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="NextFragment(string,string,string,RequestContext)">
<example>
This sample shows how to call NextFragment with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

foreach (var item in client.NextFragment("<tenant>", "<nextLink>", "<apiVersion>", new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="NextFragmentWithGroupingAsync(string,string,string,RequestContext)">
<example>
This sample shows how to call NextFragmentWithGroupingAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

await foreach (var item in client.NextFragmentWithGroupingAsync("<tenant>", "<nextLink>", "<apiVersion>", new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="NextFragmentWithGrouping(string,string,string,RequestContext)">
<example>
This sample shows how to call NextFragmentWithGrouping with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

foreach (var item in client.NextFragmentWithGrouping("<tenant>", "<nextLink>", "<apiVersion>", new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetPagingModelWithItemNameWithXMSClientNameAsync(RequestContext)">
<example>
This sample shows how to call GetPagingModelWithItemNameWithXMSClientNameAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

await foreach (var item in client.GetPagingModelWithItemNameWithXMSClientNameAsync(new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetPagingModelWithItemNameWithXMSClientName(RequestContext)">
<example>
This sample shows how to call GetPagingModelWithItemNameWithXMSClientName with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

foreach (var item in client.GetPagingModelWithItemNameWithXMSClientName(new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetMultiplePagesLROAsync(WaitUntil,int?,int?,RequestContext)">
<example>
This sample shows how to call GetMultiplePagesLROAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

var operation = await client.GetMultiplePagesLROAsync(WaitUntil.Completed, 1234, 1234, new RequestContext());

await foreach (var item in operation.Value)
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetMultiplePagesLRO(WaitUntil,int?,int?,RequestContext)">
<example>
This sample shows how to call GetMultiplePagesLRO with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new PagingClient(credential);

var operation = client.GetMultiplePagesLRO(WaitUntil.Completed, 1234, 1234, new RequestContext());

foreach (var item in operation.Value)
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
}
]]></code>
</example>
    </member>
  </members>
</doc>