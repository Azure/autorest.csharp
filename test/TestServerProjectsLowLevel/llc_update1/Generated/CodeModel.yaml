!CodeModel 
info: !Info 
  description: LLC Swagger, this is the initial swager a service could do
  title: LLCClient
schemas: !Schemas 
  strings:
    - !StringSchema &ref_0
      type: string
      language: !Languages 
        default:
          name: String
          description: simple string
      protocol: !Protocols {}
    - !StringSchema &ref_3
      type: string
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      language: !Languages 
        default:
          name: String
          description: ''
      protocol: !Protocols {}
    - !StringSchema &ref_1
      type: string
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      language: !Languages 
        default:
          name: PostInputUrl
          description: ''
      protocol: !Protocols {}
  constants:
    - !ConstantSchema &ref_4
      type: constant
      value: !ConstantValue 
        value: application/json
      valueType: *ref_0
      language: !Languages 
        default:
          name: Accept
          description: 'Accept: application/json'
      protocol: !Protocols {}
    - !ConstantSchema &ref_8
      type: constant
      value: !ConstantValue 
        value: image/jpeg
      valueType: *ref_0
      language: !Languages 
        default:
          name: ImageJpeg
          description: Content Type 'image/jpeg'
      protocol: !Protocols {}
    - !ConstantSchema &ref_11
      type: constant
      value: !ConstantValue 
        value: application/json
      valueType: *ref_0
      language: !Languages 
        default:
          name: ApplicationJson
          description: Content Type 'application/json'
      protocol: !Protocols {}
  anyObjects:
    - !AnyObjectSchema &ref_7
      type: any-object
      language: !Languages 
        default:
          name: AnyObject
          description: Any object
      protocol: !Protocols {}
  binaries:
    - !BinarySchema &ref_9
      type: binary
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      language: !Languages 
        default:
          name: binary
          description: ''
      protocol: !Protocols {}
  objects:
    - !ObjectSchema &ref_12
      type: object
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      properties:
        - !Property 
          schema: *ref_1
          required: true
          serializedName: url
          language: !Languages 
            default:
              name: url
              description: ''
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - input
      language: !Languages 
        default:
          name: PostInput
          description: ''
          namespace: ''
      protocol: !Protocols {}
globalParameters:
  - !Parameter &ref_2
    schema: *ref_0
    clientDefaultValue: http://localhost:3000
    implementation: Client
    origin: modelerfour:synthesized/host
    required: true
    extensions:
      x-ms-skip-url-encoding: true
    language: !Languages 
      default:
        name: $host
        description: server parameter
        serializedName: $host
    protocol: !Protocols 
      http: !HttpParameter 
        in: uri
operationGroups:
  - !OperationGroup 
    $key: params
    operations:
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        parameters:
          - *ref_2
          - !Parameter &ref_5
            schema: *ref_3
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: parameter
                description: I am a required parameter
                serializedName: parameter
            protocol: !Protocols 
              http: !HttpParameter 
                in: query
          - !Parameter &ref_6
            schema: *ref_3
            implementation: Method
            language: !Languages 
              default:
                name: newParameter
                description: I'm a new input optional parameter
                serializedName: new_parameter
            protocol: !Protocols 
              http: !HttpParameter 
                in: query
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_4
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /servicedriven/parameters
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_5
          - *ref_6
        responses:
          - !SchemaResponse 
            schema: *ref_7
            language: !Languages 
              default:
                name: ''
                description: Answer from service
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        language: !Languages 
          default:
            name: GetRequired
            description: Get true Boolean value on path
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        parameters:
          - *ref_2
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_8
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Upload file type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_10
                schema: *ref_9
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: parameter
                    description: 'I am a body parameter with a new content type. My only valid JSON entry is { url: "http://example.org/myimage.jpeg" }'
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: binary
              - !Parameter 
                schema: *ref_4
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_10
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpBinaryRequest 
                path: /servicedriven/parameters
                method: post
                binary: true
                knownMediaType: binary
                mediaTypes:
                  - image/jpeg
                uri: '{$host}'
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_11
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_13
                schema: *ref_12
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: parameter
                    description: 'I am a body parameter with a new content type. My only valid JSON entry is { url: "http://example.org/myimage.jpeg" }'
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_4
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_13
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /servicedriven/parameters
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !SchemaResponse 
            schema: *ref_7
            language: !Languages 
              default:
                name: ''
                description: Answer from service
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        language: !Languages 
          default:
            name: PostParameters
            description: POST a JSON or a JPEG
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        parameters:
          - *ref_2
        requests:
          - !Request 
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /servicedriven/parameters
                method: delete
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: I deleted something, but I won't tell you what
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '204'
        language: !Languages 
          default:
            name: DeleteParameters
            description: Delete something
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        parameters:
          - *ref_2
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_4
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /servicedriven/newpath
                method: get
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !SchemaResponse 
            schema: *ref_7
            language: !Languages 
              default:
                name: ''
                description: Answer from service
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        language: !Languages 
          default:
            name: GetNewOperation
            description: I'm a new operation
        protocol: !Protocols {}
    language: !Languages 
      default:
        name: Params
        description: ''
    protocol: !Protocols {}
security: !Security 
  authenticationRequired: true
  schemes:
    - !AzureKeySecurityScheme 
      type: AzureKey
      headerName: Fake-Subscription-Key
language: !Languages 
  default:
    name: LLCClient
    description: ''
protocol: !Protocols 
  http: !HttpModel {}
