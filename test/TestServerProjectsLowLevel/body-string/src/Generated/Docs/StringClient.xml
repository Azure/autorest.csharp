<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetNullAsync(RequestContext)">
<example>
This sample shows how to call GetNullAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new StringClient(credential);

Response response = await client.GetNullAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
    <member name="GetNull(RequestContext)">
<example>
This sample shows how to call GetNull with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new StringClient(credential);

Response response = client.GetNull(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
    <member name="PutNullAsync(RequestContent,RequestContext)">
<example>
This sample shows how to call PutNullAsync with required parameters and request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new StringClient(credential);

var data = "<String>";

Response response = await client.PutNullAsync(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="PutNull(RequestContent,RequestContext)">
<example>
This sample shows how to call PutNull with required parameters and request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new StringClient(credential);

var data = "<String>";

Response response = client.PutNull(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetEmptyAsync(RequestContext)">
<example>
This sample shows how to call GetEmptyAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new StringClient(credential);

Response response = await client.GetEmptyAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
    <member name="GetEmpty(RequestContext)">
<example>
This sample shows how to call GetEmpty with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new StringClient(credential);

Response response = client.GetEmpty(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
    <member name="PutEmptyAsync(RequestContent,RequestContext)">
<example>
This sample shows how to call PutEmptyAsync with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new StringClient(credential);

var data = "";

Response response = await client.PutEmptyAsync(RequestContent.Create(data));
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="PutEmpty(RequestContent,RequestContext)">
<example>
This sample shows how to call PutEmpty with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new StringClient(credential);

var data = "";

Response response = client.PutEmpty(RequestContent.Create(data));
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetMbcsAsync(RequestContext)">
<example>
This sample shows how to call GetMbcsAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new StringClient(credential);

Response response = await client.GetMbcsAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
    <member name="GetMbcs(RequestContext)">
<example>
This sample shows how to call GetMbcs with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new StringClient(credential);

Response response = client.GetMbcs(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
    <member name="PutMbcsAsync(RequestContent,RequestContext)">
<example>
This sample shows how to call PutMbcsAsync with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new StringClient(credential);

var data = "啊齄丂狛狜隣郎隣兀﨩ˊ〞〡￤℡㈱‐ー﹡﹢﹫、〓ⅰⅹ⒈€㈠㈩ⅠⅫ！￣ぁんァヶΑ︴АЯаяāɡㄅㄩ─╋︵﹄︻︱︳︴ⅰⅹɑɡ〇〾⿻⺁䜣€";

Response response = await client.PutMbcsAsync(RequestContent.Create(data));
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="PutMbcs(RequestContent,RequestContext)">
<example>
This sample shows how to call PutMbcs with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new StringClient(credential);

var data = "啊齄丂狛狜隣郎隣兀﨩ˊ〞〡￤℡㈱‐ー﹡﹢﹫、〓ⅰⅹ⒈€㈠㈩ⅠⅫ！￣ぁんァヶΑ︴АЯаяāɡㄅㄩ─╋︵﹄︻︱︳︴ⅰⅹɑɡ〇〾⿻⺁䜣€";

Response response = client.PutMbcs(RequestContent.Create(data));
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetWhitespaceAsync(RequestContext)">
<example>
This sample shows how to call GetWhitespaceAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new StringClient(credential);

Response response = await client.GetWhitespaceAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
    <member name="GetWhitespace(RequestContext)">
<example>
This sample shows how to call GetWhitespace with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new StringClient(credential);

Response response = client.GetWhitespace(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
    <member name="PutWhitespaceAsync(RequestContent,RequestContext)">
<example>
This sample shows how to call PutWhitespaceAsync with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new StringClient(credential);

var data = "    Now is the time for all good men to come to the aid of their country    ";

Response response = await client.PutWhitespaceAsync(RequestContent.Create(data));
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="PutWhitespace(RequestContent,RequestContext)">
<example>
This sample shows how to call PutWhitespace with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new StringClient(credential);

var data = "    Now is the time for all good men to come to the aid of their country    ";

Response response = client.PutWhitespace(RequestContent.Create(data));
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetNotProvidedAsync(RequestContext)">
<example>
This sample shows how to call GetNotProvidedAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new StringClient(credential);

Response response = await client.GetNotProvidedAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
    <member name="GetNotProvided(RequestContext)">
<example>
This sample shows how to call GetNotProvided with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new StringClient(credential);

Response response = client.GetNotProvided(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
    <member name="GetBase64EncodedAsync(RequestContext)">
<example>
This sample shows how to call GetBase64EncodedAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new StringClient(credential);

Response response = await client.GetBase64EncodedAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
    <member name="GetBase64Encoded(RequestContext)">
<example>
This sample shows how to call GetBase64Encoded with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new StringClient(credential);

Response response = client.GetBase64Encoded(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
    <member name="GetBase64UrlEncodedAsync(RequestContext)">
<example>
This sample shows how to call GetBase64UrlEncodedAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new StringClient(credential);

Response response = await client.GetBase64UrlEncodedAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
    <member name="GetBase64UrlEncoded(RequestContext)">
<example>
This sample shows how to call GetBase64UrlEncoded with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new StringClient(credential);

Response response = client.GetBase64UrlEncoded(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
    <member name="PutBase64UrlEncodedAsync(RequestContent,RequestContext)">
<example>
This sample shows how to call PutBase64UrlEncodedAsync with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new StringClient(credential);

var data = new {};

Response response = await client.PutBase64UrlEncodedAsync(RequestContent.Create(data));
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="PutBase64UrlEncoded(RequestContent,RequestContext)">
<example>
This sample shows how to call PutBase64UrlEncoded with required request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new StringClient(credential);

var data = new {};

Response response = client.PutBase64UrlEncoded(RequestContent.Create(data));
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetNullBase64UrlEncodedAsync(RequestContext)">
<example>
This sample shows how to call GetNullBase64UrlEncodedAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new StringClient(credential);

Response response = await client.GetNullBase64UrlEncodedAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
    <member name="GetNullBase64UrlEncoded(RequestContext)">
<example>
This sample shows how to call GetNullBase64UrlEncoded with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new StringClient(credential);

Response response = client.GetNullBase64UrlEncoded(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
  </members>
</doc>