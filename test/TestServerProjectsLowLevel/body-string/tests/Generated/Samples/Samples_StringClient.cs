// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.IO;
using System.Text.Json;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace body_string_LowLevel.Samples
{
    public class Samples_StringClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetNull()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new StringClient(credential);

            Response response = client.GetNull();

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PutNull()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new StringClient(credential);

            var data = "<String>";

            Response response = client.PutNull(RequestContent.Create(data));
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetEmpty()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new StringClient(credential);

            Response response = client.GetEmpty();

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PutEmpty()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new StringClient(credential);

            var data = "<String>";

            Response response = client.PutEmpty(RequestContent.Create(data));
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetMbcs()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new StringClient(credential);

            Response response = client.GetMbcs();

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PutMbcs()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new StringClient(credential);

            var data = "<String>";

            Response response = client.PutMbcs(RequestContent.Create(data));
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetWhitespace()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new StringClient(credential);

            Response response = client.GetWhitespace();

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PutWhitespace()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new StringClient(credential);

            var data = "<String>";

            Response response = client.PutWhitespace(RequestContent.Create(data));
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetNotProvided()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new StringClient(credential);

            Response response = client.GetNotProvided();

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetBase64Encoded()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new StringClient(credential);

            Response response = client.GetBase64Encoded();

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetBase64UrlEncoded()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new StringClient(credential);

            Response response = client.GetBase64UrlEncoded();

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PutBase64UrlEncoded()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new StringClient(credential);

            var data = new { };

            Response response = client.PutBase64UrlEncoded(RequestContent.Create(data));
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetNullBase64UrlEncoded()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new StringClient(credential);

            Response response = client.GetNullBase64UrlEncoded();

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }
    }
}
