!<!CodeModel> 
info: !<!Info> 
  description: Test Infrastructure for AutoRest
  title: AutoRest Required Optional Test Service
schemas: !<!Schemas> 
  numbers:
    - !<!NumberSchema> &ref_1
      type: integer
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: ''
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_14
      type: integer
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: ''
      protocol: !<!Protocols> {}
  strings:
    - !<!StringSchema> &ref_0
      type: string
      language: !<!Languages> 
        default:
          name: String
          description: simple string
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_10
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      language: !<!Languages> 
        default:
          name: String
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_2
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      language: !<!Languages> 
        default:
          name: ErrorMessage
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_3
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      language: !<!Languages> 
        default:
          name: StringWrapperValue
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_4
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      language: !<!Languages> 
        default:
          name: StringOptionalWrapperValue
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_5
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      language: !<!Languages> 
        default:
          name: ProductName
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_9
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      language: !<!Languages> 
        default:
          name: PostContentSchemaItem
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_7
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      language: !<!Languages> 
        default:
          name: ArrayWrapperValueItem
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_8
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      language: !<!Languages> 
        default:
          name: ArrayOptionalWrapperValueItem
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_13
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      language: !<!Languages> 
        default:
          name: Post0ItemsItem
          description: ''
      protocol: !<!Protocols> {}
  constants:
    - !<!ConstantSchema> &ref_20
      type: constant
      value: !<!ConstantValue> 
        value: application/json
      valueType: *ref_0
      language: !<!Languages> 
        default:
          name: ApplicationJson
          description: Content Type 'application/json'
      protocol: !<!Protocols> {}
  objects:
    - !<!ObjectSchema> &ref_17
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      properties:
        - !<!Property> 
          schema: *ref_1
          serializedName: status
          language: !<!Languages> 
            default:
              name: status
              description: ''
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_2
          serializedName: message
          language: !<!Languages> 
            default:
              name: message
              description: ''
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - output
      language: !<!Languages> 
        default:
          name: Error
          description: ''
          namespace: ''
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_27
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      properties:
        - !<!Property> 
          schema: *ref_1
          required: true
          serializedName: value
          language: !<!Languages> 
            default:
              name: value
              description: ''
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - input
      language: !<!Languages> 
        default:
          name: IntWrapper
          description: ''
          namespace: ''
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_29
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      properties:
        - !<!Property> 
          schema: *ref_1
          serializedName: value
          language: !<!Languages> 
            default:
              name: value
              description: ''
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - input
      language: !<!Languages> 
        default:
          name: IntOptionalWrapper
          description: ''
          namespace: ''
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_35
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      properties:
        - !<!Property> 
          schema: *ref_3
          required: true
          serializedName: value
          language: !<!Languages> 
            default:
              name: value
              description: ''
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - input
      language: !<!Languages> 
        default:
          name: StringWrapper
          description: ''
          namespace: ''
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_37
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      properties:
        - !<!Property> 
          schema: *ref_4
          serializedName: value
          language: !<!Languages> 
            default:
              name: value
              description: ''
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - input
      language: !<!Languages> 
        default:
          name: StringOptionalWrapper
          description: ''
          namespace: ''
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_6
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      properties:
        - !<!Property> 
          schema: *ref_1
          required: true
          serializedName: id
          language: !<!Languages> 
            default:
              name: id
              description: ''
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_5
          required: false
          serializedName: name
          language: !<!Languages> 
            default:
              name: name
              description: ''
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - input
      language: !<!Languages> 
        default:
          name: Product
          description: ''
          namespace: ''
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_43
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      properties:
        - !<!Property> 
          schema: *ref_6
          required: true
          serializedName: value
          language: !<!Languages> 
            default:
              name: value
              description: ''
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - input
      language: !<!Languages> 
        default:
          name: ClassWrapper
          description: ''
          namespace: ''
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_45
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      properties:
        - !<!Property> 
          schema: *ref_6
          serializedName: value
          language: !<!Languages> 
            default:
              name: value
              description: ''
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - input
      language: !<!Languages> 
        default:
          name: ClassOptionalWrapper
          description: ''
          namespace: ''
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_51
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      properties:
        - !<!Property> 
          schema: !<!ArraySchema> &ref_11
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: 1.0.0
            elementType: *ref_7
            language: !<!Languages> 
              default:
                name: ArrayWrapperValue
                description: Array of ArrayWrapperValueItem
            protocol: !<!Protocols> {}
          required: true
          serializedName: value
          language: !<!Languages> 
            default:
              name: value
              description: ''
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - input
      language: !<!Languages> 
        default:
          name: ArrayWrapper
          description: ''
          namespace: ''
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_53
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      properties:
        - !<!Property> 
          schema: !<!ArraySchema> &ref_12
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: 1.0.0
            elementType: *ref_8
            language: !<!Languages> 
              default:
                name: ArrayOptionalWrapperValue
                description: Array of ArrayOptionalWrapperValueItem
            protocol: !<!Protocols> {}
          serializedName: value
          language: !<!Languages> 
            default:
              name: value
              description: ''
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - input
      language: !<!Languages> 
        default:
          name: ArrayOptionalWrapper
          description: ''
          namespace: ''
      protocol: !<!Protocols> {}
  arrays:
    - !<!ArraySchema> &ref_47
      type: array
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      elementType: *ref_9
      language: !<!Languages> 
        default:
          name: ArrayOfPostContentSchemaItem
          description: Array of PostContentSchemaItem
      protocol: !<!Protocols> {}
    - !<!ArraySchema> &ref_49
      type: array
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      elementType: *ref_10
      language: !<!Languages> 
        default:
          name: ArrayOfString
          description: Array of String
      protocol: !<!Protocols> {}
    - *ref_11
    - *ref_12
    - !<!ArraySchema> &ref_55
      type: array
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      elementType: *ref_13
      language: !<!Languages> 
        default:
          name: ArrayOfPost0ItemsItem
          description: Array of Post0ItemsItem
      protocol: !<!Protocols> {}
    - !<!ArraySchema> &ref_57
      type: array
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      elementType: *ref_10
      language: !<!Languages> 
        default:
          name: ArrayOfString
          description: Array of String
      protocol: !<!Protocols> {}
globalParameters:
  - !<!Parameter> &ref_22
    schema: *ref_10
    implementation: Client
    required: true
    extensions:
      x-ms-priority: 0
    language: !<!Languages> 
      default:
        name: RequiredGlobalPath
        description: number of items to skip
        serializedName: required-global-path
    protocol: !<!Protocols> 
      http: !<!HttpParameter> 
        in: path
  - !<!Parameter> &ref_23
    schema: *ref_10
    implementation: Client
    required: true
    extensions:
      x-ms-priority: 1
    language: !<!Languages> 
      default:
        name: RequiredGlobalQuery
        description: number of items to skip
        serializedName: required-global-query
    protocol: !<!Protocols> 
      http: !<!HttpParameter> 
        in: query
  - !<!Parameter> &ref_24
    schema: *ref_14
    implementation: Client
    extensions:
      x-ms-priority: 2
    language: !<!Languages> 
      default:
        name: OptionalGlobalQuery
        description: number of items to skip
        serializedName: optional-global-query
    protocol: !<!Protocols> 
      http: !<!HttpParameter> 
        in: query
  - !<!Parameter> &ref_15
    schema: *ref_0
    clientDefaultValue: 'http://localhost:3000'
    implementation: Client
    origin: 'modelerfour:synthesized/host'
    required: true
    extensions:
      x-ms-skip-url-encoding: true
    language: !<!Languages> 
      default:
        name: $host
        description: server parameter
        serializedName: $host
    protocol: !<!Protocols> 
      http: !<!HttpParameter> 
        in: uri
operationGroups:
  - !<!OperationGroup> 
    $key: implicit
    operations:
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_15
          - !<!Parameter> &ref_16
            schema: *ref_10
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: pathParameter
                description: ''
                serializedName: pathParameter
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/reqopt/implicit/required/path/{pathParameter}'
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_16
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_17
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: GetRequiredPath
            description: Test implicitly required path parameter
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_15
          - !<!Parameter> &ref_18
            schema: *ref_10
            implementation: Method
            language: !<!Languages> 
              default:
                name: queryParameter
                description: ''
                serializedName: queryParameter
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: /reqopt/implicit/optional/query
                method: put
                uri: '{$host}'
        signatureParameters:
          - *ref_18
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_17
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: PutOptionalQuery
            description: Test implicitly optional query parameter
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_15
          - !<!Parameter> &ref_19
            schema: *ref_10
            implementation: Method
            language: !<!Languages> 
              default:
                name: queryParameter
                description: ''
                serializedName: queryParameter
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: header
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: /reqopt/implicit/optional/header
                method: put
                uri: '{$host}'
        signatureParameters:
          - *ref_19
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_17
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: PutOptionalHeader
            description: Test implicitly optional header parameter
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_15
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_20
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_21
                schema: *ref_10
                implementation: Method
                required: false
                language: !<!Languages> 
                  default:
                    name: bodyParameter
                    description: ''
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
            signatureParameters:
              - *ref_21
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /reqopt/implicit/optional/body
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_17
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: PutOptionalBody
            description: Test implicitly optional body parameter
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_15
          - *ref_22
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/reqopt/global/required/path/{required-global-path}'
                method: get
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_17
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: GetRequiredGlobalPath
            description: Test implicitly required path parameter
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_15
          - *ref_23
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: /reqopt/global/required/query
                method: get
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_17
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: GetRequiredGlobalQuery
            description: Test implicitly required query parameter
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_15
          - *ref_24
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: /reqopt/global/optional/query
                method: get
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_17
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: GetOptionalGlobalQuery
            description: Test implicitly optional query parameter
        protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: Implicit
        description: ''
    protocol: !<!Protocols> {}
  - !<!OperationGroup> 
    $key: explicit
    operations:
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_15
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_20
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_25
                schema: *ref_14
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: bodyParameter
                    description: ''
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
            signatureParameters:
              - *ref_25
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /reqopt/requied/integer/parameter
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_17
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: PostRequiredIntegerParameter
            description: Test explicitly required integer. Please put null and the client library should throw before the request is sent.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_15
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_20
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_26
                schema: *ref_14
                implementation: Method
                required: false
                language: !<!Languages> 
                  default:
                    name: bodyParameter
                    description: ''
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
            signatureParameters:
              - *ref_26
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /reqopt/optional/integer/parameter
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_17
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: PostOptionalIntegerParameter
            description: Test explicitly optional integer. Please put null.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_15
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_20
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_28
                schema: *ref_27
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: bodyParameter
                    description: ''
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
            signatureParameters:
              - *ref_28
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /reqopt/requied/integer/property
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_17
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: PostRequiredIntegerProperty
            description: Test explicitly required integer. Please put a valid int-wrapper with 'value' = null and the client library should throw before the request is sent.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_15
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_20
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_30
                schema: *ref_29
                implementation: Method
                required: false
                language: !<!Languages> 
                  default:
                    name: bodyParameter
                    description: ''
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
            signatureParameters:
              - *ref_30
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /reqopt/optional/integer/property
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_17
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: PostOptionalIntegerProperty
            description: Test explicitly optional integer. Please put a valid int-wrapper with 'value' = null.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_15
          - !<!Parameter> &ref_31
            schema: *ref_14
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: headerParameter
                description: ''
                serializedName: headerParameter
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: header
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: /reqopt/requied/integer/header
                method: post
                uri: '{$host}'
        signatureParameters:
          - *ref_31
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_17
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: PostRequiredIntegerHeader
            description: Test explicitly required integer. Please put a header 'headerParameter' => null and the client library should throw before the request is sent.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_15
          - !<!Parameter> &ref_32
            schema: *ref_14
            implementation: Method
            language: !<!Languages> 
              default:
                name: headerParameter
                description: ''
                serializedName: headerParameter
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: header
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: /reqopt/optional/integer/header
                method: post
                uri: '{$host}'
        signatureParameters:
          - *ref_32
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_17
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: PostOptionalIntegerHeader
            description: Test explicitly optional integer. Please put a header 'headerParameter' => null.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_15
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_20
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_33
                schema: *ref_10
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: bodyParameter
                    description: ''
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
            signatureParameters:
              - *ref_33
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /reqopt/requied/string/parameter
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_17
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: PostRequiredStringParameter
            description: Test explicitly required string. Please put null and the client library should throw before the request is sent.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_15
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_20
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_34
                schema: *ref_10
                implementation: Method
                required: false
                language: !<!Languages> 
                  default:
                    name: bodyParameter
                    description: ''
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
            signatureParameters:
              - *ref_34
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /reqopt/optional/string/parameter
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_17
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: PostOptionalStringParameter
            description: Test explicitly optional string. Please put null.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_15
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_20
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_36
                schema: *ref_35
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: bodyParameter
                    description: ''
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
            signatureParameters:
              - *ref_36
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /reqopt/requied/string/property
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_17
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: PostRequiredStringProperty
            description: Test explicitly required string. Please put a valid string-wrapper with 'value' = null and the client library should throw before the request is sent.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_15
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_20
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_38
                schema: *ref_37
                implementation: Method
                required: false
                language: !<!Languages> 
                  default:
                    name: bodyParameter
                    description: ''
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
            signatureParameters:
              - *ref_38
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /reqopt/optional/string/property
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_17
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: PostOptionalStringProperty
            description: Test explicitly optional integer. Please put a valid string-wrapper with 'value' = null.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_15
          - !<!Parameter> &ref_39
            schema: *ref_10
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: headerParameter
                description: ''
                serializedName: headerParameter
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: header
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: /reqopt/requied/string/header
                method: post
                uri: '{$host}'
        signatureParameters:
          - *ref_39
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_17
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: PostRequiredStringHeader
            description: Test explicitly required string. Please put a header 'headerParameter' => null and the client library should throw before the request is sent.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_15
          - !<!Parameter> &ref_40
            schema: *ref_10
            implementation: Method
            language: !<!Languages> 
              default:
                name: bodyParameter
                description: ''
                serializedName: bodyParameter
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: header
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: /reqopt/optional/string/header
                method: post
                uri: '{$host}'
        signatureParameters:
          - *ref_40
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_17
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: PostOptionalStringHeader
            description: Test explicitly optional string. Please put a header 'headerParameter' => null.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_15
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_20
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_41
                schema: *ref_6
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: bodyParameter
                    description: ''
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
            signatureParameters:
              - *ref_41
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /reqopt/requied/class/parameter
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_17
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: PostRequiredClassParameter
            description: Test explicitly required complex object. Please put null and the client library should throw before the request is sent.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_15
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_20
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_42
                schema: *ref_6
                implementation: Method
                required: false
                language: !<!Languages> 
                  default:
                    name: bodyParameter
                    description: ''
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
            signatureParameters:
              - *ref_42
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /reqopt/optional/class/parameter
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_17
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: PostOptionalClassParameter
            description: Test explicitly optional complex object. Please put null.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_15
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_20
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_44
                schema: *ref_43
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: bodyParameter
                    description: ''
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
            signatureParameters:
              - *ref_44
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /reqopt/requied/class/property
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_17
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: PostRequiredClassProperty
            description: Test explicitly required complex object. Please put a valid class-wrapper with 'value' = null and the client library should throw before the request is sent.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_15
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_20
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_46
                schema: *ref_45
                implementation: Method
                required: false
                language: !<!Languages> 
                  default:
                    name: bodyParameter
                    description: ''
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
            signatureParameters:
              - *ref_46
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /reqopt/optional/class/property
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_17
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: PostOptionalClassProperty
            description: Test explicitly optional complex object. Please put a valid class-wrapper with 'value' = null.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_15
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_20
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_48
                schema: *ref_47
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: bodyParameter
                    description: ''
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
            signatureParameters:
              - *ref_48
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /reqopt/requied/array/parameter
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_17
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: PostRequiredArrayParameter
            description: Test explicitly required array. Please put null and the client library should throw before the request is sent.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_15
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_20
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_50
                schema: *ref_49
                implementation: Method
                required: false
                language: !<!Languages> 
                  default:
                    name: bodyParameter
                    description: ''
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
            signatureParameters:
              - *ref_50
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /reqopt/optional/array/parameter
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_17
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: PostOptionalArrayParameter
            description: Test explicitly optional array. Please put null.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_15
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_20
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_52
                schema: *ref_51
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: bodyParameter
                    description: ''
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
            signatureParameters:
              - *ref_52
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /reqopt/requied/array/property
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_17
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: PostRequiredArrayProperty
            description: Test explicitly required array. Please put a valid array-wrapper with 'value' = null and the client library should throw before the request is sent.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_15
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_20
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_54
                schema: *ref_53
                implementation: Method
                required: false
                language: !<!Languages> 
                  default:
                    name: bodyParameter
                    description: ''
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
            signatureParameters:
              - *ref_54
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /reqopt/optional/array/property
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_17
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: PostOptionalArrayProperty
            description: Test explicitly optional array. Please put a valid array-wrapper with 'value' = null.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_15
          - !<!Parameter> &ref_56
            schema: *ref_55
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: headerParameter
                description: ''
                serializedName: headerParameter
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: header
                style: simple
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: /reqopt/requied/array/header
                method: post
                uri: '{$host}'
        signatureParameters:
          - *ref_56
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_17
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: PostRequiredArrayHeader
            description: Test explicitly required array. Please put a header 'headerParameter' => null and the client library should throw before the request is sent.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_15
          - !<!Parameter> &ref_58
            schema: *ref_57
            implementation: Method
            language: !<!Languages> 
              default:
                name: headerParameter
                description: ''
                serializedName: headerParameter
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: header
                style: simple
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: /reqopt/optional/array/header
                method: post
                uri: '{$host}'
        signatureParameters:
          - *ref_58
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_17
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: PostOptionalArrayHeader
            description: Test explicitly optional integer. Please put a header 'headerParameter' => null.
        protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: Explicit
        description: ''
    protocol: !<!Protocols> {}
security: !<!Security> 
  authenticationRequired: false
language: !<!Languages> 
  default:
    name: AutoRestRequiredOptionalTestService
    description: ''
protocol: !<!Protocols> 
  http: !<!HttpModel> {}
