// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace multiple_inheritance.Models
{
    /// <summary> The Cat. </summary>
    public partial class Cat : Pet
    {
        /// <summary> Initializes a new instance of Cat. </summary>
        /// <param name="name"> The Name. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> is null. </exception>
        public Cat(string name) : base(name)
        {
            if (name == null)
            {
                throw new ArgumentNullException(nameof(name));
            }
        }

        /// <summary> Initializes a new instance of Cat. </summary>
        /// <param name="name"> The Name. </param>
        /// <param name="likesMilk"> The LikesMilk. </param>
        /// <param name="meows"> The Meows. </param>
        /// <param name="hisses"> The Hisses. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> is null. </exception>
        internal Cat(string name, bool? likesMilk, bool? meows, bool? hisses) : base(name)
        {
            if (name == null)
            {
                throw new ArgumentNullException(nameof(name));
            }

            LikesMilk = likesMilk;
            Meows = meows;
            Hisses = hisses;
        }

        /// <summary> The LikesMilk. </summary>
        public bool? LikesMilk { get; set; }
        /// <summary> The Meows. </summary>
        public bool? Meows { get; set; }
        /// <summary> The Hisses. </summary>
        public bool? Hisses { get; set; }
    }
}
