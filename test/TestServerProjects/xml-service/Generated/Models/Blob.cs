// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace xml_service.Models
{
    /// <summary> An Azure Storage blob. </summary>
    public partial class Blob
    {
        /// <summary> Initializes a new instance of Blob. </summary>
        /// <param name="name"> . </param>
        /// <param name="deleted"> . </param>
        /// <param name="snapshot"> . </param>
        /// <param name="properties"> Properties of a blob. </param>
        internal Blob(string name, bool deleted, string snapshot, BlobProperties properties)
        {
            if (name == null)
            {
                throw new ArgumentNullException(nameof(name));
            }
            if (snapshot == null)
            {
                throw new ArgumentNullException(nameof(snapshot));
            }
            if (properties == null)
            {
                throw new ArgumentNullException(nameof(properties));
            }

            Name = name;
            Deleted = deleted;
            Snapshot = snapshot;
            Properties = properties;
            Metadata = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of Blob. </summary>
        /// <param name="name"> . </param>
        /// <param name="deleted"> . </param>
        /// <param name="snapshot"> . </param>
        /// <param name="properties"> Properties of a blob. </param>
        /// <param name="metadata"> Dictionary of &lt;string&gt;. </param>
        internal Blob(string name, bool deleted, string snapshot, BlobProperties properties, IReadOnlyDictionary<string, string> metadata)
        {
            Name = name;
            Deleted = deleted;
            Snapshot = snapshot;
            Properties = properties;
            Metadata = metadata;
        }

        public string Name { get; }
        public bool Deleted { get; }
        public string Snapshot { get; }
        /// <summary> Properties of a blob. </summary>
        public BlobProperties Properties { get; }
        /// <summary> Dictionary of &lt;string&gt;. </summary>
        public IReadOnlyDictionary<string, string> Metadata { get; }
    }
}
