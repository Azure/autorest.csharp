// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Xml;
using System.Xml.Linq;
using Azure.Core;

namespace xml_service.Models
{
    public partial class RootWithRefAndMeta : IXmlSerializable
    {
        void IXmlSerializable.Write(XmlWriter writer, string nameHint)
        {
            writer.WriteStartElement(nameHint ?? "RootWithRefAndMeta");
            if (RefToModel != null)
            {
                writer.WriteObjectValue(RefToModel, "XMLComplexTypeWithMeta");
            }
            if (Something != null)
            {
                writer.WriteStartElement("Something");
                writer.WriteValue(Something);
                writer.WriteEndElement();
            }
            writer.WriteEndElement();
        }

        internal static RootWithRefAndMeta DeserializeRootWithRefAndMeta(XElement element)
        {
            var obj = new RootWithRefAndMeta();
            if (element.Element("XMLComplexTypeWithMeta") is XElement xMLComplexTypeWithMeta)
            {
                obj.RefToModel = ComplexTypeWithMeta.DeserializeComplexTypeWithMeta(xMLComplexTypeWithMeta);
            }
            if (element.Element("Something") is XElement something)
            {
                obj.Something = (string)something;
            }
            return obj;
        }
    }
}
