// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Xml;
using System.Xml.Linq;
using Azure.Core;

namespace xml_service.Models
{
    public partial class CorsRule : IXmlSerializable
    {
        void IXmlSerializable.Write(XmlWriter writer, string nameHint)
        {
            writer.WriteStartElement(nameHint ?? "CorsRule");
            writer.WriteStartElement("AllowedOrigins");
            writer.WriteValue(AllowedOrigins);
            writer.WriteEndElement();
            writer.WriteStartElement("AllowedMethods");
            writer.WriteValue(AllowedMethods);
            writer.WriteEndElement();
            writer.WriteStartElement("AllowedHeaders");
            writer.WriteValue(AllowedHeaders);
            writer.WriteEndElement();
            writer.WriteStartElement("ExposedHeaders");
            writer.WriteValue(ExposedHeaders);
            writer.WriteEndElement();
            writer.WriteStartElement("MaxAgeInSeconds");
            writer.WriteValue(MaxAgeInSeconds);
            writer.WriteEndElement();
            writer.WriteEndElement();
        }

        internal static CorsRule DeserializeCorsRule(XElement element)
        {
            var obj = new CorsRule();
            if (element.Element("AllowedOrigins") is XElement allowedOrigins)
            {
                obj.AllowedOrigins = (string)allowedOrigins;
            }
            if (element.Element("AllowedMethods") is XElement allowedMethods)
            {
                obj.AllowedMethods = (string)allowedMethods;
            }
            if (element.Element("AllowedHeaders") is XElement allowedHeaders)
            {
                obj.AllowedHeaders = (string)allowedHeaders;
            }
            if (element.Element("ExposedHeaders") is XElement exposedHeaders)
            {
                obj.ExposedHeaders = (string)exposedHeaders;
            }
            if (element.Element("MaxAgeInSeconds") is XElement maxAgeInSeconds)
            {
                obj.MaxAgeInSeconds = (int)maxAgeInSeconds;
            }
            return obj;
        }
    }
}
