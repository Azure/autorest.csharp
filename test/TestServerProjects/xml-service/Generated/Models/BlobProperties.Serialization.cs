// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Xml.Linq;
using Azure.Core;

namespace xml_service.Models
{
    public partial class BlobProperties
    {
        internal static BlobProperties DeserializeBlobProperties(XElement element)
        {
            var obj = new BlobProperties();
            if (element.Element("Last-Modified") is XElement lastModified)
            {
                obj.LastModified = lastModified.GetDateTimeOffsetValue("R");
            }
            if (element.Element("Etag") is XElement etag)
            {
                obj.Etag = (string)etag;
            }
            if (element.Element("Content-Length") is XElement contentLength)
            {
                obj.ContentLength = (long?)contentLength;
            }
            if (element.Element("Content-Type") is XElement contentType)
            {
                obj.ContentType = (string)contentType;
            }
            if (element.Element("Content-Encoding") is XElement contentEncoding)
            {
                obj.ContentEncoding = (string)contentEncoding;
            }
            if (element.Element("Content-Language") is XElement contentLanguage)
            {
                obj.ContentLanguage = (string)contentLanguage;
            }
            if (element.Element("Content-MD5") is XElement contentMD5)
            {
                obj.ContentMD5 = (string)contentMD5;
            }
            if (element.Element("Content-Disposition") is XElement contentDisposition)
            {
                obj.ContentDisposition = (string)contentDisposition;
            }
            if (element.Element("Cache-Control") is XElement cacheControl)
            {
                obj.CacheControl = (string)cacheControl;
            }
            if (element.Element("x-ms-blob-sequence-number") is XElement xMsBlobSequenceNumber)
            {
                obj.BlobSequenceNumber = (int?)xMsBlobSequenceNumber;
            }
            if (element.Element("BlobType") is XElement blobType)
            {
                obj.BlobType = blobType.Value.ToBlobType();
            }
            if (element.Element("LeaseStatus") is XElement leaseStatus)
            {
                obj.LeaseStatus = leaseStatus.Value.ToLeaseStatusType();
            }
            if (element.Element("LeaseState") is XElement leaseState)
            {
                obj.LeaseState = leaseState.Value.ToLeaseStateType();
            }
            if (element.Element("LeaseDuration") is XElement leaseDuration)
            {
                obj.LeaseDuration = leaseDuration.Value.ToLeaseDurationType();
            }
            if (element.Element("CopyId") is XElement copyId)
            {
                obj.CopyId = (string)copyId;
            }
            if (element.Element("CopyStatus") is XElement copyStatus)
            {
                obj.CopyStatus = copyStatus.Value.ToCopyStatusType();
            }
            if (element.Element("CopySource") is XElement copySource)
            {
                obj.CopySource = (string)copySource;
            }
            if (element.Element("CopyProgress") is XElement copyProgress)
            {
                obj.CopyProgress = (string)copyProgress;
            }
            if (element.Element("CopyCompletionTime") is XElement copyCompletionTime)
            {
                obj.CopyCompletionTime = copyCompletionTime.GetDateTimeOffsetValue("R");
            }
            if (element.Element("CopyStatusDescription") is XElement copyStatusDescription)
            {
                obj.CopyStatusDescription = (string)copyStatusDescription;
            }
            if (element.Element("ServerEncrypted") is XElement serverEncrypted)
            {
                obj.ServerEncrypted = (bool?)serverEncrypted;
            }
            if (element.Element("IncrementalCopy") is XElement incrementalCopy)
            {
                obj.IncrementalCopy = (bool?)incrementalCopy;
            }
            if (element.Element("DestinationSnapshot") is XElement destinationSnapshot)
            {
                obj.DestinationSnapshot = (string)destinationSnapshot;
            }
            if (element.Element("DeletedTime") is XElement deletedTime)
            {
                obj.DeletedTime = deletedTime.GetDateTimeOffsetValue("R");
            }
            if (element.Element("RemainingRetentionDays") is XElement remainingRetentionDays)
            {
                obj.RemainingRetentionDays = (int?)remainingRetentionDays;
            }
            if (element.Element("AccessTier") is XElement accessTier)
            {
                obj.AccessTier = new AccessTier(accessTier.Value);
            }
            if (element.Element("AccessTierInferred") is XElement accessTierInferred)
            {
                obj.AccessTierInferred = (bool?)accessTierInferred;
            }
            if (element.Element("ArchiveStatus") is XElement archiveStatus)
            {
                obj.ArchiveStatus = new ArchiveStatus(archiveStatus.Value);
            }
            return obj;
        }
    }
}
