// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Xml.Linq;
using Azure.Core;

namespace xml_service.Models
{
    public partial class ListContainersResponse
    {
        internal static ListContainersResponse DeserializeListContainersResponse(XElement element)
        {
            ListContainersResponse result = default;
            result = new ListContainersResponse(); var serviceEndpoint = element.Attribute("ServiceEndpoint");
            if (serviceEndpoint != null)
            {
                result.ServiceEndpoint = (string)serviceEndpoint;
            }
            string value = default;
            var prefix = element.Element("Prefix");
            if (prefix != null)
            {
                value = (string)prefix;
            }
            result.Prefix = value;
            string value0 = default;
            var marker = element.Element("Marker");
            if (marker != null)
            {
                value0 = (string)marker;
            }
            result.Marker = value0;
            int value1 = default;
            var maxResults = element.Element("MaxResults");
            if (maxResults != null)
            {
                value1 = (int)maxResults;
            }
            result.MaxResults = value1;
            string value2 = default;
            var nextMarker = element.Element("NextMarker");
            if (nextMarker != null)
            {
                value2 = (string)nextMarker;
            }
            result.NextMarker = value2;
            var containers = element.Element("Containers");
            if (containers != null)
            {
                result.Containers = new List<Container>();
                foreach (var e in containers.Elements("Container"))
                {
                    Container value3 = default;
                    value3 = Container.DeserializeContainer(e);
                    result.Containers.Add(value3);
                }
            }
            return result;
        }
    }
}
