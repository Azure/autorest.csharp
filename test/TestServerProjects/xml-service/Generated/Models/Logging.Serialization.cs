// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Xml;
using System.Xml.Linq;
using Azure.Core;

namespace xml_service.Models
{
    public partial class Logging : IXmlSerializable
    {
        void IXmlSerializable.Write(XmlWriter writer, string nameHint)
        {
            writer.WriteStartElement(nameHint ?? "Logging");
            writer.WriteStartElement("Version");
            writer.WriteValue(Version);
            writer.WriteEndElement();
            writer.WriteStartElement("Delete");
            writer.WriteValue(Delete);
            writer.WriteEndElement();
            writer.WriteStartElement("Read");
            writer.WriteValue(Read);
            writer.WriteEndElement();
            writer.WriteStartElement("Write");
            writer.WriteValue(Write);
            writer.WriteEndElement();
            writer.WriteObjectValue(RetentionPolicy, "RetentionPolicy");
            writer.WriteEndElement();
        }

        internal static Logging DeserializeLogging(XElement element)
        {
            var obj = new Logging();
            if (element.Element("Version") is XElement version)
            {
                obj.Version = (string)version;
            }
            if (element.Element("Delete") is XElement delete)
            {
                obj.Delete = (bool)delete;
            }
            if (element.Element("Read") is XElement read)
            {
                obj.Read = (bool)read;
            }
            if (element.Element("Write") is XElement write)
            {
                obj.Write = (bool)write;
            }
            if (element.Element("RetentionPolicy") is XElement retentionPolicy)
            {
                obj.RetentionPolicy = RetentionPolicy.DeserializeRetentionPolicy(retentionPolicy);
            }
            return obj;
        }
    }
}
