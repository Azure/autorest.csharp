// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace xml_service.Models
{
    /// <summary> Properties of a blob. </summary>
    public partial class BlobProperties
    {
        /// <summary> Initializes a new instance of BlobProperties. </summary>
        /// <param name="lastModified"> The LastModified. </param>
        /// <param name="etag"> The Etag. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="etag"/> is null. </exception>
        internal BlobProperties(DateTimeOffset lastModified, string etag)
        {
            if (etag == null)
            {
                throw new ArgumentNullException(nameof(etag));
            }

            LastModified = lastModified;
            Etag = etag;
        }

        /// <summary> Initializes a new instance of BlobProperties. </summary>
        /// <param name="lastModified"> The LastModified. </param>
        /// <param name="etag"> The Etag. </param>
        /// <param name="contentLength"> Size in bytes. </param>
        /// <param name="contentType"> The ContentType. </param>
        /// <param name="contentEncoding"> The ContentEncoding. </param>
        /// <param name="contentLanguage"> The ContentLanguage. </param>
        /// <param name="contentMD5"> The ContentMD5. </param>
        /// <param name="contentDisposition"> The ContentDisposition. </param>
        /// <param name="cacheControl"> The CacheControl. </param>
        /// <param name="blobSequenceNumber"> The BlobSequenceNumber. </param>
        /// <param name="blobType"> The BlobType. </param>
        /// <param name="leaseStatus"> The LeaseStatus. </param>
        /// <param name="leaseState"> The LeaseState. </param>
        /// <param name="leaseDuration"> The LeaseDuration. </param>
        /// <param name="copyId"> The CopyId. </param>
        /// <param name="copyStatus"> The CopyStatus. </param>
        /// <param name="copySource"> The CopySource. </param>
        /// <param name="copyProgress"> The CopyProgress. </param>
        /// <param name="copyCompletionTime"> The CopyCompletionTime. </param>
        /// <param name="copyStatusDescription"> The CopyStatusDescription. </param>
        /// <param name="serverEncrypted"> The ServerEncrypted. </param>
        /// <param name="incrementalCopy"> The IncrementalCopy. </param>
        /// <param name="destinationSnapshot"> The DestinationSnapshot. </param>
        /// <param name="deletedTime"> The DeletedTime. </param>
        /// <param name="remainingRetentionDays"> The RemainingRetentionDays. </param>
        /// <param name="accessTier"> The AccessTier. </param>
        /// <param name="accessTierInferred"> The AccessTierInferred. </param>
        /// <param name="archiveStatus"> The ArchiveStatus. </param>
        internal BlobProperties(DateTimeOffset lastModified, string etag, long? contentLength, string contentType, string contentEncoding, string contentLanguage, string contentMD5, string contentDisposition, string cacheControl, int? blobSequenceNumber, BlobType? blobType, LeaseStatusType? leaseStatus, LeaseStateType? leaseState, LeaseDurationType? leaseDuration, string copyId, CopyStatusType? copyStatus, string copySource, string copyProgress, DateTimeOffset? copyCompletionTime, string copyStatusDescription, bool? serverEncrypted, bool? incrementalCopy, string destinationSnapshot, DateTimeOffset? deletedTime, int? remainingRetentionDays, AccessTier? accessTier, bool? accessTierInferred, ArchiveStatus? archiveStatus)
        {
            LastModified = lastModified;
            Etag = etag;
            ContentLength = contentLength;
            ContentType = contentType;
            ContentEncoding = contentEncoding;
            ContentLanguage = contentLanguage;
            ContentMD5 = contentMD5;
            ContentDisposition = contentDisposition;
            CacheControl = cacheControl;
            BlobSequenceNumber = blobSequenceNumber;
            BlobType = blobType;
            LeaseStatus = leaseStatus;
            LeaseState = leaseState;
            LeaseDuration = leaseDuration;
            CopyId = copyId;
            CopyStatus = copyStatus;
            CopySource = copySource;
            CopyProgress = copyProgress;
            CopyCompletionTime = copyCompletionTime;
            CopyStatusDescription = copyStatusDescription;
            ServerEncrypted = serverEncrypted;
            IncrementalCopy = incrementalCopy;
            DestinationSnapshot = destinationSnapshot;
            DeletedTime = deletedTime;
            RemainingRetentionDays = remainingRetentionDays;
            AccessTier = accessTier;
            AccessTierInferred = accessTierInferred;
            ArchiveStatus = archiveStatus;
        }

        /// <summary> The LastModified. </summary>
        public DateTimeOffset LastModified { get; }
        /// <summary> The Etag. </summary>
        public string Etag { get; }
        /// <summary> Size in bytes. </summary>
        public long? ContentLength { get; }
        /// <summary> The ContentType. </summary>
        public string ContentType { get; }
        /// <summary> The ContentEncoding. </summary>
        public string ContentEncoding { get; }
        /// <summary> The ContentLanguage. </summary>
        public string ContentLanguage { get; }
        /// <summary> The ContentMD5. </summary>
        public string ContentMD5 { get; }
        /// <summary> The ContentDisposition. </summary>
        public string ContentDisposition { get; }
        /// <summary> The CacheControl. </summary>
        public string CacheControl { get; }
        /// <summary> The BlobSequenceNumber. </summary>
        public int? BlobSequenceNumber { get; }
        /// <summary> The BlobType. </summary>
        public BlobType? BlobType { get; }
        /// <summary> The LeaseStatus. </summary>
        public LeaseStatusType? LeaseStatus { get; }
        /// <summary> The LeaseState. </summary>
        public LeaseStateType? LeaseState { get; }
        /// <summary> The LeaseDuration. </summary>
        public LeaseDurationType? LeaseDuration { get; }
        /// <summary> The CopyId. </summary>
        public string CopyId { get; }
        /// <summary> The CopyStatus. </summary>
        public CopyStatusType? CopyStatus { get; }
        /// <summary> The CopySource. </summary>
        public string CopySource { get; }
        /// <summary> The CopyProgress. </summary>
        public string CopyProgress { get; }
        /// <summary> The CopyCompletionTime. </summary>
        public DateTimeOffset? CopyCompletionTime { get; }
        /// <summary> The CopyStatusDescription. </summary>
        public string CopyStatusDescription { get; }
        /// <summary> The ServerEncrypted. </summary>
        public bool? ServerEncrypted { get; }
        /// <summary> The IncrementalCopy. </summary>
        public bool? IncrementalCopy { get; }
        /// <summary> The DestinationSnapshot. </summary>
        public string DestinationSnapshot { get; }
        /// <summary> The DeletedTime. </summary>
        public DateTimeOffset? DeletedTime { get; }
        /// <summary> The RemainingRetentionDays. </summary>
        public int? RemainingRetentionDays { get; }
        /// <summary> The AccessTier. </summary>
        public AccessTier? AccessTier { get; }
        /// <summary> The AccessTierInferred. </summary>
        public bool? AccessTierInferred { get; }
        /// <summary> The ArchiveStatus. </summary>
        public ArchiveStatus? ArchiveStatus { get; }
    }
}
