// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace xml_service.Models
{
    /// <summary> Properties of a blob. </summary>
    public partial class BlobProperties
    {
        /// <summary> Initializes a new instance of BlobProperties. </summary>
        /// <param name="lastModified"> . </param>
        /// <param name="etag"> . </param>
        internal BlobProperties(DateTimeOffset lastModified, string etag)
        {
            LastModified = lastModified;
            Etag = etag;
        }

        /// <summary> Initializes a new instance of BlobProperties. </summary>
        /// <param name="lastModified"> . </param>
        /// <param name="etag"> . </param>
        /// <param name="contentLength"> Size in bytes. </param>
        /// <param name="contentType"> . </param>
        /// <param name="contentEncoding"> . </param>
        /// <param name="contentLanguage"> . </param>
        /// <param name="contentMD5"> . </param>
        /// <param name="contentDisposition"> . </param>
        /// <param name="cacheControl"> . </param>
        /// <param name="blobSequenceNumber"> . </param>
        /// <param name="blobType"> . </param>
        /// <param name="leaseStatus"> . </param>
        /// <param name="leaseState"> . </param>
        /// <param name="leaseDuration"> . </param>
        /// <param name="copyId"> . </param>
        /// <param name="copyStatus"> . </param>
        /// <param name="copySource"> . </param>
        /// <param name="copyProgress"> . </param>
        /// <param name="copyCompletionTime"> . </param>
        /// <param name="copyStatusDescription"> . </param>
        /// <param name="serverEncrypted"> . </param>
        /// <param name="incrementalCopy"> . </param>
        /// <param name="destinationSnapshot"> . </param>
        /// <param name="deletedTime"> . </param>
        /// <param name="remainingRetentionDays"> . </param>
        /// <param name="accessTier"> . </param>
        /// <param name="accessTierInferred"> . </param>
        /// <param name="archiveStatus"> . </param>
        internal BlobProperties(DateTimeOffset lastModified, string etag, long? contentLength, string contentType, string contentEncoding, string contentLanguage, string contentMD5, string contentDisposition, string cacheControl, int? blobSequenceNumber, BlobType? blobType, LeaseStatusType? leaseStatus, LeaseStateType? leaseState, LeaseDurationType? leaseDuration, string copyId, CopyStatusType? copyStatus, string copySource, string copyProgress, DateTimeOffset? copyCompletionTime, string copyStatusDescription, bool? serverEncrypted, bool? incrementalCopy, string destinationSnapshot, DateTimeOffset? deletedTime, int? remainingRetentionDays, AccessTier? accessTier, bool? accessTierInferred, ArchiveStatus? archiveStatus)
        {
            LastModified = lastModified;
            Etag = etag;
            ContentLength = contentLength;
            ContentType = contentType;
            ContentEncoding = contentEncoding;
            ContentLanguage = contentLanguage;
            ContentMD5 = contentMD5;
            ContentDisposition = contentDisposition;
            CacheControl = cacheControl;
            BlobSequenceNumber = blobSequenceNumber;
            BlobType = blobType;
            LeaseStatus = leaseStatus;
            LeaseState = leaseState;
            LeaseDuration = leaseDuration;
            CopyId = copyId;
            CopyStatus = copyStatus;
            CopySource = copySource;
            CopyProgress = copyProgress;
            CopyCompletionTime = copyCompletionTime;
            CopyStatusDescription = copyStatusDescription;
            ServerEncrypted = serverEncrypted;
            IncrementalCopy = incrementalCopy;
            DestinationSnapshot = destinationSnapshot;
            DeletedTime = deletedTime;
            RemainingRetentionDays = remainingRetentionDays;
            AccessTier = accessTier;
            AccessTierInferred = accessTierInferred;
            ArchiveStatus = archiveStatus;
        }

        public DateTimeOffset LastModified { get; }
        public string Etag { get; }
        /// <summary> Size in bytes. </summary>
        public long? ContentLength { get; }
        public string ContentType { get; }
        public string ContentEncoding { get; }
        public string ContentLanguage { get; }
        public string ContentMD5 { get; }
        public string ContentDisposition { get; }
        public string CacheControl { get; }
        public int? BlobSequenceNumber { get; }
        public BlobType? BlobType { get; }
        public LeaseStatusType? LeaseStatus { get; }
        public LeaseStateType? LeaseState { get; }
        public LeaseDurationType? LeaseDuration { get; }
        public string CopyId { get; }
        public CopyStatusType? CopyStatus { get; }
        public string CopySource { get; }
        public string CopyProgress { get; }
        public DateTimeOffset? CopyCompletionTime { get; }
        public string CopyStatusDescription { get; }
        public bool? ServerEncrypted { get; }
        public bool? IncrementalCopy { get; }
        public string DestinationSnapshot { get; }
        public DateTimeOffset? DeletedTime { get; }
        public int? RemainingRetentionDays { get; }
        public AccessTier? AccessTier { get; }
        public bool? AccessTierInferred { get; }
        public ArchiveStatus? ArchiveStatus { get; }
    }
}
