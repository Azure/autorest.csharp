// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Xml;
using System.Xml.Linq;
using Azure.Core;
using Azure.Core.Serialization;

namespace xml_service.Models
{
    public partial class ModelWithUrlProperty : IXmlSerializable, IXmlModelSerializable
    {
        void IXmlModelSerializable.Serialize(XmlWriter writer, ModelSerializerOptions options) => ((IXmlSerializable)this).Write(writer, null, options);

        void IXmlSerializable.Write(XmlWriter writer, string nameHint, ModelSerializerOptions options)
        {
            writer.WriteStartElement("ModelWithUrlProperty");
            if (Optional.IsDefined(Url))
            {
                writer.WriteStartElement("Url");
                writer.WriteValue(Url);
                writer.WriteEndElement();
            }
            writer.WriteEndElement();
        }

        object IModelSerializable.Deserialize(BinaryData data, ModelSerializerOptions options)
        {
            return DeserializeModelWithUrlProperty(XElement.Load(data.ToStream()), options);
        }

        internal static ModelWithUrlProperty DeserializeModelWithUrlProperty(XElement element, ModelSerializerOptions options = default)
        {
            options ??= ModelSerializerOptions.AzureServiceDefault;
            Uri url = default;
            if (element.Element("Url") is XElement urlElement)
            {
                url = new Uri((string)urlElement);
            }
            return new ModelWithUrlProperty(url);
        }
    }
}
