// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Xml;
using System.Xml.Linq;
using Azure.Core;

namespace xml_service.Models
{
    public partial class Slide : IXmlSerializable
    {
        void IXmlSerializable.Write(XmlWriter writer, string nameHint)
        {
            writer.WriteStartElement(nameHint ?? "slide");
            if (Type != null)
            {
                writer.WriteStartAttribute("type");
                writer.WriteValue(Type);
                writer.WriteEndAttribute();
            }
            if (Title != null)
            {
                writer.WriteStartElement("title");
                writer.WriteValue(Title);
                writer.WriteEndElement();
            }
            if (Items != null)
            {
                foreach (var item in Items)
                {
                    writer.WriteStartElement("item");
                    writer.WriteValue(item);
                    writer.WriteEndElement();
                }
            }
            writer.WriteEndElement();
        }

        internal static Slide DeserializeSlide(XElement element)
        {
            Slide result = default;
            result = new Slide(); var type = element.Attribute("type");
            if (type != null)
            {
                result.Type = (string)type;
            }
            string value = default;
            var title = element.Element("title");
            if (title != null)
            {
                value = (string)title;
            }
            result.Title = value;
            result.Items = new List<string>();
            foreach (var e in element.Elements("item"))
            {
                string value0 = default;
                value0 = (string)e;
                result.Items.Add(value0);
            }
            return result;
        }
    }
}
