!<!CodeModel> 
schemas: !<!Schemas> 
  objects:
  - !<!ObjectSchema> &ref_7
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      schema: !<!NumberSchema> &ref_0
        type: integer
        precision: 32
        language: !<!Languages> 
          default:
            name: typeForstatus
            description: MISSING·SCHEMA-DESCRIPTION-INTEGER
        protocol: !<!Protocols> {}
      serializedName: status
      language: !<!Languages> 
        default:
          name: status
          description: MISSING·SCHEMA-DESCRIPTION-INTEGER
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: !<!StringSchema> &ref_1
        type: string
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: Error-message
            description: MISSING·SCHEMA-DESCRIPTION-STRING
        protocol: !<!Protocols> {}
      serializedName: message
      language: !<!Languages> 
        default:
          name: message
          description: MISSING·SCHEMA-DESCRIPTION-STRING
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: Error
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api100
    protocol: !<!Protocols> {}
  numbers:
  - *ref_0
  strings:
  - !<!StringSchema> &ref_3
    type: string
    language: !<!Languages> 
      default:
        name: string
        description: simple string
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_2
    type: string
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·customuri-subscriptionid-keyname·get·parameters·0·schema
        description: MISSING·SCHEMA-DESCRIPTION-STRING
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_6
    type: string
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    defaultValue: v1
    language: !<!Languages> 
      default:
        name: paths·customuri-subscriptionid-keyname·get·parameters·2·schema
        description: MISSING·SCHEMA-DESCRIPTION-STRING
    protocol: !<!Protocols> {}
  - *ref_1
  - !<!StringSchema> 
    type: string
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    defaultValue: host
    language: !<!Languages> 
      default:
        name: components·parameters·dnssuffix·schema
        description: MISSING·SCHEMA-DESCRIPTION-STRING
    protocol: !<!Protocols> {}
globalParameters:
- !<!Parameter> &ref_5
  schema: *ref_2
  implementation: Client
  required: true
  extensions:
    x-ms-priority: 0
  language: !<!Languages> 
    default:
      name: subscriptionId
      description: The subscription id with value 'test12'.
      serializedName: subscriptionId
  protocol: !<!Protocols> 
    http: !<!HttpParameter> 
      in: path
- !<!Parameter> &ref_4
  schema: *ref_3
  clientDefaultValue: host
  implementation: Client
  required: true
  extensions:
    x-in: path
    x-ms-priority: 1
    x-ms-skip-url-encoding: true
    x-name: dnsSuffix
    x-required: true
    x-type: string
  language: !<!Languages> 
    default:
      name: dnsSuffix
      description: A string value that is used as a global part of the parameterized host. Default value 'host'.
      serializedName: dnsSuffix
  protocol: !<!Protocols> 
    http: !<!HttpParameter> 
      in: uri
info: !<!Info> 
  description: Test Infrastructure for AutoRest
  title: custom-baseUrl-more-options
operationGroups:
- !<!OperationGroup> 
  $key: paths
  operations:
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        schema: *ref_3
        implementation: Method
        required: true
        extensions:
          x-in: path
          x-ms-skip-url-encoding: true
          x-name: vault
          x-required: true
          x-type: string
        language: !<!Languages> 
          default:
            name: vault
            description: 'The vault name, e.g. https://myvault'
            serializedName: vault
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: uri
      - !<!Parameter> 
        schema: *ref_3
        implementation: Method
        required: true
        extensions:
          x-in: path
          x-ms-skip-url-encoding: true
          x-name: secret
          x-required: true
          x-type: string
        language: !<!Languages> 
          default:
            name: secret
            description: Secret value.
            serializedName: secret
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: uri
      - *ref_4
      - !<!Parameter> 
        schema: *ref_2
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: keyName
            description: The key name with value 'key1'.
            serializedName: keyName
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - *ref_5
      - !<!Parameter> 
        schema: *ref_6
        implementation: Method
        language: !<!Languages> 
          default:
            name: keyVersion
            description: The key version. Default value 'v1'.
            serializedName: keyVersion
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/customuri/{subscriptionId}/{keyName}'
          method: get
          uri: '{vault}{secret}{dnsSuffix}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_7
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getEmpty
        description: Get a 200 to test a valid base uri
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: paths
      description: ''
  protocol: !<!Protocols> {}
language: !<!Languages> 
  default:
    name: ''
    description: ''
protocol: !<!Protocols> 
  http: !<!HttpModel> {}
