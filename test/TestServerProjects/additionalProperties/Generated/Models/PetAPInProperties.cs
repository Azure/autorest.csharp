// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace additionalProperties.Models
{
    /// <summary> The PetAPInProperties. </summary>
    public partial class PetAPInProperties
    {
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="PetAPInProperties"/>. </summary>
        /// <param name="id"></param>
        public PetAPInProperties(int id)
        {
            Id = id;
            AdditionalProperties = new ChangeTrackingDictionary<string, float>();
        }

        /// <summary> Initializes a new instance of <see cref="PetAPInProperties"/>. </summary>
        /// <param name="id"></param>
        /// <param name="name"></param>
        /// <param name="status"></param>
        /// <param name="additionalProperties"> Dictionary of &lt;number&gt;. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal PetAPInProperties(int id, string name, bool? status, IDictionary<string, float> additionalProperties, Dictionary<string, BinaryData> rawData)
        {
            Id = id;
            Name = name;
            Status = status;
            AdditionalProperties = additionalProperties;
            _rawData = rawData;
        }

        /// <summary> Initializes a new instance of <see cref="PetAPInProperties"/> for deserialization. </summary>
        internal PetAPInProperties()
        {
        }

        /// <summary> Gets or sets the id. </summary>
        public int Id { get; set; }
        /// <summary> Gets or sets the name. </summary>
        public string Name { get; set; }
        /// <summary> Gets the status. </summary>
        public bool? Status { get; }
        /// <summary> Dictionary of &lt;number&gt;. </summary>
        public IDictionary<string, float> AdditionalProperties { get; }
    }
}
