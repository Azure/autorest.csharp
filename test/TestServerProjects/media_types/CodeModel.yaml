!<!CodeModel> 
info: !<!Info> 
  description: Play with produces/consumes and media-types in general.
  title: Media Types Client
schemas: !<!Schemas> 
  strings:
    - !<!StringSchema> &ref_0
      type: string
      language: !<!Languages> 
        default:
          name: String
          description: simple string
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_1
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: 2.0-preview
      maxLength: 2048
      language: !<!Languages> 
        default:
          name: SourcePathSource
          description: File source path.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_11
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: 2.0-preview
      language: !<!Languages> 
        default:
          name: String
          description: ''
      protocol: !<!Protocols> {}
  sealedChoices:
    - !<!SealedChoiceSchema> &ref_3
      choices:
        - !<!ChoiceValue> 
          value: application/pdf
          language:
            default:
              name: ApplicationPdf
              description: Content Type 'application/pdf'
        - !<!ChoiceValue> 
          value: image/jpeg
          language:
            default:
              name: ImageJpeg
              description: Content Type 'image/jpeg'
        - !<!ChoiceValue> 
          value: image/png
          language:
            default:
              name: ImagePng
              description: Content Type 'image/png'
        - !<!ChoiceValue> 
          value: image/tiff
          language:
            default:
              name: ImageTiff
              description: Content Type 'image/tiff'
      type: sealed-choice
      choiceType: *ref_0
      language: !<!Languages> 
        default:
          name: ContentType
          description: Content type for upload
      protocol: !<!Protocols> {}
  constants:
    - !<!ConstantSchema> &ref_8
      type: constant
      value: !<!ConstantValue> 
        value: application/json
      valueType: *ref_0
      language: !<!Languages> 
        default:
          name: ApplicationJson
          description: Content Type 'application/json'
      protocol: !<!Protocols> {}
    - !<!ConstantSchema> &ref_5
      type: constant
      value: !<!ConstantValue> 
        value: application/json
      valueType: *ref_0
      language: !<!Languages> 
        default:
          name: Accept
          description: 'Accept: application/json'
      protocol: !<!Protocols> {}
    - !<!ConstantSchema> &ref_12
      type: constant
      value: !<!ConstantValue> 
        value: text/plain
      valueType: *ref_0
      language: !<!Languages> 
        default:
          name: TextPlain
          description: Content Type 'text/plain'
      protocol: !<!Protocols> {}
  binaries:
    - !<!BinarySchema> &ref_4
      type: binary
      apiVersions:
        - !<!ApiVersion> 
          version: 2.0-preview
      language: !<!Languages> 
        default:
          name: binary
          description: Uri or local path to source data.
      protocol: !<!Protocols> {}
  objects:
    - !<!ObjectSchema> &ref_9
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: 2.0-preview
      properties:
        - !<!Property> 
          schema: *ref_1
          serializedName: source
          language: !<!Languages> 
            default:
              name: source
              description: File source path.
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - input
      language: !<!Languages> 
        default:
          name: SourcePath
          description: Uri or local path to source data.
          namespace: ''
      protocol: !<!Protocols> {}
globalParameters:
  - !<!Parameter> &ref_2
    schema: *ref_0
    clientDefaultValue: 'http://localhost:3000'
    implementation: Client
    origin: 'modelerfour:synthesized/host'
    required: true
    extensions:
      x-ms-skip-url-encoding: true
    language: !<!Languages> 
      default:
        name: $host
        description: server parameter
        serializedName: $host
    protocol: !<!Protocols> 
      http: !<!HttpParameter> 
        in: uri
operationGroups:
  - !<!OperationGroup> 
    $key: ''
    operations:
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 2.0-preview
        parameters:
          - *ref_2
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> &ref_6
                schema: *ref_3
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Upload file type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_7
                schema: *ref_4
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: input
                    description: Input parameter.
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: binary
              - !<!Parameter> 
                schema: *ref_5
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters:
              - *ref_6
              - *ref_7
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpBinaryRequest> 
                path: /mediatypes/analyze
                method: post
                binary: true
                knownMediaType: binary
                mediaTypes:
                  - application/pdf
                  - image/jpeg
                  - image/png
                  - image/tiff
                uri: '{$host}'
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_8
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_10
                schema: *ref_9
                implementation: Method
                required: false
                language: !<!Languages> 
                  default:
                    name: input
                    description: Input parameter.
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
              - !<!Parameter> 
                schema: *ref_5
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters:
              - *ref_10
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /mediatypes/analyze
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!SchemaResponse> 
            schema: *ref_11
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        language: !<!Languages> 
          default:
            name: AnalyzeBody
            description: 'Analyze body, that could be different media types.'
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 2.0-preview
        parameters:
          - *ref_2
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_12
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Upload file type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_13
                schema: *ref_0
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: input
                    description: Input parameter.
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: binary
              - !<!Parameter> 
                schema: *ref_5
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters:
              - *ref_13
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpBinaryRequest> 
                path: /mediatypes/contentTypeWithEncoding
                method: post
                binary: true
                knownMediaType: text
                mediaTypes:
                  - text/plain
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!SchemaResponse> 
            schema: *ref_11
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        language: !<!Languages> 
          default:
            name: ContentTypeWithEncoding
            description: Pass in contentType 'text/plain; encoding=UTF-8' to pass test. Value for input does not matter
        protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: ''
        description: ''
    protocol: !<!Protocols> {}
security: !<!Security> 
  authenticationRequired: false
language: !<!Languages> 
  default:
    name: MediaTypesClient
    description: ''
protocol: !<!Protocols> 
  http: !<!HttpModel> {}
