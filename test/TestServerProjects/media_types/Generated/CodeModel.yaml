!CodeModel 
info: !Info 
  description: Play with produces/consumes and media-types in general.
  title: Media Types Client
schemas: !Schemas 
  strings:
    - !StringSchema &ref_0
      type: string
      language: !Languages 
        default:
          name: String
          description: simple string
      protocol: !Protocols {}
    - !StringSchema &ref_1
      type: string
      apiVersions:
        - !ApiVersion 
          version: 2.0-preview
      maxLength: 2048
      language: !Languages 
        default:
          name: SourcePathSource
          description: File source path.
      protocol: !Protocols {}
    - !StringSchema &ref_11
      type: string
      apiVersions:
        - !ApiVersion 
          version: 2.0-preview
      language: !Languages 
        default:
          name: String
          description: ''
      protocol: !Protocols {}
  sealedChoices:
    - !SealedChoiceSchema &ref_3
      choices:
        - !ChoiceValue 
          value: application/pdf
          language:
            default:
              name: ApplicationPdf
              description: Content Type 'application/pdf'
        - !ChoiceValue 
          value: image/jpeg
          language:
            default:
              name: ImageJpeg
              description: Content Type 'image/jpeg'
        - !ChoiceValue 
          value: image/png
          language:
            default:
              name: ImagePng
              description: Content Type 'image/png'
        - !ChoiceValue 
          value: image/tiff
          language:
            default:
              name: ImageTiff
              description: Content Type 'image/tiff'
      type: sealed-choice
      choiceType: *ref_0
      language: !Languages 
        default:
          name: ContentType
          description: Content type for upload
      protocol: !Protocols {}
    - !SealedChoiceSchema &ref_18
      choices:
        - !ChoiceValue 
          value: application/json
          language:
            default:
              name: ApplicationJson
              description: Content Type 'application/json'
        - !ChoiceValue 
          value: application/octet-stream
          language:
            default:
              name: ApplicationOctetStream
              description: Content Type 'application/octet-stream'
      type: sealed-choice
      choiceType: *ref_0
      language: !Languages 
        default:
          name: ContentType1
          description: Content type for upload
      protocol: !Protocols {}
  constants:
    - !ConstantSchema &ref_8
      type: constant
      value: !ConstantValue 
        value: application/json
      valueType: *ref_0
      language: !Languages 
        default:
          name: ApplicationJson
          description: Content Type 'application/json'
      protocol: !Protocols {}
    - !ConstantSchema &ref_5
      type: constant
      value: !ConstantValue 
        value: application/json
      valueType: *ref_0
      language: !Languages 
        default:
          name: Accept
          description: 'Accept: application/json'
      protocol: !Protocols {}
    - !ConstantSchema &ref_16
      type: constant
      value: !ConstantValue 
        value: text/plain; charset=UTF-8
      valueType: *ref_0
      language: !Languages 
        default:
          name: TextPlainCharsetUTF8
          description: Content Type 'text/plain; charset=UTF-8'
      protocol: !Protocols {}
    - !ConstantSchema &ref_20
      type: constant
      value: !ConstantValue 
        value: text/plain
      valueType: *ref_0
      language: !Languages 
        default:
          name: Accept1
          description: 'Accept: text/plain'
      protocol: !Protocols {}
    - !ConstantSchema &ref_26
      type: constant
      value: !ConstantValue 
        value: text/plain
      valueType: *ref_0
      language: !Languages 
        default:
          name: TextPlain
          description: Content Type 'text/plain'
      protocol: !Protocols {}
  binaries:
    - !BinarySchema &ref_4
      type: binary
      apiVersions:
        - !ApiVersion 
          version: 2.0-preview
      language: !Languages 
        default:
          name: binary
          description: Uri or local path to source data.
      protocol: !Protocols {}
    - !BinarySchema &ref_12
      type: binary
      apiVersions:
        - !ApiVersion 
          version: 2.0-preview
      language: !Languages 
        default:
          name: binary
          description: Uri or local path to source data.
      protocol: !Protocols {}
    - !BinarySchema &ref_19
      type: binary
      apiVersions:
        - !ApiVersion 
          version: 2.0-preview
      language: !Languages 
        default:
          name: binary
          description: ''
      protocol: !Protocols {}
    - !BinarySchema &ref_23
      type: binary
      apiVersions:
        - !ApiVersion 
          version: 2.0-preview
      language: !Languages 
        default:
          name: binary
          description: ''
      protocol: !Protocols {}
  objects:
    - !ObjectSchema &ref_9
      type: object
      apiVersions:
        - !ApiVersion 
          version: 2.0-preview
      properties:
        - !Property 
          schema: *ref_1
          serializedName: source
          language: !Languages 
            default:
              name: source
              description: File source path.
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - input
      language: !Languages 
        default:
          name: SourcePath
          description: Uri or local path to source data.
          namespace: ''
      protocol: !Protocols {}
globalParameters:
  - !Parameter &ref_2
    schema: *ref_0
    clientDefaultValue: http://localhost:3000
    implementation: Client
    origin: modelerfour:synthesized/host
    required: true
    extensions:
      x-ms-skip-url-encoding: true
    language: !Languages 
      default:
        name: $host
        description: server parameter
        serializedName: $host
    protocol: !Protocols 
      http: !HttpParameter 
        in: uri
operationGroups:
  - !OperationGroup 
    $key: ''
    operations:
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: 2.0-preview
        parameters:
          - *ref_2
        requests:
          - !Request 
            parameters:
              - !Parameter &ref_6
                schema: *ref_3
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Upload file type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_7
                schema: *ref_4
                implementation: Method
                language: !Languages 
                  default:
                    name: input
                    description: Input parameter.
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: binary
              - !Parameter 
                schema: *ref_5
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_6
              - *ref_7
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpBinaryRequest 
                path: /mediatypes/analyze
                method: post
                binary: true
                knownMediaType: binary
                mediaTypes:
                  - application/pdf
                  - image/jpeg
                  - image/png
                  - image/tiff
                uri: '{$host}'
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_8
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_10
                schema: *ref_9
                implementation: Method
                required: false
                language: !Languages 
                  default:
                    name: input
                    description: Input parameter.
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_5
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_10
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /mediatypes/analyze
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !SchemaResponse 
            schema: *ref_11
            language: !Languages 
              default:
                name: ''
                description: Received correct format
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        language: !Languages 
          default:
            name: AnalyzeBody
            description: Analyze body, that could be different media types.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: 2.0-preview
        parameters:
          - *ref_2
        requests:
          - !Request 
            parameters:
              - !Parameter &ref_13
                schema: *ref_3
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Upload file type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_14
                schema: *ref_12
                implementation: Method
                language: !Languages 
                  default:
                    name: input
                    description: Input parameter.
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: binary
            signatureParameters:
              - *ref_13
              - *ref_14
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpBinaryRequest 
                path: /mediatypes/analyzeNoAccept
                method: post
                binary: true
                knownMediaType: binary
                mediaTypes:
                  - application/pdf
                  - image/jpeg
                  - image/png
                  - image/tiff
                uri: '{$host}'
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_8
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_15
                schema: *ref_9
                implementation: Method
                required: false
                language: !Languages 
                  default:
                    name: input
                    description: Input parameter.
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
            signatureParameters:
              - *ref_15
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /mediatypes/analyzeNoAccept
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Success
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '202'
        exceptions:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Error response
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: AnalyzeBodyNoAcceptHeader
            description: Analyze body, that could be different media types. Adds to AnalyzeBody by not having an accept type.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: 2.0-preview
        parameters:
          - *ref_2
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_16
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Upload file type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_17
                schema: *ref_0
                implementation: Method
                language: !Languages 
                  default:
                    name: input
                    description: Input parameter.
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: binary
              - !Parameter 
                schema: *ref_5
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_17
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpBinaryRequest 
                path: /mediatypes/contentTypeWithEncoding
                method: post
                binary: true
                knownMediaType: text
                mediaTypes:
                  - text/plain; charset=UTF-8
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !SchemaResponse 
            schema: *ref_11
            language: !Languages 
              default:
                name: ''
                description: Received 'text/plain; charset=UTF-8' as contentType
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        language: !Languages 
          default:
            name: ContentTypeWithEncoding
            description: Pass in contentType 'text/plain; charset=UTF-8' to pass test. Value for input does not matter
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: 2.0-preview
        parameters:
          - *ref_2
        requests:
          - !Request 
            parameters:
              - !Parameter &ref_21
                schema: *ref_18
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Upload file type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_22
                schema: *ref_19
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: message
                    description: The payload body.
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: binary
              - !Parameter 
                schema: *ref_20
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_21
              - *ref_22
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpBinaryRequest 
                path: /mediatypes/binaryBodyTwoContentTypes
                method: post
                binary: true
                knownMediaType: binary
                mediaTypes:
                  - application/json
                  - application/octet-stream
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !SchemaResponse 
            schema: *ref_11
            language: !Languages 
              default:
                name: ''
                description: Received correct content type and body.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: text
                mediaTypes:
                  - text/plain
                statusCodes:
                  - '200'
        language: !Languages 
          default:
            name: BinaryBodyWithTwoContentTypes
            description: 'Binary body with two content types. Pass in of {''hello'': ''world''} for the application/json content type, and a byte stream of ''hello, world!'' for application/octet-stream.'
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: 2.0-preview
        parameters:
          - *ref_2
        requests:
          - !Request 
            parameters:
              - !Parameter &ref_24
                schema: *ref_18
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Upload file type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_25
                schema: *ref_23
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: message
                    description: The payload body.
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: binary
              - !Parameter 
                schema: *ref_20
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_24
              - *ref_25
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpBinaryRequest 
                path: /mediatypes/binaryBodyThreeContentTypes
                method: post
                binary: true
                knownMediaType: binary
                mediaTypes:
                  - application/json
                  - application/octet-stream
                uri: '{$host}'
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_26
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Upload file type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_27
                schema: *ref_0
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: message
                    description: The payload body.
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: binary
              - !Parameter 
                schema: *ref_20
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_27
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpBinaryRequest 
                path: /mediatypes/binaryBodyThreeContentTypes
                method: post
                binary: true
                knownMediaType: text
                mediaTypes:
                  - text/plain
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !SchemaResponse 
            schema: *ref_11
            language: !Languages 
              default:
                name: ''
                description: Received correct content type and body.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: text
                mediaTypes:
                  - text/plain
                statusCodes:
                  - '200'
        language: !Languages 
          default:
            name: BinaryBodyWithThreeContentTypes
            description: 'Binary body with three content types. Pass in string ''hello, world'' with content type ''text/plain'', {''hello'': world''} with content type ''application/json'' and a byte string for ''application/octet-stream''.'
        protocol: !Protocols {}
    language: !Languages 
      default:
        name: ''
        description: ''
    protocol: !Protocols {}
security: !Security 
  authenticationRequired: false
  schemes: []
language: !Languages 
  default:
    name: MediaTypesClient
    description: ''
protocol: !Protocols 
  http: !HttpModel {}
