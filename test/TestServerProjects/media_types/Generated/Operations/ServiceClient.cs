// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.IO;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core.Pipeline;
using media_types.Models;

namespace media_types
{
    public partial class ServiceClient
    {
        private readonly ClientDiagnostics clientDiagnostics;
        private readonly HttpPipeline pipeline;
        internal ServiceRestClient RestClient { get; }
        /// <summary> Initializes a new instance of ServiceClient for mocking. </summary>
        protected ServiceClient()
        {
        }
        /// <summary> Initializes a new instance of ServiceClient. </summary>
        internal ServiceClient(ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string host = "http://localhost:3000")
        {
            RestClient = new ServiceRestClient(clientDiagnostics, pipeline, host);
            this.clientDiagnostics = clientDiagnostics;
            this.pipeline = pipeline;
        }
        /// <summary> Analyze body, that could be different media types. </summary>
        /// <param name="contentType"> Upload file type. </param>
        /// <param name="input"> Input parameter. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual async Task<Response<string>> AnalyzeBodyAsync(ContentType? contentType, Stream input, CancellationToken cancellationToken = default)
        {
            return await RestClient.AnalyzeBodyAsync(contentType, input, cancellationToken).ConfigureAwait(false);
        }
        /// <summary> Analyze body, that could be different media types. </summary>
        /// <param name="contentType"> Upload file type. </param>
        /// <param name="input"> Input parameter. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual Response<string> AnalyzeBody(ContentType? contentType, Stream input, CancellationToken cancellationToken = default)
        {
            return RestClient.AnalyzeBody(contentType, input, cancellationToken);
        }
        /// <summary> Analyze body, that could be different media types. </summary>
        /// <param name="input"> Input parameter. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual async Task<Response<string>> AnalyzeBodyAsync(SourcePath input, CancellationToken cancellationToken = default)
        {
            return await RestClient.AnalyzeBodyAsync(input, cancellationToken).ConfigureAwait(false);
        }
        /// <summary> Analyze body, that could be different media types. </summary>
        /// <param name="input"> Input parameter. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual Response<string> AnalyzeBody(SourcePath input, CancellationToken cancellationToken = default)
        {
            return RestClient.AnalyzeBody(input, cancellationToken);
        }
    }
}
