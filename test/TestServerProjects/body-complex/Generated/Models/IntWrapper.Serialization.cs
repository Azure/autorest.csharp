// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace body_complex.Models
{
    public partial class IntWrapper : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Field1))
            {
                writer.WritePropertyName("field1");
                writer.WriteNumberValue(Field1.Value);
            }
            if (Optional.IsDefined(Field2))
            {
                writer.WritePropertyName("field2");
                writer.WriteNumberValue(Field2.Value);
            }
            writer.WriteEndObject();
        }

        internal static IntWrapper DeserializeIntWrapper(JsonElement element)
        {
            Optional<int> field1 = default;
            Optional<int> field2 = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("field1"))
                {
                    field1 = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("field2"))
                {
                    field2 = property.Value.GetInt32();
                    continue;
                }
            }
            return new IntWrapper(Optional.ToNullable(field1), Optional.ToNullable(field2));
        }
    }
}
