// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace body_complex.Models
{
    /// <summary> The DoubleWrapper. </summary>
    public partial class DoubleWrapper
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="DoubleWrapper"/>. </summary>
        public DoubleWrapper()
        {
        }

        /// <summary> Initializes a new instance of <see cref="DoubleWrapper"/>. </summary>
        /// <param name="field1"></param>
        /// <param name="field56ZerosAfterTheDotAndNegativeZeroBeforeDotAndThisIsALongFieldNameOnPurpose"></param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal DoubleWrapper(double? field1, double? field56ZerosAfterTheDotAndNegativeZeroBeforeDotAndThisIsALongFieldNameOnPurpose, Dictionary<string, BinaryData> rawData)
        {
            Field1 = field1;
            Field56ZerosAfterTheDotAndNegativeZeroBeforeDotAndThisIsALongFieldNameOnPurpose = field56ZerosAfterTheDotAndNegativeZeroBeforeDotAndThisIsALongFieldNameOnPurpose;
            _rawData = rawData;
        }

        /// <summary> Gets or sets the field 1. </summary>
        public double? Field1 { get; set; }
        /// <summary> Gets or sets the field 56 zeros after the dot and negative zero before dot and this is a long field name on purpose. </summary>
        public double? Field56ZerosAfterTheDotAndNegativeZeroBeforeDotAndThisIsALongFieldNameOnPurpose { get; set; }
    }
}
