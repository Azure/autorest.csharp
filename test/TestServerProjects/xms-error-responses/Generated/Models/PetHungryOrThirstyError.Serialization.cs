// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace xms_error_responses.Models
{
    internal partial class PetHungryOrThirstyError
    {
        internal static PetHungryOrThirstyError DeserializePetHungryOrThirstyError(JsonElement element)
        {
            Optional<string> hungryOrThirsty = default;
            Optional<string> reason = default;
            string errorType = default;
            Optional<string> errorMessage = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("hungryOrThirsty"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    hungryOrThirsty = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("reason"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    reason = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("errorType"))
                {
                    errorType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("errorMessage"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    errorMessage = property.Value.GetString();
                    continue;
                }
            }
            return new PetHungryOrThirstyError(errorType, errorMessage.Value, reason.Value, hungryOrThirsty.Value);
        }
    }
}
