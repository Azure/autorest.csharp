!<!CodeModel> 
info: !<!Info> 
  description: Resource Flattening for AutoRest
  title: model-flattening
schemas: !<!Schemas> 
  numbers:
  - !<!NumberSchema> &ref_13
    type: integer
    precision: 32
    language: !<!Languages> 
      default:
        name: Integer
        description: ''
    protocol: !<!Protocols> {}
  strings:
  - !<!StringSchema> &ref_0
    type: string
    language: !<!Languages> 
      default:
        name: String
        description: simple string
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_3
    type: string
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: ResourceId
        description: Resource Id
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_4
    type: string
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: ResourceType
        description: Resource Type
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_1
    type: string
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: String
        description: ''
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_6
    type: string
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: ResourceLocation
        description: Resource Location
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_7
    type: string
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: ResourceName
        description: Resource Name
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_14
    type: string
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: ErrorMessage
        description: ''
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_9
    type: string
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: FlattenedProductPropertiesPName
        description: ''
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_10
    type: string
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: FlattenedProductPropertiesType
        description: ''
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_12
    type: string
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: FlattenedProductPropertiesProvisioningState
        description: ''
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_16
    type: string
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: WrappedProductValue
        description: the product value
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_24
    type: string
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: ProductId
        description: 'Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles.'
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_25
    type: string
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: Description
        description: Description of product.
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_19
    type: string
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: SimpleProductPropertiesMaxProductDisplayName
        description: Display name of product.
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_21
    type: string
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: GenericUrlGenericValue
        description: Generic URL value.
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_22
    type: string
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: ProductUrlOdataValue
        description: URL value.
    protocol: !<!Protocols> {}
  choices:
  - !<!ChoiceSchema> &ref_11
    choices:
    - !<!ChoiceValue> 
      value: Succeeded
      language:
        default:
          name: Succeeded
          description: ''
    - !<!ChoiceValue> 
      value: Failed
      language:
        default:
          name: Failed
          description: ''
    - !<!ChoiceValue> 
      value: canceled
      language:
        default:
          name: Canceled
          description: ''
    - !<!ChoiceValue> 
      value: Accepted
      language:
        default:
          name: Accepted
          description: ''
    - !<!ChoiceValue> 
      value: Creating
      language:
        default:
          name: Creating
          description: ''
    - !<!ChoiceValue> 
      value: Created
      language:
        default:
          name: Created
          description: ''
    - !<!ChoiceValue> 
      value: Updating
      language:
        default:
          name: Updating
          description: ''
    - !<!ChoiceValue> 
      value: Updated
      language:
        default:
          name: Updated
          description: ''
    - !<!ChoiceValue> 
      value: Deleting
      language:
        default:
          name: Deleting
          description: ''
    - !<!ChoiceValue> 
      value: Deleted
      language:
        default:
          name: Deleted
          description: ''
    - !<!ChoiceValue> 
      value: OK
      language:
        default:
          name: OK
          description: ''
    type: choice
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    choiceType: *ref_0
    language: !<!Languages> 
      default:
        name: FlattenedProductPropertiesProvisioningStateValues
        description: ''
    protocol: !<!Protocols> {}
  constants:
  - !<!ConstantSchema> &ref_20
    type: constant
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    value: !<!ConstantValue> 
      value: Large
    valueType: *ref_0
    language: !<!Languages> 
      default:
        name: Capacity
        description: 'Capacity of product. For example, 4 people.'
    protocol: !<!Protocols> {}
  dictionaries:
  - !<!DictionarySchema> &ref_5
    type: dictionary
    elementType: *ref_1
    language: !<!Languages> 
      default:
        name: ResourceTags
        description: Dictionary of <string>
    protocol: !<!Protocols> {}
  - !<!DictionarySchema> &ref_38
    type: dictionary
    elementType: !<!ObjectSchema> &ref_2
      type: object
      apiVersions:
      - !<!ApiVersion> 
        version: 1.0.0
      parents: !<!Relations> 
        all:
        - !<!ObjectSchema> &ref_8
          type: object
          apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
          children: !<!Relations> 
            all:
            - *ref_2
            immediate:
            - *ref_2
          properties:
          - !<!Property> 
            schema: *ref_3
            readOnly: true
            serializedName: id
            language: !<!Languages> 
              default:
                name: id
                description: Resource Id
            protocol: !<!Protocols> {}
          - !<!Property> 
            schema: *ref_4
            readOnly: true
            serializedName: type
            language: !<!Languages> 
              default:
                name: type
                description: Resource Type
            protocol: !<!Protocols> {}
          - !<!Property> 
            schema: *ref_5
            serializedName: tags
            language: !<!Languages> 
              default:
                name: tags
                description: Dictionary of <string>
            protocol: !<!Protocols> {}
          - !<!Property> 
            schema: *ref_6
            serializedName: location
            language: !<!Languages> 
              default:
                name: location
                description: Resource Location
            protocol: !<!Protocols> {}
          - !<!Property> 
            schema: *ref_7
            readOnly: true
            serializedName: name
            language: !<!Languages> 
              default:
                name: name
                description: Resource Name
            protocol: !<!Protocols> {}
          serializationFormats:
          - json
          usage:
          - input
          - output
          language: !<!Languages> 
            default:
              name: Resource
              description: ''
              namespace: ''
          protocol: !<!Protocols> {}
        immediate:
        - *ref_8
      properties:
      - !<!Property> 
        schema: *ref_9
        flattenedNames:
        - properties
        - p.name
        serializedName: p.name
        language: !<!Languages> 
          default:
            name: pName
            description: ''
        protocol: !<!Protocols> {}
      - !<!Property> 
        schema: *ref_10
        flattenedNames:
        - properties
        - type
        serializedName: type
        language: !<!Languages> 
          default:
            name: typePropertiesType
            description: ''
        protocol: !<!Protocols> {}
      - !<!Property> 
        schema: *ref_11
        flattenedNames:
        - properties
        - provisioningStateValues
        readOnly: true
        serializedName: provisioningStateValues
        language: !<!Languages> 
          default:
            name: provisioningStateValues
            description: ''
        protocol: !<!Protocols> {}
      - !<!Property> 
        schema: *ref_12
        flattenedNames:
        - properties
        - provisioningState
        serializedName: provisioningState
        language: !<!Languages> 
          default:
            name: provisioningState
            description: ''
        protocol: !<!Protocols> {}
      serializationFormats:
      - json
      usage:
      - output
      - input
      language: !<!Languages> 
        default:
          name: FlattenedProduct
          description: Flattened product.
          namespace: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: DictionaryOfFlattenedProduct
        description: Dictionary of <FlattenedProduct>
    protocol: !<!Protocols> {}
  - !<!DictionarySchema> &ref_17
    type: dictionary
    elementType: *ref_2
    language: !<!Languages> 
      default:
        name: ResourceCollectionDictionaryofresources
        description: Dictionary of <FlattenedProduct>
    protocol: !<!Protocols> {}
  objects:
  - *ref_8
  - !<!ObjectSchema> &ref_15
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      schema: *ref_13
      serializedName: status
      language: !<!Languages> 
        default:
          name: status
          description: ''
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: *ref_14
      serializedName: message
      language: !<!Languages> 
        default:
          name: message
          description: ''
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: *ref_15
      serializedName: parentError
      language: !<!Languages> 
        default:
          name: parentError
          description: ''
      protocol: !<!Protocols> {}
    serializationFormats:
    - json
    usage:
    - output
    language: !<!Languages> 
      default:
        name: Error
        description: ''
        namespace: ''
    protocol: !<!Protocols> {}
  - *ref_2
  - !<!ObjectSchema> &ref_28
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      schema: *ref_16
      serializedName: value
      language: !<!Languages> 
        default:
          name: value
          description: the product value
      protocol: !<!Protocols> {}
    serializationFormats:
    - json
    usage:
    - input
    - output
    extensions:
      x-ms-flattened: true
    language: !<!Languages> 
      default:
        name: WrappedProduct
        description: The wrapped produc.
        namespace: ''
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_29
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      schema: *ref_16
      flattenedNames:
      - property
      - value
      serializedName: value
      language: !<!Languages> 
        default:
          name: value
          description: the product value
      protocol: !<!Protocols> {}
    serializationFormats:
    - json
    usage:
    - output
    language: !<!Languages> 
      default:
        name: ProductWrapper
        description: The wrapped produc.
        namespace: ''
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_40
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      schema: *ref_2
      serializedName: productresource
      language: !<!Languages> 
        default:
          name: productresource
          description: Flattened product.
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: !<!ArraySchema> &ref_30
        type: array
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        elementType: *ref_2
        language: !<!Languages> 
          default:
            name: ResourceCollectionArrayofresources
            description: Array of FlattenedProduct
        protocol: !<!Protocols> {}
      serializedName: arrayofresources
      language: !<!Languages> 
        default:
          name: arrayofresources
          description: ''
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: *ref_17
      serializedName: dictionaryofresources
      language: !<!Languages> 
        default:
          name: dictionaryofresources
          description: Dictionary of <FlattenedProduct>
      protocol: !<!Protocols> {}
    serializationFormats:
    - json
    usage:
    - input
    - output
    language: !<!Languages> 
      default:
        name: ResourceCollection
        description: ''
        namespace: ''
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_18
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    children: !<!Relations> 
      all:
      - !<!ObjectSchema> &ref_23
        type: object
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        parents: !<!Relations> 
          all:
          - *ref_18
          immediate:
          - *ref_18
        properties:
        - !<!Property> &ref_46
          schema: *ref_19
          flattenedNames:
          - details
          - max_product_display_name
          serializedName: max_product_display_name
          language: !<!Languages> 
            default:
              name: maxProductDisplayName
              description: Display name of product.
          protocol: !<!Protocols> {}
        - !<!Property> &ref_47
          schema: *ref_20
          flattenedNames:
          - details
          - max_product_capacity
          serializedName: max_product_capacity
          language: !<!Languages> 
            default:
              name: capacity
              description: 'Capacity of product. For example, 4 people.'
          protocol: !<!Protocols> {}
        - !<!Property> &ref_48
          schema: *ref_21
          flattenedNames:
          - details
          - max_product_image
          - generic_value
          serializedName: generic_value
          language: !<!Languages> 
            default:
              name: genericValue
              description: Generic URL value.
          protocol: !<!Protocols> {}
        - !<!Property> &ref_49
          schema: *ref_22
          flattenedNames:
          - details
          - max_product_image
          - '@odata.value'
          serializedName: '@odata.value'
          language: !<!Languages> 
            default:
              name: odataValue
              description: URL value.
          protocol: !<!Protocols> {}
        serializationFormats:
        - json
        usage:
        - input
        - output
        language: !<!Languages> 
          default:
            name: SimpleProduct
            description: The product documentation.
            namespace: ''
        protocol: !<!Protocols> {}
      immediate:
      - *ref_23
    properties:
    - !<!Property> &ref_44
      schema: *ref_24
      required: true
      serializedName: base_product_id
      language: !<!Languages> 
        default:
          name: productId
          description: 'Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles.'
      protocol: !<!Protocols> {}
    - !<!Property> &ref_45
      schema: *ref_25
      required: false
      serializedName: base_product_description
      language: !<!Languages> 
        default:
          name: description
          description: Description of product.
      protocol: !<!Protocols> {}
    serializationFormats:
    - json
    usage:
    - input
    - output
    language: !<!Languages> 
      default:
        name: BaseProduct
        description: The product documentation.
        namespace: ''
    protocol: !<!Protocols> {}
  - *ref_23
  - !<!ObjectSchema> &ref_26
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    children: !<!Relations> 
      all:
      - !<!ObjectSchema> &ref_27
        type: object
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        parents: !<!Relations> 
          all:
          - *ref_26
          immediate:
          - *ref_26
        properties:
        - !<!Property> 
          schema: *ref_22
          serializedName: '@odata.value'
          language: !<!Languages> 
            default:
              name: odataValue
              description: URL value.
          protocol: !<!Protocols> {}
        serializationFormats:
        - json
        usage:
        - input
        - output
        extensions:
          x-ms-flattened: true
        language: !<!Languages> 
          default:
            name: ProductUrl
            description: The product URL.
            namespace: ''
        protocol: !<!Protocols> {}
      immediate:
      - *ref_27
    properties:
    - !<!Property> 
      schema: *ref_21
      serializedName: generic_value
      language: !<!Languages> 
        default:
          name: genericValue
          description: Generic URL value.
      protocol: !<!Protocols> {}
    serializationFormats:
    - json
    usage:
    - input
    - output
    language: !<!Languages> 
      default:
        name: GenericUrl
        description: The Generic URL.
        namespace: ''
    protocol: !<!Protocols> {}
  - *ref_27
  arrays:
  - !<!ArraySchema> &ref_32
    type: array
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    elementType: *ref_8
    language: !<!Languages> 
      default:
        name: ArrayOfResource
        description: Array of Resource
    protocol: !<!Protocols> {}
  - !<!ArraySchema> &ref_34
    type: array
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    elementType: *ref_2
    language: !<!Languages> 
      default:
        name: ArrayOfFlattenedProduct
        description: Array of FlattenedProduct
    protocol: !<!Protocols> {}
  - !<!ArraySchema> &ref_35
    type: array
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    elementType: *ref_28
    language: !<!Languages> 
      default:
        name: ArrayOfWrappedProduct
        description: Array of WrappedProduct
    protocol: !<!Protocols> {}
  - !<!ArraySchema> &ref_37
    type: array
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    elementType: *ref_29
    language: !<!Languages> 
      default:
        name: ArrayOfProductWrapper
        description: Array of ProductWrapper
    protocol: !<!Protocols> {}
  - *ref_30
globalParameters:
- !<!Parameter> &ref_31
  schema: *ref_0
  clientDefaultValue: 'http://localhost:3000'
  implementation: Client
  required: true
  extensions:
    x-ms-skip-url-encoding: true
  language: !<!Languages> 
    default:
      name: $host
      description: server parameter
      serializedName: $host
  protocol: !<!Protocols> 
    http: !<!HttpParameter> 
      in: uri
operationGroups:
- !<!OperationGroup> 
  $key: ''
  operations:
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_31
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_33
        schema: *ref_32
        implementation: Method
        language: !<!Languages> 
          default:
            name: resourceArray
            description: External Resource as an Array to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /model-flatten/array
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_15
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: PutArray
        description: Put External Resource as an Array
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_31
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /model-flatten/array
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_34
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_15
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: GetArray
        description: Get External Resource as an Array
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_31
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_36
        schema: *ref_35
        implementation: Method
        language: !<!Languages> 
          default:
            name: resourceArray
            description: External Resource as an Array to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_36
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /model-flatten/wrappedarray
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_15
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: PutWrappedArray
        description: No need to have a route in Express server for this operation. Used to verify the type flattened is not removed if it's referenced in an array
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_31
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /model-flatten/wrappedarray
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_37
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_15
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: GetWrappedArray
        description: No need to have a route in Express server for this operation. Used to verify the type flattened is not removed if it's referenced in an array
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_31
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_39
        schema: *ref_38
        implementation: Method
        language: !<!Languages> 
          default:
            name: resourceDictionary
            description: External Resource as a Dictionary to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_39
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /model-flatten/dictionary
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_15
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: PutDictionary
        description: Put External Resource as a Dictionary
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_31
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /model-flatten/dictionary
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_38
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_15
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: GetDictionary
        description: Get External Resource as a Dictionary
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_31
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_41
        schema: *ref_40
        implementation: Method
        language: !<!Languages> 
          default:
            name: resourceComplexObject
            description: External Resource as a ResourceCollection to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_41
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /model-flatten/resourcecollection
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_15
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: PutResourceCollection
        description: Put External Resource as a ResourceCollection
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_31
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /model-flatten/resourcecollection
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_40
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_15
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: GetResourceCollection
        description: Get External Resource as a ResourceCollection
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_31
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_42
        schema: *ref_23
        implementation: Method
        language: !<!Languages> 
          default:
            name: simpleBodyProduct
            description: Simple body product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_42
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /model-flatten/customFlattening
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_23
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_15
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: PutSimpleProduct
        description: Put Simple Product with client flattening true on the model
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_31
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_43
        schema: *ref_23
        flattened: true
        implementation: Method
        extensions:
          x-ms-client-flatten: true
        language: !<!Languages> 
          default:
            name: simpleBodyProduct
            description: Simple body product to post
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      - !<!VirtualParameter> &ref_50
        schema: *ref_24
        implementation: Method
        originalParameter: *ref_43
        pathToProperty: []
        required: true
        targetProperty: *ref_44
        language: !<!Languages> 
          default:
            name: productId
            description: 'Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles.'
        protocol: !<!Protocols> {}
      - !<!VirtualParameter> &ref_51
        schema: *ref_25
        implementation: Method
        originalParameter: *ref_43
        pathToProperty: []
        required: false
        targetProperty: *ref_45
        language: !<!Languages> 
          default:
            name: description
            description: Description of product.
        protocol: !<!Protocols> {}
      - !<!VirtualParameter> &ref_52
        schema: *ref_19
        implementation: Method
        originalParameter: *ref_43
        pathToProperty: []
        targetProperty: *ref_46
        language: !<!Languages> 
          default:
            name: maxProductDisplayName
            description: Display name of product.
        protocol: !<!Protocols> {}
      - !<!VirtualParameter> 
        schema: *ref_20
        implementation: Method
        originalParameter: *ref_43
        pathToProperty: []
        targetProperty: *ref_47
        language: !<!Languages> 
          default:
            name: Capacity
            description: 'Capacity of product. For example, 4 people.'
        protocol: !<!Protocols> {}
      - !<!VirtualParameter> &ref_53
        schema: *ref_21
        implementation: Method
        originalParameter: *ref_43
        pathToProperty: []
        targetProperty: *ref_48
        language: !<!Languages> 
          default:
            name: genericValue
            description: Generic URL value.
        protocol: !<!Protocols> {}
      - !<!VirtualParameter> &ref_54
        schema: *ref_22
        implementation: Method
        originalParameter: *ref_43
        pathToProperty: []
        targetProperty: *ref_49
        language: !<!Languages> 
          default:
            name: odataValue
            description: URL value.
        protocol: !<!Protocols> {}
      signatureParameters:
      - *ref_50
      - *ref_51
      - *ref_52
      - *ref_53
      - *ref_54
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /model-flatten/customFlattening
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_23
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_15
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: PostFlattenedSimpleProduct
        description: Put Flattened Simple Product with client flattening true on the parameter
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_31
    - !<!Parameter> &ref_62
      schema: *ref_1
      implementation: Method
      required: true
      extensions:
        x-ms-parameter-grouping:
          name: flatten-parameter-group
      language: !<!Languages> 
        default:
          name: name
          description: Product name with value 'groupproduct'
          serializedName: name
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: path
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_55
        schema: *ref_23
        flattened: true
        implementation: Method
        extensions:
          x-ms-client-flatten: true
          x-ms-parameter-grouping: &ref_56
            name: flatten-parameter-group
        language: !<!Languages> 
          default:
            name: simpleBodyProduct
            description: Simple body product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      - !<!VirtualParameter> &ref_57
        schema: *ref_24
        implementation: Method
        originalParameter: *ref_55
        pathToProperty: []
        required: true
        targetProperty: *ref_44
        extensions:
          x-ms-parameter-grouping: *ref_56
        language: !<!Languages> 
          default:
            name: productId
            description: 'Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles.'
        protocol: !<!Protocols> {}
      - !<!VirtualParameter> &ref_58
        schema: *ref_25
        implementation: Method
        originalParameter: *ref_55
        pathToProperty: []
        required: false
        targetProperty: *ref_45
        extensions:
          x-ms-parameter-grouping: *ref_56
        language: !<!Languages> 
          default:
            name: description
            description: Description of product.
        protocol: !<!Protocols> {}
      - !<!VirtualParameter> &ref_59
        schema: *ref_19
        implementation: Method
        originalParameter: *ref_55
        pathToProperty: []
        targetProperty: *ref_46
        extensions:
          x-ms-parameter-grouping: *ref_56
        language: !<!Languages> 
          default:
            name: maxProductDisplayName
            description: Display name of product.
        protocol: !<!Protocols> {}
      - !<!VirtualParameter> 
        schema: *ref_20
        implementation: Method
        originalParameter: *ref_55
        pathToProperty: []
        targetProperty: *ref_47
        extensions:
          x-ms-parameter-grouping: *ref_56
        language: !<!Languages> 
          default:
            name: Capacity
            description: 'Capacity of product. For example, 4 people.'
        protocol: !<!Protocols> {}
      - !<!VirtualParameter> &ref_60
        schema: *ref_21
        implementation: Method
        originalParameter: *ref_55
        pathToProperty: []
        targetProperty: *ref_48
        extensions:
          x-ms-parameter-grouping: *ref_56
        language: !<!Languages> 
          default:
            name: genericValue
            description: Generic URL value.
        protocol: !<!Protocols> {}
      - !<!VirtualParameter> &ref_61
        schema: *ref_22
        implementation: Method
        originalParameter: *ref_55
        pathToProperty: []
        targetProperty: *ref_49
        extensions:
          x-ms-parameter-grouping: *ref_56
        language: !<!Languages> 
          default:
            name: odataValue
            description: URL value.
        protocol: !<!Protocols> {}
      signatureParameters:
      - *ref_57
      - *ref_58
      - *ref_59
      - *ref_60
      - *ref_61
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: '/model-flatten/customFlattening/parametergrouping/{name}/'
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters:
    - *ref_62
    responses:
    - !<!SchemaResponse> 
      schema: *ref_23
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_15
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: PutSimpleProductWithGrouping
        description: Put Simple Product with client flattening true on the model
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: ''
      description: ''
  protocol: !<!Protocols> {}
language: !<!Languages> 
  default:
    name: ModelFlattening
    description: ''
protocol: !<!Protocols> 
  http: !<!HttpModel> {}
