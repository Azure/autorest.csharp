// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace model_flattening.Models
{
    /// <summary> Parameter group. </summary>
    public partial class FlattenParameterGroup
    {
        /// <summary> Initializes a new instance of FlattenParameterGroup. </summary>
        /// <param name="name"> Product name with value &apos;groupproduct&apos;. </param>
        /// <param name="productId"> Unique identifier representing a specific product for a given latitude &amp; longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles. </param>
        public FlattenParameterGroup(string name, string productId)
        {
            if (name == null)
            {
                throw new ArgumentNullException(nameof(name));
            }
            if (productId == null)
            {
                throw new ArgumentNullException(nameof(productId));
            }

            Name = name;
            ProductId = productId;
        }

        /// <summary> Initializes a new instance of FlattenParameterGroup. </summary>
        /// <param name="name"> Product name with value &apos;groupproduct&apos;. </param>
        /// <param name="simpleBodyProduct"> Simple body product to put. </param>
        /// <param name="productId"> Unique identifier representing a specific product for a given latitude &amp; longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles. </param>
        /// <param name="description"> Description of product. </param>
        /// <param name="maxProductDisplayName"> Display name of product. </param>
        /// <param name="genericValue"> Generic URL value. </param>
        /// <param name="odataValue"> URL value. </param>
        internal FlattenParameterGroup(string name, SimpleProduct simpleBodyProduct, string productId, string description, string maxProductDisplayName, string genericValue, string odataValue)
        {
            Name = name;
            SimpleBodyProduct = simpleBodyProduct;
            ProductId = productId;
            Description = description;
            MaxProductDisplayName = maxProductDisplayName;
            GenericValue = genericValue;
            OdataValue = odataValue;
        }

        /// <summary> Product name with value &apos;groupproduct&apos;. </summary>
        public string Name { get; set; }
        /// <summary> Simple body product to put. </summary>
        public SimpleProduct SimpleBodyProduct { get; set; }
        /// <summary> Unique identifier representing a specific product for a given latitude &amp; longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles. </summary>
        public string ProductId { get; set; }
        /// <summary> Description of product. </summary>
        public string Description { get; set; }
        /// <summary> Display name of product. </summary>
        public string MaxProductDisplayName { get; set; }
        /// <summary> Generic URL value. </summary>
        public string GenericValue { get; set; }
        /// <summary> URL value. </summary>
        public string OdataValue { get; set; }
    }
}
