// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using model_flattening.Models;

namespace model_flattening
{
    /// <summary> Model factory for read-only models. </summary>
    public static partial class AutoRestResourceFlatteningTestServiceModelFactory
    {
        /// <summary> Initializes new instance of Resource class. </summary>
        /// <param name="id"> Resource Id. </param>
        /// <param name="type"> Resource Type. </param>
        /// <param name="tags"> Dictionary of &lt;string&gt;. </param>
        /// <param name="location"> Resource Location. </param>
        /// <param name="name"> Resource Name. </param>
        /// <returns> A new <see cref="Models.Resource"/> instance for mocking. </returns>
        public static Resource Resource(string id = default, string type = default, IDictionary<string, string> tags = default, string location = default, string name = default)
        {
            tags ??= new Dictionary<string, string>();
            return new Resource(id, type, tags, location, name);
        }

        /// <summary> Initializes new instance of FlattenedProduct class. </summary>
        /// <param name="id"> Resource Id. </param>
        /// <param name="type"> Resource Type. </param>
        /// <param name="tags"> Dictionary of &lt;string&gt;. </param>
        /// <param name="location"> Resource Location. </param>
        /// <param name="name"> Resource Name. </param>
        /// <param name="pName"> . </param>
        /// <param name="typePropertiesType"> . </param>
        /// <param name="provisioningStateValues"> . </param>
        /// <param name="provisioningState"> . </param>
        /// <returns> A new <see cref="Models.FlattenedProduct"/> instance for mocking. </returns>
        public static FlattenedProduct FlattenedProduct(string id = default, string type = default, IDictionary<string, string> tags = default, string location = default, string name = default, string pName = default, string typePropertiesType = default, FlattenedProductPropertiesProvisioningStateValues? provisioningStateValues = default, string provisioningState = default)
        {
            tags ??= new Dictionary<string, string>();
            return new FlattenedProduct(id, type, tags, location, name, pName, typePropertiesType, provisioningStateValues, provisioningState);
        }

        /// <summary> Initializes new instance of ProductWrapper class. </summary>
        /// <param name="value"> the product value. </param>
        /// <returns> A new <see cref="Models.ProductWrapper"/> instance for mocking. </returns>
        public static ProductWrapper ProductWrapper(string value = default)
        {
            return new ProductWrapper(value);
        }
    }
}
