// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure;
using Azure.Core;

namespace Models.Property.Types
{
    public partial class CollectionsStringProperty : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("property");
            writer.WriteStartArray();
            foreach (var item in Property)
            {
                writer.WriteStringValue(item);
            }
            writer.WriteEndArray();
            writer.WriteEndObject();
        }

        internal static CollectionsStringProperty DeserializeCollectionsStringProperty(JsonElement element)
        {
            IList<string> property = default;
            foreach (var property0 in element.EnumerateObject())
            {
                if (property0.NameEquals("property"))
                {
                    List<string> array = new List<string>();
                    foreach (var item in property0.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    property = array;
                    continue;
                }
            }
            return new CollectionsStringProperty(property);
        }

        internal RequestContent ToRequestContent()
        {
            var content = new Utf8JsonRequestContent();
            content.JsonWriter.WriteObjectValue(this);
            return content;
        }

        internal static CollectionsStringProperty FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeCollectionsStringProperty(document.RootElement);
        }
    }
}
