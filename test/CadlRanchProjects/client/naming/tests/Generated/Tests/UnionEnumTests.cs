// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Client.Naming.Models;
using NUnit.Framework;

namespace Client.Naming.Tests
{
    public partial class UnionEnumTests : ClientNamingTestBase
    {
        public UnionEnumTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task UnionEnum_UnionEnumName_ShortVersion()
        {
            Uri endpoint = null;
            UnionEnum client = CreateNamingClient(endpoint).GetUnionEnumClient();

            using RequestContent content = RequestContent.Create("value1");
            Response response = await client.UnionEnumNameAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task UnionEnum_UnionEnumName_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            UnionEnum client = CreateNamingClient(endpoint).GetUnionEnumClient();

            Response response = await client.UnionEnumNameAsync(ClientExtensibleEnum.EnumValue1);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task UnionEnum_UnionEnumName_AllParameters()
        {
            Uri endpoint = null;
            UnionEnum client = CreateNamingClient(endpoint).GetUnionEnumClient();

            using RequestContent content = RequestContent.Create("value1");
            Response response = await client.UnionEnumNameAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task UnionEnum_UnionEnumName_AllParameters_Convenience()
        {
            Uri endpoint = null;
            UnionEnum client = CreateNamingClient(endpoint).GetUnionEnumClient();

            Response response = await client.UnionEnumNameAsync(ClientExtensibleEnum.EnumValue1);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task UnionEnum_UnionEnumMemberName_ShortVersion()
        {
            Uri endpoint = null;
            UnionEnum client = CreateNamingClient(endpoint).GetUnionEnumClient();

            using RequestContent content = RequestContent.Create("value1");
            Response response = await client.UnionEnumMemberNameAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task UnionEnum_UnionEnumMemberName_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            UnionEnum client = CreateNamingClient(endpoint).GetUnionEnumClient();

            Response response = await client.UnionEnumMemberNameAsync(ExtensibleEnum.ClientEnumValue1);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task UnionEnum_UnionEnumMemberName_AllParameters()
        {
            Uri endpoint = null;
            UnionEnum client = CreateNamingClient(endpoint).GetUnionEnumClient();

            using RequestContent content = RequestContent.Create("value1");
            Response response = await client.UnionEnumMemberNameAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task UnionEnum_UnionEnumMemberName_AllParameters_Convenience()
        {
            Uri endpoint = null;
            UnionEnum client = CreateNamingClient(endpoint).GetUnionEnumClient();

            Response response = await client.UnionEnumMemberNameAsync(ExtensibleEnum.ClientEnumValue1);
        }
    }
}
