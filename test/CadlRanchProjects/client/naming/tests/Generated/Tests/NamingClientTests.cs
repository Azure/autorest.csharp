// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Client.Naming.Models;
using NUnit.Framework;

namespace Client.Naming.Tests
{
    public partial class NamingClientTests : ClientNamingTestBase
    {
        public NamingClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Naming_ClientName_ShortVersion()
        {
            Uri endpoint = null;
            NamingClient client = CreateNamingClient(endpoint);

            Response response = await client.ClientNameAsync();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Naming_ClientName_AllParameters()
        {
            Uri endpoint = null;
            NamingClient client = CreateNamingClient(endpoint);

            Response response = await client.ClientNameAsync();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Naming_Parameter_ShortVersion()
        {
            Uri endpoint = null;
            NamingClient client = CreateNamingClient(endpoint);

            Response response = await client.ParameterAsync("<clientName>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Naming_Parameter_AllParameters()
        {
            Uri endpoint = null;
            NamingClient client = CreateNamingClient(endpoint);

            Response response = await client.ParameterAsync("<clientName>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Property_Client_ShortVersion()
        {
            Uri endpoint = null;
            NamingClient client = CreateNamingClient(endpoint);

            using RequestContent content = RequestContent.Create(new
            {
                defaultName = true,
            });
            Response response = await client.ClientAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Property_Client_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            NamingClient client = CreateNamingClient(endpoint);

            ClientNameModel body = new ClientNameModel(true);
            Response response = await client.ClientAsync(body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Property_Client_AllParameters()
        {
            Uri endpoint = null;
            NamingClient client = CreateNamingClient(endpoint);

            using RequestContent content = RequestContent.Create(new
            {
                defaultName = true,
            });
            Response response = await client.ClientAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Property_Client_AllParameters_Convenience()
        {
            Uri endpoint = null;
            NamingClient client = CreateNamingClient(endpoint);

            ClientNameModel body = new ClientNameModel(true);
            Response response = await client.ClientAsync(body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Property_Language_ShortVersion()
        {
            Uri endpoint = null;
            NamingClient client = CreateNamingClient(endpoint);

            using RequestContent content = RequestContent.Create(new
            {
                defaultName = true,
            });
            Response response = await client.LanguageAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Property_Language_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            NamingClient client = CreateNamingClient(endpoint);

            LanguageClientNameModel body = new LanguageClientNameModel(true);
            Response response = await client.LanguageAsync(body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Property_Language_AllParameters()
        {
            Uri endpoint = null;
            NamingClient client = CreateNamingClient(endpoint);

            using RequestContent content = RequestContent.Create(new
            {
                defaultName = true,
            });
            Response response = await client.LanguageAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Property_Language_AllParameters_Convenience()
        {
            Uri endpoint = null;
            NamingClient client = CreateNamingClient(endpoint);

            LanguageClientNameModel body = new LanguageClientNameModel(true);
            Response response = await client.LanguageAsync(body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Property_CompatibleWithEncodedName_ShortVersion()
        {
            Uri endpoint = null;
            NamingClient client = CreateNamingClient(endpoint);

            using RequestContent content = RequestContent.Create(new
            {
                wireName = true,
            });
            Response response = await client.CompatibleWithEncodedNameAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Property_CompatibleWithEncodedName_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            NamingClient client = CreateNamingClient(endpoint);

            ClientNameAndJsonEncodedNameModel body = new ClientNameAndJsonEncodedNameModel(true);
            Response response = await client.CompatibleWithEncodedNameAsync(body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Property_CompatibleWithEncodedName_AllParameters()
        {
            Uri endpoint = null;
            NamingClient client = CreateNamingClient(endpoint);

            using RequestContent content = RequestContent.Create(new
            {
                wireName = true,
            });
            Response response = await client.CompatibleWithEncodedNameAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Property_CompatibleWithEncodedName_AllParameters_Convenience()
        {
            Uri endpoint = null;
            NamingClient client = CreateNamingClient(endpoint);

            ClientNameAndJsonEncodedNameModel body = new ClientNameAndJsonEncodedNameModel(true);
            Response response = await client.CompatibleWithEncodedNameAsync(body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Header_Request_ShortVersion()
        {
            Uri endpoint = null;
            NamingClient client = CreateNamingClient(endpoint);

            Response response = await client.RequestAsync("<clientName>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Header_Request_AllParameters()
        {
            Uri endpoint = null;
            NamingClient client = CreateNamingClient(endpoint);

            Response response = await client.RequestAsync("<clientName>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Header_Response_ShortVersion()
        {
            Uri endpoint = null;
            NamingClient client = CreateNamingClient(endpoint);

            Response response = await client.ResponseAsync();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Header_Response_AllParameters()
        {
            Uri endpoint = null;
            NamingClient client = CreateNamingClient(endpoint);

            Response response = await client.ResponseAsync();
        }
    }
}
