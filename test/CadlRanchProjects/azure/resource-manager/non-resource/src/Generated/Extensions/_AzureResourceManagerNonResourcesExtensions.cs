// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.ResourceManager;
using Azure.ResourceManager.Resources;
using _Azure.ResourceManager.NonResources.Mocking;
using _Azure.ResourceManager.NonResources.Models;

namespace _Azure.ResourceManager.NonResources
{
    /// <summary> A class to add extension methods to _Azure.ResourceManager.NonResources. </summary>
    public static partial class _AzureResourceManagerNonResourcesExtensions
    {
        private static Mockable_AzureResourceManagerNonResourcesSubscriptionResource GetMockable_AzureResourceManagerNonResourcesSubscriptionResource(ArmResource resource)
        {
            return resource.GetCachedClient(client => new Mockable_AzureResourceManagerNonResourcesSubscriptionResource(client, resource.Id));
        }

        /// <summary>
        /// Get.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.NonResource/locations/{location}/otherParameters/{parameter}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>NonResourceOperations_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2023-12-01-preview</description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="Mockable_AzureResourceManagerNonResourcesSubscriptionResource.GetNonResourceOperation(string,string,CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="location"> The location parameter. </param>
        /// <param name="parameter"> Another parameter. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="location"/> or <paramref name="parameter"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionResource"/>, <paramref name="location"/> or <paramref name="parameter"/> is null. </exception>
        public static async Task<Response<NonResource>> GetNonResourceOperationAsync(this SubscriptionResource subscriptionResource, string location, string parameter, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(subscriptionResource, nameof(subscriptionResource));

            return await GetMockable_AzureResourceManagerNonResourcesSubscriptionResource(subscriptionResource).GetNonResourceOperationAsync(location, parameter, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Get.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.NonResource/locations/{location}/otherParameters/{parameter}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>NonResourceOperations_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2023-12-01-preview</description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="Mockable_AzureResourceManagerNonResourcesSubscriptionResource.GetNonResourceOperation(string,string,CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="location"> The location parameter. </param>
        /// <param name="parameter"> Another parameter. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="location"/> or <paramref name="parameter"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionResource"/>, <paramref name="location"/> or <paramref name="parameter"/> is null. </exception>
        public static Response<NonResource> GetNonResourceOperation(this SubscriptionResource subscriptionResource, string location, string parameter, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(subscriptionResource, nameof(subscriptionResource));

            return GetMockable_AzureResourceManagerNonResourcesSubscriptionResource(subscriptionResource).GetNonResourceOperation(location, parameter, cancellationToken);
        }

        /// <summary>
        /// Create.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.NonResource/locations/{location}/otherParameters/{parameter}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>NonResourceOperations_Create</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2023-12-01-preview</description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="Mockable_AzureResourceManagerNonResourcesSubscriptionResource.CreateNonResourceOperation(string,string,NonResource,CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="location"> The location parameter. </param>
        /// <param name="parameter"> Another parameter. </param>
        /// <param name="body"> The request body. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="location"/> or <paramref name="parameter"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionResource"/>, <paramref name="location"/>, <paramref name="parameter"/> or <paramref name="body"/> is null. </exception>
        public static async Task<Response<NonResource>> CreateNonResourceOperationAsync(this SubscriptionResource subscriptionResource, string location, string parameter, NonResource body, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(subscriptionResource, nameof(subscriptionResource));

            return await GetMockable_AzureResourceManagerNonResourcesSubscriptionResource(subscriptionResource).CreateNonResourceOperationAsync(location, parameter, body, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Create.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.NonResource/locations/{location}/otherParameters/{parameter}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>NonResourceOperations_Create</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2023-12-01-preview</description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="Mockable_AzureResourceManagerNonResourcesSubscriptionResource.CreateNonResourceOperation(string,string,NonResource,CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="location"> The location parameter. </param>
        /// <param name="parameter"> Another parameter. </param>
        /// <param name="body"> The request body. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="location"/> or <paramref name="parameter"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionResource"/>, <paramref name="location"/>, <paramref name="parameter"/> or <paramref name="body"/> is null. </exception>
        public static Response<NonResource> CreateNonResourceOperation(this SubscriptionResource subscriptionResource, string location, string parameter, NonResource body, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(subscriptionResource, nameof(subscriptionResource));

            return GetMockable_AzureResourceManagerNonResourcesSubscriptionResource(subscriptionResource).CreateNonResourceOperation(location, parameter, body, cancellationToken);
        }
    }
}
