// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Linq;

namespace _Specs_.Azure.Example.Basic.Models
{
    /// <summary> Model factory for models. </summary>
    public static partial class SpecsAzureExampleBasicModelFactory
    {
        /// <summary> Initializes a new instance of <see cref="Models.ActionRequest"/>. </summary>
        /// <param name="stringProperty"></param>
        /// <param name="modelProperty"></param>
        /// <param name="arrayProperty"></param>
        /// <param name="recordProperty"></param>
        /// <returns> A new <see cref="Models.ActionRequest"/> instance for mocking. </returns>
        public static ActionRequest ActionRequest(string stringProperty = null, Model modelProperty = null, IEnumerable<string> arrayProperty = null, IDictionary<string, string> recordProperty = null)
        {
            arrayProperty ??= new List<string>();
            recordProperty ??= new Dictionary<string, string>();

            return new ActionRequest(stringProperty, modelProperty, arrayProperty?.ToList(), recordProperty, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.ActionResponse"/>. </summary>
        /// <param name="stringProperty"></param>
        /// <param name="modelProperty"></param>
        /// <param name="arrayProperty"></param>
        /// <param name="recordProperty"></param>
        /// <returns> A new <see cref="Models.ActionResponse"/> instance for mocking. </returns>
        public static ActionResponse ActionResponse(string stringProperty = null, Model modelProperty = null, IEnumerable<string> arrayProperty = null, IReadOnlyDictionary<string, string> recordProperty = null)
        {
            arrayProperty ??= new List<string>();
            recordProperty ??= new Dictionary<string, string>();

            return new ActionResponse(stringProperty, modelProperty, arrayProperty?.ToList(), recordProperty, serializedAdditionalRawData: null);
        }
    }
}
