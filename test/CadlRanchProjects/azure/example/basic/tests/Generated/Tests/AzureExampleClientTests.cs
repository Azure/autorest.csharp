// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using _Specs_.Azure.Example.Basic.Models;

namespace _Specs_.Azure.Example.Basic.Tests
{
    public partial class AzureExampleClientTests : _Specs_AzureExampleBasicTestBase
    {
        public AzureExampleClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task AzureExampleClient_BasicAction_BasicAction()
        {
            Uri endpoint = null;
            AzureExampleClient client = CreateAzureExampleClient(endpoint);

            using RequestContent content = RequestContent.Create(new
            {
                stringProperty = "text",
                modelProperty = new
                {
                    int32Property = 1,
                    float32Property = 1.5F,
                    enumProperty = "EnumValue1",
                },
                arrayProperty = new object[]
            {
"item"
            },
                recordProperty = new
                {
                    record = "value",
                },
            });
            Response response = await client.BasicActionAsync("query", "header", content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task AzureExampleClient_BasicAction_BasicAction_Convenience()
        {
            Uri endpoint = null;
            AzureExampleClient client = CreateAzureExampleClient(endpoint);

            ActionRequest body = new ActionRequest("text")
            {
                ModelProperty = new Model
                {
                    Int32Property = 1,
                    Float32Property = 1.5F,
                    EnumProperty = Models.Enum.EnumValue1,
                },
                ArrayProperty = { "item" },
                RecordProperty =
{
["record"] = "value"
},
            };
            Response<ActionResponse> response = await client.BasicActionAsync("query", "header", body);
        }
    }
}
