// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Identity;
using NUnit.Framework;
using _Specs_.Azure.ClientGenerator.Core.Access;
using _Specs_.Azure.ClientGenerator.Core.Access.Models;

namespace _Specs_.Azure.ClientGenerator.Core.Access.Tests
{
    public class PublicOperationTests : _Specs_AzureClientGeneratorCoreAccessTestBase
    {
        public PublicOperationTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        public async Task NoDecoratorInPublic_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            PublicOperation client = CreateAccessClient(endpoint).GetPublicOperationClient(apiVersion: "1.0.0");

            Response response = await client.NoDecoratorInPublicAsync("<name>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("name").ToString());
        }

        [Test]
        public async Task NoDecoratorInPublic_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            PublicOperation client = CreateAccessClient(endpoint).GetPublicOperationClient(apiVersion: "1.0.0");

            Response<NoDecoratorModelInPublic> response = await client.NoDecoratorInPublicAsync("<name>");
        }

        [Test]
        public async Task NoDecoratorInPublic_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            PublicOperation client = CreateAccessClient(endpoint).GetPublicOperationClient(apiVersion: "1.0.0");

            Response response = await client.NoDecoratorInPublicAsync("<name>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("name").ToString());
        }

        [Test]
        public async Task NoDecoratorInPublic_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            PublicOperation client = CreateAccessClient(endpoint).GetPublicOperationClient(apiVersion: "1.0.0");

            Response<NoDecoratorModelInPublic> response = await client.NoDecoratorInPublicAsync("<name>");
        }

        [Test]
        public async Task PublicDecoratorInPublic_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            PublicOperation client = CreateAccessClient(endpoint).GetPublicOperationClient(apiVersion: "1.0.0");

            Response response = await client.PublicDecoratorInPublicAsync("<name>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("name").ToString());
        }

        [Test]
        public async Task PublicDecoratorInPublic_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            PublicOperation client = CreateAccessClient(endpoint).GetPublicOperationClient(apiVersion: "1.0.0");

            Response<PublicDecoratorModelInPublic> response = await client.PublicDecoratorInPublicAsync("<name>");
        }

        [Test]
        public async Task PublicDecoratorInPublic_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            PublicOperation client = CreateAccessClient(endpoint).GetPublicOperationClient(apiVersion: "1.0.0");

            Response response = await client.PublicDecoratorInPublicAsync("<name>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("name").ToString());
        }

        [Test]
        public async Task PublicDecoratorInPublic_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            PublicOperation client = CreateAccessClient(endpoint).GetPublicOperationClient(apiVersion: "1.0.0");

            Response<PublicDecoratorModelInPublic> response = await client.PublicDecoratorInPublicAsync("<name>");
        }
    }
}
