<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="PutFlattenModelAsync(FlattenModel,CancellationToken)">
      <example>
This sample shows how to call PutFlattenModelAsync.
<code><![CDATA[
FlattenPropertyClient client = new FlattenPropertyClient();

FlattenModel input = new FlattenModel("<name>", "<description>", 1234);
Response<FlattenModel> response = await client.PutFlattenModelAsync(input);
]]></code>
This sample shows how to call PutFlattenModelAsync with all parameters.
<code><![CDATA[
FlattenPropertyClient client = new FlattenPropertyClient();

FlattenModel input = new FlattenModel("<name>", "<description>", 1234);
Response<FlattenModel> response = await client.PutFlattenModelAsync(input);
]]></code></example>
    </member>
    <member name="PutFlattenModel(FlattenModel,CancellationToken)">
      <example>
This sample shows how to call PutFlattenModel.
<code><![CDATA[
FlattenPropertyClient client = new FlattenPropertyClient();

FlattenModel input = new FlattenModel("<name>", "<description>", 1234);
Response<FlattenModel> response = client.PutFlattenModel(input);
]]></code>
This sample shows how to call PutFlattenModel with all parameters.
<code><![CDATA[
FlattenPropertyClient client = new FlattenPropertyClient();

FlattenModel input = new FlattenModel("<name>", "<description>", 1234);
Response<FlattenModel> response = client.PutFlattenModel(input);
]]></code></example>
    </member>
    <member name="PutFlattenModelAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutFlattenModelAsync and parse the result.
<code><![CDATA[
FlattenPropertyClient client = new FlattenPropertyClient();

using RequestContent content = RequestContent.Create(new
{
    name = "<name>",
    description = "<description>",
    age = 1234,
});
Response response = await client.PutFlattenModelAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("age").ToString());
]]></code>
This sample shows how to call PutFlattenModelAsync with all request content and parse the result.
<code><![CDATA[
FlattenPropertyClient client = new FlattenPropertyClient();

using RequestContent content = RequestContent.Create(new
{
    name = "<name>",
    description = "<description>",
    age = 1234,
});
Response response = await client.PutFlattenModelAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("age").ToString());
]]></code></example>
    </member>
    <member name="PutFlattenModel(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutFlattenModel and parse the result.
<code><![CDATA[
FlattenPropertyClient client = new FlattenPropertyClient();

using RequestContent content = RequestContent.Create(new
{
    name = "<name>",
    description = "<description>",
    age = 1234,
});
Response response = client.PutFlattenModel(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("age").ToString());
]]></code>
This sample shows how to call PutFlattenModel with all request content and parse the result.
<code><![CDATA[
FlattenPropertyClient client = new FlattenPropertyClient();

using RequestContent content = RequestContent.Create(new
{
    name = "<name>",
    description = "<description>",
    age = 1234,
});
Response response = client.PutFlattenModel(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("age").ToString());
]]></code></example>
    </member>
    <member name="PutNestedFlattenModelAsync(NestedFlattenModel,CancellationToken)">
      <example>
This sample shows how to call PutNestedFlattenModelAsync.
<code><![CDATA[
FlattenPropertyClient client = new FlattenPropertyClient();

NestedFlattenModel input = new NestedFlattenModel("<name>", "<summary>", "<description>", 1234);
Response<NestedFlattenModel> response = await client.PutNestedFlattenModelAsync(input);
]]></code>
This sample shows how to call PutNestedFlattenModelAsync with all parameters.
<code><![CDATA[
FlattenPropertyClient client = new FlattenPropertyClient();

NestedFlattenModel input = new NestedFlattenModel("<name>", "<summary>", "<description>", 1234);
Response<NestedFlattenModel> response = await client.PutNestedFlattenModelAsync(input);
]]></code></example>
    </member>
    <member name="PutNestedFlattenModel(NestedFlattenModel,CancellationToken)">
      <example>
This sample shows how to call PutNestedFlattenModel.
<code><![CDATA[
FlattenPropertyClient client = new FlattenPropertyClient();

NestedFlattenModel input = new NestedFlattenModel("<name>", "<summary>", "<description>", 1234);
Response<NestedFlattenModel> response = client.PutNestedFlattenModel(input);
]]></code>
This sample shows how to call PutNestedFlattenModel with all parameters.
<code><![CDATA[
FlattenPropertyClient client = new FlattenPropertyClient();

NestedFlattenModel input = new NestedFlattenModel("<name>", "<summary>", "<description>", 1234);
Response<NestedFlattenModel> response = client.PutNestedFlattenModel(input);
]]></code></example>
    </member>
    <member name="PutNestedFlattenModelAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutNestedFlattenModelAsync and parse the result.
<code><![CDATA[
FlattenPropertyClient client = new FlattenPropertyClient();

using RequestContent content = RequestContent.Create(new
{
    name = "<name>",
    summary = "<summary>",
    description = "<description>",
    age = 1234,
});
Response response = await client.PutNestedFlattenModelAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("summary").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("age").ToString());
]]></code>
This sample shows how to call PutNestedFlattenModelAsync with all request content and parse the result.
<code><![CDATA[
FlattenPropertyClient client = new FlattenPropertyClient();

using RequestContent content = RequestContent.Create(new
{
    name = "<name>",
    summary = "<summary>",
    description = "<description>",
    age = 1234,
});
Response response = await client.PutNestedFlattenModelAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("summary").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("age").ToString());
]]></code></example>
    </member>
    <member name="PutNestedFlattenModel(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutNestedFlattenModel and parse the result.
<code><![CDATA[
FlattenPropertyClient client = new FlattenPropertyClient();

using RequestContent content = RequestContent.Create(new
{
    name = "<name>",
    summary = "<summary>",
    description = "<description>",
    age = 1234,
});
Response response = client.PutNestedFlattenModel(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("summary").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("age").ToString());
]]></code>
This sample shows how to call PutNestedFlattenModel with all request content and parse the result.
<code><![CDATA[
FlattenPropertyClient client = new FlattenPropertyClient();

using RequestContent content = RequestContent.Create(new
{
    name = "<name>",
    summary = "<summary>",
    description = "<description>",
    age = 1234,
});
Response response = client.PutNestedFlattenModel(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("summary").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("age").ToString());
]]></code></example>
    </member>
  </members>
</doc>