// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using _Specs_.Azure.Core.Basic;
using _Specs_.Azure.Core.Basic.Models;

namespace _Specs_.Azure.Core.Basic.Tests
{
    public partial class BasicClientTests : _Specs_AzureCoreBasicTestBase
    {
        public BasicClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task User_CreateOrUpdate_ShortVersion()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.CreateOrUpdateAsync(1234, content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task User_CreateOrUpdate_AllParameters()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
                orders = new object[]
            {
new
{
userId = 1234,
detail = "<detail>",
}
            },
            });
            Response response = await client.CreateOrUpdateAsync(1234, content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task User_CreateOrReplace_ShortVersion()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.CreateOrReplaceAsync(1234, content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task User_CreateOrReplace_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            User resource = new User("<name>");
            Response<User> response = await client.CreateOrReplaceAsync(1234, resource);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task User_CreateOrReplace_AllParameters()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
                orders = new object[]
            {
new
{
userId = 1234,
detail = "<detail>",
}
            },
            });
            Response response = await client.CreateOrReplaceAsync(1234, content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task User_CreateOrReplace_AllParameters_Convenience()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            User resource = new User("<name>")
            {
                Orders = { new UserOrder(1234, "<detail>") },
            };
            Response<User> response = await client.CreateOrReplaceAsync(1234, resource);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task User_GetUser_ShortVersion()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            Response response = await client.GetUserAsync(1234, null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task User_GetUser_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            Response<User> response = await client.GetUserAsync(1234);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task User_GetUser_AllParameters()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            Response response = await client.GetUserAsync(1234, null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task User_GetUser_AllParameters_Convenience()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            Response<User> response = await client.GetUserAsync(1234);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task User_Delete_ShortVersion()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            Response response = await client.DeleteAsync(1234);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task User_Delete_AllParameters()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            Response response = await client.DeleteAsync(1234);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Basic_Export_ShortVersion()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            Response response = await client.ExportAsync(1234, "<format>", null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Basic_Export_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            Response<User> response = await client.ExportAsync(1234, "<format>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Basic_Export_AllParameters()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            Response response = await client.ExportAsync(1234, "<format>", null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Basic_Export_AllParameters_Convenience()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            Response<User> response = await client.ExportAsync(1234, "<format>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task User_GetUsers_ShortVersion()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            await foreach (BinaryData item in client.GetUsersAsync(null, null, null, null, null, null, null, null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task User_GetUsers_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            await foreach (User item in client.GetUsersAsync())
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task User_GetUsers_AllParameters()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            await foreach (BinaryData item in client.GetUsersAsync(1234, 1234, 1234, new string[] { "<orderby>" }, "<filter>", new string[] { "<select>" }, new string[] { "<expand>" }, null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task User_GetUsers_AllParameters_Convenience()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            await foreach (User item in client.GetUsersAsync(maxCount: 1234, skip: 1234, maxpagesize: 1234, orderby: new string[] { "<orderby>" }, filter: "<filter>", select: new string[] { "<select>" }, expand: new string[] { "<expand>" }))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Basic_GetWithPage_ShortVersion()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            await foreach (BinaryData item in client.GetWithPageAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Basic_GetWithPage_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            await foreach (User item in client.GetWithPageAsync())
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Basic_GetWithPage_AllParameters()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            await foreach (BinaryData item in client.GetWithPageAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Basic_GetWithPage_AllParameters_Convenience()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            await foreach (User item in client.GetWithPageAsync())
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Basic_GetWithParameters_ShortVersion()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            using RequestContent content = RequestContent.Create(new
            {
                inputName = "<inputName>",
            });
            await foreach (BinaryData item in client.GetWithParametersAsync(content))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Basic_GetWithParameters_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            ListItemInputBody bodyInput = new ListItemInputBody("<inputName>");
            await foreach (User item in client.GetWithParametersAsync(bodyInput))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Basic_GetWithParameters_AllParameters()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            using RequestContent content = RequestContent.Create(new
            {
                inputName = "<inputName>",
            });
            await foreach (BinaryData item in client.GetWithParametersAsync(content, another: "First"))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Basic_GetWithParameters_AllParameters_Convenience()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            ListItemInputBody bodyInput = new ListItemInputBody("<inputName>");
            await foreach (User item in client.GetWithParametersAsync(bodyInput, another: ListItemInputExtensibleEnum.First))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Basic_GetWithCustomPageModel_ShortVersion()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            await foreach (BinaryData item in client.GetWithCustomPageModelAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Basic_GetWithCustomPageModel_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            await foreach (User item in client.GetWithCustomPageModelAsync())
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Basic_GetWithCustomPageModel_AllParameters()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            await foreach (BinaryData item in client.GetWithCustomPageModelAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Basic_GetWithCustomPageModel_AllParameters_Convenience()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            await foreach (User item in client.GetWithCustomPageModelAsync())
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task TwoModelsAsPageItem_GetFirstItems_ShortVersion()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            await foreach (BinaryData item in client.GetFirstItemsAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task TwoModelsAsPageItem_GetFirstItems_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            await foreach (FirstItem item in client.GetFirstItemsAsync())
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task TwoModelsAsPageItem_GetFirstItems_AllParameters()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            await foreach (BinaryData item in client.GetFirstItemsAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task TwoModelsAsPageItem_GetFirstItems_AllParameters_Convenience()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            await foreach (FirstItem item in client.GetFirstItemsAsync())
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task TwoModelsAsPageItem_GetSecondItems_ShortVersion()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            await foreach (BinaryData item in client.GetSecondItemsAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task TwoModelsAsPageItem_GetSecondItems_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            await foreach (SecondItem item in client.GetSecondItemsAsync())
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task TwoModelsAsPageItem_GetSecondItems_AllParameters()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            await foreach (BinaryData item in client.GetSecondItemsAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task TwoModelsAsPageItem_GetSecondItems_AllParameters_Convenience()
        {
            Uri endpoint = null;
            BasicClient client = CreateBasicClient(endpoint);

            await foreach (SecondItem item in client.GetSecondItemsAsync())
            {
            }
        }
    }
}
