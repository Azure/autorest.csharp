<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="CreateOrUpdateAsync(int,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrUpdateAsync with required parameters and request content, and how to parse the result.
<code><![CDATA[
BasicClient client = new BasicClient();

RequestContent content = RequestContent.Create(new Dictionary<string, object>()
{
    ["name"] = "<name>",
});
Response response = await client.CreateOrUpdateAsync(1234, content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("etag").ToString());
]]></code>
This sample shows how to call CreateOrUpdateAsync with all parameters and request content, and how to parse the result.
<code><![CDATA[
BasicClient client = new BasicClient();

RequestContent content = RequestContent.Create(new Dictionary<string, object>()
{
    ["name"] = "<name>",
    ["orders"] = new object[]
{
new Dictionary<string, object>()
{
["userId"] = 1234,
["detail"] = "<detail>",
}
},
});
Response response = await client.CreateOrUpdateAsync(1234, content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("orders")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("orders")[0].GetProperty("userId").ToString());
Console.WriteLine(result.GetProperty("orders")[0].GetProperty("detail").ToString());
Console.WriteLine(result.GetProperty("etag").ToString());
]]></code></example>
    </member>
    <member name="CreateOrUpdate(int,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrUpdate with required parameters and request content, and how to parse the result.
<code><![CDATA[
BasicClient client = new BasicClient();

RequestContent content = RequestContent.Create(new Dictionary<string, object>()
{
    ["name"] = "<name>",
});
Response response = client.CreateOrUpdate(1234, content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("etag").ToString());
]]></code>
This sample shows how to call CreateOrUpdate with all parameters and request content, and how to parse the result.
<code><![CDATA[
BasicClient client = new BasicClient();

RequestContent content = RequestContent.Create(new Dictionary<string, object>()
{
    ["name"] = "<name>",
    ["orders"] = new object[]
{
new Dictionary<string, object>()
{
["userId"] = 1234,
["detail"] = "<detail>",
}
},
});
Response response = client.CreateOrUpdate(1234, content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("orders")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("orders")[0].GetProperty("userId").ToString());
Console.WriteLine(result.GetProperty("orders")[0].GetProperty("detail").ToString());
Console.WriteLine(result.GetProperty("etag").ToString());
]]></code></example>
    </member>
    <member name="CreateOrReplaceAsync(int,User,CancellationToken)">
      <example>
This sample shows how to call CreateOrReplaceAsync with required parameters.
<code><![CDATA[
BasicClient client = new BasicClient();

User resource = new User("<name>")
{
    Orders =
{
new UserOrder(1234,"<detail>")
},
};
Response<User> response = await client.CreateOrReplaceAsync(1234, resource);
]]></code></example>
    </member>
    <member name="CreateOrReplace(int,User,CancellationToken)">
      <example>
This sample shows how to call CreateOrReplace with required parameters.
<code><![CDATA[
BasicClient client = new BasicClient();

User resource = new User("<name>")
{
    Orders =
{
new UserOrder(1234,"<detail>")
},
};
Response<User> response = client.CreateOrReplace(1234, resource);
]]></code></example>
    </member>
    <member name="CreateOrReplaceAsync(int,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrReplaceAsync with required parameters and request content, and how to parse the result.
<code><![CDATA[
BasicClient client = new BasicClient();

RequestContent content = RequestContent.Create(new Dictionary<string, object>()
{
    ["name"] = "<name>",
});
Response response = await client.CreateOrReplaceAsync(1234, content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("etag").ToString());
]]></code>
This sample shows how to call CreateOrReplaceAsync with all parameters and request content, and how to parse the result.
<code><![CDATA[
BasicClient client = new BasicClient();

RequestContent content = RequestContent.Create(new Dictionary<string, object>()
{
    ["name"] = "<name>",
    ["orders"] = new object[]
{
new Dictionary<string, object>()
{
["userId"] = 1234,
["detail"] = "<detail>",
}
},
});
Response response = await client.CreateOrReplaceAsync(1234, content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("orders")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("orders")[0].GetProperty("userId").ToString());
Console.WriteLine(result.GetProperty("orders")[0].GetProperty("detail").ToString());
Console.WriteLine(result.GetProperty("etag").ToString());
]]></code></example>
    </member>
    <member name="CreateOrReplace(int,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrReplace with required parameters and request content, and how to parse the result.
<code><![CDATA[
BasicClient client = new BasicClient();

RequestContent content = RequestContent.Create(new Dictionary<string, object>()
{
    ["name"] = "<name>",
});
Response response = client.CreateOrReplace(1234, content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("etag").ToString());
]]></code>
This sample shows how to call CreateOrReplace with all parameters and request content, and how to parse the result.
<code><![CDATA[
BasicClient client = new BasicClient();

RequestContent content = RequestContent.Create(new Dictionary<string, object>()
{
    ["name"] = "<name>",
    ["orders"] = new object[]
{
new Dictionary<string, object>()
{
["userId"] = 1234,
["detail"] = "<detail>",
}
},
});
Response response = client.CreateOrReplace(1234, content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("orders")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("orders")[0].GetProperty("userId").ToString());
Console.WriteLine(result.GetProperty("orders")[0].GetProperty("detail").ToString());
Console.WriteLine(result.GetProperty("etag").ToString());
]]></code></example>
    </member>
    <member name="GetUserAsync(int,CancellationToken)">
      <example>
This sample shows how to call GetUserAsync with required parameters.
<code><![CDATA[
BasicClient client = new BasicClient();

Response<User> response = await client.GetUserAsync(1234);
]]></code></example>
    </member>
    <member name="GetUser(int,CancellationToken)">
      <example>
This sample shows how to call GetUser with required parameters.
<code><![CDATA[
BasicClient client = new BasicClient();

Response<User> response = client.GetUser(1234);
]]></code></example>
    </member>
    <member name="GetUserAsync(int,RequestContext)">
      <example>
This sample shows how to call GetUserAsync with required parameters and parse the result.
<code><![CDATA[
BasicClient client = new BasicClient();

Response response = await client.GetUserAsync(1234, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("orders")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("orders")[0].GetProperty("userId").ToString());
Console.WriteLine(result.GetProperty("orders")[0].GetProperty("detail").ToString());
Console.WriteLine(result.GetProperty("etag").ToString());
]]></code></example>
    </member>
    <member name="GetUser(int,RequestContext)">
      <example>
This sample shows how to call GetUser with required parameters and parse the result.
<code><![CDATA[
BasicClient client = new BasicClient();

Response response = client.GetUser(1234, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("orders")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("orders")[0].GetProperty("userId").ToString());
Console.WriteLine(result.GetProperty("orders")[0].GetProperty("detail").ToString());
Console.WriteLine(result.GetProperty("etag").ToString());
]]></code></example>
    </member>
    <member name="DeleteAsync(int,RequestContext)">
      <example>
This sample shows how to call DeleteAsync with required parameters.
<code><![CDATA[
BasicClient client = new BasicClient();

Response response = await client.DeleteAsync(1234);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="Delete(int,RequestContext)">
      <example>
This sample shows how to call Delete with required parameters.
<code><![CDATA[
BasicClient client = new BasicClient();

Response response = client.Delete(1234);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ExportAsync(int,string,CancellationToken)">
      <example>
This sample shows how to call ExportAsync with required parameters.
<code><![CDATA[
BasicClient client = new BasicClient();

Response<User> response = await client.ExportAsync(1234, "<format>");
]]></code></example>
    </member>
    <member name="Export(int,string,CancellationToken)">
      <example>
This sample shows how to call Export with required parameters.
<code><![CDATA[
BasicClient client = new BasicClient();

Response<User> response = client.Export(1234, "<format>");
]]></code></example>
    </member>
    <member name="ExportAsync(int,string,RequestContext)">
      <example>
This sample shows how to call ExportAsync with required parameters and parse the result.
<code><![CDATA[
BasicClient client = new BasicClient();

Response response = await client.ExportAsync(1234, "<format>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("orders")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("orders")[0].GetProperty("userId").ToString());
Console.WriteLine(result.GetProperty("orders")[0].GetProperty("detail").ToString());
Console.WriteLine(result.GetProperty("etag").ToString());
]]></code></example>
    </member>
    <member name="Export(int,string,RequestContext)">
      <example>
This sample shows how to call Export with required parameters and parse the result.
<code><![CDATA[
BasicClient client = new BasicClient();

Response response = client.Export(1234, "<format>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("orders")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("orders")[0].GetProperty("userId").ToString());
Console.WriteLine(result.GetProperty("orders")[0].GetProperty("detail").ToString());
Console.WriteLine(result.GetProperty("etag").ToString());
]]></code></example>
    </member>
    <member name="GetUsersAsync(int?,int?,int?,IEnumerable{string},string,IEnumerable{string},IEnumerable{string},CancellationToken)">
      <example>
This sample shows how to call GetUsersAsync with required parameters.
<code><![CDATA[
BasicClient client = new BasicClient();

await foreach (User item in client.GetUsersAsync(maxCount: 1234, skip: 1234, maxpagesize: 1234, orderby: new string[]
{
"<orderby>"
}, filter: "<filter>", select: new string[]
{
"<select>"
}, expand: new string[]
{
"<expand>"
}))
{
}
]]></code></example>
    </member>
    <member name="GetUsers(int?,int?,int?,IEnumerable{string},string,IEnumerable{string},IEnumerable{string},CancellationToken)">
      <example>
This sample shows how to call GetUsers with required parameters.
<code><![CDATA[
BasicClient client = new BasicClient();

foreach (User item in client.GetUsers(maxCount: 1234, skip: 1234, maxpagesize: 1234, orderby: new string[]
{
"<orderby>"
}, filter: "<filter>", select: new string[]
{
"<select>"
}, expand: new string[]
{
"<expand>"
}))
{
}
]]></code></example>
    </member>
    <member name="GetUsersAsync(int?,int?,int?,IEnumerable{string},string,IEnumerable{string},IEnumerable{string},RequestContext)">
      <example>
This sample shows how to call GetUsersAsync with required parameters and parse the result.
<code><![CDATA[
BasicClient client = new BasicClient();

await foreach (BinaryData item in client.GetUsersAsync(1234, 1234, 1234, new string[]
{
"<orderby>"
}, "<filter>", new string[]
{
"<select>"
}, new string[]
{
"<expand>"
}, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("id").ToString());
    Console.WriteLine(result[0].GetProperty("name").ToString());
    Console.WriteLine(result[0].GetProperty("orders")[0].GetProperty("id").ToString());
    Console.WriteLine(result[0].GetProperty("orders")[0].GetProperty("userId").ToString());
    Console.WriteLine(result[0].GetProperty("orders")[0].GetProperty("detail").ToString());
    Console.WriteLine(result[0].GetProperty("etag").ToString());
}
]]></code></example>
    </member>
    <member name="GetUsers(int?,int?,int?,IEnumerable{string},string,IEnumerable{string},IEnumerable{string},RequestContext)">
      <example>
This sample shows how to call GetUsers with required parameters and parse the result.
<code><![CDATA[
BasicClient client = new BasicClient();

foreach (BinaryData item in client.GetUsers(1234, 1234, 1234, new string[]
{
"<orderby>"
}, "<filter>", new string[]
{
"<select>"
}, new string[]
{
"<expand>"
}, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("id").ToString());
    Console.WriteLine(result[0].GetProperty("name").ToString());
    Console.WriteLine(result[0].GetProperty("orders")[0].GetProperty("id").ToString());
    Console.WriteLine(result[0].GetProperty("orders")[0].GetProperty("userId").ToString());
    Console.WriteLine(result[0].GetProperty("orders")[0].GetProperty("detail").ToString());
    Console.WriteLine(result[0].GetProperty("etag").ToString());
}
]]></code></example>
    </member>
    <member name="GetWithPageAsync(CancellationToken)">
      <example>
This sample shows how to call GetWithPageAsync.
<code><![CDATA[
BasicClient client = new BasicClient();

await foreach (User item in client.GetWithPageAsync())
{
}
]]></code></example>
    </member>
    <member name="GetWithPage(CancellationToken)">
      <example>
This sample shows how to call GetWithPage.
<code><![CDATA[
BasicClient client = new BasicClient();

foreach (User item in client.GetWithPage())
{
}
]]></code></example>
    </member>
    <member name="GetWithPageAsync(RequestContext)">
      <example>
This sample shows how to call GetWithPageAsync with required parameters and parse the result.
<code><![CDATA[
BasicClient client = new BasicClient();

await foreach (BinaryData item in client.GetWithPageAsync(null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("id").ToString());
    Console.WriteLine(result[0].GetProperty("name").ToString());
    Console.WriteLine(result[0].GetProperty("orders")[0].GetProperty("id").ToString());
    Console.WriteLine(result[0].GetProperty("orders")[0].GetProperty("userId").ToString());
    Console.WriteLine(result[0].GetProperty("orders")[0].GetProperty("detail").ToString());
    Console.WriteLine(result[0].GetProperty("etag").ToString());
}
]]></code></example>
    </member>
    <member name="GetWithPage(RequestContext)">
      <example>
This sample shows how to call GetWithPage with required parameters and parse the result.
<code><![CDATA[
BasicClient client = new BasicClient();

foreach (BinaryData item in client.GetWithPage(null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("id").ToString());
    Console.WriteLine(result[0].GetProperty("name").ToString());
    Console.WriteLine(result[0].GetProperty("orders")[0].GetProperty("id").ToString());
    Console.WriteLine(result[0].GetProperty("orders")[0].GetProperty("userId").ToString());
    Console.WriteLine(result[0].GetProperty("orders")[0].GetProperty("detail").ToString());
    Console.WriteLine(result[0].GetProperty("etag").ToString());
}
]]></code></example>
    </member>
    <member name="GetWithCustomPageModelAsync(CancellationToken)">
      <example>
This sample shows how to call GetWithCustomPageModelAsync.
<code><![CDATA[
BasicClient client = new BasicClient();

await foreach (User item in client.GetWithCustomPageModelAsync())
{
}
]]></code></example>
    </member>
    <member name="GetWithCustomPageModel(CancellationToken)">
      <example>
This sample shows how to call GetWithCustomPageModel.
<code><![CDATA[
BasicClient client = new BasicClient();

foreach (User item in client.GetWithCustomPageModel())
{
}
]]></code></example>
    </member>
    <member name="GetWithCustomPageModelAsync(RequestContext)">
      <example>
This sample shows how to call GetWithCustomPageModelAsync with required parameters and parse the result.
<code><![CDATA[
BasicClient client = new BasicClient();

await foreach (BinaryData item in client.GetWithCustomPageModelAsync(null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("id").ToString());
    Console.WriteLine(result[0].GetProperty("name").ToString());
    Console.WriteLine(result[0].GetProperty("orders")[0].GetProperty("id").ToString());
    Console.WriteLine(result[0].GetProperty("orders")[0].GetProperty("userId").ToString());
    Console.WriteLine(result[0].GetProperty("orders")[0].GetProperty("detail").ToString());
    Console.WriteLine(result[0].GetProperty("etag").ToString());
}
]]></code></example>
    </member>
    <member name="GetWithCustomPageModel(RequestContext)">
      <example>
This sample shows how to call GetWithCustomPageModel with required parameters and parse the result.
<code><![CDATA[
BasicClient client = new BasicClient();

foreach (BinaryData item in client.GetWithCustomPageModel(null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("id").ToString());
    Console.WriteLine(result[0].GetProperty("name").ToString());
    Console.WriteLine(result[0].GetProperty("orders")[0].GetProperty("id").ToString());
    Console.WriteLine(result[0].GetProperty("orders")[0].GetProperty("userId").ToString());
    Console.WriteLine(result[0].GetProperty("orders")[0].GetProperty("detail").ToString());
    Console.WriteLine(result[0].GetProperty("etag").ToString());
}
]]></code></example>
    </member>
  </members>
</doc>