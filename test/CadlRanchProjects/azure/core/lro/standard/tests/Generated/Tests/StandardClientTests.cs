// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using _Azure.Lro.Standard;
using _Azure.Lro.Standard.Models;

namespace _Azure.Lro.Standard.Tests
{
    public partial class StandardClientTests : _AzureLroStandardTestBase
    {
        public StandardClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task User_CreateOrReplace_ShortVersion()
        {
            Uri endpoint = null;
            StandardClient client = CreateStandardClient(endpoint);

            using RequestContent content = RequestContent.Create(new
            {
                role = "<role>",
            });
            Operation<BinaryData> operation = await client.CreateOrReplaceAsync(WaitUntil.Completed, "<name>", content);
            BinaryData responseData = operation.Value;
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task User_CreateOrReplace_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            StandardClient client = CreateStandardClient(endpoint);

            User resource = new User("<role>");
            Operation<User> operation = await client.CreateOrReplaceAsync(WaitUntil.Completed, "<name>", resource);
            User responseData = operation.Value;
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task User_CreateOrReplace_AllParameters()
        {
            Uri endpoint = null;
            StandardClient client = CreateStandardClient(endpoint);

            using RequestContent content = RequestContent.Create(new
            {
                role = "<role>",
            });
            Operation<BinaryData> operation = await client.CreateOrReplaceAsync(WaitUntil.Completed, "<name>", content);
            BinaryData responseData = operation.Value;
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task User_CreateOrReplace_AllParameters_Convenience()
        {
            Uri endpoint = null;
            StandardClient client = CreateStandardClient(endpoint);

            User resource = new User("<role>");
            Operation<User> operation = await client.CreateOrReplaceAsync(WaitUntil.Completed, "<name>", resource);
            User responseData = operation.Value;
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task User_Delete_ShortVersion()
        {
            Uri endpoint = null;
            StandardClient client = CreateStandardClient(endpoint);

            Operation operation = await client.DeleteAsync(WaitUntil.Completed, "<name>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task User_Delete_AllParameters()
        {
            Uri endpoint = null;
            StandardClient client = CreateStandardClient(endpoint);

            Operation operation = await client.DeleteAsync(WaitUntil.Completed, "<name>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Standard_Export_ShortVersion()
        {
            Uri endpoint = null;
            StandardClient client = CreateStandardClient(endpoint);

            Operation<BinaryData> operation = await client.ExportAsync(WaitUntil.Completed, "<name>", "<format>", null);
            BinaryData responseData = operation.Value;
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Standard_Export_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            StandardClient client = CreateStandardClient(endpoint);

            Operation<ExportedUser> operation = await client.ExportAsync(WaitUntil.Completed, "<name>", "<format>");
            ExportedUser responseData = operation.Value;
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Standard_Export_AllParameters()
        {
            Uri endpoint = null;
            StandardClient client = CreateStandardClient(endpoint);

            Operation<BinaryData> operation = await client.ExportAsync(WaitUntil.Completed, "<name>", "<format>", null);
            BinaryData responseData = operation.Value;
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Standard_Export_AllParameters_Convenience()
        {
            Uri endpoint = null;
            StandardClient client = CreateStandardClient(endpoint);

            Operation<ExportedUser> operation = await client.ExportAsync(WaitUntil.Completed, "<name>", "<format>");
            ExportedUser responseData = operation.Value;
        }
    }
}
