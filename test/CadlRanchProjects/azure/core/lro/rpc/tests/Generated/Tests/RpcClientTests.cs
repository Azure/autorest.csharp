// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using _Azure.Lro.Rpc.Models;

namespace _Azure.Lro.Rpc.Tests
{
    public partial class RpcClientTests : _AzureLroRpcTestBase
    {
        public RpcClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Rpc_LongRunningRpc_ShortVersion()
        {
            Uri endpoint = null;
            RpcClient client = CreateRpcClient(endpoint);

            using RequestContent content = RequestContent.Create(new
            {
                prompt = "<prompt>",
            });
            Operation<BinaryData> operation = await client.LongRunningRpcAsync(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Rpc_LongRunningRpc_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            RpcClient client = CreateRpcClient(endpoint);

            GenerationOptions body = new GenerationOptions("<prompt>");
            Operation<GenerationResult> operation = await client.LongRunningRpcAsync(WaitUntil.Completed, body);
            GenerationResult responseData = operation.Value;
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Rpc_LongRunningRpc_AllParameters()
        {
            Uri endpoint = null;
            RpcClient client = CreateRpcClient(endpoint);

            using RequestContent content = RequestContent.Create(new
            {
                prompt = "<prompt>",
            });
            Operation<BinaryData> operation = await client.LongRunningRpcAsync(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Rpc_LongRunningRpc_AllParameters_Convenience()
        {
            Uri endpoint = null;
            RpcClient client = CreateRpcClient(endpoint);

            GenerationOptions body = new GenerationOptions("<prompt>");
            Operation<GenerationResult> operation = await client.LongRunningRpcAsync(WaitUntil.Completed, body);
            GenerationResult responseData = operation.Value;
        }
    }
}
