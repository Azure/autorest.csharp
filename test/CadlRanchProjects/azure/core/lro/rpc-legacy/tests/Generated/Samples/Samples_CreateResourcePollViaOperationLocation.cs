// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using _Azure.Lro.RpcLegacy;
using _Azure.Lro.RpcLegacy.Models;

namespace _Azure.Lro.RpcLegacy.Samples
{
    public partial class Samples_CreateResourcePollViaOperationLocation
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CreateResourcePollViaOperationLocation_CreateJob_ShortVersion()
        {
            CreateResourcePollViaOperationLocation client = new LegacyClient().GetCreateResourcePollViaOperationLocationClient(apiVersion: "2022-12-01-preview");

            using RequestContent content = RequestContent.Create(new
            {
                comment = "<comment>",
            });
            Operation operation = client.CreateJob(WaitUntil.Completed, content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CreateResourcePollViaOperationLocation_CreateJob_ShortVersion_Async()
        {
            CreateResourcePollViaOperationLocation client = new LegacyClient().GetCreateResourcePollViaOperationLocationClient(apiVersion: "2022-12-01-preview");

            using RequestContent content = RequestContent.Create(new
            {
                comment = "<comment>",
            });
            Operation operation = await client.CreateJobAsync(WaitUntil.Completed, content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CreateResourcePollViaOperationLocation_CreateJob_ShortVersion_Convenience()
        {
            CreateResourcePollViaOperationLocation client = new LegacyClient().GetCreateResourcePollViaOperationLocationClient(apiVersion: "2022-12-01-preview");

            JobData jobData = new JobData("<comment>");
            Operation operation = client.CreateJob(WaitUntil.Completed, jobData);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CreateResourcePollViaOperationLocation_CreateJob_ShortVersion_Convenience_Async()
        {
            CreateResourcePollViaOperationLocation client = new LegacyClient().GetCreateResourcePollViaOperationLocationClient(apiVersion: "2022-12-01-preview");

            JobData jobData = new JobData("<comment>");
            Operation operation = await client.CreateJobAsync(WaitUntil.Completed, jobData);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CreateResourcePollViaOperationLocation_CreateJob_AllParameters()
        {
            CreateResourcePollViaOperationLocation client = new LegacyClient().GetCreateResourcePollViaOperationLocationClient(apiVersion: "2022-12-01-preview");

            using RequestContent content = RequestContent.Create(new
            {
                comment = "<comment>",
            });
            Operation operation = client.CreateJob(WaitUntil.Completed, content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CreateResourcePollViaOperationLocation_CreateJob_AllParameters_Async()
        {
            CreateResourcePollViaOperationLocation client = new LegacyClient().GetCreateResourcePollViaOperationLocationClient(apiVersion: "2022-12-01-preview");

            using RequestContent content = RequestContent.Create(new
            {
                comment = "<comment>",
            });
            Operation operation = await client.CreateJobAsync(WaitUntil.Completed, content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CreateResourcePollViaOperationLocation_CreateJob_AllParameters_Convenience()
        {
            CreateResourcePollViaOperationLocation client = new LegacyClient().GetCreateResourcePollViaOperationLocationClient(apiVersion: "2022-12-01-preview");

            JobData jobData = new JobData("<comment>");
            Operation operation = client.CreateJob(WaitUntil.Completed, jobData);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CreateResourcePollViaOperationLocation_CreateJob_AllParameters_Convenience_Async()
        {
            CreateResourcePollViaOperationLocation client = new LegacyClient().GetCreateResourcePollViaOperationLocationClient(apiVersion: "2022-12-01-preview");

            JobData jobData = new JobData("<comment>");
            Operation operation = await client.CreateJobAsync(WaitUntil.Completed, jobData);
        }
    }
}
