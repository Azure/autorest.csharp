// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using _Azure.Lro.RpcLegacy;
using _Azure.Lro.RpcLegacy.Models;

namespace _Azure.Lro.RpcLegacy.Tests
{
    public partial class LegacyClientTests : _AzureLroRpcLegacyTestBase
    {
        public LegacyClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CreateResourcePollViaOperationLocation_CreateJob_ShortVersion()
        {
            Uri endpoint = null;
            LegacyClient client = CreateLegacyClient(endpoint);

            using RequestContent content = RequestContent.Create(new
            {
                comment = "<comment>",
            });
            Operation<BinaryData> operation = await client.CreateJobAsync(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CreateResourcePollViaOperationLocation_CreateJob_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            LegacyClient client = CreateLegacyClient(endpoint);

            JobData jobData = new JobData("<comment>");
            Operation<JobResult> operation = await client.CreateJobAsync(WaitUntil.Completed, jobData);
            JobResult responseData = operation.Value;
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CreateResourcePollViaOperationLocation_CreateJob_AllParameters()
        {
            Uri endpoint = null;
            LegacyClient client = CreateLegacyClient(endpoint);

            using RequestContent content = RequestContent.Create(new
            {
                comment = "<comment>",
            });
            Operation<BinaryData> operation = await client.CreateJobAsync(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CreateResourcePollViaOperationLocation_CreateJob_AllParameters_Convenience()
        {
            Uri endpoint = null;
            LegacyClient client = CreateLegacyClient(endpoint);

            JobData jobData = new JobData("<comment>");
            Operation<JobResult> operation = await client.CreateJobAsync(WaitUntil.Completed, jobData);
            JobResult responseData = operation.Value;
        }
    }
}
