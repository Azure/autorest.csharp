// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using _Specs_.Azure.Core.Traits;
using _Specs_.Azure.Core.Traits.Models;

namespace _Specs_.Azure.Core.Traits.Tests
{
    public partial class TraitsClientTests : _Specs_AzureCoreTraitsTestBase
    {
        public TraitsClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task User_SmokeTest_ShortVersion()
        {
            Uri endpoint = null;
            TraitsClient client = CreateTraitsClient(endpoint);

            Response response = await client.SmokeTestAsync(1234, "<foo>", null, null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task User_SmokeTest_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            TraitsClient client = CreateTraitsClient(endpoint);

            Response<User> response = await client.SmokeTestAsync(1234, "<foo>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task User_SmokeTest_AllParameters()
        {
            Uri endpoint = null;
            TraitsClient client = CreateTraitsClient(endpoint);

            Response response = await client.SmokeTestAsync(1234, "<foo>", null, null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task User_SmokeTest_AllParameters_Convenience()
        {
            Uri endpoint = null;
            TraitsClient client = CreateTraitsClient(endpoint);

            Response<User> response = await client.SmokeTestAsync(1234, "<foo>", requestConditions: null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Traits_RepeatableAction_ShortVersion()
        {
            Uri endpoint = null;
            TraitsClient client = CreateTraitsClient(endpoint);

            using RequestContent content = RequestContent.Create(new
            {
                userActionValue = "<userActionValue>",
            });
            Response response = await client.RepeatableActionAsync(1234, content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Traits_RepeatableAction_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            TraitsClient client = CreateTraitsClient(endpoint);

            UserActionParam userActionParam = new UserActionParam("<userActionValue>");
            Response<UserActionResponse> response = await client.RepeatableActionAsync(1234, userActionParam);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Traits_RepeatableAction_AllParameters()
        {
            Uri endpoint = null;
            TraitsClient client = CreateTraitsClient(endpoint);

            using RequestContent content = RequestContent.Create(new
            {
                userActionValue = "<userActionValue>",
            });
            Response response = await client.RepeatableActionAsync(1234, content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Traits_RepeatableAction_AllParameters_Convenience()
        {
            Uri endpoint = null;
            TraitsClient client = CreateTraitsClient(endpoint);

            UserActionParam userActionParam = new UserActionParam("<userActionValue>");
            Response<UserActionResponse> response = await client.RepeatableActionAsync(1234, userActionParam);
        }
    }
}
