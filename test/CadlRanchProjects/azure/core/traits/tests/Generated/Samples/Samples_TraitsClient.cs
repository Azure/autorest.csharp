// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.IO;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using _Specs_.Azure.Core.Traits.Models;

namespace _Specs_.Azure.Core.Traits.Samples
{
    public class Samples_TraitsClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SmokeTest()
        {
            var client = new TraitsClient();

            Response response = client.SmokeTest(1234, "<foo>", null, new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SmokeTest_AllParameters()
        {
            var client = new TraitsClient();

            Response response = client.SmokeTest(1234, "<foo>", null, new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SmokeTest_Async()
        {
            var client = new TraitsClient();

            Response response = await client.SmokeTestAsync(1234, "<foo>", null, new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SmokeTest_AllParameters_Async()
        {
            var client = new TraitsClient();

            Response response = await client.SmokeTestAsync(1234, "<foo>", null, new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SmokeTest_Convenience_Async()
        {
            var client = new TraitsClient();

            var result = await client.SmokeTestAsync(1234, "<foo>", null);
        }
    }
}
