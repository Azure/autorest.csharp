// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using _Specs_.Azure.Payload.Encoding.Models;

namespace _Specs_.Azure.Payload.Encoding.Samples
{
    public partial class Samples_EncodingClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Encoding_DurationConstant_ShortVersion()
        {
            EncodingClient client = new EncodingClient();

            using RequestContent content = RequestContent.Create(new { });
            Response response = client.DurationConstant(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Encoding_DurationConstant_ShortVersion_Async()
        {
            EncodingClient client = new EncodingClient();

            using RequestContent content = RequestContent.Create(new { });
            Response response = await client.DurationConstantAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Encoding_DurationConstant_ShortVersion_Convenience()
        {
            EncodingClient client = new EncodingClient();

            DurationModel body = new DurationModel(default);
            Response response = client.DurationConstant(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Encoding_DurationConstant_ShortVersion_Convenience_Async()
        {
            EncodingClient client = new EncodingClient();

            DurationModel body = new DurationModel(default);
            Response response = await client.DurationConstantAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Encoding_DurationConstant_AllParameters()
        {
            EncodingClient client = new EncodingClient();

            using RequestContent content = RequestContent.Create(new { });
            Response response = client.DurationConstant(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Encoding_DurationConstant_AllParameters_Async()
        {
            EncodingClient client = new EncodingClient();

            using RequestContent content = RequestContent.Create(new { });
            Response response = await client.DurationConstantAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Encoding_DurationConstant_AllParameters_Convenience()
        {
            EncodingClient client = new EncodingClient();

            DurationModel body = new DurationModel(default);
            Response response = client.DurationConstant(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Encoding_DurationConstant_AllParameters_Convenience_Async()
        {
            EncodingClient client = new EncodingClient();

            DurationModel body = new DurationModel(default);
            Response response = await client.DurationConstantAsync(body);
        }
    }
}
