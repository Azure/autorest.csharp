// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using Parameters.BodyOptionality;
using Parameters.BodyOptionality.Models;

namespace Parameters.BodyOptionality.Samples
{
    public class Samples_BodyOptionalityClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_RequiredExplicit()
        {
            BodyOptionalityClient client = new BodyOptionalityClient();

            RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.RequiredExplicit(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_RequiredExplicit_Async()
        {
            BodyOptionalityClient client = new BodyOptionalityClient();

            RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.RequiredExplicitAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_RequiredExplicit_Convenience()
        {
            BodyOptionalityClient client = new BodyOptionalityClient();

            BodyModel body = new BodyModel("<name>");
            Response response = client.RequiredExplicit(body);
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_RequiredExplicit_Convenience_Async()
        {
            BodyOptionalityClient client = new BodyOptionalityClient();

            BodyModel body = new BodyModel("<name>");
            Response response = await client.RequiredExplicitAsync(body);
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_RequiredExplicit_AllParameters()
        {
            BodyOptionalityClient client = new BodyOptionalityClient();

            RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.RequiredExplicit(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_RequiredExplicit_AllParameters_Async()
        {
            BodyOptionalityClient client = new BodyOptionalityClient();

            RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.RequiredExplicitAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_RequiredExplicit_AllParameters_Convenience()
        {
            BodyOptionalityClient client = new BodyOptionalityClient();

            BodyModel body = new BodyModel("<name>");
            Response response = client.RequiredExplicit(body);
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_RequiredExplicit_AllParameters_Convenience_Async()
        {
            BodyOptionalityClient client = new BodyOptionalityClient();

            BodyModel body = new BodyModel("<name>");
            Response response = await client.RequiredExplicitAsync(body);
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_RequiredImplicit()
        {
            BodyOptionalityClient client = new BodyOptionalityClient();

            RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.RequiredImplicit(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_RequiredImplicit_Async()
        {
            BodyOptionalityClient client = new BodyOptionalityClient();

            RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.RequiredImplicitAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_RequiredImplicit_Convenience()
        {
            BodyOptionalityClient client = new BodyOptionalityClient();

            BodyModel bodyModel = new BodyModel("<name>");
            Response response = client.RequiredImplicit(bodyModel);
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_RequiredImplicit_Convenience_Async()
        {
            BodyOptionalityClient client = new BodyOptionalityClient();

            BodyModel bodyModel = new BodyModel("<name>");
            Response response = await client.RequiredImplicitAsync(bodyModel);
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_RequiredImplicit_AllParameters()
        {
            BodyOptionalityClient client = new BodyOptionalityClient();

            RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.RequiredImplicit(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_RequiredImplicit_AllParameters_Async()
        {
            BodyOptionalityClient client = new BodyOptionalityClient();

            RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.RequiredImplicitAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_RequiredImplicit_AllParameters_Convenience()
        {
            BodyOptionalityClient client = new BodyOptionalityClient();

            BodyModel bodyModel = new BodyModel("<name>");
            Response response = client.RequiredImplicit(bodyModel);
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_RequiredImplicit_AllParameters_Convenience_Async()
        {
            BodyOptionalityClient client = new BodyOptionalityClient();

            BodyModel bodyModel = new BodyModel("<name>");
            Response response = await client.RequiredImplicitAsync(bodyModel);
            Console.WriteLine(response.Status);
        }
    }
}
