<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="SpreadAsRequestBodyAsync(string,CancellationToken)">
      <example>
This sample shows how to call SpreadAsRequestBodyAsync with required parameters.
<code><![CDATA[
Alias client = new SpreadClient().GetAliasClient(apiVersion: "1.0.0");

Response response = await client.SpreadAsRequestBodyAsync("<name>");
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadAsRequestBody(string,CancellationToken)">
      <example>
This sample shows how to call SpreadAsRequestBody with required parameters.
<code><![CDATA[
Alias client = new SpreadClient().GetAliasClient(apiVersion: "1.0.0");

Response response = client.SpreadAsRequestBody("<name>");
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadAsRequestBodyAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call SpreadAsRequestBodyAsync with required request content.
<code><![CDATA[
Alias client = new SpreadClient().GetAliasClient(apiVersion: "1.0.0");

RequestContent content = RequestContent.Create(new Dictionary<string, object>()
{
    ["name"] = "<name>",
});
Response response = await client.SpreadAsRequestBodyAsync(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadAsRequestBody(RequestContent,RequestContext)">
      <example>
This sample shows how to call SpreadAsRequestBody with required request content.
<code><![CDATA[
Alias client = new SpreadClient().GetAliasClient(apiVersion: "1.0.0");

RequestContent content = RequestContent.Create(new Dictionary<string, object>()
{
    ["name"] = "<name>",
});
Response response = client.SpreadAsRequestBody(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadAsRequestParameterAsync(string,string,string,CancellationToken)">
      <example>
This sample shows how to call SpreadAsRequestParameterAsync with required parameters.
<code><![CDATA[
Alias client = new SpreadClient().GetAliasClient(apiVersion: "1.0.0");

Response response = await client.SpreadAsRequestParameterAsync("<id>", "<x-ms-test-header>", "<name>");
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadAsRequestParameter(string,string,string,CancellationToken)">
      <example>
This sample shows how to call SpreadAsRequestParameter with required parameters.
<code><![CDATA[
Alias client = new SpreadClient().GetAliasClient(apiVersion: "1.0.0");

Response response = client.SpreadAsRequestParameter("<id>", "<x-ms-test-header>", "<name>");
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadAsRequestParameterAsync(string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call SpreadAsRequestParameterAsync with required parameters and request content.
<code><![CDATA[
Alias client = new SpreadClient().GetAliasClient(apiVersion: "1.0.0");

RequestContent content = RequestContent.Create(new Dictionary<string, object>()
{
    ["name"] = "<name>",
});
Response response = await client.SpreadAsRequestParameterAsync("<id>", "<x-ms-test-header>", content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadAsRequestParameter(string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call SpreadAsRequestParameter with required parameters and request content.
<code><![CDATA[
Alias client = new SpreadClient().GetAliasClient(apiVersion: "1.0.0");

RequestContent content = RequestContent.Create(new Dictionary<string, object>()
{
    ["name"] = "<name>",
});
Response response = client.SpreadAsRequestParameter("<id>", "<x-ms-test-header>", content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadWithMultipleParametersAsync(string,string,string,string,string,string,string,string,CancellationToken)">
      <example>
This sample shows how to call SpreadWithMultipleParametersAsync with required parameters.
<code><![CDATA[
Alias client = new SpreadClient().GetAliasClient(apiVersion: "1.0.0");

Response response = await client.SpreadWithMultipleParametersAsync("<id>", "<x-ms-test-header>", "<prop1>", "<prop2>", "<prop3>", "<prop4>", "<prop5>", "<prop6>");
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadWithMultipleParameters(string,string,string,string,string,string,string,string,CancellationToken)">
      <example>
This sample shows how to call SpreadWithMultipleParameters with required parameters.
<code><![CDATA[
Alias client = new SpreadClient().GetAliasClient(apiVersion: "1.0.0");

Response response = client.SpreadWithMultipleParameters("<id>", "<x-ms-test-header>", "<prop1>", "<prop2>", "<prop3>", "<prop4>", "<prop5>", "<prop6>");
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadWithMultipleParametersAsync(string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call SpreadWithMultipleParametersAsync with required parameters and request content.
<code><![CDATA[
Alias client = new SpreadClient().GetAliasClient(apiVersion: "1.0.0");

RequestContent content = RequestContent.Create(new Dictionary<string, object>()
{
    ["prop1"] = "<prop1>",
    ["prop2"] = "<prop2>",
    ["prop3"] = "<prop3>",
    ["prop4"] = "<prop4>",
    ["prop5"] = "<prop5>",
    ["prop6"] = "<prop6>",
});
Response response = await client.SpreadWithMultipleParametersAsync("<id>", "<x-ms-test-header>", content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadWithMultipleParameters(string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call SpreadWithMultipleParameters with required parameters and request content.
<code><![CDATA[
Alias client = new SpreadClient().GetAliasClient(apiVersion: "1.0.0");

RequestContent content = RequestContent.Create(new Dictionary<string, object>()
{
    ["prop1"] = "<prop1>",
    ["prop2"] = "<prop2>",
    ["prop3"] = "<prop3>",
    ["prop4"] = "<prop4>",
    ["prop5"] = "<prop5>",
    ["prop6"] = "<prop6>",
});
Response response = client.SpreadWithMultipleParameters("<id>", "<x-ms-test-header>", content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
  </members>
</doc>