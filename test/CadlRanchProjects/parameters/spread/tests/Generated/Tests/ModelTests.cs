// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using Parameters.Spread.Models;

namespace Parameters.Spread.Tests
{
    public partial class ModelTests : ParametersSpreadTestBase
    {
        public ModelTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Model_SpreadAsRequestBody_ShortVersion()
        {
            Uri endpoint = null;
            Model client = CreateSpreadClient(endpoint).GetModelClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.SpreadAsRequestBodyAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Model_SpreadAsRequestBody_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            Model client = CreateSpreadClient(endpoint).GetModelClient();

            Response response = await client.SpreadAsRequestBodyAsync("<name>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Model_SpreadAsRequestBody_AllParameters()
        {
            Uri endpoint = null;
            Model client = CreateSpreadClient(endpoint).GetModelClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.SpreadAsRequestBodyAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Model_SpreadAsRequestBody_AllParameters_Convenience()
        {
            Uri endpoint = null;
            Model client = CreateSpreadClient(endpoint).GetModelClient();

            Response response = await client.SpreadAsRequestBodyAsync("<name>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Model_SpreadCompositeRequestOnlyWithBody_ShortVersion()
        {
            Uri endpoint = null;
            Model client = CreateSpreadClient(endpoint).GetModelClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.SpreadCompositeRequestOnlyWithBodyAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Model_SpreadCompositeRequestOnlyWithBody_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            Model client = CreateSpreadClient(endpoint).GetModelClient();

            BodyParameter body = new BodyParameter("<name>");
            Response response = await client.SpreadCompositeRequestOnlyWithBodyAsync(body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Model_SpreadCompositeRequestOnlyWithBody_AllParameters()
        {
            Uri endpoint = null;
            Model client = CreateSpreadClient(endpoint).GetModelClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.SpreadCompositeRequestOnlyWithBodyAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Model_SpreadCompositeRequestOnlyWithBody_AllParameters_Convenience()
        {
            Uri endpoint = null;
            Model client = CreateSpreadClient(endpoint).GetModelClient();

            BodyParameter body = new BodyParameter("<name>");
            Response response = await client.SpreadCompositeRequestOnlyWithBodyAsync(body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Model_SpreadCompositeRequestWithoutBody_ShortVersion()
        {
            Uri endpoint = null;
            Model client = CreateSpreadClient(endpoint).GetModelClient();

            Response response = await client.SpreadCompositeRequestWithoutBodyAsync("<name>", "<testHeader>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Model_SpreadCompositeRequestWithoutBody_AllParameters()
        {
            Uri endpoint = null;
            Model client = CreateSpreadClient(endpoint).GetModelClient();

            Response response = await client.SpreadCompositeRequestWithoutBodyAsync("<name>", "<testHeader>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Model_SpreadCompositeRequest_ShortVersion()
        {
            Uri endpoint = null;
            Model client = CreateSpreadClient(endpoint).GetModelClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.SpreadCompositeRequestAsync("<name>", "<testHeader>", content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Model_SpreadCompositeRequest_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            Model client = CreateSpreadClient(endpoint).GetModelClient();

            BodyParameter body = new BodyParameter("<name>");
            Response response = await client.SpreadCompositeRequestAsync("<name>", "<testHeader>", body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Model_SpreadCompositeRequest_AllParameters()
        {
            Uri endpoint = null;
            Model client = CreateSpreadClient(endpoint).GetModelClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.SpreadCompositeRequestAsync("<name>", "<testHeader>", content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Model_SpreadCompositeRequest_AllParameters_Convenience()
        {
            Uri endpoint = null;
            Model client = CreateSpreadClient(endpoint).GetModelClient();

            BodyParameter body = new BodyParameter("<name>");
            Response response = await client.SpreadCompositeRequestAsync("<name>", "<testHeader>", body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Model_SpreadCompositeRequestMix_ShortVersion()
        {
            Uri endpoint = null;
            Model client = CreateSpreadClient(endpoint).GetModelClient();

            using RequestContent content = RequestContent.Create(new
            {
                prop = "<prop>",
            });
            Response response = await client.SpreadCompositeRequestMixAsync("<name>", "<testHeader>", content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Model_SpreadCompositeRequestMix_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            Model client = CreateSpreadClient(endpoint).GetModelClient();

            Response response = await client.SpreadCompositeRequestMixAsync("<name>", "<testHeader>", "<prop>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Model_SpreadCompositeRequestMix_AllParameters()
        {
            Uri endpoint = null;
            Model client = CreateSpreadClient(endpoint).GetModelClient();

            using RequestContent content = RequestContent.Create(new
            {
                prop = "<prop>",
            });
            Response response = await client.SpreadCompositeRequestMixAsync("<name>", "<testHeader>", content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Model_SpreadCompositeRequestMix_AllParameters_Convenience()
        {
            Uri endpoint = null;
            Model client = CreateSpreadClient(endpoint).GetModelClient();

            Response response = await client.SpreadCompositeRequestMixAsync("<name>", "<testHeader>", "<prop>");
        }
    }
}
