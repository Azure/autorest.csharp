// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using Parameters.Spread;
using Parameters.Spread.Models;

namespace Parameters.Spread.Tests
{
    public class ModelTests : ParametersSpreadTestBase
    {
        public ModelTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Skipping this test case because this is only for scaffolding the test cases")]
        public async Task SpreadAsRequestBody_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Model client = CreateSpreadClient(endpoint).GetModelClient(apiVersion: "1.0.0");

            RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.SpreadAsRequestBodyAsync(content);
        }

        [Test]
        [Ignore("Skipping this test case because this is only for scaffolding the test cases")]
        public async Task SpreadAsRequestBody_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Model client = CreateSpreadClient(endpoint).GetModelClient(apiVersion: "1.0.0");

            BodyParameter bodyParameter = new BodyParameter("<name>");
            Response response = await client.SpreadAsRequestBodyAsync(bodyParameter);
        }

        [Test]
        [Ignore("Skipping this test case because this is only for scaffolding the test cases")]
        public async Task SpreadAsRequestBody_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Model client = CreateSpreadClient(endpoint).GetModelClient(apiVersion: "1.0.0");

            RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.SpreadAsRequestBodyAsync(content);
        }

        [Test]
        [Ignore("Skipping this test case because this is only for scaffolding the test cases")]
        public async Task SpreadAsRequestBody_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Model client = CreateSpreadClient(endpoint).GetModelClient(apiVersion: "1.0.0");

            BodyParameter bodyParameter = new BodyParameter("<name>");
            Response response = await client.SpreadAsRequestBodyAsync(bodyParameter);
        }
    }
}
