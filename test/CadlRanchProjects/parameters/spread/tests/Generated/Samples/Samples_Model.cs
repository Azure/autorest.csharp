// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using Parameters.Spread;
using Parameters.Spread.Models;

namespace Parameters.Spread.Samples
{
    internal class Samples_Model
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SpreadAsRequestBody()
        {
            Model client = new SpreadClient().GetModelClient(apiVersion: "1.0.0");

            RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.SpreadAsRequestBody(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SpreadAsRequestBody_Async()
        {
            Model client = new SpreadClient().GetModelClient(apiVersion: "1.0.0");

            RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.SpreadAsRequestBodyAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SpreadAsRequestBody_Convenience()
        {
            Model client = new SpreadClient().GetModelClient(apiVersion: "1.0.0");

            BodyParameter bodyParameter = new BodyParameter("<name>");
            Response response = client.SpreadAsRequestBody(bodyParameter);
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SpreadAsRequestBody_Convenience_Async()
        {
            Model client = new SpreadClient().GetModelClient(apiVersion: "1.0.0");

            BodyParameter bodyParameter = new BodyParameter("<name>");
            Response response = await client.SpreadAsRequestBodyAsync(bodyParameter);
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SpreadAsRequestBody_AllParameters()
        {
            Model client = new SpreadClient().GetModelClient(apiVersion: "1.0.0");

            RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.SpreadAsRequestBody(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SpreadAsRequestBody_AllParameters_Async()
        {
            Model client = new SpreadClient().GetModelClient(apiVersion: "1.0.0");

            RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.SpreadAsRequestBodyAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SpreadAsRequestBody_AllParameters_Convenience()
        {
            Model client = new SpreadClient().GetModelClient(apiVersion: "1.0.0");

            BodyParameter bodyParameter = new BodyParameter("<name>");
            Response response = client.SpreadAsRequestBody(bodyParameter);
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SpreadAsRequestBody_AllParameters_Convenience_Async()
        {
            Model client = new SpreadClient().GetModelClient(apiVersion: "1.0.0");

            BodyParameter bodyParameter = new BodyParameter("<name>");
            Response response = await client.SpreadAsRequestBodyAsync(bodyParameter);
            Console.WriteLine(response.Status);
        }
    }
}
