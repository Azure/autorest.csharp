// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using Parameters.Basic.Models;

namespace Parameters.Basic.Tests
{
    public partial class ExplicitBodyTests : ParametersBasicTestBase
    {
        public ExplicitBodyTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task ExplicitBody_Simple_ShortVersion()
        {
            Uri endpoint = null;
            ExplicitBody client = CreateBasicClient(endpoint).GetExplicitBodyClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.SimpleAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task ExplicitBody_Simple_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            ExplicitBody client = CreateBasicClient(endpoint).GetExplicitBodyClient();

            User body = new User("<name>");
            Response response = await client.SimpleAsync(body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task ExplicitBody_Simple_AllParameters()
        {
            Uri endpoint = null;
            ExplicitBody client = CreateBasicClient(endpoint).GetExplicitBodyClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.SimpleAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task ExplicitBody_Simple_AllParameters_Convenience()
        {
            Uri endpoint = null;
            ExplicitBody client = CreateBasicClient(endpoint).GetExplicitBodyClient();

            User body = new User("<name>");
            Response response = await client.SimpleAsync(body);
        }
    }
}
