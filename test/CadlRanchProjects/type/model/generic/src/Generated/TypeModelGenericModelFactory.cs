// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Linq;

namespace _Type.Model.Generic.Models
{
    /// <summary> Model factory for models. </summary>
    public static partial class TypeModelGenericModelFactory
    {
        /// <summary> Initializes a new instance of <see cref="Models.Int32Type"/>. </summary>
        /// <param name="values"> This model is used to perform facet processing on fields based on a specified range of values. </param>
        /// <param name="value"></param>
        /// <param name="kind"> The facet type. </param>
        /// <returns> A new <see cref="Models.Int32Type"/> instance for mocking. </returns>
        public static Int32Type Int32Type(IEnumerable<int> values = null, int value = default, Int32TypeKind kind = default)
        {
            values ??= new List<int>();

            return new Int32Type(values?.ToList(), value, serializedAdditionalRawData: null, kind);
        }
    }
}
