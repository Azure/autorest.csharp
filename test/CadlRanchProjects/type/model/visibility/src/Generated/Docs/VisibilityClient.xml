<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="HeadModelAsync(HeadVisibilityModel,CancellationToken)">
      <example>
This sample shows how to call HeadModelAsync.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

HeadVisibilityModel input = new HeadVisibilityModel(1234, new string[] { "<createProp>" }, new int[] { 1234 }, true);
Response response = await client.HeadModelAsync(input);
]]></code>
This sample shows how to call HeadModelAsync with all parameters.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

HeadVisibilityModel input = new HeadVisibilityModel(1234, new string[] { "<createProp>" }, new int[] { 1234 }, true);
Response response = await client.HeadModelAsync(input);
]]></code></example>
    </member>
    <member name="HeadModel(HeadVisibilityModel,CancellationToken)">
      <example>
This sample shows how to call HeadModel.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

HeadVisibilityModel input = new HeadVisibilityModel(1234, new string[] { "<createProp>" }, new int[] { 1234 }, true);
Response response = client.HeadModel(input);
]]></code>
This sample shows how to call HeadModel with all parameters.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

HeadVisibilityModel input = new HeadVisibilityModel(1234, new string[] { "<createProp>" }, new int[] { 1234 }, true);
Response response = client.HeadModel(input);
]]></code></example>
    </member>
    <member name="HeadModelAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call HeadModelAsync.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

using RequestContent content = RequestContent.Create(new
{
    queryProp = 1234,
    createProp = new object[]
    {
        "<createProp>"
    },
    updateProp = new object[]
    {
        1234
    },
    deleteProp = true,
});
Response response = await client.HeadModelAsync(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call HeadModelAsync with all request content.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

using RequestContent content = RequestContent.Create(new
{
    queryProp = 1234,
    createProp = new object[]
    {
        "<createProp>"
    },
    updateProp = new object[]
    {
        1234
    },
    deleteProp = true,
});
Response response = await client.HeadModelAsync(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="HeadModel(RequestContent,RequestContext)">
      <example>
This sample shows how to call HeadModel.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

using RequestContent content = RequestContent.Create(new
{
    queryProp = 1234,
    createProp = new object[]
    {
        "<createProp>"
    },
    updateProp = new object[]
    {
        1234
    },
    deleteProp = true,
});
Response response = client.HeadModel(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call HeadModel with all request content.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

using RequestContent content = RequestContent.Create(new
{
    queryProp = 1234,
    createProp = new object[]
    {
        "<createProp>"
    },
    updateProp = new object[]
    {
        1234
    },
    deleteProp = true,
});
Response response = client.HeadModel(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetModelAsync(QueryModel,CancellationToken)">
      <example>
This sample shows how to call GetModelAsync.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

QueryModel input = new QueryModel(1234);
Response<ReadModel> response = await client.GetModelAsync(input);
]]></code>
This sample shows how to call GetModelAsync with all parameters.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

QueryModel input = new QueryModel(1234);
Response<ReadModel> response = await client.GetModelAsync(input);
]]></code></example>
    </member>
    <member name="GetModel(QueryModel,CancellationToken)">
      <example>
This sample shows how to call GetModel.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

QueryModel input = new QueryModel(1234);
Response<ReadModel> response = client.GetModel(input);
]]></code>
This sample shows how to call GetModel with all parameters.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

QueryModel input = new QueryModel(1234);
Response<ReadModel> response = client.GetModel(input);
]]></code></example>
    </member>
    <member name="GetModelAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call GetModelAsync and parse the result.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

using RequestContent content = RequestContent.Create(new
{
    queryProp = 1234,
});
Response response = await client.GetModelAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("readProp").ToString());
]]></code>
This sample shows how to call GetModelAsync with all request content and parse the result.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

using RequestContent content = RequestContent.Create(new
{
    queryProp = 1234,
});
Response response = await client.GetModelAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("readProp").ToString());
]]></code></example>
    </member>
    <member name="GetModel(RequestContent,RequestContext)">
      <example>
This sample shows how to call GetModel and parse the result.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

using RequestContent content = RequestContent.Create(new
{
    queryProp = 1234,
});
Response response = client.GetModel(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("readProp").ToString());
]]></code>
This sample shows how to call GetModel with all request content and parse the result.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

using RequestContent content = RequestContent.Create(new
{
    queryProp = 1234,
});
Response response = client.GetModel(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("readProp").ToString());
]]></code></example>
    </member>
    <member name="GetModelWithQueryAsync(int,CancellationToken)">
      <example>
This sample shows how to call GetModelWithQueryAsync.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

Response<ReadModel> response = await client.GetModelWithQueryAsync(1234);
]]></code>
This sample shows how to call GetModelWithQueryAsync with all parameters.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

Response<ReadModel> response = await client.GetModelWithQueryAsync(1234);
]]></code></example>
    </member>
    <member name="GetModelWithQuery(int,CancellationToken)">
      <example>
This sample shows how to call GetModelWithQuery.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

Response<ReadModel> response = client.GetModelWithQuery(1234);
]]></code>
This sample shows how to call GetModelWithQuery with all parameters.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

Response<ReadModel> response = client.GetModelWithQuery(1234);
]]></code></example>
    </member>
    <member name="GetModelWithQueryAsync(int,RequestContext)">
      <example>
This sample shows how to call GetModelWithQueryAsync and parse the result.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

Response response = await client.GetModelWithQueryAsync(1234, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("readProp").ToString());
]]></code>
This sample shows how to call GetModelWithQueryAsync with all parameters and parse the result.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

Response response = await client.GetModelWithQueryAsync(1234, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("readProp").ToString());
]]></code></example>
    </member>
    <member name="GetModelWithQuery(int,RequestContext)">
      <example>
This sample shows how to call GetModelWithQuery and parse the result.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

Response response = client.GetModelWithQuery(1234, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("readProp").ToString());
]]></code>
This sample shows how to call GetModelWithQuery with all parameters and parse the result.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

Response response = client.GetModelWithQuery(1234, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("readProp").ToString());
]]></code></example>
    </member>
    <member name="PutModelAsync(VisibilityModel,CancellationToken)">
      <example>
This sample shows how to call PutModelAsync.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

VisibilityModel input = new VisibilityModel(new string[] { "<createProp>" }, new int[] { 1234 });
Response response = await client.PutModelAsync(input);
]]></code>
This sample shows how to call PutModelAsync with all parameters.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

VisibilityModel input = new VisibilityModel(new string[] { "<createProp>" }, new int[] { 1234 });
Response response = await client.PutModelAsync(input);
]]></code></example>
    </member>
    <member name="PutModel(VisibilityModel,CancellationToken)">
      <example>
This sample shows how to call PutModel.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

VisibilityModel input = new VisibilityModel(new string[] { "<createProp>" }, new int[] { 1234 });
Response response = client.PutModel(input);
]]></code>
This sample shows how to call PutModel with all parameters.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

VisibilityModel input = new VisibilityModel(new string[] { "<createProp>" }, new int[] { 1234 });
Response response = client.PutModel(input);
]]></code></example>
    </member>
    <member name="PutModelAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutModelAsync.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

using RequestContent content = RequestContent.Create(new
{
    createProp = new object[]
    {
        "<createProp>"
    },
    updateProp = new object[]
    {
        1234
    },
});
Response response = await client.PutModelAsync(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call PutModelAsync with all request content.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

using RequestContent content = RequestContent.Create(new
{
    createProp = new object[]
    {
        "<createProp>"
    },
    updateProp = new object[]
    {
        1234
    },
});
Response response = await client.PutModelAsync(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PutModel(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutModel.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

using RequestContent content = RequestContent.Create(new
{
    createProp = new object[]
    {
        "<createProp>"
    },
    updateProp = new object[]
    {
        1234
    },
});
Response response = client.PutModel(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call PutModel with all request content.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

using RequestContent content = RequestContent.Create(new
{
    createProp = new object[]
    {
        "<createProp>"
    },
    updateProp = new object[]
    {
        1234
    },
});
Response response = client.PutModel(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PatchModelAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call PatchModelAsync.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

using RequestContent content = RequestContent.Create(new
{
    updateProp = new object[]
    {
        1234
    },
});
Response response = await client.PatchModelAsync(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call PatchModelAsync with all request content.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

using RequestContent content = RequestContent.Create(new
{
    updateProp = new object[]
    {
        1234
    },
});
Response response = await client.PatchModelAsync(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PatchModel(RequestContent,RequestContext)">
      <example>
This sample shows how to call PatchModel.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

using RequestContent content = RequestContent.Create(new
{
    updateProp = new object[]
    {
        1234
    },
});
Response response = client.PatchModel(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call PatchModel with all request content.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

using RequestContent content = RequestContent.Create(new
{
    updateProp = new object[]
    {
        1234
    },
});
Response response = client.PatchModel(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PostModelAsync(CreateModel,CancellationToken)">
      <example>
This sample shows how to call PostModelAsync.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

CreateModel input = new CreateModel(new string[] { "<createProp>" });
Response response = await client.PostModelAsync(input);
]]></code>
This sample shows how to call PostModelAsync with all parameters.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

CreateModel input = new CreateModel(new string[] { "<createProp>" });
Response response = await client.PostModelAsync(input);
]]></code></example>
    </member>
    <member name="PostModel(CreateModel,CancellationToken)">
      <example>
This sample shows how to call PostModel.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

CreateModel input = new CreateModel(new string[] { "<createProp>" });
Response response = client.PostModel(input);
]]></code>
This sample shows how to call PostModel with all parameters.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

CreateModel input = new CreateModel(new string[] { "<createProp>" });
Response response = client.PostModel(input);
]]></code></example>
    </member>
    <member name="PostModelAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call PostModelAsync.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

using RequestContent content = RequestContent.Create(new
{
    createProp = new object[]
    {
        "<createProp>"
    },
});
Response response = await client.PostModelAsync(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call PostModelAsync with all request content.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

using RequestContent content = RequestContent.Create(new
{
    createProp = new object[]
    {
        "<createProp>"
    },
});
Response response = await client.PostModelAsync(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PostModel(RequestContent,RequestContext)">
      <example>
This sample shows how to call PostModel.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

using RequestContent content = RequestContent.Create(new
{
    createProp = new object[]
    {
        "<createProp>"
    },
});
Response response = client.PostModel(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call PostModel with all request content.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

using RequestContent content = RequestContent.Create(new
{
    createProp = new object[]
    {
        "<createProp>"
    },
});
Response response = client.PostModel(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteModelAsync(DeleteModel,CancellationToken)">
      <example>
This sample shows how to call DeleteModelAsync.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

DeleteModel input = new DeleteModel(true);
Response response = await client.DeleteModelAsync(input);
]]></code>
This sample shows how to call DeleteModelAsync with all parameters.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

DeleteModel input = new DeleteModel(true);
Response response = await client.DeleteModelAsync(input);
]]></code></example>
    </member>
    <member name="DeleteModel(DeleteModel,CancellationToken)">
      <example>
This sample shows how to call DeleteModel.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

DeleteModel input = new DeleteModel(true);
Response response = client.DeleteModel(input);
]]></code>
This sample shows how to call DeleteModel with all parameters.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

DeleteModel input = new DeleteModel(true);
Response response = client.DeleteModel(input);
]]></code></example>
    </member>
    <member name="DeleteModelAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call DeleteModelAsync.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

using RequestContent content = RequestContent.Create(new
{
    deleteProp = true,
});
Response response = await client.DeleteModelAsync(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DeleteModelAsync with all request content.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

using RequestContent content = RequestContent.Create(new
{
    deleteProp = true,
});
Response response = await client.DeleteModelAsync(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteModel(RequestContent,RequestContext)">
      <example>
This sample shows how to call DeleteModel.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

using RequestContent content = RequestContent.Create(new
{
    deleteProp = true,
});
Response response = client.DeleteModel(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DeleteModel with all request content.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

using RequestContent content = RequestContent.Create(new
{
    deleteProp = true,
});
Response response = client.DeleteModel(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PutReadOnlyModelAsync(ReadOnlyModel,CancellationToken)">
      <example>
This sample shows how to call PutReadOnlyModelAsync.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

ReadOnlyModel input = new ReadOnlyModel();
Response<ReadOnlyModel> response = await client.PutReadOnlyModelAsync(input);
]]></code>
This sample shows how to call PutReadOnlyModelAsync with all parameters.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

ReadOnlyModel input = new ReadOnlyModel();
Response<ReadOnlyModel> response = await client.PutReadOnlyModelAsync(input);
]]></code></example>
    </member>
    <member name="PutReadOnlyModel(ReadOnlyModel,CancellationToken)">
      <example>
This sample shows how to call PutReadOnlyModel.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

ReadOnlyModel input = new ReadOnlyModel();
Response<ReadOnlyModel> response = client.PutReadOnlyModel(input);
]]></code>
This sample shows how to call PutReadOnlyModel with all parameters.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

ReadOnlyModel input = new ReadOnlyModel();
Response<ReadOnlyModel> response = client.PutReadOnlyModel(input);
]]></code></example>
    </member>
    <member name="PutReadOnlyModelAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutReadOnlyModelAsync and parse the result.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

using RequestContent content = RequestContent.Create(new object());
Response response = await client.PutReadOnlyModelAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call PutReadOnlyModelAsync with all request content and parse the result.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

using RequestContent content = RequestContent.Create(new object());
Response response = await client.PutReadOnlyModelAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("optionalNullableIntList")[0].ToString());
Console.WriteLine(result.GetProperty("optionalStringRecord").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="PutReadOnlyModel(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutReadOnlyModel and parse the result.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

using RequestContent content = RequestContent.Create(new object());
Response response = client.PutReadOnlyModel(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call PutReadOnlyModel with all request content and parse the result.
<code><![CDATA[
VisibilityClient client = new VisibilityClient();

using RequestContent content = RequestContent.Create(new object());
Response response = client.PutReadOnlyModel(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("optionalNullableIntList")[0].ToString());
Console.WriteLine(result.GetProperty("optionalStringRecord").GetProperty("<key>").ToString());
]]></code></example>
    </member>
  </members>
</doc>