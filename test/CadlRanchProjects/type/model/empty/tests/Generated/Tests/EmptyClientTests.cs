// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using _Type.Model.Empty;
using _Type.Model.Empty.Models;

namespace _Type.Model.Empty.Tests
{
    public partial class EmptyClientTests : _TypeModelEmptyTestBase
    {
        public EmptyClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Empty_PutEmpty_ShortVersion()
        {
            Uri endpoint = null;
            EmptyClient client = CreateEmptyClient(endpoint);

            using RequestContent content = RequestContent.Create(new object());
            Response response = await client.PutEmptyAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Empty_PutEmpty_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            EmptyClient client = CreateEmptyClient(endpoint);

            EmptyInput input = new EmptyInput();
            Response response = await client.PutEmptyAsync(input);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Empty_PutEmpty_AllParameters()
        {
            Uri endpoint = null;
            EmptyClient client = CreateEmptyClient(endpoint);

            using RequestContent content = RequestContent.Create(new object());
            Response response = await client.PutEmptyAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Empty_PutEmpty_AllParameters_Convenience()
        {
            Uri endpoint = null;
            EmptyClient client = CreateEmptyClient(endpoint);

            EmptyInput input = new EmptyInput();
            Response response = await client.PutEmptyAsync(input);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Empty_GetEmpty_ShortVersion()
        {
            Uri endpoint = null;
            EmptyClient client = CreateEmptyClient(endpoint);

            Response response = await client.GetEmptyAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Empty_GetEmpty_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            EmptyClient client = CreateEmptyClient(endpoint);

            Response<EmptyOutput> response = await client.GetEmptyAsync();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Empty_GetEmpty_AllParameters()
        {
            Uri endpoint = null;
            EmptyClient client = CreateEmptyClient(endpoint);

            Response response = await client.GetEmptyAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Empty_GetEmpty_AllParameters_Convenience()
        {
            Uri endpoint = null;
            EmptyClient client = CreateEmptyClient(endpoint);

            Response<EmptyOutput> response = await client.GetEmptyAsync();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Empty_PostRoundTripEmpty_ShortVersion()
        {
            Uri endpoint = null;
            EmptyClient client = CreateEmptyClient(endpoint);

            using RequestContent content = RequestContent.Create(new object());
            Response response = await client.PostRoundTripEmptyAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Empty_PostRoundTripEmpty_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            EmptyClient client = CreateEmptyClient(endpoint);

            EmptyInputOutput body = new EmptyInputOutput();
            Response<EmptyInputOutput> response = await client.PostRoundTripEmptyAsync(body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Empty_PostRoundTripEmpty_AllParameters()
        {
            Uri endpoint = null;
            EmptyClient client = CreateEmptyClient(endpoint);

            using RequestContent content = RequestContent.Create(new object());
            Response response = await client.PostRoundTripEmptyAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Empty_PostRoundTripEmpty_AllParameters_Convenience()
        {
            Uri endpoint = null;
            EmptyClient client = CreateEmptyClient(endpoint);

            EmptyInputOutput body = new EmptyInputOutput();
            Response<EmptyInputOutput> response = await client.PostRoundTripEmptyAsync(body);
        }
    }
}
