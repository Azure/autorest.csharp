// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using _Type.Model.Inheritance.NotDiscriminated;
using _Type.Model.Inheritance.NotDiscriminated.Models;

namespace _Type.Model.Inheritance.NotDiscriminated.Tests
{
    public class NotDiscriminatedClientTests : _TypeModelInheritanceNotDiscriminatedTestBase
    {
        public NotDiscriminatedClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        public async Task PostValid_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            NotDiscriminatedClient client = CreateNotDiscriminatedClient(endpoint);

            RequestContent content = RequestContent.Create(new
            {
                smart = true,
                age = 1234,
                name = "<name>",
            });
            Response response = await client.PostValidAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task PostValid_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            NotDiscriminatedClient client = CreateNotDiscriminatedClient(endpoint);

            Siamese input = new Siamese("<name>", 1234, true);
            Response response = await client.PostValidAsync(input);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task PostValid_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            NotDiscriminatedClient client = CreateNotDiscriminatedClient(endpoint);

            RequestContent content = RequestContent.Create(new
            {
                smart = true,
                age = 1234,
                name = "<name>",
            });
            Response response = await client.PostValidAsync(content);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task PostValid_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            NotDiscriminatedClient client = CreateNotDiscriminatedClient(endpoint);

            Siamese input = new Siamese("<name>", 1234, true);
            Response response = await client.PostValidAsync(input);
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task GetValid_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            NotDiscriminatedClient client = CreateNotDiscriminatedClient(endpoint);

            Response response = await client.GetValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("smart").ToString());
            Console.WriteLine(result.GetProperty("age").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }

        [Test]
        public async Task GetValid_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            NotDiscriminatedClient client = CreateNotDiscriminatedClient(endpoint);

            Response<Siamese> response = await client.GetValidAsync();
        }

        [Test]
        public async Task GetValid_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            NotDiscriminatedClient client = CreateNotDiscriminatedClient(endpoint);

            Response response = await client.GetValidAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("smart").ToString());
            Console.WriteLine(result.GetProperty("age").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }

        [Test]
        public async Task GetValid_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            NotDiscriminatedClient client = CreateNotDiscriminatedClient(endpoint);

            Response<Siamese> response = await client.GetValidAsync();
        }

        [Test]
        public async Task PutValid_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            NotDiscriminatedClient client = CreateNotDiscriminatedClient(endpoint);

            RequestContent content = RequestContent.Create(new
            {
                smart = true,
                age = 1234,
                name = "<name>",
            });
            Response response = await client.PutValidAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("smart").ToString());
            Console.WriteLine(result.GetProperty("age").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }

        [Test]
        public async Task PutValid_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            NotDiscriminatedClient client = CreateNotDiscriminatedClient(endpoint);

            Siamese input = new Siamese("<name>", 1234, true);
            Response<Siamese> response = await client.PutValidAsync(input);
        }

        [Test]
        public async Task PutValid_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            NotDiscriminatedClient client = CreateNotDiscriminatedClient(endpoint);

            RequestContent content = RequestContent.Create(new
            {
                smart = true,
                age = 1234,
                name = "<name>",
            });
            Response response = await client.PutValidAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("smart").ToString());
            Console.WriteLine(result.GetProperty("age").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }

        [Test]
        public async Task PutValid_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            NotDiscriminatedClient client = CreateNotDiscriminatedClient(endpoint);

            Siamese input = new Siamese("<name>", 1234, true);
            Response<Siamese> response = await client.PutValidAsync(input);
        }
    }
}
