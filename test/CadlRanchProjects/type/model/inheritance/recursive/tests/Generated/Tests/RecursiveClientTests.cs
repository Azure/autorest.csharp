// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using _Type.Model.Inheritance.Recursive.Models;

namespace _Type.Model.Inheritance.Recursive.Tests
{
    public partial class RecursiveClientTests : _TypeModelInheritanceRecursiveTestBase
    {
        public RecursiveClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Recursive_Put_ShortVersion()
        {
            Uri endpoint = null;
            RecursiveClient client = CreateRecursiveClient(endpoint);

            using RequestContent content = RequestContent.Create(new
            {
                level = 123,
            });
            Response response = await client.PutAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Recursive_Put_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            RecursiveClient client = CreateRecursiveClient(endpoint);

            Extension input = new Extension(123);
            Response response = await client.PutAsync(input);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Recursive_Put_AllParameters()
        {
            Uri endpoint = null;
            RecursiveClient client = CreateRecursiveClient(endpoint);

            using RequestContent content = RequestContent.Create(new
            {
                level = 123,
                extension = new object[]
            {
null
            },
            });
            Response response = await client.PutAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Recursive_Put_AllParameters_Convenience()
        {
            Uri endpoint = null;
            RecursiveClient client = CreateRecursiveClient(endpoint);

            Extension input = new Extension(123)
            {
                Extension = { default },
            };
            Response response = await client.PutAsync(input);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Recursive_GetRecursive_ShortVersion()
        {
            Uri endpoint = null;
            RecursiveClient client = CreateRecursiveClient(endpoint);

            Response response = await client.GetRecursiveAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Recursive_GetRecursive_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            RecursiveClient client = CreateRecursiveClient(endpoint);

            Response<Extension> response = await client.GetRecursiveAsync();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Recursive_GetRecursive_AllParameters()
        {
            Uri endpoint = null;
            RecursiveClient client = CreateRecursiveClient(endpoint);

            Response response = await client.GetRecursiveAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Recursive_GetRecursive_AllParameters_Convenience()
        {
            Uri endpoint = null;
            RecursiveClient client = CreateRecursiveClient(endpoint);

            Response<Extension> response = await client.GetRecursiveAsync();
        }
    }
}
