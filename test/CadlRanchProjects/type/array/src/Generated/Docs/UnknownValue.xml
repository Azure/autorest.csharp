<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetUnknownValueAsync(CancellationToken)">
      <example>
This sample shows how to call GetUnknownValueAsync.
<code><![CDATA[
UnknownValue client = new ArrayClient().GetUnknownValueClient(apiVersion: "1.0.0");

Response<IReadOnlyList<BinaryData>> response = await client.GetUnknownValueAsync();
]]></code></example>
    </member>
    <member name="GetUnknownValue(CancellationToken)">
      <example>
This sample shows how to call GetUnknownValue.
<code><![CDATA[
UnknownValue client = new ArrayClient().GetUnknownValueClient(apiVersion: "1.0.0");

Response<IReadOnlyList<BinaryData>> response = client.GetUnknownValue();
]]></code></example>
    </member>
    <member name="GetUnknownValueAsync(RequestContext)">
      <example>
This sample shows how to call GetUnknownValueAsync with required parameters and parse the result.
<code><![CDATA[
UnknownValue client = new ArrayClient().GetUnknownValueClient(apiVersion: "1.0.0");

Response response = await client.GetUnknownValueAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetUnknownValue(RequestContext)">
      <example>
This sample shows how to call GetUnknownValue with required parameters and parse the result.
<code><![CDATA[
UnknownValue client = new ArrayClient().GetUnknownValueClient(apiVersion: "1.0.0");

Response response = client.GetUnknownValue(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="PutAsync(IEnumerable{BinaryData},CancellationToken)">
      <example>
This sample shows how to call PutAsync with required parameters.
<code><![CDATA[
UnknownValue client = new ArrayClient().GetUnknownValueClient(apiVersion: "1.0.0");

Response response = await client.PutAsync(new List<BinaryData>()
{
BinaryData.FromObjectAsJson(new Dictionary<string, object>())
});
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="Put(IEnumerable{BinaryData},CancellationToken)">
      <example>
This sample shows how to call Put with required parameters.
<code><![CDATA[
UnknownValue client = new ArrayClient().GetUnknownValueClient(apiVersion: "1.0.0");

Response response = client.Put(new List<BinaryData>()
{
BinaryData.FromObjectAsJson(new Dictionary<string, object>())
});
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PutAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutAsync with required request content.
<code><![CDATA[
UnknownValue client = new ArrayClient().GetUnknownValueClient(apiVersion: "1.0.0");

RequestContent content = RequestContent.Create(new List<object>()
{
new Dictionary<string, object>()
});
Response response = await client.PutAsync(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="Put(RequestContent,RequestContext)">
      <example>
This sample shows how to call Put with required request content.
<code><![CDATA[
UnknownValue client = new ArrayClient().GetUnknownValueClient(apiVersion: "1.0.0");

RequestContent content = RequestContent.Create(new List<object>()
{
new Dictionary<string, object>()
});
Response response = client.Put(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
  </members>
</doc>