<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetKnownValueAsync(CancellationToken)">
      <example>
This sample shows how to call GetKnownValueAsync.
<code><![CDATA[
ExtensibleClient client = new ExtensibleClient();

Response<DaysOfWeekExtensibleEnum> response = await client.GetKnownValueAsync();
]]></code></example>
    </member>
    <member name="GetKnownValue(CancellationToken)">
      <example>
This sample shows how to call GetKnownValue.
<code><![CDATA[
ExtensibleClient client = new ExtensibleClient();

Response<DaysOfWeekExtensibleEnum> response = client.GetKnownValue();
]]></code></example>
    </member>
    <member name="GetKnownValueAsync(RequestContext)">
      <example>
This sample shows how to call GetKnownValueAsync with required parameters and parse the result.
<code><![CDATA[
ExtensibleClient client = new ExtensibleClient();

Response response = await client.GetKnownValueAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetKnownValue(RequestContext)">
      <example>
This sample shows how to call GetKnownValue with required parameters and parse the result.
<code><![CDATA[
ExtensibleClient client = new ExtensibleClient();

Response response = client.GetKnownValue(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetUnknownValueAsync(CancellationToken)">
      <example>
This sample shows how to call GetUnknownValueAsync.
<code><![CDATA[
ExtensibleClient client = new ExtensibleClient();

Response<DaysOfWeekExtensibleEnum> response = await client.GetUnknownValueAsync();
]]></code></example>
    </member>
    <member name="GetUnknownValue(CancellationToken)">
      <example>
This sample shows how to call GetUnknownValue.
<code><![CDATA[
ExtensibleClient client = new ExtensibleClient();

Response<DaysOfWeekExtensibleEnum> response = client.GetUnknownValue();
]]></code></example>
    </member>
    <member name="GetUnknownValueAsync(RequestContext)">
      <example>
This sample shows how to call GetUnknownValueAsync with required parameters and parse the result.
<code><![CDATA[
ExtensibleClient client = new ExtensibleClient();

Response response = await client.GetUnknownValueAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetUnknownValue(RequestContext)">
      <example>
This sample shows how to call GetUnknownValue with required parameters and parse the result.
<code><![CDATA[
ExtensibleClient client = new ExtensibleClient();

Response response = client.GetUnknownValue(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="PutKnownValueAsync(DaysOfWeekExtensibleEnum,CancellationToken)">
      <example>
This sample shows how to call PutKnownValueAsync with required parameters.
<code><![CDATA[
ExtensibleClient client = new ExtensibleClient();

Response response = await client.PutKnownValueAsync(DaysOfWeekExtensibleEnum.Monday);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PutKnownValue(DaysOfWeekExtensibleEnum,CancellationToken)">
      <example>
This sample shows how to call PutKnownValue with required parameters.
<code><![CDATA[
ExtensibleClient client = new ExtensibleClient();

Response response = client.PutKnownValue(DaysOfWeekExtensibleEnum.Monday);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PutKnownValueAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutKnownValueAsync with required request content.
<code><![CDATA[
ExtensibleClient client = new ExtensibleClient();

RequestContent content = RequestContent.Create("Monday");
Response response = await client.PutKnownValueAsync(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PutKnownValue(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutKnownValue with required request content.
<code><![CDATA[
ExtensibleClient client = new ExtensibleClient();

RequestContent content = RequestContent.Create("Monday");
Response response = client.PutKnownValue(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PutUnknownValueAsync(DaysOfWeekExtensibleEnum,CancellationToken)">
      <example>
This sample shows how to call PutUnknownValueAsync with required parameters.
<code><![CDATA[
ExtensibleClient client = new ExtensibleClient();

Response response = await client.PutUnknownValueAsync(DaysOfWeekExtensibleEnum.Monday);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PutUnknownValue(DaysOfWeekExtensibleEnum,CancellationToken)">
      <example>
This sample shows how to call PutUnknownValue with required parameters.
<code><![CDATA[
ExtensibleClient client = new ExtensibleClient();

Response response = client.PutUnknownValue(DaysOfWeekExtensibleEnum.Monday);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PutUnknownValueAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutUnknownValueAsync with required request content.
<code><![CDATA[
ExtensibleClient client = new ExtensibleClient();

RequestContent content = RequestContent.Create("Monday");
Response response = await client.PutUnknownValueAsync(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PutUnknownValue(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutUnknownValue with required request content.
<code><![CDATA[
ExtensibleClient client = new ExtensibleClient();

RequestContent content = RequestContent.Create("Monday");
Response response = client.PutUnknownValue(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
  </members>
</doc>