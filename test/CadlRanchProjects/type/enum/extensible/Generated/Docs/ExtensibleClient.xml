<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetKnownValueAsync(global::System.Threading.CancellationToken)">
<example>
This sample shows how to call GetKnownValueAsync.
<code><![CDATA[
var client = new ExtensibleClient();

var result = await client.GetKnownValueAsync();
]]></code>
</example>
    </member>
    <member name="GetKnownValue(global::System.Threading.CancellationToken)">
<example>
This sample shows how to call GetKnownValue.
<code><![CDATA[
var client = new ExtensibleClient();

var result = client.GetKnownValue();
]]></code>
</example>
    </member>
    <member name="GetKnownValueAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetKnownValueAsync with required parameters and parse the result.
<code><![CDATA[
var client = new ExtensibleClient();

Response response = await client.GetKnownValueAsync();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
    <member name="GetKnownValue(global::Azure.RequestContext)">
<example>
This sample shows how to call GetKnownValue with required parameters and parse the result.
<code><![CDATA[
var client = new ExtensibleClient();

Response response = client.GetKnownValue();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
    <member name="GetUnknownValueAsync(global::System.Threading.CancellationToken)">
<example>
This sample shows how to call GetUnknownValueAsync.
<code><![CDATA[
var client = new ExtensibleClient();

var result = await client.GetUnknownValueAsync();
]]></code>
</example>
    </member>
    <member name="GetUnknownValue(global::System.Threading.CancellationToken)">
<example>
This sample shows how to call GetUnknownValue.
<code><![CDATA[
var client = new ExtensibleClient();

var result = client.GetUnknownValue();
]]></code>
</example>
    </member>
    <member name="GetUnknownValueAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetUnknownValueAsync with required parameters and parse the result.
<code><![CDATA[
var client = new ExtensibleClient();

Response response = await client.GetUnknownValueAsync();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
    <member name="GetUnknownValue(global::Azure.RequestContext)">
<example>
This sample shows how to call GetUnknownValue with required parameters and parse the result.
<code><![CDATA[
var client = new ExtensibleClient();

Response response = client.GetUnknownValue();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
    <member name="PutKnownValueAsync(global::_Type._Enum.Extensible.Models.DaysOfWeekExtensibleEnum,global::System.Threading.CancellationToken)">
<example>
This sample shows how to call PutKnownValueAsync with required parameters.
<code><![CDATA[
var client = new ExtensibleClient();

var body = DaysOfWeekExtensibleEnum.Monday;
var result = await client.PutKnownValueAsync(body);
]]></code>
</example>
    </member>
    <member name="PutKnownValue(global::_Type._Enum.Extensible.Models.DaysOfWeekExtensibleEnum,global::System.Threading.CancellationToken)">
<example>
This sample shows how to call PutKnownValue with required parameters.
<code><![CDATA[
var client = new ExtensibleClient();

var body = DaysOfWeekExtensibleEnum.Monday;
var result = client.PutKnownValue(body);
]]></code>
</example>
    </member>
    <member name="PutKnownValueAsync(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutKnownValueAsync with required request content.
<code><![CDATA[
var client = new ExtensibleClient();

var data = "Monday";

Response response = await client.PutKnownValueAsync(RequestContent.Create(data));
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="PutKnownValue(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutKnownValue with required request content.
<code><![CDATA[
var client = new ExtensibleClient();

var data = "Monday";

Response response = client.PutKnownValue(RequestContent.Create(data));
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="PutUnknownValueAsync(global::_Type._Enum.Extensible.Models.DaysOfWeekExtensibleEnum,global::System.Threading.CancellationToken)">
<example>
This sample shows how to call PutUnknownValueAsync with required parameters.
<code><![CDATA[
var client = new ExtensibleClient();

var body = DaysOfWeekExtensibleEnum.Monday;
var result = await client.PutUnknownValueAsync(body);
]]></code>
</example>
    </member>
    <member name="PutUnknownValue(global::_Type._Enum.Extensible.Models.DaysOfWeekExtensibleEnum,global::System.Threading.CancellationToken)">
<example>
This sample shows how to call PutUnknownValue with required parameters.
<code><![CDATA[
var client = new ExtensibleClient();

var body = DaysOfWeekExtensibleEnum.Monday;
var result = client.PutUnknownValue(body);
]]></code>
</example>
    </member>
    <member name="PutUnknownValueAsync(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutUnknownValueAsync with required request content.
<code><![CDATA[
var client = new ExtensibleClient();

var data = "Monday";

Response response = await client.PutUnknownValueAsync(RequestContent.Create(data));
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="PutUnknownValue(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutUnknownValue with required request content.
<code><![CDATA[
var client = new ExtensibleClient();

var data = "Monday";

Response response = client.PutUnknownValue(RequestContent.Create(data));
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
  </members>
</doc>