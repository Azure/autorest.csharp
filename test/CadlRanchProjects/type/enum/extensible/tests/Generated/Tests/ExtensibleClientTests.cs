// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using _Type._Enum.Extensible;
using _Type._Enum.Extensible.Models;

namespace _Type._Enum.Extensible.Tests
{
    public class ExtensibleClientTests : _Type_EnumExtensibleTestBase
    {
        public ExtensibleClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Skipping this test case because this is only for scaffolding the test cases")]
        public async Task GetKnownValue_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ExtensibleClient client = CreateExtensibleClient(endpoint);

            Response response = await client.GetKnownValueAsync(null);
        }

        [Test]
        [Ignore("Skipping this test case because this is only for scaffolding the test cases")]
        public async Task GetKnownValue_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ExtensibleClient client = CreateExtensibleClient(endpoint);

            Response<DaysOfWeekExtensibleEnum> response = await client.GetKnownValueAsync();
        }

        [Test]
        [Ignore("Skipping this test case because this is only for scaffolding the test cases")]
        public async Task GetKnownValue_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ExtensibleClient client = CreateExtensibleClient(endpoint);

            Response response = await client.GetKnownValueAsync(null);
        }

        [Test]
        [Ignore("Skipping this test case because this is only for scaffolding the test cases")]
        public async Task GetKnownValue_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ExtensibleClient client = CreateExtensibleClient(endpoint);

            Response<DaysOfWeekExtensibleEnum> response = await client.GetKnownValueAsync();
        }

        [Test]
        [Ignore("Skipping this test case because this is only for scaffolding the test cases")]
        public async Task GetUnknownValue_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ExtensibleClient client = CreateExtensibleClient(endpoint);

            Response response = await client.GetUnknownValueAsync(null);
        }

        [Test]
        [Ignore("Skipping this test case because this is only for scaffolding the test cases")]
        public async Task GetUnknownValue_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ExtensibleClient client = CreateExtensibleClient(endpoint);

            Response<DaysOfWeekExtensibleEnum> response = await client.GetUnknownValueAsync();
        }

        [Test]
        [Ignore("Skipping this test case because this is only for scaffolding the test cases")]
        public async Task GetUnknownValue_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ExtensibleClient client = CreateExtensibleClient(endpoint);

            Response response = await client.GetUnknownValueAsync(null);
        }

        [Test]
        [Ignore("Skipping this test case because this is only for scaffolding the test cases")]
        public async Task GetUnknownValue_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ExtensibleClient client = CreateExtensibleClient(endpoint);

            Response<DaysOfWeekExtensibleEnum> response = await client.GetUnknownValueAsync();
        }

        [Test]
        [Ignore("Skipping this test case because this is only for scaffolding the test cases")]
        public async Task PutKnownValue_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ExtensibleClient client = CreateExtensibleClient(endpoint);

            RequestContent content = RequestContent.Create("Monday");
            Response response = await client.PutKnownValueAsync(content);
        }

        [Test]
        [Ignore("Skipping this test case because this is only for scaffolding the test cases")]
        public async Task PutKnownValue_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ExtensibleClient client = CreateExtensibleClient(endpoint);

            Response response = await client.PutKnownValueAsync(DaysOfWeekExtensibleEnum.Monday);
        }

        [Test]
        [Ignore("Skipping this test case because this is only for scaffolding the test cases")]
        public async Task PutKnownValue_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ExtensibleClient client = CreateExtensibleClient(endpoint);

            RequestContent content = RequestContent.Create("Monday");
            Response response = await client.PutKnownValueAsync(content);
        }

        [Test]
        [Ignore("Skipping this test case because this is only for scaffolding the test cases")]
        public async Task PutKnownValue_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ExtensibleClient client = CreateExtensibleClient(endpoint);

            Response response = await client.PutKnownValueAsync(DaysOfWeekExtensibleEnum.Monday);
        }

        [Test]
        [Ignore("Skipping this test case because this is only for scaffolding the test cases")]
        public async Task PutUnknownValue_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ExtensibleClient client = CreateExtensibleClient(endpoint);

            RequestContent content = RequestContent.Create("Monday");
            Response response = await client.PutUnknownValueAsync(content);
        }

        [Test]
        [Ignore("Skipping this test case because this is only for scaffolding the test cases")]
        public async Task PutUnknownValue_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ExtensibleClient client = CreateExtensibleClient(endpoint);

            Response response = await client.PutUnknownValueAsync(DaysOfWeekExtensibleEnum.Monday);
        }

        [Test]
        [Ignore("Skipping this test case because this is only for scaffolding the test cases")]
        public async Task PutUnknownValue_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ExtensibleClient client = CreateExtensibleClient(endpoint);

            RequestContent content = RequestContent.Create("Monday");
            Response response = await client.PutUnknownValueAsync(content);
        }

        [Test]
        [Ignore("Skipping this test case because this is only for scaffolding the test cases")]
        public async Task PutUnknownValue_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ExtensibleClient client = CreateExtensibleClient(endpoint);

            Response response = await client.PutUnknownValueAsync(DaysOfWeekExtensibleEnum.Monday);
        }
    }
}
