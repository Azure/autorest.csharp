// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using _Type._Dictionary;
using _Type._Dictionary.Models;

namespace _Type._Dictionary.Tests
{
    public partial class ModelValueTests : _Type_DictionaryTestBase
    {
        public ModelValueTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task ModelValue_GetModelValue_ShortVersion()
        {
            Uri endpoint = null;
            ModelValue client = CreateDictionaryClient(endpoint).GetModelValueClient(apiVersion: "1.0.0");

            Response response = await client.GetModelValueAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task ModelValue_GetModelValue_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            ModelValue client = CreateDictionaryClient(endpoint).GetModelValueClient(apiVersion: "1.0.0");

            Response<IReadOnlyDictionary<string, InnerModel>> response = await client.GetModelValueAsync();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task ModelValue_GetModelValue_AllParameters()
        {
            Uri endpoint = null;
            ModelValue client = CreateDictionaryClient(endpoint).GetModelValueClient(apiVersion: "1.0.0");

            Response response = await client.GetModelValueAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task ModelValue_GetModelValue_AllParameters_Convenience()
        {
            Uri endpoint = null;
            ModelValue client = CreateDictionaryClient(endpoint).GetModelValueClient(apiVersion: "1.0.0");

            Response<IReadOnlyDictionary<string, InnerModel>> response = await client.GetModelValueAsync();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task ModelValue_Put_ShortVersion()
        {
            Uri endpoint = null;
            ModelValue client = CreateDictionaryClient(endpoint).GetModelValueClient(apiVersion: "1.0.0");

            using RequestContent content = RequestContent.Create(new
            {
                key = new
                {
                    property = "<property>",
                },
            });
            Response response = await client.PutAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task ModelValue_Put_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            ModelValue client = CreateDictionaryClient(endpoint).GetModelValueClient(apiVersion: "1.0.0");

            Response response = await client.PutAsync(new Dictionary<string, InnerModel>
            {
                ["key"] = new InnerModel("<property>")
            });
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task ModelValue_Put_AllParameters()
        {
            Uri endpoint = null;
            ModelValue client = CreateDictionaryClient(endpoint).GetModelValueClient(apiVersion: "1.0.0");

            using RequestContent content = RequestContent.Create(new
            {
                key = new
                {
                    property = "<property>",
                    children = new { },
                },
            });
            Response response = await client.PutAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task ModelValue_Put_AllParameters_Convenience()
        {
            Uri endpoint = null;
            ModelValue client = CreateDictionaryClient(endpoint).GetModelValueClient(apiVersion: "1.0.0");

            Response response = await client.PutAsync(new Dictionary<string, InnerModel>
            {
                ["key"] = new InnerModel("<property>")
                {
                    Children =
{
["key"] = default
},
                }
            });
        }
    }
}
