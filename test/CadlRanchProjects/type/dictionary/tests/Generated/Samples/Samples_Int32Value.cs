// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using _Type._Dictionary;

namespace _Type._Dictionary.Samples
{
    public class Samples_Int32Value
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetInt32Value()
        {
            Int32Value client = new DictionaryClient().GetInt32ValueClient("1.0.0");

            Response response = client.GetInt32Value(null);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetInt32Value_Async()
        {
            Int32Value client = new DictionaryClient().GetInt32ValueClient("1.0.0");

            Response response = await client.GetInt32ValueAsync(null);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetInt32Value_Convenience()
        {
            Int32Value client = new DictionaryClient().GetInt32ValueClient("1.0.0");

            Response<IReadOnlyDictionary<string, int>> response = client.GetInt32Value();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetInt32Value_Convenience_Async()
        {
            Int32Value client = new DictionaryClient().GetInt32ValueClient("1.0.0");

            Response<IReadOnlyDictionary<string, int>> response = await client.GetInt32ValueAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetInt32Value_AllParameters()
        {
            Int32Value client = new DictionaryClient().GetInt32ValueClient("1.0.0");

            Response response = client.GetInt32Value(null);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetInt32Value_AllParameters_Async()
        {
            Int32Value client = new DictionaryClient().GetInt32ValueClient("1.0.0");

            Response response = await client.GetInt32ValueAsync(null);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetInt32Value_AllParameters_Convenience()
        {
            Int32Value client = new DictionaryClient().GetInt32ValueClient("1.0.0");

            Response<IReadOnlyDictionary<string, int>> response = client.GetInt32Value();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetInt32Value_AllParameters_Convenience_Async()
        {
            Int32Value client = new DictionaryClient().GetInt32ValueClient("1.0.0");

            Response<IReadOnlyDictionary<string, int>> response = await client.GetInt32ValueAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Put()
        {
            Int32Value client = new DictionaryClient().GetInt32ValueClient("1.0.0");

            RequestContent content = RequestContent.Create(new
            {
                key = 1234,
            });
            Response response = client.Put(content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Put_Async()
        {
            Int32Value client = new DictionaryClient().GetInt32ValueClient("1.0.0");

            RequestContent content = RequestContent.Create(new
            {
                key = 1234,
            });
            Response response = await client.PutAsync(content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Put_Convenience()
        {
            Int32Value client = new DictionaryClient().GetInt32ValueClient("1.0.0");

            Response response = client.Put(new Dictionary<string, int>
            {
                ["key"] = 1234
            });
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Put_Convenience_Async()
        {
            Int32Value client = new DictionaryClient().GetInt32ValueClient("1.0.0");

            Response response = await client.PutAsync(new Dictionary<string, int>
            {
                ["key"] = 1234
            });
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Put_AllParameters()
        {
            Int32Value client = new DictionaryClient().GetInt32ValueClient("1.0.0");

            RequestContent content = RequestContent.Create(new
            {
                key = 1234,
            });
            Response response = client.Put(content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Put_AllParameters_Async()
        {
            Int32Value client = new DictionaryClient().GetInt32ValueClient("1.0.0");

            RequestContent content = RequestContent.Create(new
            {
                key = 1234,
            });
            Response response = await client.PutAsync(content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Put_AllParameters_Convenience()
        {
            Int32Value client = new DictionaryClient().GetInt32ValueClient("1.0.0");

            Response response = client.Put(new Dictionary<string, int>
            {
                ["key"] = 1234
            });
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Put_AllParameters_Convenience_Async()
        {
            Int32Value client = new DictionaryClient().GetInt32ValueClient("1.0.0");

            Response response = await client.PutAsync(new Dictionary<string, int>
            {
                ["key"] = 1234
            });
        }
    }
}
