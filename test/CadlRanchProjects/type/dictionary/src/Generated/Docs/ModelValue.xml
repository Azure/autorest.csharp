<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetModelValueAsync(CancellationToken)">
      <example>
This sample shows how to call GetModelValueAsync.
<code><![CDATA[
ModelValue client = new DictionaryClient().GetModelValueClient(apiVersion: "1.0.0");

Response<IReadOnlyDictionary<string, InnerModel>> response = await client.GetModelValueAsync();
]]></code></example>
    </member>
    <member name="GetModelValue(CancellationToken)">
      <example>
This sample shows how to call GetModelValue.
<code><![CDATA[
ModelValue client = new DictionaryClient().GetModelValueClient(apiVersion: "1.0.0");

Response<IReadOnlyDictionary<string, InnerModel>> response = client.GetModelValue();
]]></code></example>
    </member>
    <member name="GetModelValueAsync(RequestContext)">
      <example>
This sample shows how to call GetModelValueAsync with required parameters and parse the result.
<code><![CDATA[
ModelValue client = new DictionaryClient().GetModelValueClient(apiVersion: "1.0.0");

Response response = await client.GetModelValueAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("<key>").GetProperty("property").ToString());
Console.WriteLine(result.GetProperty("<key>").GetProperty("children").GetProperty("<key>").GetProperty("property").ToString());
]]></code></example>
    </member>
    <member name="GetModelValue(RequestContext)">
      <example>
This sample shows how to call GetModelValue with required parameters and parse the result.
<code><![CDATA[
ModelValue client = new DictionaryClient().GetModelValueClient(apiVersion: "1.0.0");

Response response = client.GetModelValue(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("<key>").GetProperty("property").ToString());
Console.WriteLine(result.GetProperty("<key>").GetProperty("children").GetProperty("<key>").GetProperty("property").ToString());
]]></code></example>
    </member>
    <member name="PutAsync(IDictionary{string,InnerModel},CancellationToken)">
      <example>
This sample shows how to call PutAsync with required parameters.
<code><![CDATA[
ModelValue client = new DictionaryClient().GetModelValueClient(apiVersion: "1.0.0");

Response response = await client.PutAsync(new Dictionary<string, InnerModel>()
{
    ["key"] = new InnerModel("<property>")
    {
        Children =
{
["key"] = null,
},
    },
});
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="Put(IDictionary{string,InnerModel},CancellationToken)">
      <example>
This sample shows how to call Put with required parameters.
<code><![CDATA[
ModelValue client = new DictionaryClient().GetModelValueClient(apiVersion: "1.0.0");

Response response = client.Put(new Dictionary<string, InnerModel>()
{
    ["key"] = new InnerModel("<property>")
    {
        Children =
{
["key"] = null,
},
    },
});
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PutAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutAsync with required request content.
<code><![CDATA[
ModelValue client = new DictionaryClient().GetModelValueClient(apiVersion: "1.0.0");

RequestContent content = RequestContent.Create(new Dictionary<string, object>()
{
    ["key"] = new Dictionary<string, object>()
    {
        ["property"] = "<property>",
        ["children"] = new Dictionary<string, object>()
        {
            ["key"] = null
,
        },
    },
});
Response response = await client.PutAsync(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="Put(RequestContent,RequestContext)">
      <example>
This sample shows how to call Put with required request content.
<code><![CDATA[
ModelValue client = new DictionaryClient().GetModelValueClient(apiVersion: "1.0.0");

RequestContent content = RequestContent.Create(new Dictionary<string, object>()
{
    ["key"] = new Dictionary<string, object>()
    {
        ["property"] = "<property>",
        ["children"] = new Dictionary<string, object>()
        {
            ["key"] = null
,
        },
    },
});
Response response = client.Put(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
  </members>
</doc>