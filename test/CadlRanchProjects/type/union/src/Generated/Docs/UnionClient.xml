<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="SendIntAsync(ModelWithSimpleUnionProperty,CancellationToken)">
    </member>
    <member name="SendInt(ModelWithSimpleUnionProperty,CancellationToken)">
    </member>
    <member name="SendIntAsync(RequestContent,RequestContext)">
<example>
This sample shows how to call SendIntAsync with required request content.
<code><![CDATA[
var client = new UnionClient();

var data = new {
    simpleUnion = new {},
};

Response response = await client.SendIntAsync(RequestContent.Create(data));
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="SendInt(RequestContent,RequestContext)">
<example>
This sample shows how to call SendInt with required request content.
<code><![CDATA[
var client = new UnionClient();

var data = new {
    simpleUnion = new {},
};

Response response = client.SendInt(RequestContent.Create(data));
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="SendIntArrayAsync(ModelWithSimpleUnionProperty,CancellationToken)">
    </member>
    <member name="SendIntArray(ModelWithSimpleUnionProperty,CancellationToken)">
    </member>
    <member name="SendIntArrayAsync(RequestContent,RequestContext)">
<example>
This sample shows how to call SendIntArrayAsync with required request content.
<code><![CDATA[
var client = new UnionClient();

var data = new {
    simpleUnion = new {},
};

Response response = await client.SendIntArrayAsync(RequestContent.Create(data));
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="SendIntArray(RequestContent,RequestContext)">
<example>
This sample shows how to call SendIntArray with required request content.
<code><![CDATA[
var client = new UnionClient();

var data = new {
    simpleUnion = new {},
};

Response response = client.SendIntArray(RequestContent.Create(data));
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="SendFirstNamedUnionValueAsync(ModelWithNamedUnionProperty,CancellationToken)">
    </member>
    <member name="SendFirstNamedUnionValue(ModelWithNamedUnionProperty,CancellationToken)">
    </member>
    <member name="SendFirstNamedUnionValueAsync(RequestContent,RequestContext)">
<example>
This sample shows how to call SendFirstNamedUnionValueAsync with required request content.
<code><![CDATA[
var client = new UnionClient();

var data = new {
    namedUnion = new {},
};

Response response = await client.SendFirstNamedUnionValueAsync(RequestContent.Create(data));
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="SendFirstNamedUnionValue(RequestContent,RequestContext)">
<example>
This sample shows how to call SendFirstNamedUnionValue with required request content.
<code><![CDATA[
var client = new UnionClient();

var data = new {
    namedUnion = new {},
};

Response response = client.SendFirstNamedUnionValue(RequestContent.Create(data));
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="SendSecondNamedUnionValueAsync(ModelWithNamedUnionProperty,CancellationToken)">
    </member>
    <member name="SendSecondNamedUnionValue(ModelWithNamedUnionProperty,CancellationToken)">
    </member>
    <member name="SendSecondNamedUnionValueAsync(RequestContent,RequestContext)">
<example>
This sample shows how to call SendSecondNamedUnionValueAsync with required request content.
<code><![CDATA[
var client = new UnionClient();

var data = new {
    namedUnion = new {},
};

Response response = await client.SendSecondNamedUnionValueAsync(RequestContent.Create(data));
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="SendSecondNamedUnionValue(RequestContent,RequestContext)">
<example>
This sample shows how to call SendSecondNamedUnionValue with required request content.
<code><![CDATA[
var client = new UnionClient();

var data = new {
    namedUnion = new {},
};

Response response = client.SendSecondNamedUnionValue(RequestContent.Create(data));
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="ReceiveStringAsync(CancellationToken)">
    </member>
    <member name="ReceiveString(CancellationToken)">
    </member>
    <member name="ReceiveStringAsync(RequestContext)">
<example>
This sample shows how to call ReceiveStringAsync with required parameters and parse the result.
<code><![CDATA[
var client = new UnionClient();

Response response = await client.ReceiveStringAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("simpleUnion").ToString());
]]></code>
</example>
    </member>
    <member name="ReceiveString(RequestContext)">
<example>
This sample shows how to call ReceiveString with required parameters and parse the result.
<code><![CDATA[
var client = new UnionClient();

Response response = client.ReceiveString(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("simpleUnion").ToString());
]]></code>
</example>
    </member>
    <member name="ReceiveIntArrayAsync(CancellationToken)">
    </member>
    <member name="ReceiveIntArray(CancellationToken)">
    </member>
    <member name="ReceiveIntArrayAsync(RequestContext)">
<example>
This sample shows how to call ReceiveIntArrayAsync with required parameters and parse the result.
<code><![CDATA[
var client = new UnionClient();

Response response = await client.ReceiveIntArrayAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("simpleUnion").ToString());
]]></code>
</example>
    </member>
    <member name="ReceiveIntArray(RequestContext)">
<example>
This sample shows how to call ReceiveIntArray with required parameters and parse the result.
<code><![CDATA[
var client = new UnionClient();

Response response = client.ReceiveIntArray(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("simpleUnion").ToString());
]]></code>
</example>
    </member>
    <member name="ReceiveFirstNamedUnionValueAsync(CancellationToken)">
    </member>
    <member name="ReceiveFirstNamedUnionValue(CancellationToken)">
    </member>
    <member name="ReceiveFirstNamedUnionValueAsync(RequestContext)">
<example>
This sample shows how to call ReceiveFirstNamedUnionValueAsync with required parameters and parse the result.
<code><![CDATA[
var client = new UnionClient();

Response response = await client.ReceiveFirstNamedUnionValueAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("namedUnion").ToString());
]]></code>
</example>
    </member>
    <member name="ReceiveFirstNamedUnionValue(RequestContext)">
<example>
This sample shows how to call ReceiveFirstNamedUnionValue with required parameters and parse the result.
<code><![CDATA[
var client = new UnionClient();

Response response = client.ReceiveFirstNamedUnionValue(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("namedUnion").ToString());
]]></code>
</example>
    </member>
    <member name="ReceiveSecondNamedUnionValueAsync(CancellationToken)">
    </member>
    <member name="ReceiveSecondNamedUnionValue(CancellationToken)">
    </member>
    <member name="ReceiveSecondNamedUnionValueAsync(RequestContext)">
<example>
This sample shows how to call ReceiveSecondNamedUnionValueAsync with required parameters and parse the result.
<code><![CDATA[
var client = new UnionClient();

Response response = await client.ReceiveSecondNamedUnionValueAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("namedUnion").ToString());
]]></code>
</example>
    </member>
    <member name="ReceiveSecondNamedUnionValue(RequestContext)">
<example>
This sample shows how to call ReceiveSecondNamedUnionValue with required parameters and parse the result.
<code><![CDATA[
var client = new UnionClient();

Response response = client.ReceiveSecondNamedUnionValue(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("namedUnion").ToString());
]]></code>
</example>
    </member>
  </members>
</doc>