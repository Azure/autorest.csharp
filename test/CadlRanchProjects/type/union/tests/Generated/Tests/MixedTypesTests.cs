// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using _Type.Union.Models;

namespace _Type.Union.Tests
{
    public partial class MixedTypesTests : _TypeUnionTestBase
    {
        public MixedTypesTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task MixedTypes_GetMixedType_ShortVersion()
        {
            Uri endpoint = null;
            MixedTypes client = CreateUnionClient(endpoint).GetMixedTypesClient();

            Response response = await client.GetMixedTypeAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task MixedTypes_GetMixedType_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            MixedTypes client = CreateUnionClient(endpoint).GetMixedTypesClient();

            Response<GetResponse> response = await client.GetMixedTypeAsync();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task MixedTypes_GetMixedType_AllParameters()
        {
            Uri endpoint = null;
            MixedTypes client = CreateUnionClient(endpoint).GetMixedTypesClient();

            Response response = await client.GetMixedTypeAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task MixedTypes_GetMixedType_AllParameters_Convenience()
        {
            Uri endpoint = null;
            MixedTypes client = CreateUnionClient(endpoint).GetMixedTypesClient();

            Response<GetResponse> response = await client.GetMixedTypeAsync();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task MixedTypes_Send_ShortVersion()
        {
            Uri endpoint = null;
            MixedTypes client = CreateUnionClient(endpoint).GetMixedTypesClient();

            using RequestContent content = RequestContent.Create(new
            {
                prop = new Dictionary<string, object>
                {
                    ["model"] = new
                    {
                        name = "<name>",
                    },
                    ["literal"] = null,
                    ["int"] = null,
                    ["boolean"] = null,
                    ["array"] = new object[]
            {
null
            }
                },
            });
            Response response = await client.SendAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task MixedTypes_Send_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            MixedTypes client = CreateUnionClient(endpoint).GetMixedTypesClient();

            MixedTypesCases prop = new MixedTypesCases(BinaryData.FromObjectAsJson(new
            {
                name = "<name>",
            }), null, null, null, new BinaryData[]
            {
null
            });
            Response response = await client.SendAsync(prop);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task MixedTypes_Send_AllParameters()
        {
            Uri endpoint = null;
            MixedTypes client = CreateUnionClient(endpoint).GetMixedTypesClient();

            using RequestContent content = RequestContent.Create(new
            {
                prop = new Dictionary<string, object>
                {
                    ["model"] = new
                    {
                        name = "<name>",
                    },
                    ["literal"] = null,
                    ["int"] = null,
                    ["boolean"] = null,
                    ["array"] = new object[]
            {
null
            }
                },
            });
            Response response = await client.SendAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task MixedTypes_Send_AllParameters_Convenience()
        {
            Uri endpoint = null;
            MixedTypes client = CreateUnionClient(endpoint).GetMixedTypesClient();

            MixedTypesCases prop = new MixedTypesCases(BinaryData.FromObjectAsJson(new
            {
                name = "<name>",
            }), null, null, null, new BinaryData[]
            {
null
            });
            Response response = await client.SendAsync(prop);
        }
    }
}
