// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using _Type.Property.AdditionalProperties.Models;

namespace _Type.Property.AdditionalProperties.Tests
{
    public partial class SpreadRecordDiscriminatedUnionTests : _TypePropertyAdditionalPropertiesTestBase
    {
        public SpreadRecordDiscriminatedUnionTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task SpreadRecordDiscriminatedUnion_GetSpreadRecordDiscriminatedUnion_ShortVersion()
        {
            Uri endpoint = null;
            SpreadRecordDiscriminatedUnion client = CreateAdditionalPropertiesClient(endpoint).GetSpreadRecordDiscriminatedUnionClient();

            Response response = await client.GetSpreadRecordDiscriminatedUnionAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task SpreadRecordDiscriminatedUnion_GetSpreadRecordDiscriminatedUnion_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            SpreadRecordDiscriminatedUnion client = CreateAdditionalPropertiesClient(endpoint).GetSpreadRecordDiscriminatedUnionClient();

            Response<SpreadRecordForDiscriminatedUnion> response = await client.GetSpreadRecordDiscriminatedUnionAsync();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task SpreadRecordDiscriminatedUnion_GetSpreadRecordDiscriminatedUnion_AllParameters()
        {
            Uri endpoint = null;
            SpreadRecordDiscriminatedUnion client = CreateAdditionalPropertiesClient(endpoint).GetSpreadRecordDiscriminatedUnionClient();

            Response response = await client.GetSpreadRecordDiscriminatedUnionAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task SpreadRecordDiscriminatedUnion_GetSpreadRecordDiscriminatedUnion_AllParameters_Convenience()
        {
            Uri endpoint = null;
            SpreadRecordDiscriminatedUnion client = CreateAdditionalPropertiesClient(endpoint).GetSpreadRecordDiscriminatedUnionClient();

            Response<SpreadRecordForDiscriminatedUnion> response = await client.GetSpreadRecordDiscriminatedUnionAsync();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task SpreadRecordDiscriminatedUnion_Put_ShortVersion()
        {
            Uri endpoint = null;
            SpreadRecordDiscriminatedUnion client = CreateAdditionalPropertiesClient(endpoint).GetSpreadRecordDiscriminatedUnionClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.PutAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task SpreadRecordDiscriminatedUnion_Put_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            SpreadRecordDiscriminatedUnion client = CreateAdditionalPropertiesClient(endpoint).GetSpreadRecordDiscriminatedUnionClient();

            SpreadRecordForDiscriminatedUnion body = new SpreadRecordForDiscriminatedUnion("<name>");
            Response response = await client.PutAsync(body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task SpreadRecordDiscriminatedUnion_Put_AllParameters()
        {
            Uri endpoint = null;
            SpreadRecordDiscriminatedUnion client = CreateAdditionalPropertiesClient(endpoint).GetSpreadRecordDiscriminatedUnionClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.PutAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task SpreadRecordDiscriminatedUnion_Put_AllParameters_Convenience()
        {
            Uri endpoint = null;
            SpreadRecordDiscriminatedUnion client = CreateAdditionalPropertiesClient(endpoint).GetSpreadRecordDiscriminatedUnionClient();

            SpreadRecordForDiscriminatedUnion body = new SpreadRecordForDiscriminatedUnion("<name>");
            Response response = await client.PutAsync(body);
        }
    }
}
