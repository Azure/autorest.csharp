// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using _Type.Property.AdditionalProperties.Models;

namespace _Type.Property.AdditionalProperties.Tests
{
    public partial class SpreadModelArrayTests : _TypePropertyAdditionalPropertiesTestBase
    {
        public SpreadModelArrayTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task SpreadModelArray_GetSpreadModelArray_ShortVersion()
        {
            Uri endpoint = null;
            SpreadModelArray client = CreateAdditionalPropertiesClient(endpoint).GetSpreadModelArrayClient();

            Response response = await client.GetSpreadModelArrayAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task SpreadModelArray_GetSpreadModelArray_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            SpreadModelArray client = CreateAdditionalPropertiesClient(endpoint).GetSpreadModelArrayClient();

            Response<SpreadModelArrayRecord> response = await client.GetSpreadModelArrayAsync();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task SpreadModelArray_GetSpreadModelArray_AllParameters()
        {
            Uri endpoint = null;
            SpreadModelArray client = CreateAdditionalPropertiesClient(endpoint).GetSpreadModelArrayClient();

            Response response = await client.GetSpreadModelArrayAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task SpreadModelArray_GetSpreadModelArray_AllParameters_Convenience()
        {
            Uri endpoint = null;
            SpreadModelArray client = CreateAdditionalPropertiesClient(endpoint).GetSpreadModelArrayClient();

            Response<SpreadModelArrayRecord> response = await client.GetSpreadModelArrayAsync();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task SpreadModelArray_Put_ShortVersion()
        {
            Uri endpoint = null;
            SpreadModelArray client = CreateAdditionalPropertiesClient(endpoint).GetSpreadModelArrayClient();

            using RequestContent content = RequestContent.Create(new
            {
                knownProp = new object[]
            {
new
{
state = "<state>",
}
            },
            });
            Response response = await client.PutAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task SpreadModelArray_Put_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            SpreadModelArray client = CreateAdditionalPropertiesClient(endpoint).GetSpreadModelArrayClient();

            SpreadModelArrayRecord body = new SpreadModelArrayRecord(new ModelForRecord[]
            {
new ModelForRecord("<state>")
            });
            Response response = await client.PutAsync(body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task SpreadModelArray_Put_AllParameters()
        {
            Uri endpoint = null;
            SpreadModelArray client = CreateAdditionalPropertiesClient(endpoint).GetSpreadModelArrayClient();

            using RequestContent content = RequestContent.Create(new
            {
                knownProp = new object[]
            {
new
{
state = "<state>",
}
            },
            });
            Response response = await client.PutAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task SpreadModelArray_Put_AllParameters_Convenience()
        {
            Uri endpoint = null;
            SpreadModelArray client = CreateAdditionalPropertiesClient(endpoint).GetSpreadModelArrayClient();

            SpreadModelArrayRecord body = new SpreadModelArrayRecord(new ModelForRecord[]
            {
new ModelForRecord("<state>")
            });
            Response response = await client.PutAsync(body);
        }
    }
}
