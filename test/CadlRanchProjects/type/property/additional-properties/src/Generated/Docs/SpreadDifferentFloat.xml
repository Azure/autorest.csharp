<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetSpreadDifferentFloatAsync(CancellationToken)">
      <example>
This sample shows how to call GetSpreadDifferentFloatAsync.
<code><![CDATA[
SpreadDifferentFloat client = new AdditionalPropertiesClient().GetSpreadDifferentFloatClient();

Response<IReadOnlyDictionary<string, float>> response = await client.GetSpreadDifferentFloatAsync();
]]></code>
This sample shows how to call GetSpreadDifferentFloatAsync with all parameters.
<code><![CDATA[
SpreadDifferentFloat client = new AdditionalPropertiesClient().GetSpreadDifferentFloatClient();

Response<IReadOnlyDictionary<string, float>> response = await client.GetSpreadDifferentFloatAsync();
]]></code></example>
    </member>
    <member name="GetSpreadDifferentFloat(CancellationToken)">
      <example>
This sample shows how to call GetSpreadDifferentFloat.
<code><![CDATA[
SpreadDifferentFloat client = new AdditionalPropertiesClient().GetSpreadDifferentFloatClient();

Response<IReadOnlyDictionary<string, float>> response = client.GetSpreadDifferentFloat();
]]></code>
This sample shows how to call GetSpreadDifferentFloat with all parameters.
<code><![CDATA[
SpreadDifferentFloat client = new AdditionalPropertiesClient().GetSpreadDifferentFloatClient();

Response<IReadOnlyDictionary<string, float>> response = client.GetSpreadDifferentFloat();
]]></code></example>
    </member>
    <member name="GetSpreadDifferentFloatAsync(RequestContext)">
      <example>
This sample shows how to call GetSpreadDifferentFloatAsync and parse the result.
<code><![CDATA[
SpreadDifferentFloat client = new AdditionalPropertiesClient().GetSpreadDifferentFloatClient();

Response response = await client.GetSpreadDifferentFloatAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("<key>").ToString());
]]></code>
This sample shows how to call GetSpreadDifferentFloatAsync with all parameters and parse the result.
<code><![CDATA[
SpreadDifferentFloat client = new AdditionalPropertiesClient().GetSpreadDifferentFloatClient();

Response response = await client.GetSpreadDifferentFloatAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetSpreadDifferentFloat(RequestContext)">
      <example>
This sample shows how to call GetSpreadDifferentFloat and parse the result.
<code><![CDATA[
SpreadDifferentFloat client = new AdditionalPropertiesClient().GetSpreadDifferentFloatClient();

Response response = client.GetSpreadDifferentFloat(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("<key>").ToString());
]]></code>
This sample shows how to call GetSpreadDifferentFloat with all parameters and parse the result.
<code><![CDATA[
SpreadDifferentFloat client = new AdditionalPropertiesClient().GetSpreadDifferentFloatClient();

Response response = client.GetSpreadDifferentFloat(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="PutAsync(IDictionary{string,float},CancellationToken)">
      <example>
This sample shows how to call PutAsync.
<code><![CDATA[
SpreadDifferentFloat client = new AdditionalPropertiesClient().GetSpreadDifferentFloatClient();

Response response = await client.PutAsync(new Dictionary<string, float>
{
    ["key"] = 123.45F
});
]]></code>
This sample shows how to call PutAsync with all parameters.
<code><![CDATA[
SpreadDifferentFloat client = new AdditionalPropertiesClient().GetSpreadDifferentFloatClient();

Response response = await client.PutAsync(new Dictionary<string, float>
{
    ["key"] = 123.45F
});
]]></code></example>
    </member>
    <member name="Put(IDictionary{string,float},CancellationToken)">
      <example>
This sample shows how to call Put.
<code><![CDATA[
SpreadDifferentFloat client = new AdditionalPropertiesClient().GetSpreadDifferentFloatClient();

Response response = client.Put(new Dictionary<string, float>
{
    ["key"] = 123.45F
});
]]></code>
This sample shows how to call Put with all parameters.
<code><![CDATA[
SpreadDifferentFloat client = new AdditionalPropertiesClient().GetSpreadDifferentFloatClient();

Response response = client.Put(new Dictionary<string, float>
{
    ["key"] = 123.45F
});
]]></code></example>
    </member>
    <member name="PutAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutAsync.
<code><![CDATA[
SpreadDifferentFloat client = new AdditionalPropertiesClient().GetSpreadDifferentFloatClient();

using RequestContent content = RequestContent.Create(new
{
    key = 123.45F,
});
Response response = await client.PutAsync(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call PutAsync with all request content.
<code><![CDATA[
SpreadDifferentFloat client = new AdditionalPropertiesClient().GetSpreadDifferentFloatClient();

using RequestContent content = RequestContent.Create(new
{
    key = 123.45F,
});
Response response = await client.PutAsync(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="Put(RequestContent,RequestContext)">
      <example>
This sample shows how to call Put.
<code><![CDATA[
SpreadDifferentFloat client = new AdditionalPropertiesClient().GetSpreadDifferentFloatClient();

using RequestContent content = RequestContent.Create(new
{
    key = 123.45F,
});
Response response = client.Put(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call Put with all request content.
<code><![CDATA[
SpreadDifferentFloat client = new AdditionalPropertiesClient().GetSpreadDifferentFloatClient();

using RequestContent content = RequestContent.Create(new
{
    key = 123.45F,
});
Response response = client.Put(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
  </members>
</doc>