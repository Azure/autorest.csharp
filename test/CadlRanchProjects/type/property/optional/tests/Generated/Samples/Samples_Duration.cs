// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.IO;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using _Type.Property.Optional.Models;

namespace _Type.Property.Optional.Samples
{
    internal class Samples_Duration
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetAll()
        {
            var client = new OptionalClient().GetDurationClient("1.0.0");

            Response response = client.GetAll(new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetAll_AllParameters()
        {
            var client = new OptionalClient().GetDurationClient("1.0.0");

            Response response = client.GetAll(new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("property").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetAll_Async()
        {
            var client = new OptionalClient().GetDurationClient("1.0.0");

            Response response = await client.GetAllAsync(new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetAll_AllParameters_Async()
        {
            var client = new OptionalClient().GetDurationClient("1.0.0");

            Response response = await client.GetAllAsync(new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("property").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetAll_Convenience_Async()
        {
            var client = new OptionalClient().GetDurationClient("1.0.0");

            var result = await client.GetAllAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetDefault()
        {
            var client = new OptionalClient().GetDurationClient("1.0.0");

            Response response = client.GetDefault(new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetDefault_AllParameters()
        {
            var client = new OptionalClient().GetDurationClient("1.0.0");

            Response response = client.GetDefault(new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("property").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetDefault_Async()
        {
            var client = new OptionalClient().GetDurationClient("1.0.0");

            Response response = await client.GetDefaultAsync(new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetDefault_AllParameters_Async()
        {
            var client = new OptionalClient().GetDurationClient("1.0.0");

            Response response = await client.GetDefaultAsync(new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("property").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetDefault_Convenience_Async()
        {
            var client = new OptionalClient().GetDurationClient("1.0.0");

            var result = await client.GetDefaultAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PutAll()
        {
            var client = new OptionalClient().GetDurationClient("1.0.0");

            var data = new { };

            Response response = client.PutAll(RequestContent.Create(data));
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PutAll_AllParameters()
        {
            var client = new OptionalClient().GetDurationClient("1.0.0");

            var data = new
            {
                property = "PT1H23M45S",
            };

            Response response = client.PutAll(RequestContent.Create(data), new RequestContext());
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PutAll_Async()
        {
            var client = new OptionalClient().GetDurationClient("1.0.0");

            var data = new { };

            Response response = await client.PutAllAsync(RequestContent.Create(data));
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PutAll_AllParameters_Async()
        {
            var client = new OptionalClient().GetDurationClient("1.0.0");

            var data = new
            {
                property = "PT1H23M45S",
            };

            Response response = await client.PutAllAsync(RequestContent.Create(data), new RequestContext());
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PutAll_Convenience_Async()
        {
            var client = new OptionalClient().GetDurationClient("1.0.0");

            var body = new DurationProperty()
            {
                Property = new TimeSpan(1, 2, 3),
            };
            var result = await client.PutAllAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PutDefault()
        {
            var client = new OptionalClient().GetDurationClient("1.0.0");

            var data = new { };

            Response response = client.PutDefault(RequestContent.Create(data));
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PutDefault_AllParameters()
        {
            var client = new OptionalClient().GetDurationClient("1.0.0");

            var data = new
            {
                property = "PT1H23M45S",
            };

            Response response = client.PutDefault(RequestContent.Create(data), new RequestContext());
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PutDefault_Async()
        {
            var client = new OptionalClient().GetDurationClient("1.0.0");

            var data = new { };

            Response response = await client.PutDefaultAsync(RequestContent.Create(data));
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PutDefault_AllParameters_Async()
        {
            var client = new OptionalClient().GetDurationClient("1.0.0");

            var data = new
            {
                property = "PT1H23M45S",
            };

            Response response = await client.PutDefaultAsync(RequestContent.Create(data), new RequestContext());
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PutDefault_Convenience_Async()
        {
            var client = new OptionalClient().GetDurationClient("1.0.0");

            var body = new DurationProperty()
            {
                Property = new TimeSpan(1, 2, 3),
            };
            var result = await client.PutDefaultAsync(body);
        }
    }
}
