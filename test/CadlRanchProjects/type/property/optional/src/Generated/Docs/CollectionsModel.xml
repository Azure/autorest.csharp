<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetAllAsync(global::System.Threading.CancellationToken)">
<example>
This sample shows how to call GetAllAsync.
<code><![CDATA[
var client = new OptionalClient().GetCollectionsModelClient("1.0.0");

var result = await client.GetAllAsync(default);
]]></code>
</example>
    </member>
    <member name="GetAll(global::System.Threading.CancellationToken)">
<example>
This sample shows how to call GetAll.
<code><![CDATA[
var client = new OptionalClient().GetCollectionsModelClient("1.0.0");

var result = client.GetAll(default);
]]></code>
</example>
    </member>
    <member name="GetAllAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetAllAsync with required parameters and parse the result.
<code><![CDATA[
var client = new OptionalClient().GetCollectionsModelClient("1.0.0");

Response response = await client.GetAllAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("property")[0].GetProperty("property").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>CollectionsModelProperty</c>:
<code>{
  property: [
    {
      property: string, # Optional. Property
    }
  ], # Optional. Property
}
</code>

</remarks>
    </member>
    <member name="GetAll(global::Azure.RequestContext)">
<example>
This sample shows how to call GetAll with required parameters and parse the result.
<code><![CDATA[
var client = new OptionalClient().GetCollectionsModelClient("1.0.0");

Response response = client.GetAll(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("property")[0].GetProperty("property").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>CollectionsModelProperty</c>:
<code>{
  property: [
    {
      property: string, # Optional. Property
    }
  ], # Optional. Property
}
</code>

</remarks>
    </member>
    <member name="GetDefaultAsync(global::System.Threading.CancellationToken)">
<example>
This sample shows how to call GetDefaultAsync.
<code><![CDATA[
var client = new OptionalClient().GetCollectionsModelClient("1.0.0");

var result = await client.GetDefaultAsync(default);
]]></code>
</example>
    </member>
    <member name="GetDefault(global::System.Threading.CancellationToken)">
<example>
This sample shows how to call GetDefault.
<code><![CDATA[
var client = new OptionalClient().GetCollectionsModelClient("1.0.0");

var result = client.GetDefault(default);
]]></code>
</example>
    </member>
    <member name="GetDefaultAsync(global::Azure.RequestContext)">
<example>
This sample shows how to call GetDefaultAsync with required parameters and parse the result.
<code><![CDATA[
var client = new OptionalClient().GetCollectionsModelClient("1.0.0");

Response response = await client.GetDefaultAsync(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("property")[0].GetProperty("property").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>CollectionsModelProperty</c>:
<code>{
  property: [
    {
      property: string, # Optional. Property
    }
  ], # Optional. Property
}
</code>

</remarks>
    </member>
    <member name="GetDefault(global::Azure.RequestContext)">
<example>
This sample shows how to call GetDefault with required parameters and parse the result.
<code><![CDATA[
var client = new OptionalClient().GetCollectionsModelClient("1.0.0");

Response response = client.GetDefault(new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("property")[0].GetProperty("property").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>CollectionsModelProperty</c>:
<code>{
  property: [
    {
      property: string, # Optional. Property
    }
  ], # Optional. Property
}
</code>

</remarks>
    </member>
    <member name="PutAllAsync(global::_Type.Property.Optional.Models.CollectionsModelProperty,global::System.Threading.CancellationToken)">
<example>
This sample shows how to call PutAllAsync with required parameters.
<code><![CDATA[
var client = new OptionalClient().GetCollectionsModelClient("1.0.0");

var body = new CollectionsModelProperty()
{
    Property = 
{
        new StringProperty()
{
            Property = "<Property>",
        }
    },
};
var result = await client.PutAllAsync(body, default);
]]></code>
</example>
    </member>
    <member name="PutAll(global::_Type.Property.Optional.Models.CollectionsModelProperty,global::System.Threading.CancellationToken)">
<example>
This sample shows how to call PutAll with required parameters.
<code><![CDATA[
var client = new OptionalClient().GetCollectionsModelClient("1.0.0");

var body = new CollectionsModelProperty()
{
    Property = 
{
        new StringProperty()
{
            Property = "<Property>",
        }
    },
};
var result = client.PutAll(body, default);
]]></code>
</example>
    </member>
    <member name="PutAllAsync(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutAllAsync.
<code><![CDATA[
var client = new OptionalClient().GetCollectionsModelClient("1.0.0");

var data = new {};

Response response = await client.PutAllAsync(RequestContent.Create(data));
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call PutAllAsync with all request content.
<code><![CDATA[
var client = new OptionalClient().GetCollectionsModelClient("1.0.0");

var data = new {
    property = new[] {
        new {
            property = "<property>",
        }
    },
};

Response response = await client.PutAllAsync(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
<remarks>
Below is the JSON schema for the request payload.

Request Body:

Schema for <c>CollectionsModelProperty</c>:
<code>{
  property: [
    {
      property: string, # Optional. Property
    }
  ], # Optional. Property
}
</code>

</remarks>
    </member>
    <member name="PutAll(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutAll.
<code><![CDATA[
var client = new OptionalClient().GetCollectionsModelClient("1.0.0");

var data = new {};

Response response = client.PutAll(RequestContent.Create(data));
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call PutAll with all request content.
<code><![CDATA[
var client = new OptionalClient().GetCollectionsModelClient("1.0.0");

var data = new {
    property = new[] {
        new {
            property = "<property>",
        }
    },
};

Response response = client.PutAll(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
<remarks>
Below is the JSON schema for the request payload.

Request Body:

Schema for <c>CollectionsModelProperty</c>:
<code>{
  property: [
    {
      property: string, # Optional. Property
    }
  ], # Optional. Property
}
</code>

</remarks>
    </member>
    <member name="PutDefaultAsync(global::_Type.Property.Optional.Models.CollectionsModelProperty,global::System.Threading.CancellationToken)">
<example>
This sample shows how to call PutDefaultAsync with required parameters.
<code><![CDATA[
var client = new OptionalClient().GetCollectionsModelClient("1.0.0");

var body = new CollectionsModelProperty()
{
    Property = 
{
        new StringProperty()
{
            Property = "<Property>",
        }
    },
};
var result = await client.PutDefaultAsync(body, default);
]]></code>
</example>
    </member>
    <member name="PutDefault(global::_Type.Property.Optional.Models.CollectionsModelProperty,global::System.Threading.CancellationToken)">
<example>
This sample shows how to call PutDefault with required parameters.
<code><![CDATA[
var client = new OptionalClient().GetCollectionsModelClient("1.0.0");

var body = new CollectionsModelProperty()
{
    Property = 
{
        new StringProperty()
{
            Property = "<Property>",
        }
    },
};
var result = client.PutDefault(body, default);
]]></code>
</example>
    </member>
    <member name="PutDefaultAsync(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutDefaultAsync.
<code><![CDATA[
var client = new OptionalClient().GetCollectionsModelClient("1.0.0");

var data = new {};

Response response = await client.PutDefaultAsync(RequestContent.Create(data));
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call PutDefaultAsync with all request content.
<code><![CDATA[
var client = new OptionalClient().GetCollectionsModelClient("1.0.0");

var data = new {
    property = new[] {
        new {
            property = "<property>",
        }
    },
};

Response response = await client.PutDefaultAsync(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
<remarks>
Below is the JSON schema for the request payload.

Request Body:

Schema for <c>CollectionsModelProperty</c>:
<code>{
  property: [
    {
      property: string, # Optional. Property
    }
  ], # Optional. Property
}
</code>

</remarks>
    </member>
    <member name="PutDefault(global::Azure.Core.RequestContent,global::Azure.RequestContext)">
<example>
This sample shows how to call PutDefault.
<code><![CDATA[
var client = new OptionalClient().GetCollectionsModelClient("1.0.0");

var data = new {};

Response response = client.PutDefault(RequestContent.Create(data));
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call PutDefault with all request content.
<code><![CDATA[
var client = new OptionalClient().GetCollectionsModelClient("1.0.0");

var data = new {
    property = new[] {
        new {
            property = "<property>",
        }
    },
};

Response response = client.PutDefault(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
<remarks>
Below is the JSON schema for the request payload.

Request Body:

Schema for <c>CollectionsModelProperty</c>:
<code>{
  property: [
    {
      property: string, # Optional. Property
    }
  ], # Optional. Property
}
</code>

</remarks>
    </member>
  </members>
</doc>