<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetCollectionsStringAsync(CancellationToken)">
      <example>
This sample shows how to call GetCollectionsStringAsync.
<code><![CDATA[
CollectionsString client = new ValueTypesClient().GetCollectionsStringClient("1.0.0");

Response<CollectionsStringProperty> response = await client.GetCollectionsStringAsync();
]]></code>
This sample shows how to call GetCollectionsStringAsync with all parameters.
<code><![CDATA[
CollectionsString client = new ValueTypesClient().GetCollectionsStringClient("1.0.0");

Response<CollectionsStringProperty> response = await client.GetCollectionsStringAsync();
]]></code></example>
    </member>
    <member name="GetCollectionsString(CancellationToken)">
      <example>
This sample shows how to call GetCollectionsString.
<code><![CDATA[
CollectionsString client = new ValueTypesClient().GetCollectionsStringClient("1.0.0");

Response<CollectionsStringProperty> response = client.GetCollectionsString();
]]></code>
This sample shows how to call GetCollectionsString with all parameters.
<code><![CDATA[
CollectionsString client = new ValueTypesClient().GetCollectionsStringClient("1.0.0");

Response<CollectionsStringProperty> response = client.GetCollectionsString();
]]></code></example>
    </member>
    <member name="GetCollectionsStringAsync(RequestContext)">
      <example>
This sample shows how to call GetCollectionsStringAsync and parse the result.
<code><![CDATA[
CollectionsString client = new ValueTypesClient().GetCollectionsStringClient("1.0.0");

Response response = await client.GetCollectionsStringAsync(null);
]]></code>
This sample shows how to call GetCollectionsStringAsync.
<code><![CDATA[
CollectionsString client = new ValueTypesClient().GetCollectionsStringClient("1.0.0");

Response<CollectionsStringProperty> response = await client.GetCollectionsStringAsync();
]]></code>
This sample shows how to call GetCollectionsStringAsync with all parameters and parse the result.
<code><![CDATA[
CollectionsString client = new ValueTypesClient().GetCollectionsStringClient("1.0.0");

Response response = await client.GetCollectionsStringAsync(null);
]]></code>
This sample shows how to call GetCollectionsStringAsync with all parameters.
<code><![CDATA[
CollectionsString client = new ValueTypesClient().GetCollectionsStringClient("1.0.0");

Response<CollectionsStringProperty> response = await client.GetCollectionsStringAsync();
]]></code></example>
    </member>
    <member name="GetCollectionsString(RequestContext)">
      <example>
This sample shows how to call GetCollectionsString and parse the result.
<code><![CDATA[
CollectionsString client = new ValueTypesClient().GetCollectionsStringClient("1.0.0");

Response response = client.GetCollectionsString(null);
]]></code>
This sample shows how to call GetCollectionsString.
<code><![CDATA[
CollectionsString client = new ValueTypesClient().GetCollectionsStringClient("1.0.0");

Response<CollectionsStringProperty> response = client.GetCollectionsString();
]]></code>
This sample shows how to call GetCollectionsString with all parameters and parse the result.
<code><![CDATA[
CollectionsString client = new ValueTypesClient().GetCollectionsStringClient("1.0.0");

Response response = client.GetCollectionsString(null);
]]></code>
This sample shows how to call GetCollectionsString with all parameters.
<code><![CDATA[
CollectionsString client = new ValueTypesClient().GetCollectionsStringClient("1.0.0");

Response<CollectionsStringProperty> response = client.GetCollectionsString();
]]></code></example>
    </member>
    <member name="PutAsync(CollectionsStringProperty,CancellationToken)">
      <example>
This sample shows how to call PutAsync.
<code><![CDATA[
CollectionsString client = new ValueTypesClient().GetCollectionsStringClient("1.0.0");

CollectionsStringProperty body = new CollectionsStringProperty(new string[] { "<property>" });
Response response = await client.PutAsync(body);
]]></code>
This sample shows how to call PutAsync with all parameters.
<code><![CDATA[
CollectionsString client = new ValueTypesClient().GetCollectionsStringClient("1.0.0");

CollectionsStringProperty body = new CollectionsStringProperty(new string[] { "<property>" });
Response response = await client.PutAsync(body);
]]></code></example>
    </member>
    <member name="Put(CollectionsStringProperty,CancellationToken)">
      <example>
This sample shows how to call Put.
<code><![CDATA[
CollectionsString client = new ValueTypesClient().GetCollectionsStringClient("1.0.0");

CollectionsStringProperty body = new CollectionsStringProperty(new string[] { "<property>" });
Response response = client.Put(body);
]]></code>
This sample shows how to call Put with all parameters.
<code><![CDATA[
CollectionsString client = new ValueTypesClient().GetCollectionsStringClient("1.0.0");

CollectionsStringProperty body = new CollectionsStringProperty(new string[] { "<property>" });
Response response = client.Put(body);
]]></code></example>
    </member>
    <member name="PutAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutAsync.
<code><![CDATA[
CollectionsString client = new ValueTypesClient().GetCollectionsStringClient("1.0.0");

RequestContent content = RequestContent.Create(new
{
    property = new object[]
    {
        "<property>"
    },
});
Response response = await client.PutAsync(content);
]]></code>
This sample shows how to call PutAsync.
<code><![CDATA[
CollectionsString client = new ValueTypesClient().GetCollectionsStringClient("1.0.0");

CollectionsStringProperty body = new CollectionsStringProperty(new string[] { "<property>" });
Response response = await client.PutAsync(body);
]]></code>
This sample shows how to call PutAsync with all request content.
<code><![CDATA[
CollectionsString client = new ValueTypesClient().GetCollectionsStringClient("1.0.0");

RequestContent content = RequestContent.Create(new
{
    property = new object[]
    {
        "<property>"
    },
});
Response response = await client.PutAsync(content);
]]></code>
This sample shows how to call PutAsync with all parameters.
<code><![CDATA[
CollectionsString client = new ValueTypesClient().GetCollectionsStringClient("1.0.0");

CollectionsStringProperty body = new CollectionsStringProperty(new string[] { "<property>" });
Response response = await client.PutAsync(body);
]]></code></example>
    </member>
    <member name="Put(RequestContent,RequestContext)">
      <example>
This sample shows how to call Put.
<code><![CDATA[
CollectionsString client = new ValueTypesClient().GetCollectionsStringClient("1.0.0");

RequestContent content = RequestContent.Create(new
{
    property = new object[]
    {
        "<property>"
    },
});
Response response = client.Put(content);
]]></code>
This sample shows how to call Put.
<code><![CDATA[
CollectionsString client = new ValueTypesClient().GetCollectionsStringClient("1.0.0");

CollectionsStringProperty body = new CollectionsStringProperty(new string[] { "<property>" });
Response response = client.Put(body);
]]></code>
This sample shows how to call Put with all request content.
<code><![CDATA[
CollectionsString client = new ValueTypesClient().GetCollectionsStringClient("1.0.0");

RequestContent content = RequestContent.Create(new
{
    property = new object[]
    {
        "<property>"
    },
});
Response response = client.Put(content);
]]></code>
This sample shows how to call Put with all parameters.
<code><![CDATA[
CollectionsString client = new ValueTypesClient().GetCollectionsStringClient("1.0.0");

CollectionsStringProperty body = new CollectionsStringProperty(new string[] { "<property>" });
Response response = client.Put(body);
]]></code></example>
    </member>
  </members>
</doc>