// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;
using System.Globalization;

namespace _Type.Property.ValueTypes.Models
{
    /// <summary> The UnionFloatLiteralProperty_property. </summary>
    public readonly partial struct UnionFloatLiteralPropertyProperty : IEquatable<UnionFloatLiteralPropertyProperty>
    {
        private readonly float _value;

        /// <summary> Initializes a new instance of <see cref="UnionFloatLiteralPropertyProperty"/>. </summary>
        public UnionFloatLiteralPropertyProperty(float value)
        {
            _value = value;
        }

        private const float _4242Value = 42.42F;
        private const float _4343Value = 43.43F;

        /// <summary> 42.42. </summary>
        public static UnionFloatLiteralPropertyProperty _4242 { get; } = new UnionFloatLiteralPropertyProperty(_4242Value);
        /// <summary> 43.43. </summary>
        public static UnionFloatLiteralPropertyProperty _4343 { get; } = new UnionFloatLiteralPropertyProperty(_4343Value);

        internal float ToSerialSingle() => _value;

        /// <summary> Determines if two <see cref="UnionFloatLiteralPropertyProperty"/> values are the same. </summary>
        public static bool operator ==(UnionFloatLiteralPropertyProperty left, UnionFloatLiteralPropertyProperty right) => left.Equals(right);
        /// <summary> Determines if two <see cref="UnionFloatLiteralPropertyProperty"/> values are not the same. </summary>
        public static bool operator !=(UnionFloatLiteralPropertyProperty left, UnionFloatLiteralPropertyProperty right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="UnionFloatLiteralPropertyProperty"/>. </summary>
        public static implicit operator UnionFloatLiteralPropertyProperty(float value) => new UnionFloatLiteralPropertyProperty(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is UnionFloatLiteralPropertyProperty other && Equals(other);
        /// <inheritdoc />
        public bool Equals(UnionFloatLiteralPropertyProperty other) => Equals(_value, other._value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value.GetHashCode();
        /// <inheritdoc />
        public override string ToString() => _value.ToString(CultureInfo.InvariantCulture);
    }
}
