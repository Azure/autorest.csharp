// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using _Type.Property.ValueTypes;
using _Type.Property.ValueTypes.Models;

namespace _Type.Property.ValueTypes.Tests
{
    public partial class CollectionsStringTests : _TypePropertyValueTypesTestBase
    {
        public CollectionsStringTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CollectionsString_GetCollectionsString_ShortVersion()
        {
            Uri endpoint = null;
            CollectionsString client = CreateValueTypesClient(endpoint).GetCollectionsStringClient(apiVersion: "1.0.0");

            Response response = await client.GetCollectionsStringAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CollectionsString_GetCollectionsString_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            CollectionsString client = CreateValueTypesClient(endpoint).GetCollectionsStringClient(apiVersion: "1.0.0");

            Response<CollectionsStringProperty> response = await client.GetCollectionsStringAsync();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CollectionsString_GetCollectionsString_AllParameters()
        {
            Uri endpoint = null;
            CollectionsString client = CreateValueTypesClient(endpoint).GetCollectionsStringClient(apiVersion: "1.0.0");

            Response response = await client.GetCollectionsStringAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CollectionsString_GetCollectionsString_AllParameters_Convenience()
        {
            Uri endpoint = null;
            CollectionsString client = CreateValueTypesClient(endpoint).GetCollectionsStringClient(apiVersion: "1.0.0");

            Response<CollectionsStringProperty> response = await client.GetCollectionsStringAsync();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CollectionsString_Put_ShortVersion()
        {
            Uri endpoint = null;
            CollectionsString client = CreateValueTypesClient(endpoint).GetCollectionsStringClient(apiVersion: "1.0.0");

            using RequestContent content = RequestContent.Create(new
            {
                property = new object[]
            {
"<property>"
            },
            });
            Response response = await client.PutAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CollectionsString_Put_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            CollectionsString client = CreateValueTypesClient(endpoint).GetCollectionsStringClient(apiVersion: "1.0.0");

            CollectionsStringProperty body = new CollectionsStringProperty(new string[] { "<property>" });
            Response response = await client.PutAsync(body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CollectionsString_Put_AllParameters()
        {
            Uri endpoint = null;
            CollectionsString client = CreateValueTypesClient(endpoint).GetCollectionsStringClient(apiVersion: "1.0.0");

            using RequestContent content = RequestContent.Create(new
            {
                property = new object[]
            {
"<property>"
            },
            });
            Response response = await client.PutAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CollectionsString_Put_AllParameters_Convenience()
        {
            Uri endpoint = null;
            CollectionsString client = CreateValueTypesClient(endpoint).GetCollectionsStringClient(apiVersion: "1.0.0");

            CollectionsStringProperty body = new CollectionsStringProperty(new string[] { "<property>" });
            Response response = await client.PutAsync(body);
        }
    }
}
