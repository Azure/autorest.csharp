// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using _Type.Property.ValueTypes;
using _Type.Property.ValueTypes.Models;

namespace _Type.Property.ValueTypes.Tests
{
    public class UnknownIntTests : _TypePropertyValueTypesTestBase
    {
        public UnknownIntTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Skipping this test case because this is only for scaffolding the test cases")]
        public async Task GetUnknownInt_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            UnknownInt client = CreateValueTypesClient(endpoint).GetUnknownIntClient(apiVersion: "1.0.0");

            Response response = await client.GetUnknownIntAsync(null);
        }

        [Test]
        [Ignore("Skipping this test case because this is only for scaffolding the test cases")]
        public async Task GetUnknownInt_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            UnknownInt client = CreateValueTypesClient(endpoint).GetUnknownIntClient(apiVersion: "1.0.0");

            Response<UnknownIntProperty> response = await client.GetUnknownIntAsync();
        }

        [Test]
        [Ignore("Skipping this test case because this is only for scaffolding the test cases")]
        public async Task GetUnknownInt_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            UnknownInt client = CreateValueTypesClient(endpoint).GetUnknownIntClient(apiVersion: "1.0.0");

            Response response = await client.GetUnknownIntAsync(null);
        }

        [Test]
        [Ignore("Skipping this test case because this is only for scaffolding the test cases")]
        public async Task GetUnknownInt_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            UnknownInt client = CreateValueTypesClient(endpoint).GetUnknownIntClient(apiVersion: "1.0.0");

            Response<UnknownIntProperty> response = await client.GetUnknownIntAsync();
        }

        [Test]
        [Ignore("Skipping this test case because this is only for scaffolding the test cases")]
        public async Task Put_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            UnknownInt client = CreateValueTypesClient(endpoint).GetUnknownIntClient(apiVersion: "1.0.0");

            RequestContent content = RequestContent.Create(new
            {
                property = new object(),
            });
            Response response = await client.PutAsync(content);
        }

        [Test]
        [Ignore("Skipping this test case because this is only for scaffolding the test cases")]
        public async Task Put_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            UnknownInt client = CreateValueTypesClient(endpoint).GetUnknownIntClient(apiVersion: "1.0.0");

            UnknownIntProperty body = new UnknownIntProperty(BinaryData.FromObjectAsJson(new object()));
            Response response = await client.PutAsync(body);
        }

        [Test]
        [Ignore("Skipping this test case because this is only for scaffolding the test cases")]
        public async Task Put_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            UnknownInt client = CreateValueTypesClient(endpoint).GetUnknownIntClient(apiVersion: "1.0.0");

            RequestContent content = RequestContent.Create(new
            {
                property = new object(),
            });
            Response response = await client.PutAsync(content);
        }

        [Test]
        [Ignore("Skipping this test case because this is only for scaffolding the test cases")]
        public async Task Put_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            UnknownInt client = CreateValueTypesClient(endpoint).GetUnknownIntClient(apiVersion: "1.0.0");

            UnknownIntProperty body = new UnknownIntProperty(BinaryData.FromObjectAsJson(new object()));
            Response response = await client.PutAsync(body);
        }
    }
}
