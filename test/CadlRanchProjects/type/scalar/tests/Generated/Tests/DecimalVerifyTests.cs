// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using _Type.Scalar;

namespace _Type.Scalar.Tests
{
    public partial class DecimalVerifyTests : _TypeScalarTestBase
    {
        public DecimalVerifyTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task DecimalVerify_PrepareVerify_ShortVersion()
        {
            Uri endpoint = null;
            DecimalVerify client = CreateScalarClient(endpoint).GetDecimalVerifyClient(apiVersion: "1.0.0");

            Response response = await client.PrepareVerifyAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task DecimalVerify_PrepareVerify_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            DecimalVerify client = CreateScalarClient(endpoint).GetDecimalVerifyClient(apiVersion: "1.0.0");

            Response<IReadOnlyList<decimal>> response = await client.PrepareVerifyAsync();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task DecimalVerify_PrepareVerify_AllParameters()
        {
            Uri endpoint = null;
            DecimalVerify client = CreateScalarClient(endpoint).GetDecimalVerifyClient(apiVersion: "1.0.0");

            Response response = await client.PrepareVerifyAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task DecimalVerify_PrepareVerify_AllParameters_Convenience()
        {
            Uri endpoint = null;
            DecimalVerify client = CreateScalarClient(endpoint).GetDecimalVerifyClient(apiVersion: "1.0.0");

            Response<IReadOnlyList<decimal>> response = await client.PrepareVerifyAsync();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task DecimalVerify_Verify_ShortVersion()
        {
            Uri endpoint = null;
            DecimalVerify client = CreateScalarClient(endpoint).GetDecimalVerifyClient(apiVersion: "1.0.0");

            using RequestContent content = RequestContent.Create(new object());
            Response response = await client.VerifyAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task DecimalVerify_Verify_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            DecimalVerify client = CreateScalarClient(endpoint).GetDecimalVerifyClient(apiVersion: "1.0.0");

            Response response = await client.VerifyAsync((decimal)default);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task DecimalVerify_Verify_AllParameters()
        {
            Uri endpoint = null;
            DecimalVerify client = CreateScalarClient(endpoint).GetDecimalVerifyClient(apiVersion: "1.0.0");

            using RequestContent content = RequestContent.Create(new object());
            Response response = await client.VerifyAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task DecimalVerify_Verify_AllParameters_Convenience()
        {
            Uri endpoint = null;
            DecimalVerify client = CreateScalarClient(endpoint).GetDecimalVerifyClient(apiVersion: "1.0.0");

            Response response = await client.VerifyAsync((decimal)default);
        }
    }
}
