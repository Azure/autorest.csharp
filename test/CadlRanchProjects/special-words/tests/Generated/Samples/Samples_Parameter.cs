// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Threading.Tasks;
using Azure;
using Azure.Identity;
using NUnit.Framework;
using SpecialWords;

namespace SpecialWords.Samples
{
    public class Samples_Parameter
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetWithIf()
        {
            Parameter client = new SpecialWordsClient().GetParameterClient("1.0.0");

            Response response = client.GetWithIf("<if>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetWithIf_Async()
        {
            Parameter client = new SpecialWordsClient().GetParameterClient("1.0.0");

            Response response = await client.GetWithIfAsync("<if>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetWithIf_AllParameters()
        {
            Parameter client = new SpecialWordsClient().GetParameterClient("1.0.0");

            Response response = client.GetWithIf("<if>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetWithIf_AllParameters_Async()
        {
            Parameter client = new SpecialWordsClient().GetParameterClient("1.0.0");

            Response response = await client.GetWithIfAsync("<if>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetWithFilter()
        {
            Parameter client = new SpecialWordsClient().GetParameterClient("1.0.0");

            Response response = client.GetWithFilter("<filter>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetWithFilter_Async()
        {
            Parameter client = new SpecialWordsClient().GetParameterClient("1.0.0");

            Response response = await client.GetWithFilterAsync("<filter>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetWithFilter_AllParameters()
        {
            Parameter client = new SpecialWordsClient().GetParameterClient("1.0.0");

            Response response = client.GetWithFilter("<filter>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetWithFilter_AllParameters_Async()
        {
            Parameter client = new SpecialWordsClient().GetParameterClient("1.0.0");

            Response response = await client.GetWithFilterAsync("<filter>");
        }
    }
}
