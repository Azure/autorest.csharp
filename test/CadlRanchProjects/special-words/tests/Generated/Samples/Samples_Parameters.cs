// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Identity;
using NUnit.Framework;
using SpecialWords;

namespace SpecialWords.Samples
{
    public partial class Samples_Parameters
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithAnd_ShortVersion()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithAnd("<and>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithAnd_ShortVersion_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithAndAsync("<and>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithAnd_AllParameters()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithAnd("<and>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithAnd_AllParameters_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithAndAsync("<and>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithAs_ShortVersion()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithAs("<as>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithAs_ShortVersion_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithAsAsync("<as>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithAs_AllParameters()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithAs("<as>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithAs_AllParameters_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithAsAsync("<as>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithAssert_ShortVersion()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithAssert("<assert>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithAssert_ShortVersion_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithAssertAsync("<assert>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithAssert_AllParameters()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithAssert("<assert>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithAssert_AllParameters_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithAssertAsync("<assert>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithAsync_ShortVersion()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithAsync("<async>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithAsync_ShortVersion_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithAsyncAsync("<async>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithAsync_AllParameters()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithAsync("<async>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithAsync_AllParameters_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithAsyncAsync("<async>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithAwait_ShortVersion()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithAwait("<await>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithAwait_ShortVersion_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithAwaitAsync("<await>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithAwait_AllParameters()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithAwait("<await>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithAwait_AllParameters_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithAwaitAsync("<await>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithBreak_ShortVersion()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithBreak("<break>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithBreak_ShortVersion_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithBreakAsync("<break>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithBreak_AllParameters()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithBreak("<break>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithBreak_AllParameters_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithBreakAsync("<break>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithClass_ShortVersion()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithClass("<class>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithClass_ShortVersion_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithClassAsync("<class>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithClass_AllParameters()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithClass("<class>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithClass_AllParameters_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithClassAsync("<class>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithConstructor_ShortVersion()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithConstructor("<constructor>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithConstructor_ShortVersion_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithConstructorAsync("<constructor>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithConstructor_AllParameters()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithConstructor("<constructor>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithConstructor_AllParameters_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithConstructorAsync("<constructor>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithContinue_ShortVersion()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithContinue("<continue>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithContinue_ShortVersion_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithContinueAsync("<continue>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithContinue_AllParameters()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithContinue("<continue>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithContinue_AllParameters_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithContinueAsync("<continue>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithDef_ShortVersion()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithDef("<def>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithDef_ShortVersion_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithDefAsync("<def>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithDef_AllParameters()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithDef("<def>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithDef_AllParameters_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithDefAsync("<def>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithDel_ShortVersion()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithDel("<del>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithDel_ShortVersion_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithDelAsync("<del>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithDel_AllParameters()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithDel("<del>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithDel_AllParameters_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithDelAsync("<del>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithElif_ShortVersion()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithElif("<elif>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithElif_ShortVersion_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithElifAsync("<elif>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithElif_AllParameters()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithElif("<elif>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithElif_AllParameters_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithElifAsync("<elif>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithElse_ShortVersion()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithElse("<else>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithElse_ShortVersion_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithElseAsync("<else>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithElse_AllParameters()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithElse("<else>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithElse_AllParameters_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithElseAsync("<else>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithExcept_ShortVersion()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithExcept("<except>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithExcept_ShortVersion_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithExceptAsync("<except>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithExcept_AllParameters()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithExcept("<except>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithExcept_AllParameters_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithExceptAsync("<except>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithExec_ShortVersion()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithExec("<exec>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithExec_ShortVersion_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithExecAsync("<exec>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithExec_AllParameters()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithExec("<exec>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithExec_AllParameters_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithExecAsync("<exec>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithFinally_ShortVersion()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithFinally("<finally>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithFinally_ShortVersion_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithFinallyAsync("<finally>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithFinally_AllParameters()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithFinally("<finally>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithFinally_AllParameters_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithFinallyAsync("<finally>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithFor_ShortVersion()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithFor("<for>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithFor_ShortVersion_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithForAsync("<for>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithFor_AllParameters()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithFor("<for>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithFor_AllParameters_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithForAsync("<for>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithFrom_ShortVersion()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithFrom("<from>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithFrom_ShortVersion_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithFromAsync("<from>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithFrom_AllParameters()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithFrom("<from>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithFrom_AllParameters_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithFromAsync("<from>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithGlobal_ShortVersion()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithGlobal("<global>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithGlobal_ShortVersion_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithGlobalAsync("<global>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithGlobal_AllParameters()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithGlobal("<global>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithGlobal_AllParameters_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithGlobalAsync("<global>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithIf_ShortVersion()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithIf("<if>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithIf_ShortVersion_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithIfAsync("<if>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithIf_AllParameters()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithIf("<if>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithIf_AllParameters_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithIfAsync("<if>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithImport_ShortVersion()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithImport("<import>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithImport_ShortVersion_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithImportAsync("<import>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithImport_AllParameters()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithImport("<import>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithImport_AllParameters_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithImportAsync("<import>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithIn_ShortVersion()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithIn("<in>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithIn_ShortVersion_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithInAsync("<in>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithIn_AllParameters()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithIn("<in>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithIn_AllParameters_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithInAsync("<in>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithIs_ShortVersion()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithIs("<is>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithIs_ShortVersion_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithIsAsync("<is>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithIs_AllParameters()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithIs("<is>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithIs_AllParameters_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithIsAsync("<is>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithLambda_ShortVersion()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithLambda("<lambda>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithLambda_ShortVersion_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithLambdaAsync("<lambda>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithLambda_AllParameters()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithLambda("<lambda>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithLambda_AllParameters_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithLambdaAsync("<lambda>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithNot_ShortVersion()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithNot("<not>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithNot_ShortVersion_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithNotAsync("<not>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithNot_AllParameters()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithNot("<not>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithNot_AllParameters_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithNotAsync("<not>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithOr_ShortVersion()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithOr("<or>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithOr_ShortVersion_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithOrAsync("<or>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithOr_AllParameters()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithOr("<or>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithOr_AllParameters_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithOrAsync("<or>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithPass_ShortVersion()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithPass("<pass>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithPass_ShortVersion_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithPassAsync("<pass>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithPass_AllParameters()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithPass("<pass>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithPass_AllParameters_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithPassAsync("<pass>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithRaise_ShortVersion()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithRaise("<raise>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithRaise_ShortVersion_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithRaiseAsync("<raise>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithRaise_AllParameters()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithRaise("<raise>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithRaise_AllParameters_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithRaiseAsync("<raise>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithReturn_ShortVersion()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithReturn("<return>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithReturn_ShortVersion_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithReturnAsync("<return>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithReturn_AllParameters()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithReturn("<return>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithReturn_AllParameters_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithReturnAsync("<return>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithTry_ShortVersion()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithTry("<try>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithTry_ShortVersion_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithTryAsync("<try>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithTry_AllParameters()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithTry("<try>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithTry_AllParameters_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithTryAsync("<try>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithWhile_ShortVersion()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithWhile("<while>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithWhile_ShortVersion_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithWhileAsync("<while>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithWhile_AllParameters()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithWhile("<while>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithWhile_AllParameters_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithWhileAsync("<while>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithWith_ShortVersion()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithWith("<with>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithWith_ShortVersion_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithWithAsync("<with>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithWith_AllParameters()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithWith("<with>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithWith_AllParameters_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithWithAsync("<with>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithYield_ShortVersion()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithYield("<yield>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithYield_ShortVersion_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithYieldAsync("<yield>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithYield_AllParameters()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithYield("<yield>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithYield_AllParameters_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithYieldAsync("<yield>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithCancellationToken_ShortVersion()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithCancellationToken("<cancellationToken>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithCancellationToken_ShortVersion_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithCancellationTokenAsync("<cancellationToken>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_WithCancellationToken_AllParameters()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = client.WithCancellationToken("<cancellationToken>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_WithCancellationToken_AllParameters_Async()
        {
            Parameters client = new SpecialWordsClient().GetParametersClient(apiVersion: "1.0.0");

            Response response = await client.WithCancellationTokenAsync("<cancellationToken>");

            Console.WriteLine(response.Status);
        }
    }
}
