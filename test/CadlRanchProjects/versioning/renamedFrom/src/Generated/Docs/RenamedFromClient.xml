<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="NewOpAsync(string,NewModel,CancellationToken)">
      <example>
This sample shows how to call NewOpAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
RenamedFromClient client = new RenamedFromClient(endpoint, default);

NewModel body = new NewModel("<newProp>", NewEnum.NewEnumMember, BinaryData.FromObjectAsJson("<unionProp>"));
Response<NewModel> response = await client.NewOpAsync("<newQuery>", body);
]]></code>
This sample shows how to call NewOpAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
RenamedFromClient client = new RenamedFromClient(endpoint, default);

NewModel body = new NewModel("<newProp>", NewEnum.NewEnumMember, BinaryData.FromObjectAsJson("<unionProp>"));
Response<NewModel> response = await client.NewOpAsync("<newQuery>", body);
]]></code></example>
    </member>
    <member name="NewOp(string,NewModel,CancellationToken)">
      <example>
This sample shows how to call NewOp.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
RenamedFromClient client = new RenamedFromClient(endpoint, default);

NewModel body = new NewModel("<newProp>", NewEnum.NewEnumMember, BinaryData.FromObjectAsJson("<unionProp>"));
Response<NewModel> response = client.NewOp("<newQuery>", body);
]]></code>
This sample shows how to call NewOp with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
RenamedFromClient client = new RenamedFromClient(endpoint, default);

NewModel body = new NewModel("<newProp>", NewEnum.NewEnumMember, BinaryData.FromObjectAsJson("<unionProp>"));
Response<NewModel> response = client.NewOp("<newQuery>", body);
]]></code></example>
    </member>
    <member name="NewOpAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call NewOpAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
RenamedFromClient client = new RenamedFromClient(endpoint, default);

using RequestContent content = RequestContent.Create(new
{
    newProp = "<newProp>",
    enumProp = "newEnumMember",
    unionProp = "<unionProp>",
});
Response response = await client.NewOpAsync("<newQuery>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("newProp").ToString());
Console.WriteLine(result.GetProperty("enumProp").ToString());
Console.WriteLine(result.GetProperty("unionProp").ToString());
]]></code>
This sample shows how to call NewOpAsync with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
RenamedFromClient client = new RenamedFromClient(endpoint, default);

using RequestContent content = RequestContent.Create(new
{
    newProp = "<newProp>",
    enumProp = "newEnumMember",
    unionProp = "<unionProp>",
});
Response response = await client.NewOpAsync("<newQuery>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("newProp").ToString());
Console.WriteLine(result.GetProperty("enumProp").ToString());
Console.WriteLine(result.GetProperty("unionProp").ToString());
]]></code></example>
    </member>
    <member name="NewOp(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call NewOp and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
RenamedFromClient client = new RenamedFromClient(endpoint, default);

using RequestContent content = RequestContent.Create(new
{
    newProp = "<newProp>",
    enumProp = "newEnumMember",
    unionProp = "<unionProp>",
});
Response response = client.NewOp("<newQuery>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("newProp").ToString());
Console.WriteLine(result.GetProperty("enumProp").ToString());
Console.WriteLine(result.GetProperty("unionProp").ToString());
]]></code>
This sample shows how to call NewOp with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
RenamedFromClient client = new RenamedFromClient(endpoint, default);

using RequestContent content = RequestContent.Create(new
{
    newProp = "<newProp>",
    enumProp = "newEnumMember",
    unionProp = "<unionProp>",
});
Response response = client.NewOp("<newQuery>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("newProp").ToString());
Console.WriteLine(result.GetProperty("enumProp").ToString());
Console.WriteLine(result.GetProperty("unionProp").ToString());
]]></code></example>
    </member>
  </members>
</doc>