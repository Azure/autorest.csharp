// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Versioning.RenamedFrom.Models
{
    /// <summary> The NewModel. </summary>
    public partial class NewModel
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="NewModel"/>. </summary>
        /// <param name="newProp"></param>
        /// <param name="enumProp"></param>
        /// <param name="unionProp"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="newProp"/> or <paramref name="unionProp"/> is null. </exception>
        public NewModel(string newProp, NewEnum enumProp, BinaryData unionProp)
        {
            Argument.AssertNotNull(newProp, nameof(newProp));
            Argument.AssertNotNull(unionProp, nameof(unionProp));

            NewProp = newProp;
            EnumProp = enumProp;
            UnionProp = unionProp;
        }

        /// <summary> Initializes a new instance of <see cref="NewModel"/>. </summary>
        /// <param name="newProp"></param>
        /// <param name="enumProp"></param>
        /// <param name="unionProp"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal NewModel(string newProp, NewEnum enumProp, BinaryData unionProp, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            NewProp = newProp;
            EnumProp = enumProp;
            UnionProp = unionProp;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="NewModel"/> for deserialization. </summary>
        internal NewModel()
        {
        }

        /// <summary> Gets or sets the new prop. </summary>
        public string NewProp { get; set; }
        /// <summary> Gets or sets the enum prop. </summary>
        public NewEnum EnumProp { get; set; }
        /// <summary>
        /// Gets or sets the union prop
        /// <para>
        /// To assign an object to this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// <remarks>
        /// Supported types:
        /// <list type="bullet">
        /// <item>
        /// <description><see cref="string"/></description>
        /// </item>
        /// <item>
        /// <description><see cref="int"/></description>
        /// </item>
        /// </list>
        /// </remarks>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public BinaryData UnionProp { get; set; }
    }
}
