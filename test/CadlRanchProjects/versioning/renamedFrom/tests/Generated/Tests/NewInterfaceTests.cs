// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using Versioning.RenamedFrom.Models;

namespace Versioning.RenamedFrom.Tests
{
    public partial class NewInterfaceTests : VersioningRenamedFromTestBase
    {
        public NewInterfaceTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task NewInterface_NewOpInNewInterface_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            NewInterface client = CreateRenamedFromClient(endpoint, default).GetNewInterfaceClient();

            using RequestContent content = RequestContent.Create(new
            {
                newProp = "<newProp>",
                enumProp = "newEnumMember",
                unionProp = "<unionProp>",
            });
            Response response = await client.NewOpInNewInterfaceAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task NewInterface_NewOpInNewInterface_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            NewInterface client = CreateRenamedFromClient(endpoint, default).GetNewInterfaceClient();

            NewModel body = new NewModel("<newProp>", NewEnum.NewEnumMember, BinaryData.FromObjectAsJson("<unionProp>"));
            Response<NewModel> response = await client.NewOpInNewInterfaceAsync(body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task NewInterface_NewOpInNewInterface_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            NewInterface client = CreateRenamedFromClient(endpoint, default).GetNewInterfaceClient();

            using RequestContent content = RequestContent.Create(new
            {
                newProp = "<newProp>",
                enumProp = "newEnumMember",
                unionProp = "<unionProp>",
            });
            Response response = await client.NewOpInNewInterfaceAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task NewInterface_NewOpInNewInterface_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            NewInterface client = CreateRenamedFromClient(endpoint, default).GetNewInterfaceClient();

            NewModel body = new NewModel("<newProp>", NewEnum.NewEnumMember, BinaryData.FromObjectAsJson("<unionProp>"));
            Response<NewModel> response = await client.NewOpInNewInterfaceAsync(body);
        }
    }
}
