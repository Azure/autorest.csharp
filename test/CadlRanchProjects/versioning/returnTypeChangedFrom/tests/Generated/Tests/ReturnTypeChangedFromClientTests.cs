// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using Versioning.ReturnTypeChangedFrom.Models;

namespace Versioning.ReturnTypeChangedFrom.Tests
{
    public partial class ReturnTypeChangedFromClientTests : VersioningReturnTypeChangedFromTestBase
    {
        public ReturnTypeChangedFromClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task ReturnTypeChangedFrom_Test_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            ReturnTypeChangedFromClient client = CreateReturnTypeChangedFromClient(endpoint, default);

            using RequestContent content = RequestContent.Create("<body>");
            Response response = await client.TestAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task ReturnTypeChangedFrom_Test_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            ReturnTypeChangedFromClient client = CreateReturnTypeChangedFromClient(endpoint, default);

            Response<string> response = await client.TestAsync("<body>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task ReturnTypeChangedFrom_Test_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            ReturnTypeChangedFromClient client = CreateReturnTypeChangedFromClient(endpoint, default);

            using RequestContent content = RequestContent.Create("<body>");
            Response response = await client.TestAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task ReturnTypeChangedFrom_Test_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            ReturnTypeChangedFromClient client = CreateReturnTypeChangedFromClient(endpoint, default);

            Response<string> response = await client.TestAsync("<body>");
        }
    }
}
