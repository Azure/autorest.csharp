// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using Versioning.Added.Models;

namespace Versioning.Added.Samples
{
    public partial class Samples_InterfaceV2
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_InterfaceV2_V2InInterface_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            InterfaceV2 client = new AddedClient(endpoint, default).GetInterfaceV2Client();

            using RequestContent content = RequestContent.Create(new
            {
                prop = "<prop>",
                enumProp = "enumMember",
                unionProp = "<unionProp>",
            });
            Response response = client.V2InInterface(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("prop").ToString());
            Console.WriteLine(result.GetProperty("enumProp").ToString());
            Console.WriteLine(result.GetProperty("unionProp").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_InterfaceV2_V2InInterface_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            InterfaceV2 client = new AddedClient(endpoint, default).GetInterfaceV2Client();

            using RequestContent content = RequestContent.Create(new
            {
                prop = "<prop>",
                enumProp = "enumMember",
                unionProp = "<unionProp>",
            });
            Response response = await client.V2InInterfaceAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("prop").ToString());
            Console.WriteLine(result.GetProperty("enumProp").ToString());
            Console.WriteLine(result.GetProperty("unionProp").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_InterfaceV2_V2InInterface_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            InterfaceV2 client = new AddedClient(endpoint, default).GetInterfaceV2Client();

            ModelV2 body = new ModelV2("<prop>", EnumV2.EnumMember, BinaryData.FromObjectAsJson("<unionProp>"));
            Response<ModelV2> response = client.V2InInterface(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_InterfaceV2_V2InInterface_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            InterfaceV2 client = new AddedClient(endpoint, default).GetInterfaceV2Client();

            ModelV2 body = new ModelV2("<prop>", EnumV2.EnumMember, BinaryData.FromObjectAsJson("<unionProp>"));
            Response<ModelV2> response = await client.V2InInterfaceAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_InterfaceV2_V2InInterface_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            InterfaceV2 client = new AddedClient(endpoint, default).GetInterfaceV2Client();

            using RequestContent content = RequestContent.Create(new
            {
                prop = "<prop>",
                enumProp = "enumMember",
                unionProp = "<unionProp>",
            });
            Response response = client.V2InInterface(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("prop").ToString());
            Console.WriteLine(result.GetProperty("enumProp").ToString());
            Console.WriteLine(result.GetProperty("unionProp").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_InterfaceV2_V2InInterface_AllParameters_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            InterfaceV2 client = new AddedClient(endpoint, default).GetInterfaceV2Client();

            using RequestContent content = RequestContent.Create(new
            {
                prop = "<prop>",
                enumProp = "enumMember",
                unionProp = "<unionProp>",
            });
            Response response = await client.V2InInterfaceAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("prop").ToString());
            Console.WriteLine(result.GetProperty("enumProp").ToString());
            Console.WriteLine(result.GetProperty("unionProp").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_InterfaceV2_V2InInterface_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            InterfaceV2 client = new AddedClient(endpoint, default).GetInterfaceV2Client();

            ModelV2 body = new ModelV2("<prop>", EnumV2.EnumMember, BinaryData.FromObjectAsJson("<unionProp>"));
            Response<ModelV2> response = client.V2InInterface(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_InterfaceV2_V2InInterface_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            InterfaceV2 client = new AddedClient(endpoint, default).GetInterfaceV2Client();

            ModelV2 body = new ModelV2("<prop>", EnumV2.EnumMember, BinaryData.FromObjectAsJson("<unionProp>"));
            Response<ModelV2> response = await client.V2InInterfaceAsync(body);
        }
    }
}
