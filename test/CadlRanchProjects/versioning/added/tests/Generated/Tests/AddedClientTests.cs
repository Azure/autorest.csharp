// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using Versioning.Added.Models;

namespace Versioning.Added.Tests
{
    public partial class AddedClientTests : VersioningAddedTestBase
    {
        public AddedClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Added_V1_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            AddedClient client = CreateAddedClient(endpoint, default);

            using RequestContent content = RequestContent.Create(new
            {
                prop = "<prop>",
                enumProp = "enumMemberV1",
                unionProp = "<unionProp>",
            });
            Response response = await client.V1Async("<headerV2>", content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Added_V1_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            AddedClient client = CreateAddedClient(endpoint, default);

            ModelV1 body = new ModelV1("<prop>", EnumV1.EnumMemberV1, BinaryData.FromObjectAsJson("<unionProp>"));
            Response<ModelV1> response = await client.V1Async("<headerV2>", body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Added_V1_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            AddedClient client = CreateAddedClient(endpoint, default);

            using RequestContent content = RequestContent.Create(new
            {
                prop = "<prop>",
                enumProp = "enumMemberV1",
                unionProp = "<unionProp>",
            });
            Response response = await client.V1Async("<headerV2>", content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Added_V1_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            AddedClient client = CreateAddedClient(endpoint, default);

            ModelV1 body = new ModelV1("<prop>", EnumV1.EnumMemberV1, BinaryData.FromObjectAsJson("<unionProp>"));
            Response<ModelV1> response = await client.V1Async("<headerV2>", body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Added_V2_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            AddedClient client = CreateAddedClient(endpoint, default);

            using RequestContent content = RequestContent.Create(new
            {
                prop = "<prop>",
                enumProp = "enumMember",
                unionProp = "<unionProp>",
            });
            Response response = await client.V2Async(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Added_V2_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            AddedClient client = CreateAddedClient(endpoint, default);

            ModelV2 body = new ModelV2("<prop>", EnumV2.EnumMember, BinaryData.FromObjectAsJson("<unionProp>"));
            Response<ModelV2> response = await client.V2Async(body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Added_V2_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            AddedClient client = CreateAddedClient(endpoint, default);

            using RequestContent content = RequestContent.Create(new
            {
                prop = "<prop>",
                enumProp = "enumMember",
                unionProp = "<unionProp>",
            });
            Response response = await client.V2Async(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Added_V2_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            AddedClient client = CreateAddedClient(endpoint, default);

            ModelV2 body = new ModelV2("<prop>", EnumV2.EnumMember, BinaryData.FromObjectAsJson("<unionProp>"));
            Response<ModelV2> response = await client.V2Async(body);
        }
    }
}
