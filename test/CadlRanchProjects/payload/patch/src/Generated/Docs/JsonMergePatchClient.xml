<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="CreateResourceAsync(Resource,CancellationToken)">
      <example>
This sample shows how to call CreateResourceAsync.
<code><![CDATA[
JsonMergePatchClient client = new JsonMergePatchClient();

Resource body = new Resource("<name>");
Response<Resource> response = await client.CreateResourceAsync(body);
]]></code>
This sample shows how to call CreateResourceAsync with all parameters.
<code><![CDATA[
JsonMergePatchClient client = new JsonMergePatchClient();

Resource body = new Resource("<name>")
{
    Description = "<description>",
    Map =
    {
        ["key"] = new InnerModel("<name>")
        {
            Description = "<description>",
        }
    },
    Array = { default },
    InnerModel = default,
    IntArray = { 1234 },
};
Response<Resource> response = await client.CreateResourceAsync(body);
]]></code></example>
    </member>
    <member name="CreateResource(Resource,CancellationToken)">
      <example>
This sample shows how to call CreateResource.
<code><![CDATA[
JsonMergePatchClient client = new JsonMergePatchClient();

Resource body = new Resource("<name>");
Response<Resource> response = client.CreateResource(body);
]]></code>
This sample shows how to call CreateResource with all parameters.
<code><![CDATA[
JsonMergePatchClient client = new JsonMergePatchClient();

Resource body = new Resource("<name>")
{
    Description = "<description>",
    Map =
    {
        ["key"] = new InnerModel("<name>")
        {
            Description = "<description>",
        }
    },
    Array = { default },
    InnerModel = default,
    IntArray = { 1234 },
};
Response<Resource> response = client.CreateResource(body);
]]></code></example>
    </member>
    <member name="CreateResourceAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateResourceAsync and parse the result.
<code><![CDATA[
JsonMergePatchClient client = new JsonMergePatchClient();

using RequestContent content = RequestContent.Create(new
{
    name = "<name>",
});
Response response = await client.CreateResourceAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call CreateResourceAsync with all request content and parse the result.
<code><![CDATA[
JsonMergePatchClient client = new JsonMergePatchClient();

using RequestContent content = RequestContent.Create(new
{
    name = "<name>",
    description = "<description>",
    map = new
    {
        key = new
        {
            name = "<name>",
            description = "<description>",
        },
    },
    array = new object[]
    {
        null
    },
    intArray = new object[]
    {
        1234
    },
});
Response response = await client.CreateResourceAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("map").GetProperty("<key>").GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("map").GetProperty("<key>").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("array")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("array")[0].GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("innerModel").GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("innerModel").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("intArray")[0].ToString());
]]></code></example>
    </member>
    <member name="CreateResource(RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateResource and parse the result.
<code><![CDATA[
JsonMergePatchClient client = new JsonMergePatchClient();

using RequestContent content = RequestContent.Create(new
{
    name = "<name>",
});
Response response = client.CreateResource(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call CreateResource with all request content and parse the result.
<code><![CDATA[
JsonMergePatchClient client = new JsonMergePatchClient();

using RequestContent content = RequestContent.Create(new
{
    name = "<name>",
    description = "<description>",
    map = new
    {
        key = new
        {
            name = "<name>",
            description = "<description>",
        },
    },
    array = new object[]
    {
        null
    },
    intArray = new object[]
    {
        1234
    },
});
Response response = client.CreateResource(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("map").GetProperty("<key>").GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("map").GetProperty("<key>").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("array")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("array")[0].GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("innerModel").GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("innerModel").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("intArray")[0].ToString());
]]></code></example>
    </member>
    <member name="UpdateResourceAsync(ResourcePatch,CancellationToken)">
      <example>
This sample shows how to call UpdateResourceAsync.
<code><![CDATA[
JsonMergePatchClient client = new JsonMergePatchClient();

ResourcePatch body = new ResourcePatch();
Response<Resource> response = await client.UpdateResourceAsync(body);
]]></code>
This sample shows how to call UpdateResourceAsync with all parameters.
<code><![CDATA[
JsonMergePatchClient client = new JsonMergePatchClient();

ResourcePatch body = new ResourcePatch
{
    Description = "<description>",
    Map =
    {
        ["key"] = new InnerModel("<name>")
        {
            Description = "<description>",
        }
    },
    Array = { default },
    NestedModel = new NestedModel("<name>")
    {
        Description = "<description>",
        InnerModel = default,
    },
    IntArray = { 1234 },
};
Response<Resource> response = await client.UpdateResourceAsync(body);
]]></code></example>
    </member>
    <member name="UpdateResource(ResourcePatch,CancellationToken)">
      <example>
This sample shows how to call UpdateResource.
<code><![CDATA[
JsonMergePatchClient client = new JsonMergePatchClient();

ResourcePatch body = new ResourcePatch();
Response<Resource> response = client.UpdateResource(body);
]]></code>
This sample shows how to call UpdateResource with all parameters.
<code><![CDATA[
JsonMergePatchClient client = new JsonMergePatchClient();

ResourcePatch body = new ResourcePatch
{
    Description = "<description>",
    Map =
    {
        ["key"] = new InnerModel("<name>")
        {
            Description = "<description>",
        }
    },
    Array = { default },
    NestedModel = new NestedModel("<name>")
    {
        Description = "<description>",
        InnerModel = default,
    },
    IntArray = { 1234 },
};
Response<Resource> response = client.UpdateResource(body);
]]></code></example>
    </member>
    <member name="UpdateResourceAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call UpdateResourceAsync and parse the result.
<code><![CDATA[
JsonMergePatchClient client = new JsonMergePatchClient();

using RequestContent content = RequestContent.Create(new object());
Response response = await client.UpdateResourceAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call UpdateResourceAsync with all request content and parse the result.
<code><![CDATA[
JsonMergePatchClient client = new JsonMergePatchClient();

using RequestContent content = RequestContent.Create(new
{
    description = "<description>",
    map = new
    {
        key = new
        {
            name = "<name>",
            description = "<description>",
        },
    },
    array = new object[]
    {
        null
    },
    nestedModel = new
    {
        name = "<name>",
        description = "<description>",
    },
    intArray = new object[]
    {
        1234
    },
});
Response response = await client.UpdateResourceAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("map").GetProperty("<key>").GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("map").GetProperty("<key>").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("array")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("array")[0].GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("innerModel").GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("innerModel").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("intArray")[0].ToString());
]]></code></example>
    </member>
    <member name="UpdateResource(RequestContent,RequestContext)">
      <example>
This sample shows how to call UpdateResource and parse the result.
<code><![CDATA[
JsonMergePatchClient client = new JsonMergePatchClient();

using RequestContent content = RequestContent.Create(new object());
Response response = client.UpdateResource(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call UpdateResource with all request content and parse the result.
<code><![CDATA[
JsonMergePatchClient client = new JsonMergePatchClient();

using RequestContent content = RequestContent.Create(new
{
    description = "<description>",
    map = new
    {
        key = new
        {
            name = "<name>",
            description = "<description>",
        },
    },
    array = new object[]
    {
        null
    },
    nestedModel = new
    {
        name = "<name>",
        description = "<description>",
    },
    intArray = new object[]
    {
        1234
    },
});
Response response = client.UpdateResource(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("map").GetProperty("<key>").GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("map").GetProperty("<key>").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("array")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("array")[0].GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("innerModel").GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("innerModel").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("intArray")[0].ToString());
]]></code></example>
    </member>
    <member name="CreateOptionalResourceAsync(Resource,CancellationToken)">
      <example>
This sample shows how to call CreateOptionalResourceAsync.
<code><![CDATA[
JsonMergePatchClient client = new JsonMergePatchClient();

Response<Resource> response = await client.CreateOptionalResourceAsync();
]]></code>
This sample shows how to call CreateOptionalResourceAsync with all parameters.
<code><![CDATA[
JsonMergePatchClient client = new JsonMergePatchClient();

Resource body = new Resource("<name>")
{
    Description = "<description>",
    Map =
    {
        ["key"] = new InnerModel("<name>")
        {
            Description = "<description>",
        }
    },
    Array = { default },
    InnerModel = default,
    IntArray = { 1234 },
};
Response<Resource> response = await client.CreateOptionalResourceAsync(body: body);
]]></code></example>
    </member>
    <member name="CreateOptionalResource(Resource,CancellationToken)">
      <example>
This sample shows how to call CreateOptionalResource.
<code><![CDATA[
JsonMergePatchClient client = new JsonMergePatchClient();

Response<Resource> response = client.CreateOptionalResource();
]]></code>
This sample shows how to call CreateOptionalResource with all parameters.
<code><![CDATA[
JsonMergePatchClient client = new JsonMergePatchClient();

Resource body = new Resource("<name>")
{
    Description = "<description>",
    Map =
    {
        ["key"] = new InnerModel("<name>")
        {
            Description = "<description>",
        }
    },
    Array = { default },
    InnerModel = default,
    IntArray = { 1234 },
};
Response<Resource> response = client.CreateOptionalResource(body: body);
]]></code></example>
    </member>
    <member name="CreateOptionalResourceAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOptionalResourceAsync and parse the result.
<code><![CDATA[
JsonMergePatchClient client = new JsonMergePatchClient();

using RequestContent content = null;
Response response = await client.CreateOptionalResourceAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call CreateOptionalResourceAsync with all request content and parse the result.
<code><![CDATA[
JsonMergePatchClient client = new JsonMergePatchClient();

using RequestContent content = RequestContent.Create(new
{
    name = "<name>",
    description = "<description>",
    map = new
    {
        key = new
        {
            name = "<name>",
            description = "<description>",
        },
    },
    array = new object[]
    {
        null
    },
    intArray = new object[]
    {
        1234
    },
});
Response response = await client.CreateOptionalResourceAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("map").GetProperty("<key>").GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("map").GetProperty("<key>").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("array")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("array")[0].GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("innerModel").GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("innerModel").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("intArray")[0].ToString());
]]></code></example>
    </member>
    <member name="CreateOptionalResource(RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOptionalResource and parse the result.
<code><![CDATA[
JsonMergePatchClient client = new JsonMergePatchClient();

using RequestContent content = null;
Response response = client.CreateOptionalResource(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call CreateOptionalResource with all request content and parse the result.
<code><![CDATA[
JsonMergePatchClient client = new JsonMergePatchClient();

using RequestContent content = RequestContent.Create(new
{
    name = "<name>",
    description = "<description>",
    map = new
    {
        key = new
        {
            name = "<name>",
            description = "<description>",
        },
    },
    array = new object[]
    {
        null
    },
    intArray = new object[]
    {
        1234
    },
});
Response response = client.CreateOptionalResource(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("map").GetProperty("<key>").GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("map").GetProperty("<key>").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("array")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("array")[0].GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("innerModel").GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("innerModel").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("intArray")[0].ToString());
]]></code></example>
    </member>
    <member name="UpdateOptionalResourceAsync(ResourcePatch,CancellationToken)">
      <example>
This sample shows how to call UpdateOptionalResourceAsync.
<code><![CDATA[
JsonMergePatchClient client = new JsonMergePatchClient();

Response<Resource> response = await client.UpdateOptionalResourceAsync();
]]></code>
This sample shows how to call UpdateOptionalResourceAsync with all parameters.
<code><![CDATA[
JsonMergePatchClient client = new JsonMergePatchClient();

ResourcePatch body = new ResourcePatch
{
    Description = "<description>",
    Map =
    {
        ["key"] = new InnerModel("<name>")
        {
            Description = "<description>",
        }
    },
    Array = { default },
    NestedModel = new NestedModel("<name>")
    {
        Description = "<description>",
        InnerModel = default,
    },
    IntArray = { 1234 },
};
Response<Resource> response = await client.UpdateOptionalResourceAsync(body: body);
]]></code></example>
    </member>
    <member name="UpdateOptionalResource(ResourcePatch,CancellationToken)">
      <example>
This sample shows how to call UpdateOptionalResource.
<code><![CDATA[
JsonMergePatchClient client = new JsonMergePatchClient();

Response<Resource> response = client.UpdateOptionalResource();
]]></code>
This sample shows how to call UpdateOptionalResource with all parameters.
<code><![CDATA[
JsonMergePatchClient client = new JsonMergePatchClient();

ResourcePatch body = new ResourcePatch
{
    Description = "<description>",
    Map =
    {
        ["key"] = new InnerModel("<name>")
        {
            Description = "<description>",
        }
    },
    Array = { default },
    NestedModel = new NestedModel("<name>")
    {
        Description = "<description>",
        InnerModel = default,
    },
    IntArray = { 1234 },
};
Response<Resource> response = client.UpdateOptionalResource(body: body);
]]></code></example>
    </member>
    <member name="UpdateOptionalResourceAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call UpdateOptionalResourceAsync and parse the result.
<code><![CDATA[
JsonMergePatchClient client = new JsonMergePatchClient();

using RequestContent content = null;
Response response = await client.UpdateOptionalResourceAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call UpdateOptionalResourceAsync with all request content and parse the result.
<code><![CDATA[
JsonMergePatchClient client = new JsonMergePatchClient();

using RequestContent content = RequestContent.Create(new
{
    description = "<description>",
    map = new
    {
        key = new
        {
            name = "<name>",
            description = "<description>",
        },
    },
    array = new object[]
    {
        null
    },
    nestedModel = new
    {
        name = "<name>",
        description = "<description>",
    },
    intArray = new object[]
    {
        1234
    },
});
Response response = await client.UpdateOptionalResourceAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("map").GetProperty("<key>").GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("map").GetProperty("<key>").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("array")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("array")[0].GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("innerModel").GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("innerModel").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("intArray")[0].ToString());
]]></code></example>
    </member>
    <member name="UpdateOptionalResource(RequestContent,RequestContext)">
      <example>
This sample shows how to call UpdateOptionalResource and parse the result.
<code><![CDATA[
JsonMergePatchClient client = new JsonMergePatchClient();

using RequestContent content = null;
Response response = client.UpdateOptionalResource(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call UpdateOptionalResource with all request content and parse the result.
<code><![CDATA[
JsonMergePatchClient client = new JsonMergePatchClient();

using RequestContent content = RequestContent.Create(new
{
    description = "<description>",
    map = new
    {
        key = new
        {
            name = "<name>",
            description = "<description>",
        },
    },
    array = new object[]
    {
        null
    },
    nestedModel = new
    {
        name = "<name>",
        description = "<description>",
    },
    intArray = new object[]
    {
        1234
    },
});
Response response = client.UpdateOptionalResource(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("map").GetProperty("<key>").GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("map").GetProperty("<key>").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("array")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("array")[0].GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("innerModel").GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("innerModel").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("intArray")[0].ToString());
]]></code></example>
    </member>
  </members>
</doc>