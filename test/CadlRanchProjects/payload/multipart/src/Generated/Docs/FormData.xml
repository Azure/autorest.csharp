<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="BasicAsync(MultiPartRequest,CancellationToken)">
      <example>
This sample shows how to call BasicAsync.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

MultiPartRequest body = new MultiPartRequest("<id>", null);
Response response = await client.BasicAsync(body);
]]></code>
This sample shows how to call BasicAsync with all parameters.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

MultiPartRequest body = new MultiPartRequest("<id>", null);
Response response = await client.BasicAsync(body);
]]></code></example>
    </member>
    <member name="Basic(MultiPartRequest,CancellationToken)">
      <example>
This sample shows how to call Basic.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

MultiPartRequest body = new MultiPartRequest("<id>", null);
Response response = client.Basic(body);
]]></code>
This sample shows how to call Basic with all parameters.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

MultiPartRequest body = new MultiPartRequest("<id>", null);
Response response = client.Basic(body);
]]></code></example>
    </member>
    <member name="BasicAsync(RequestContent,string,RequestContext)">
      <example>
This sample shows how to call BasicAsync.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

using RequestContent content = RequestContent.Create(new
{
    id = "<id>",
    profileImage = System.IO.File.OpenRead("<filePath>"),
});
Response response = await client.BasicAsync(content, "multipart/form-data");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call BasicAsync with all parameters and request content.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

using RequestContent content = RequestContent.Create(new
{
    id = "<id>",
    profileImage = System.IO.File.OpenRead("<filePath>"),
});
Response response = await client.BasicAsync(content, "multipart/form-data");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="Basic(RequestContent,string,RequestContext)">
      <example>
This sample shows how to call Basic.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

using RequestContent content = RequestContent.Create(new
{
    id = "<id>",
    profileImage = System.IO.File.OpenRead("<filePath>"),
});
Response response = client.Basic(content, "multipart/form-data");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call Basic with all parameters and request content.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

using RequestContent content = RequestContent.Create(new
{
    id = "<id>",
    profileImage = System.IO.File.OpenRead("<filePath>"),
});
Response response = client.Basic(content, "multipart/form-data");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="FileArrayAndBasicAsync(ComplexPartsRequest,CancellationToken)">
      <example>
This sample shows how to call FileArrayAndBasicAsync.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

ComplexPartsRequest body = new ComplexPartsRequest("<id>", new Address("<city>"), null, new Stream[] { null });
Response response = await client.FileArrayAndBasicAsync(body);
]]></code>
This sample shows how to call FileArrayAndBasicAsync with all parameters.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

ComplexPartsRequest body = new ComplexPartsRequest("<id>", new Address("<city>"), null, new Stream[] { null });
Response response = await client.FileArrayAndBasicAsync(body);
]]></code></example>
    </member>
    <member name="FileArrayAndBasic(ComplexPartsRequest,CancellationToken)">
      <example>
This sample shows how to call FileArrayAndBasic.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

ComplexPartsRequest body = new ComplexPartsRequest("<id>", new Address("<city>"), null, new Stream[] { null });
Response response = client.FileArrayAndBasic(body);
]]></code>
This sample shows how to call FileArrayAndBasic with all parameters.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

ComplexPartsRequest body = new ComplexPartsRequest("<id>", new Address("<city>"), null, new Stream[] { null });
Response response = client.FileArrayAndBasic(body);
]]></code></example>
    </member>
    <member name="FileArrayAndBasicAsync(RequestContent,string,RequestContext)">
      <example>
This sample shows how to call FileArrayAndBasicAsync.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

using RequestContent content = RequestContent.Create(new
{
    id = "<id>",
    address = new
    {
        city = "<city>",
    },
    profileImage = System.IO.File.OpenRead("<filePath>"),
    pictures = new object[]
    {
        System.IO.File.OpenRead("<filePath>")
    },
});
Response response = await client.FileArrayAndBasicAsync(content, "multipart/form-data");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call FileArrayAndBasicAsync with all parameters and request content.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

using RequestContent content = RequestContent.Create(new
{
    id = "<id>",
    address = new
    {
        city = "<city>",
    },
    profileImage = System.IO.File.OpenRead("<filePath>"),
    pictures = new object[]
    {
        System.IO.File.OpenRead("<filePath>")
    },
});
Response response = await client.FileArrayAndBasicAsync(content, "multipart/form-data");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="FileArrayAndBasic(RequestContent,string,RequestContext)">
      <example>
This sample shows how to call FileArrayAndBasic.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

using RequestContent content = RequestContent.Create(new
{
    id = "<id>",
    address = new
    {
        city = "<city>",
    },
    profileImage = System.IO.File.OpenRead("<filePath>"),
    pictures = new object[]
    {
        System.IO.File.OpenRead("<filePath>")
    },
});
Response response = client.FileArrayAndBasic(content, "multipart/form-data");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call FileArrayAndBasic with all parameters and request content.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

using RequestContent content = RequestContent.Create(new
{
    id = "<id>",
    address = new
    {
        city = "<city>",
    },
    profileImage = System.IO.File.OpenRead("<filePath>"),
    pictures = new object[]
    {
        System.IO.File.OpenRead("<filePath>")
    },
});
Response response = client.FileArrayAndBasic(content, "multipart/form-data");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="JsonPartAsync(JsonPartRequest,CancellationToken)">
      <example>
This sample shows how to call JsonPartAsync.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

JsonPartRequest body = new JsonPartRequest(new Address("<city>"), null);
Response response = await client.JsonPartAsync(body);
]]></code>
This sample shows how to call JsonPartAsync with all parameters.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

JsonPartRequest body = new JsonPartRequest(new Address("<city>"), null);
Response response = await client.JsonPartAsync(body);
]]></code></example>
    </member>
    <member name="JsonPart(JsonPartRequest,CancellationToken)">
      <example>
This sample shows how to call JsonPart.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

JsonPartRequest body = new JsonPartRequest(new Address("<city>"), null);
Response response = client.JsonPart(body);
]]></code>
This sample shows how to call JsonPart with all parameters.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

JsonPartRequest body = new JsonPartRequest(new Address("<city>"), null);
Response response = client.JsonPart(body);
]]></code></example>
    </member>
    <member name="JsonPartAsync(RequestContent,string,RequestContext)">
      <example>
This sample shows how to call JsonPartAsync.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

using RequestContent content = RequestContent.Create(new
{
    address = new
    {
        city = "<city>",
    },
    profileImage = System.IO.File.OpenRead("<filePath>"),
});
Response response = await client.JsonPartAsync(content, "multipart/form-data");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call JsonPartAsync with all parameters and request content.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

using RequestContent content = RequestContent.Create(new
{
    address = new
    {
        city = "<city>",
    },
    profileImage = System.IO.File.OpenRead("<filePath>"),
});
Response response = await client.JsonPartAsync(content, "multipart/form-data");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="JsonPart(RequestContent,string,RequestContext)">
      <example>
This sample shows how to call JsonPart.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

using RequestContent content = RequestContent.Create(new
{
    address = new
    {
        city = "<city>",
    },
    profileImage = System.IO.File.OpenRead("<filePath>"),
});
Response response = client.JsonPart(content, "multipart/form-data");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call JsonPart with all parameters and request content.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

using RequestContent content = RequestContent.Create(new
{
    address = new
    {
        city = "<city>",
    },
    profileImage = System.IO.File.OpenRead("<filePath>"),
});
Response response = client.JsonPart(content, "multipart/form-data");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="BinaryArrayPartsAsync(BinaryArrayPartsRequest,CancellationToken)">
      <example>
This sample shows how to call BinaryArrayPartsAsync.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

BinaryArrayPartsRequest body = new BinaryArrayPartsRequest("<id>", new Stream[] { null });
Response response = await client.BinaryArrayPartsAsync(body);
]]></code>
This sample shows how to call BinaryArrayPartsAsync with all parameters.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

BinaryArrayPartsRequest body = new BinaryArrayPartsRequest("<id>", new Stream[] { null });
Response response = await client.BinaryArrayPartsAsync(body);
]]></code></example>
    </member>
    <member name="BinaryArrayParts(BinaryArrayPartsRequest,CancellationToken)">
      <example>
This sample shows how to call BinaryArrayParts.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

BinaryArrayPartsRequest body = new BinaryArrayPartsRequest("<id>", new Stream[] { null });
Response response = client.BinaryArrayParts(body);
]]></code>
This sample shows how to call BinaryArrayParts with all parameters.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

BinaryArrayPartsRequest body = new BinaryArrayPartsRequest("<id>", new Stream[] { null });
Response response = client.BinaryArrayParts(body);
]]></code></example>
    </member>
    <member name="BinaryArrayPartsAsync(RequestContent,string,RequestContext)">
      <example>
This sample shows how to call BinaryArrayPartsAsync.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

using RequestContent content = RequestContent.Create(new
{
    id = "<id>",
    pictures = new object[]
    {
        System.IO.File.OpenRead("<filePath>")
    },
});
Response response = await client.BinaryArrayPartsAsync(content, "multipart/form-data");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call BinaryArrayPartsAsync with all parameters and request content.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

using RequestContent content = RequestContent.Create(new
{
    id = "<id>",
    pictures = new object[]
    {
        System.IO.File.OpenRead("<filePath>")
    },
});
Response response = await client.BinaryArrayPartsAsync(content, "multipart/form-data");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="BinaryArrayParts(RequestContent,string,RequestContext)">
      <example>
This sample shows how to call BinaryArrayParts.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

using RequestContent content = RequestContent.Create(new
{
    id = "<id>",
    pictures = new object[]
    {
        System.IO.File.OpenRead("<filePath>")
    },
});
Response response = client.BinaryArrayParts(content, "multipart/form-data");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call BinaryArrayParts with all parameters and request content.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

using RequestContent content = RequestContent.Create(new
{
    id = "<id>",
    pictures = new object[]
    {
        System.IO.File.OpenRead("<filePath>")
    },
});
Response response = client.BinaryArrayParts(content, "multipart/form-data");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="MultiBinaryPartsAsync(MultiBinaryPartsRequest,CancellationToken)">
      <example>
This sample shows how to call MultiBinaryPartsAsync.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

MultiBinaryPartsRequest body = new MultiBinaryPartsRequest(null);
Response response = await client.MultiBinaryPartsAsync(body);
]]></code>
This sample shows how to call MultiBinaryPartsAsync with all parameters.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

MultiBinaryPartsRequest body = new MultiBinaryPartsRequest(null)
{
    Picture = null,
};
Response response = await client.MultiBinaryPartsAsync(body);
]]></code></example>
    </member>
    <member name="MultiBinaryParts(MultiBinaryPartsRequest,CancellationToken)">
      <example>
This sample shows how to call MultiBinaryParts.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

MultiBinaryPartsRequest body = new MultiBinaryPartsRequest(null);
Response response = client.MultiBinaryParts(body);
]]></code>
This sample shows how to call MultiBinaryParts with all parameters.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

MultiBinaryPartsRequest body = new MultiBinaryPartsRequest(null)
{
    Picture = null,
};
Response response = client.MultiBinaryParts(body);
]]></code></example>
    </member>
    <member name="MultiBinaryPartsAsync(RequestContent,string,RequestContext)">
      <example>
This sample shows how to call MultiBinaryPartsAsync.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

using RequestContent content = RequestContent.Create(new
{
    profileImage = System.IO.File.OpenRead("<filePath>"),
});
Response response = await client.MultiBinaryPartsAsync(content, "multipart/form-data");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call MultiBinaryPartsAsync with all parameters and request content.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

using RequestContent content = RequestContent.Create(new
{
    profileImage = System.IO.File.OpenRead("<filePath>"),
    picture = System.IO.File.OpenRead("<filePath>"),
});
Response response = await client.MultiBinaryPartsAsync(content, "multipart/form-data");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="MultiBinaryParts(RequestContent,string,RequestContext)">
      <example>
This sample shows how to call MultiBinaryParts.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

using RequestContent content = RequestContent.Create(new
{
    profileImage = System.IO.File.OpenRead("<filePath>"),
});
Response response = client.MultiBinaryParts(content, "multipart/form-data");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call MultiBinaryParts with all parameters and request content.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

using RequestContent content = RequestContent.Create(new
{
    profileImage = System.IO.File.OpenRead("<filePath>"),
    picture = System.IO.File.OpenRead("<filePath>"),
});
Response response = client.MultiBinaryParts(content, "multipart/form-data");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="CheckFileNameAndContentTypeAsync(MultiPartRequest,CancellationToken)">
      <example>
This sample shows how to call CheckFileNameAndContentTypeAsync.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

MultiPartRequest body = new MultiPartRequest("<id>", null);
Response response = await client.CheckFileNameAndContentTypeAsync(body);
]]></code>
This sample shows how to call CheckFileNameAndContentTypeAsync with all parameters.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

MultiPartRequest body = new MultiPartRequest("<id>", null);
Response response = await client.CheckFileNameAndContentTypeAsync(body);
]]></code></example>
    </member>
    <member name="CheckFileNameAndContentType(MultiPartRequest,CancellationToken)">
      <example>
This sample shows how to call CheckFileNameAndContentType.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

MultiPartRequest body = new MultiPartRequest("<id>", null);
Response response = client.CheckFileNameAndContentType(body);
]]></code>
This sample shows how to call CheckFileNameAndContentType with all parameters.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

MultiPartRequest body = new MultiPartRequest("<id>", null);
Response response = client.CheckFileNameAndContentType(body);
]]></code></example>
    </member>
    <member name="CheckFileNameAndContentTypeAsync(RequestContent,string,RequestContext)">
      <example>
This sample shows how to call CheckFileNameAndContentTypeAsync.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

using RequestContent content = RequestContent.Create(new
{
    id = "<id>",
    profileImage = System.IO.File.OpenRead("<filePath>"),
});
Response response = await client.CheckFileNameAndContentTypeAsync(content, "multipart/form-data");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CheckFileNameAndContentTypeAsync with all parameters and request content.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

using RequestContent content = RequestContent.Create(new
{
    id = "<id>",
    profileImage = System.IO.File.OpenRead("<filePath>"),
});
Response response = await client.CheckFileNameAndContentTypeAsync(content, "multipart/form-data");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="CheckFileNameAndContentType(RequestContent,string,RequestContext)">
      <example>
This sample shows how to call CheckFileNameAndContentType.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

using RequestContent content = RequestContent.Create(new
{
    id = "<id>",
    profileImage = System.IO.File.OpenRead("<filePath>"),
});
Response response = client.CheckFileNameAndContentType(content, "multipart/form-data");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CheckFileNameAndContentType with all parameters and request content.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

using RequestContent content = RequestContent.Create(new
{
    id = "<id>",
    profileImage = System.IO.File.OpenRead("<filePath>"),
});
Response response = client.CheckFileNameAndContentType(content, "multipart/form-data");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="AnonymousModelAsync(Stream,CancellationToken)">
      <example>
This sample shows how to call AnonymousModelAsync.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

Response response = await client.AnonymousModelAsync(null);
]]></code>
This sample shows how to call AnonymousModelAsync with all parameters.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

Response response = await client.AnonymousModelAsync(null);
]]></code></example>
    </member>
    <member name="AnonymousModel(Stream,CancellationToken)">
      <example>
This sample shows how to call AnonymousModel.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

Response response = client.AnonymousModel(null);
]]></code>
This sample shows how to call AnonymousModel with all parameters.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

Response response = client.AnonymousModel(null);
]]></code></example>
    </member>
    <member name="AnonymousModelAsync(RequestContent,string,RequestContext)">
      <example>
This sample shows how to call AnonymousModelAsync.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

using RequestContent content = RequestContent.Create(new
{
    profileImage = System.IO.File.OpenRead("<filePath>"),
});
Response response = await client.AnonymousModelAsync(content, "multipart/form-data");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call AnonymousModelAsync with all parameters and request content.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

using RequestContent content = RequestContent.Create(new
{
    profileImage = System.IO.File.OpenRead("<filePath>"),
});
Response response = await client.AnonymousModelAsync(content, "multipart/form-data");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="AnonymousModel(RequestContent,string,RequestContext)">
      <example>
This sample shows how to call AnonymousModel.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

using RequestContent content = RequestContent.Create(new
{
    profileImage = System.IO.File.OpenRead("<filePath>"),
});
Response response = client.AnonymousModel(content, "multipart/form-data");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call AnonymousModel with all parameters and request content.
<code><![CDATA[
FormData client = new MultiPartClient().GetFormDataClient();

using RequestContent content = RequestContent.Create(new
{
    profileImage = System.IO.File.OpenRead("<filePath>"),
});
Response response = client.AnonymousModel(content, "multipart/form-data");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
  </members>
</doc>