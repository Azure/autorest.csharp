// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Payload.MultiPart.Models
{
    /// <summary> The JsonArrayPartsRequest. </summary>
    public partial class JsonArrayPartsRequest
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="JsonArrayPartsRequest"/>. </summary>
        /// <param name="profileImage"></param>
        /// <param name="previousAddresses"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="profileImage"/> or <paramref name="previousAddresses"/> is null. </exception>
        public JsonArrayPartsRequest(BinaryData profileImage, IEnumerable<Address> previousAddresses)
        {
            Argument.AssertNotNull(profileImage, nameof(profileImage));
            Argument.AssertNotNull(previousAddresses, nameof(previousAddresses));

            ProfileImage = profileImage;
            PreviousAddresses = previousAddresses.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="JsonArrayPartsRequest"/>. </summary>
        /// <param name="profileImage"></param>
        /// <param name="previousAddresses"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal JsonArrayPartsRequest(BinaryData profileImage, IList<Address> previousAddresses, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            ProfileImage = profileImage;
            PreviousAddresses = previousAddresses;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="JsonArrayPartsRequest"/> for deserialization. </summary>
        internal JsonArrayPartsRequest()
        {
        }

        /// <summary>
        /// Gets the profile image
        /// <para>
        /// To assign a byte[] to this property use <see cref="BinaryData.FromBytes(byte[])"/>.
        /// The byte[] will be serialized to a Base64 encoded string.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromBytes(new byte[] { 1, 2, 3 })</term>
        /// <description>Creates a payload of "AQID".</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public BinaryData ProfileImage { get; }
        /// <summary> Gets the previous addresses. </summary>
        public IList<Address> PreviousAddresses { get; }
    }
}
