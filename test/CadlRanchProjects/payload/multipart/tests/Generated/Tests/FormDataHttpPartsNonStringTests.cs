// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using Payload.MultiPart.Models;

namespace Payload.MultiPart.Tests
{
    public partial class FormDataHttpPartsNonStringTests : PayloadMultiPartTestBase
    {
        public FormDataHttpPartsNonStringTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task NonString_Float_ShortVersion()
        {
            Uri endpoint = null;
            FormDataHttpPartsNonString client = CreateMultiPartClient(endpoint).GetFormDataClient().GetFormDataHttpPartsClient().GetFormDataHttpPartsNonStringClient();

            using RequestContent content = RequestContent.Create(new
            {
                temperature = 123.45,
            });
            Response response = await client.FloatAsync(content, "multipart/form-data");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task NonString_Float_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            FormDataHttpPartsNonString client = CreateMultiPartClient(endpoint).GetFormDataClient().GetFormDataHttpPartsClient().GetFormDataHttpPartsNonStringClient();

            FloatRequest body = new FloatRequest(123.45);
            Response response = await client.FloatAsync(body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task NonString_Float_AllParameters()
        {
            Uri endpoint = null;
            FormDataHttpPartsNonString client = CreateMultiPartClient(endpoint).GetFormDataClient().GetFormDataHttpPartsClient().GetFormDataHttpPartsNonStringClient();

            using RequestContent content = RequestContent.Create(new
            {
                temperature = 123.45,
            });
            Response response = await client.FloatAsync(content, "multipart/form-data");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task NonString_Float_AllParameters_Convenience()
        {
            Uri endpoint = null;
            FormDataHttpPartsNonString client = CreateMultiPartClient(endpoint).GetFormDataClient().GetFormDataHttpPartsClient().GetFormDataHttpPartsNonStringClient();

            FloatRequest body = new FloatRequest(123.45);
            Response response = await client.FloatAsync(body);
        }
    }
}
