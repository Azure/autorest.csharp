// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.IO;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using Payload.MultiPart.Models;

namespace Payload.MultiPart.Tests
{
    public partial class FormDataTests : PayloadMultiPartTestBase
    {
        public FormDataTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task FormData_Basic_ShortVersion()
        {
            Uri endpoint = null;
            FormData client = CreateMultiPartClient(endpoint).GetFormDataClient();

            using RequestContent content = RequestContent.Create(new
            {
                id = "<id>",
                profileImage = System.IO.File.OpenRead("<filePath>"),
            });
            Response response = await client.BasicAsync(content, "multipart/form-data");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task FormData_Basic_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            FormData client = CreateMultiPartClient(endpoint).GetFormDataClient();

            MultiPartRequest body = new MultiPartRequest("<id>", null);
            Response response = await client.BasicAsync(body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task FormData_Basic_AllParameters()
        {
            Uri endpoint = null;
            FormData client = CreateMultiPartClient(endpoint).GetFormDataClient();

            using RequestContent content = RequestContent.Create(new
            {
                id = "<id>",
                profileImage = System.IO.File.OpenRead("<filePath>"),
            });
            Response response = await client.BasicAsync(content, "multipart/form-data");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task FormData_Basic_AllParameters_Convenience()
        {
            Uri endpoint = null;
            FormData client = CreateMultiPartClient(endpoint).GetFormDataClient();

            MultiPartRequest body = new MultiPartRequest("<id>", null);
            Response response = await client.BasicAsync(body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task FormData_FileArrayAndBasic_ShortVersion()
        {
            Uri endpoint = null;
            FormData client = CreateMultiPartClient(endpoint).GetFormDataClient();

            using RequestContent content = RequestContent.Create(new
            {
                id = "<id>",
                address = new
                {
                    city = "<city>",
                },
                profileImage = System.IO.File.OpenRead("<filePath>"),
                pictures = new object[]
            {
System.IO.File.OpenRead("<filePath>")
            },
            });
            Response response = await client.FileArrayAndBasicAsync(content, "multipart/form-data");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task FormData_FileArrayAndBasic_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            FormData client = CreateMultiPartClient(endpoint).GetFormDataClient();

            ComplexPartsRequest body = new ComplexPartsRequest("<id>", new Address("<city>"), null, new Stream[] { null });
            Response response = await client.FileArrayAndBasicAsync(body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task FormData_FileArrayAndBasic_AllParameters()
        {
            Uri endpoint = null;
            FormData client = CreateMultiPartClient(endpoint).GetFormDataClient();

            using RequestContent content = RequestContent.Create(new
            {
                id = "<id>",
                address = new
                {
                    city = "<city>",
                },
                profileImage = System.IO.File.OpenRead("<filePath>"),
                pictures = new object[]
            {
System.IO.File.OpenRead("<filePath>")
            },
            });
            Response response = await client.FileArrayAndBasicAsync(content, "multipart/form-data");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task FormData_FileArrayAndBasic_AllParameters_Convenience()
        {
            Uri endpoint = null;
            FormData client = CreateMultiPartClient(endpoint).GetFormDataClient();

            ComplexPartsRequest body = new ComplexPartsRequest("<id>", new Address("<city>"), null, new Stream[] { null });
            Response response = await client.FileArrayAndBasicAsync(body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task FormData_JsonPart_ShortVersion()
        {
            Uri endpoint = null;
            FormData client = CreateMultiPartClient(endpoint).GetFormDataClient();

            using RequestContent content = RequestContent.Create(new
            {
                address = new
                {
                    city = "<city>",
                },
                profileImage = System.IO.File.OpenRead("<filePath>"),
            });
            Response response = await client.JsonPartAsync(content, "multipart/form-data");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task FormData_JsonPart_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            FormData client = CreateMultiPartClient(endpoint).GetFormDataClient();

            JsonPartRequest body = new JsonPartRequest(new Address("<city>"), null);
            Response response = await client.JsonPartAsync(body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task FormData_JsonPart_AllParameters()
        {
            Uri endpoint = null;
            FormData client = CreateMultiPartClient(endpoint).GetFormDataClient();

            using RequestContent content = RequestContent.Create(new
            {
                address = new
                {
                    city = "<city>",
                },
                profileImage = System.IO.File.OpenRead("<filePath>"),
            });
            Response response = await client.JsonPartAsync(content, "multipart/form-data");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task FormData_JsonPart_AllParameters_Convenience()
        {
            Uri endpoint = null;
            FormData client = CreateMultiPartClient(endpoint).GetFormDataClient();

            JsonPartRequest body = new JsonPartRequest(new Address("<city>"), null);
            Response response = await client.JsonPartAsync(body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task FormData_BinaryArrayParts_ShortVersion()
        {
            Uri endpoint = null;
            FormData client = CreateMultiPartClient(endpoint).GetFormDataClient();

            using RequestContent content = RequestContent.Create(new
            {
                id = "<id>",
                pictures = new object[]
            {
System.IO.File.OpenRead("<filePath>")
            },
            });
            Response response = await client.BinaryArrayPartsAsync(content, "multipart/form-data");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task FormData_BinaryArrayParts_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            FormData client = CreateMultiPartClient(endpoint).GetFormDataClient();

            BinaryArrayPartsRequest body = new BinaryArrayPartsRequest("<id>", new Stream[] { null });
            Response response = await client.BinaryArrayPartsAsync(body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task FormData_BinaryArrayParts_AllParameters()
        {
            Uri endpoint = null;
            FormData client = CreateMultiPartClient(endpoint).GetFormDataClient();

            using RequestContent content = RequestContent.Create(new
            {
                id = "<id>",
                pictures = new object[]
            {
System.IO.File.OpenRead("<filePath>")
            },
            });
            Response response = await client.BinaryArrayPartsAsync(content, "multipart/form-data");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task FormData_BinaryArrayParts_AllParameters_Convenience()
        {
            Uri endpoint = null;
            FormData client = CreateMultiPartClient(endpoint).GetFormDataClient();

            BinaryArrayPartsRequest body = new BinaryArrayPartsRequest("<id>", new Stream[] { null });
            Response response = await client.BinaryArrayPartsAsync(body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task FormData_MultiBinaryParts_ShortVersion()
        {
            Uri endpoint = null;
            FormData client = CreateMultiPartClient(endpoint).GetFormDataClient();

            using RequestContent content = RequestContent.Create(new
            {
                profileImage = System.IO.File.OpenRead("<filePath>"),
            });
            Response response = await client.MultiBinaryPartsAsync(content, "multipart/form-data");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task FormData_MultiBinaryParts_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            FormData client = CreateMultiPartClient(endpoint).GetFormDataClient();

            MultiBinaryPartsRequest body = new MultiBinaryPartsRequest(null);
            Response response = await client.MultiBinaryPartsAsync(body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task FormData_MultiBinaryParts_AllParameters()
        {
            Uri endpoint = null;
            FormData client = CreateMultiPartClient(endpoint).GetFormDataClient();

            using RequestContent content = RequestContent.Create(new
            {
                profileImage = System.IO.File.OpenRead("<filePath>"),
                picture = System.IO.File.OpenRead("<filePath>"),
            });
            Response response = await client.MultiBinaryPartsAsync(content, "multipart/form-data");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task FormData_MultiBinaryParts_AllParameters_Convenience()
        {
            Uri endpoint = null;
            FormData client = CreateMultiPartClient(endpoint).GetFormDataClient();

            MultiBinaryPartsRequest body = new MultiBinaryPartsRequest(null)
            {
                Picture = null,
            };
            Response response = await client.MultiBinaryPartsAsync(body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task FormData_CheckFileNameAndContentType_ShortVersion()
        {
            Uri endpoint = null;
            FormData client = CreateMultiPartClient(endpoint).GetFormDataClient();

            using RequestContent content = RequestContent.Create(new
            {
                id = "<id>",
                profileImage = System.IO.File.OpenRead("<filePath>"),
            });
            Response response = await client.CheckFileNameAndContentTypeAsync(content, "multipart/form-data");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task FormData_CheckFileNameAndContentType_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            FormData client = CreateMultiPartClient(endpoint).GetFormDataClient();

            MultiPartRequest body = new MultiPartRequest("<id>", null);
            Response response = await client.CheckFileNameAndContentTypeAsync(body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task FormData_CheckFileNameAndContentType_AllParameters()
        {
            Uri endpoint = null;
            FormData client = CreateMultiPartClient(endpoint).GetFormDataClient();

            using RequestContent content = RequestContent.Create(new
            {
                id = "<id>",
                profileImage = System.IO.File.OpenRead("<filePath>"),
            });
            Response response = await client.CheckFileNameAndContentTypeAsync(content, "multipart/form-data");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task FormData_CheckFileNameAndContentType_AllParameters_Convenience()
        {
            Uri endpoint = null;
            FormData client = CreateMultiPartClient(endpoint).GetFormDataClient();

            MultiPartRequest body = new MultiPartRequest("<id>", null);
            Response response = await client.CheckFileNameAndContentTypeAsync(body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task FormData_AnonymousModel_ShortVersion()
        {
            Uri endpoint = null;
            FormData client = CreateMultiPartClient(endpoint).GetFormDataClient();

            using RequestContent content = RequestContent.Create(new
            {
                profileImage = System.IO.File.OpenRead("<filePath>"),
            });
            Response response = await client.AnonymousModelAsync(content, "multipart/form-data");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task FormData_AnonymousModel_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            FormData client = CreateMultiPartClient(endpoint).GetFormDataClient();

            Response response = await client.AnonymousModelAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task FormData_AnonymousModel_AllParameters()
        {
            Uri endpoint = null;
            FormData client = CreateMultiPartClient(endpoint).GetFormDataClient();

            using RequestContent content = RequestContent.Create(new
            {
                profileImage = System.IO.File.OpenRead("<filePath>"),
            });
            Response response = await client.AnonymousModelAsync(content, "multipart/form-data");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task FormData_AnonymousModel_AllParameters_Convenience()
        {
            Uri endpoint = null;
            FormData client = CreateMultiPartClient(endpoint).GetFormDataClient();

            Response response = await client.AnonymousModelAsync(null);
        }
    }
}
