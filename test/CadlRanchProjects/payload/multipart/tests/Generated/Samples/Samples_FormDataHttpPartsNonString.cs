// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using Payload.MultiPart.Models;

namespace Payload.MultiPart.Samples
{
    public partial class Samples_FormDataHttpPartsNonString
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_NonString_Float_ShortVersion()
        {
            FormDataHttpPartsNonString client = new MultiPartClient().GetFormDataClient().GetFormDataHttpPartsClient().GetFormDataHttpPartsNonStringClient();

            using RequestContent content = RequestContent.Create(new
            {
                temperature = 123.45,
            });
            Response response = client.Float(content, "multipart/form-data");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_NonString_Float_ShortVersion_Async()
        {
            FormDataHttpPartsNonString client = new MultiPartClient().GetFormDataClient().GetFormDataHttpPartsClient().GetFormDataHttpPartsNonStringClient();

            using RequestContent content = RequestContent.Create(new
            {
                temperature = 123.45,
            });
            Response response = await client.FloatAsync(content, "multipart/form-data");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_NonString_Float_ShortVersion_Convenience()
        {
            FormDataHttpPartsNonString client = new MultiPartClient().GetFormDataClient().GetFormDataHttpPartsClient().GetFormDataHttpPartsNonStringClient();

            FloatRequest body = new FloatRequest(123.45);
            Response response = client.Float(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_NonString_Float_ShortVersion_Convenience_Async()
        {
            FormDataHttpPartsNonString client = new MultiPartClient().GetFormDataClient().GetFormDataHttpPartsClient().GetFormDataHttpPartsNonStringClient();

            FloatRequest body = new FloatRequest(123.45);
            Response response = await client.FloatAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_NonString_Float_AllParameters()
        {
            FormDataHttpPartsNonString client = new MultiPartClient().GetFormDataClient().GetFormDataHttpPartsClient().GetFormDataHttpPartsNonStringClient();

            using RequestContent content = RequestContent.Create(new
            {
                temperature = 123.45,
            });
            Response response = client.Float(content, "multipart/form-data");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_NonString_Float_AllParameters_Async()
        {
            FormDataHttpPartsNonString client = new MultiPartClient().GetFormDataClient().GetFormDataHttpPartsClient().GetFormDataHttpPartsNonStringClient();

            using RequestContent content = RequestContent.Create(new
            {
                temperature = 123.45,
            });
            Response response = await client.FloatAsync(content, "multipart/form-data");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_NonString_Float_AllParameters_Convenience()
        {
            FormDataHttpPartsNonString client = new MultiPartClient().GetFormDataClient().GetFormDataHttpPartsClient().GetFormDataHttpPartsNonStringClient();

            FloatRequest body = new FloatRequest(123.45);
            Response response = client.Float(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_NonString_Float_AllParameters_Convenience_Async()
        {
            FormDataHttpPartsNonString client = new MultiPartClient().GetFormDataClient().GetFormDataHttpPartsClient().GetFormDataHttpPartsNonStringClient();

            FloatRequest body = new FloatRequest(123.45);
            Response response = await client.FloatAsync(body);
        }
    }
}
