// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Identity;
using NUnit.Framework;
using Payload.Pageable.Models;

namespace Payload.Pageable.Tests
{
    public partial class PageableClientTests : PayloadPageableTestBase
    {
        public PageableClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Pageable_GetPageables_ShortVersion()
        {
            Uri endpoint = null;
            PageableClient client = CreatePageableClient(endpoint);

            await foreach (BinaryData item in client.GetPageablesAsync(null, null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Pageable_GetPageables_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            PageableClient client = CreatePageableClient(endpoint);

            await foreach (User item in client.GetPageablesAsync())
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Pageable_GetPageables_AllParameters()
        {
            Uri endpoint = null;
            PageableClient client = CreatePageableClient(endpoint);

            await foreach (BinaryData item in client.GetPageablesAsync(1234, null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Pageable_GetPageables_AllParameters_Convenience()
        {
            Uri endpoint = null;
            PageableClient client = CreatePageableClient(endpoint);

            await foreach (User item in client.GetPageablesAsync(maxpagesize: 1234))
            {
            }
        }
    }
}
