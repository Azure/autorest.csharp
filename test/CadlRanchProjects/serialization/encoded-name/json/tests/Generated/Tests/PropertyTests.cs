// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using Serialization.EncodedName.Json.Models;

namespace Serialization.EncodedName.Json.Tests
{
    public partial class PropertyTests : SerializationEncodedNameJsonTestBase
    {
        public PropertyTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Property_Send_ShortVersion()
        {
            Uri endpoint = null;
            Property client = CreateJsonClient(endpoint).GetPropertyClient();

            using RequestContent content = RequestContent.Create(new
            {
                wireName = true,
            });
            Response response = await client.SendAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Property_Send_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            Property client = CreateJsonClient(endpoint).GetPropertyClient();

            JsonEncodedNameModel body = new JsonEncodedNameModel(true);
            Response response = await client.SendAsync(body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Property_Send_AllParameters()
        {
            Uri endpoint = null;
            Property client = CreateJsonClient(endpoint).GetPropertyClient();

            using RequestContent content = RequestContent.Create(new
            {
                wireName = true,
            });
            Response response = await client.SendAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Property_Send_AllParameters_Convenience()
        {
            Uri endpoint = null;
            Property client = CreateJsonClient(endpoint).GetPropertyClient();

            JsonEncodedNameModel body = new JsonEncodedNameModel(true);
            Response response = await client.SendAsync(body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Property_GetProperty_ShortVersion()
        {
            Uri endpoint = null;
            Property client = CreateJsonClient(endpoint).GetPropertyClient();

            Response response = await client.GetPropertyAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Property_GetProperty_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            Property client = CreateJsonClient(endpoint).GetPropertyClient();

            Response<JsonEncodedNameModel> response = await client.GetPropertyAsync();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Property_GetProperty_AllParameters()
        {
            Uri endpoint = null;
            Property client = CreateJsonClient(endpoint).GetPropertyClient();

            Response response = await client.GetPropertyAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Property_GetProperty_AllParameters_Convenience()
        {
            Uri endpoint = null;
            Property client = CreateJsonClient(endpoint).GetPropertyClient();

            Response<JsonEncodedNameModel> response = await client.GetPropertyAsync();
        }
    }
}
