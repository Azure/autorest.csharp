// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Encode.Datetime;
using Encode.Datetime.Models;
using NUnit.Framework;

namespace Encode.Datetime.Tests
{
    public class PropertyTests : EncodeDatetimeTestBase
    {
        public PropertyTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        public async Task Default_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Property client = CreateDatetimeClient(endpoint).GetPropertyClient(apiVersion: "1.0.0");

            RequestContent content = RequestContent.Create(new
            {
                value = "2022-05-10T14:57:31.2311892-04:00",
            });
            Response response = await client.DefaultAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value").ToString());
        }

        [Test]
        public async Task Default_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Property client = CreateDatetimeClient(endpoint).GetPropertyClient(apiVersion: "1.0.0");

            DefaultDatetimeProperty body = new DefaultDatetimeProperty(DateTimeOffset.Parse("2022-05-10T14:57:31.2311892-04:00"));
            Response<DefaultDatetimeProperty> response = await client.DefaultAsync(body);
        }

        [Test]
        public async Task Default_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Property client = CreateDatetimeClient(endpoint).GetPropertyClient(apiVersion: "1.0.0");

            RequestContent content = RequestContent.Create(new
            {
                value = "2022-05-10T14:57:31.2311892-04:00",
            });
            Response response = await client.DefaultAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value").ToString());
        }

        [Test]
        public async Task Default_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Property client = CreateDatetimeClient(endpoint).GetPropertyClient(apiVersion: "1.0.0");

            DefaultDatetimeProperty body = new DefaultDatetimeProperty(DateTimeOffset.Parse("2022-05-10T14:57:31.2311892-04:00"));
            Response<DefaultDatetimeProperty> response = await client.DefaultAsync(body);
        }

        [Test]
        public async Task Rfc3339_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Property client = CreateDatetimeClient(endpoint).GetPropertyClient(apiVersion: "1.0.0");

            RequestContent content = RequestContent.Create(new
            {
                value = "2022-05-10T18:57:31.2311892Z",
            });
            Response response = await client.Rfc3339Async(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value").ToString());
        }

        [Test]
        public async Task Rfc3339_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Property client = CreateDatetimeClient(endpoint).GetPropertyClient(apiVersion: "1.0.0");

            Rfc3339DatetimeProperty body = new Rfc3339DatetimeProperty(DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"));
            Response<Rfc3339DatetimeProperty> response = await client.Rfc3339Async(body);
        }

        [Test]
        public async Task Rfc3339_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Property client = CreateDatetimeClient(endpoint).GetPropertyClient(apiVersion: "1.0.0");

            RequestContent content = RequestContent.Create(new
            {
                value = "2022-05-10T18:57:31.2311892Z",
            });
            Response response = await client.Rfc3339Async(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value").ToString());
        }

        [Test]
        public async Task Rfc3339_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Property client = CreateDatetimeClient(endpoint).GetPropertyClient(apiVersion: "1.0.0");

            Rfc3339DatetimeProperty body = new Rfc3339DatetimeProperty(DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"));
            Response<Rfc3339DatetimeProperty> response = await client.Rfc3339Async(body);
        }

        [Test]
        public async Task Rfc7231_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Property client = CreateDatetimeClient(endpoint).GetPropertyClient(apiVersion: "1.0.0");

            RequestContent content = RequestContent.Create(new
            {
                value = "Tue, 10 May 2022 18:57:31 GMT",
            });
            Response response = await client.Rfc7231Async(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value").ToString());
        }

        [Test]
        public async Task Rfc7231_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Property client = CreateDatetimeClient(endpoint).GetPropertyClient(apiVersion: "1.0.0");

            Rfc7231DatetimeProperty body = new Rfc7231DatetimeProperty(DateTimeOffset.Parse("Tue, 10 May 2022 18:57:31 GMT"));
            Response<Rfc7231DatetimeProperty> response = await client.Rfc7231Async(body);
        }

        [Test]
        public async Task Rfc7231_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Property client = CreateDatetimeClient(endpoint).GetPropertyClient(apiVersion: "1.0.0");

            RequestContent content = RequestContent.Create(new
            {
                value = "Tue, 10 May 2022 18:57:31 GMT",
            });
            Response response = await client.Rfc7231Async(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value").ToString());
        }

        [Test]
        public async Task Rfc7231_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Property client = CreateDatetimeClient(endpoint).GetPropertyClient(apiVersion: "1.0.0");

            Rfc7231DatetimeProperty body = new Rfc7231DatetimeProperty(DateTimeOffset.Parse("Tue, 10 May 2022 18:57:31 GMT"));
            Response<Rfc7231DatetimeProperty> response = await client.Rfc7231Async(body);
        }

        [Test]
        public async Task UnixTimestamp_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Property client = CreateDatetimeClient(endpoint).GetPropertyClient(apiVersion: "1.0.0");

            RequestContent content = RequestContent.Create(new
            {
                value = 1652209051,
            });
            Response response = await client.UnixTimestampAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value").ToString());
        }

        [Test]
        public async Task UnixTimestamp_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Property client = CreateDatetimeClient(endpoint).GetPropertyClient(apiVersion: "1.0.0");

            UnixTimestampDatetimeProperty body = new UnixTimestampDatetimeProperty(DateTimeOffset.FromUnixTimeSeconds(1652209051));
            Response<UnixTimestampDatetimeProperty> response = await client.UnixTimestampAsync(body);
        }

        [Test]
        public async Task UnixTimestamp_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Property client = CreateDatetimeClient(endpoint).GetPropertyClient(apiVersion: "1.0.0");

            RequestContent content = RequestContent.Create(new
            {
                value = 1652209051,
            });
            Response response = await client.UnixTimestampAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value").ToString());
        }

        [Test]
        public async Task UnixTimestamp_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Property client = CreateDatetimeClient(endpoint).GetPropertyClient(apiVersion: "1.0.0");

            UnixTimestampDatetimeProperty body = new UnixTimestampDatetimeProperty(DateTimeOffset.FromUnixTimeSeconds(1652209051));
            Response<UnixTimestampDatetimeProperty> response = await client.UnixTimestampAsync(body);
        }

        [Test]
        public async Task UnixTimestampArray_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Property client = CreateDatetimeClient(endpoint).GetPropertyClient(apiVersion: "1.0.0");

            RequestContent content = RequestContent.Create(new
            {
                value = new List<object>()
{
1652209051
},
            });
            Response response = await client.UnixTimestampArrayAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].ToString());
        }

        [Test]
        public async Task UnixTimestampArray_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Property client = CreateDatetimeClient(endpoint).GetPropertyClient(apiVersion: "1.0.0");

            UnixTimestampArrayDatetimeProperty body = new UnixTimestampArrayDatetimeProperty(new List<DateTimeOffset>()
{
DateTimeOffset.FromUnixTimeSeconds(1652209051)
});
            Response<UnixTimestampArrayDatetimeProperty> response = await client.UnixTimestampArrayAsync(body);
        }

        [Test]
        public async Task UnixTimestampArray_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Property client = CreateDatetimeClient(endpoint).GetPropertyClient(apiVersion: "1.0.0");

            RequestContent content = RequestContent.Create(new
            {
                value = new List<object>()
{
1652209051
},
            });
            Response response = await client.UnixTimestampArrayAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].ToString());
        }

        [Test]
        public async Task UnixTimestampArray_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Property client = CreateDatetimeClient(endpoint).GetPropertyClient(apiVersion: "1.0.0");

            UnixTimestampArrayDatetimeProperty body = new UnixTimestampArrayDatetimeProperty(new List<DateTimeOffset>()
{
DateTimeOffset.FromUnixTimeSeconds(1652209051)
});
            Response<UnixTimestampArrayDatetimeProperty> response = await client.UnixTimestampArrayAsync(body);
        }
    }
}
