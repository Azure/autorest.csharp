// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Encode.Bytes;
using Encode.Bytes.Models;
using NUnit.Framework;

namespace Encode.Bytes.Tests
{
    public class PropertyTests : EncodeBytesTestBase
    {
        public PropertyTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        public async Task Default_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Property client = CreateBytesClient(endpoint).GetPropertyClient(apiVersion: "1.0.0");

            RequestContent content = RequestContent.Create(new
            {
                value = new object(),
            });
            Response response = await client.DefaultAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value").ToString());
        }

        [Test]
        public async Task Default_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Property client = CreateBytesClient(endpoint).GetPropertyClient(apiVersion: "1.0.0");

            DefaultBytesProperty body = new DefaultBytesProperty(BinaryData.FromObjectAsJson(new object()));
            Response<DefaultBytesProperty> response = await client.DefaultAsync(body);
        }

        [Test]
        public async Task Default_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Property client = CreateBytesClient(endpoint).GetPropertyClient(apiVersion: "1.0.0");

            RequestContent content = RequestContent.Create(new
            {
                value = new object(),
            });
            Response response = await client.DefaultAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value").ToString());
        }

        [Test]
        public async Task Default_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Property client = CreateBytesClient(endpoint).GetPropertyClient(apiVersion: "1.0.0");

            DefaultBytesProperty body = new DefaultBytesProperty(BinaryData.FromObjectAsJson(new object()));
            Response<DefaultBytesProperty> response = await client.DefaultAsync(body);
        }

        [Test]
        public async Task Base64_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Property client = CreateBytesClient(endpoint).GetPropertyClient(apiVersion: "1.0.0");

            RequestContent content = RequestContent.Create(new
            {
                value = new object(),
            });
            Response response = await client.Base64Async(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value").ToString());
        }

        [Test]
        public async Task Base64_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Property client = CreateBytesClient(endpoint).GetPropertyClient(apiVersion: "1.0.0");

            Base64BytesProperty body = new Base64BytesProperty(BinaryData.FromObjectAsJson(new object()));
            Response<Base64BytesProperty> response = await client.Base64Async(body);
        }

        [Test]
        public async Task Base64_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Property client = CreateBytesClient(endpoint).GetPropertyClient(apiVersion: "1.0.0");

            RequestContent content = RequestContent.Create(new
            {
                value = new object(),
            });
            Response response = await client.Base64Async(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value").ToString());
        }

        [Test]
        public async Task Base64_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Property client = CreateBytesClient(endpoint).GetPropertyClient(apiVersion: "1.0.0");

            Base64BytesProperty body = new Base64BytesProperty(BinaryData.FromObjectAsJson(new object()));
            Response<Base64BytesProperty> response = await client.Base64Async(body);
        }

        [Test]
        public async Task Base64url_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Property client = CreateBytesClient(endpoint).GetPropertyClient(apiVersion: "1.0.0");

            RequestContent content = RequestContent.Create(new
            {
                value = new object(),
            });
            Response response = await client.Base64urlAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value").ToString());
        }

        [Test]
        public async Task Base64url_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Property client = CreateBytesClient(endpoint).GetPropertyClient(apiVersion: "1.0.0");

            Base64urlBytesProperty body = new Base64urlBytesProperty(BinaryData.FromObjectAsJson(new object()));
            Response<Base64urlBytesProperty> response = await client.Base64urlAsync(body);
        }

        [Test]
        public async Task Base64url_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Property client = CreateBytesClient(endpoint).GetPropertyClient(apiVersion: "1.0.0");

            RequestContent content = RequestContent.Create(new
            {
                value = new object(),
            });
            Response response = await client.Base64urlAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value").ToString());
        }

        [Test]
        public async Task Base64url_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Property client = CreateBytesClient(endpoint).GetPropertyClient(apiVersion: "1.0.0");

            Base64urlBytesProperty body = new Base64urlBytesProperty(BinaryData.FromObjectAsJson(new object()));
            Response<Base64urlBytesProperty> response = await client.Base64urlAsync(body);
        }

        [Test]
        public async Task Base64urlArray_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Property client = CreateBytesClient(endpoint).GetPropertyClient(apiVersion: "1.0.0");

            RequestContent content = RequestContent.Create(new
            {
                value = new List<object>()
{
new object()
},
            });
            Response response = await client.Base64urlArrayAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].ToString());
        }

        [Test]
        public async Task Base64urlArray_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Property client = CreateBytesClient(endpoint).GetPropertyClient(apiVersion: "1.0.0");

            Base64urlArrayBytesProperty body = new Base64urlArrayBytesProperty(new List<BinaryData>()
{
BinaryData.FromObjectAsJson(new object())
});
            Response<Base64urlArrayBytesProperty> response = await client.Base64urlArrayAsync(body);
        }

        [Test]
        public async Task Base64urlArray_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Property client = CreateBytesClient(endpoint).GetPropertyClient(apiVersion: "1.0.0");

            RequestContent content = RequestContent.Create(new
            {
                value = new List<object>()
{
new object()
},
            });
            Response response = await client.Base64urlArrayAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].ToString());
        }

        [Test]
        public async Task Base64urlArray_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Property client = CreateBytesClient(endpoint).GetPropertyClient(apiVersion: "1.0.0");

            Base64urlArrayBytesProperty body = new Base64urlArrayBytesProperty(new List<BinaryData>()
{
BinaryData.FromObjectAsJson(new object())
});
            Response<Base64urlArrayBytesProperty> response = await client.Base64urlArrayAsync(body);
        }
    }
}
