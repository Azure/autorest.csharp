// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Encode.Bytes.Models;
using NUnit.Framework;

namespace Encode.Bytes.Tests
{
    public partial class PropertyTests : EncodeBytesTestBase
    {
        public PropertyTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Property_Default_ShortVersion()
        {
            Uri endpoint = null;
            Property client = CreateBytesClient(endpoint).GetPropertyClient();

            using RequestContent content = RequestContent.Create(new
            {
                value = new object(),
            });
            Response response = await client.DefaultAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Property_Default_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            Property client = CreateBytesClient(endpoint).GetPropertyClient();

            DefaultBytesProperty body = new DefaultBytesProperty(BinaryData.FromObjectAsJson(new object()));
            Response<DefaultBytesProperty> response = await client.DefaultAsync(body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Property_Default_AllParameters()
        {
            Uri endpoint = null;
            Property client = CreateBytesClient(endpoint).GetPropertyClient();

            using RequestContent content = RequestContent.Create(new
            {
                value = new object(),
            });
            Response response = await client.DefaultAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Property_Default_AllParameters_Convenience()
        {
            Uri endpoint = null;
            Property client = CreateBytesClient(endpoint).GetPropertyClient();

            DefaultBytesProperty body = new DefaultBytesProperty(BinaryData.FromObjectAsJson(new object()));
            Response<DefaultBytesProperty> response = await client.DefaultAsync(body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Property_Base64_ShortVersion()
        {
            Uri endpoint = null;
            Property client = CreateBytesClient(endpoint).GetPropertyClient();

            using RequestContent content = RequestContent.Create(new
            {
                value = new object(),
            });
            Response response = await client.Base64Async(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Property_Base64_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            Property client = CreateBytesClient(endpoint).GetPropertyClient();

            Base64BytesProperty body = new Base64BytesProperty(BinaryData.FromObjectAsJson(new object()));
            Response<Base64BytesProperty> response = await client.Base64Async(body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Property_Base64_AllParameters()
        {
            Uri endpoint = null;
            Property client = CreateBytesClient(endpoint).GetPropertyClient();

            using RequestContent content = RequestContent.Create(new
            {
                value = new object(),
            });
            Response response = await client.Base64Async(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Property_Base64_AllParameters_Convenience()
        {
            Uri endpoint = null;
            Property client = CreateBytesClient(endpoint).GetPropertyClient();

            Base64BytesProperty body = new Base64BytesProperty(BinaryData.FromObjectAsJson(new object()));
            Response<Base64BytesProperty> response = await client.Base64Async(body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Property_Base64url_ShortVersion()
        {
            Uri endpoint = null;
            Property client = CreateBytesClient(endpoint).GetPropertyClient();

            using RequestContent content = RequestContent.Create(new
            {
                value = new object(),
            });
            Response response = await client.Base64urlAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Property_Base64url_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            Property client = CreateBytesClient(endpoint).GetPropertyClient();

            Base64urlBytesProperty body = new Base64urlBytesProperty(BinaryData.FromObjectAsJson(new object()));
            Response<Base64urlBytesProperty> response = await client.Base64urlAsync(body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Property_Base64url_AllParameters()
        {
            Uri endpoint = null;
            Property client = CreateBytesClient(endpoint).GetPropertyClient();

            using RequestContent content = RequestContent.Create(new
            {
                value = new object(),
            });
            Response response = await client.Base64urlAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Property_Base64url_AllParameters_Convenience()
        {
            Uri endpoint = null;
            Property client = CreateBytesClient(endpoint).GetPropertyClient();

            Base64urlBytesProperty body = new Base64urlBytesProperty(BinaryData.FromObjectAsJson(new object()));
            Response<Base64urlBytesProperty> response = await client.Base64urlAsync(body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Property_Base64urlArray_ShortVersion()
        {
            Uri endpoint = null;
            Property client = CreateBytesClient(endpoint).GetPropertyClient();

            using RequestContent content = RequestContent.Create(new
            {
                value = new object[]
            {
new object()
            },
            });
            Response response = await client.Base64urlArrayAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Property_Base64urlArray_ShortVersion_Convenience()
        {
            Uri endpoint = null;
            Property client = CreateBytesClient(endpoint).GetPropertyClient();

            Base64urlArrayBytesProperty body = new Base64urlArrayBytesProperty(new BinaryData[]
            {
BinaryData.FromObjectAsJson(new object())
            });
            Response<Base64urlArrayBytesProperty> response = await client.Base64urlArrayAsync(body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Property_Base64urlArray_AllParameters()
        {
            Uri endpoint = null;
            Property client = CreateBytesClient(endpoint).GetPropertyClient();

            using RequestContent content = RequestContent.Create(new
            {
                value = new object[]
            {
new object()
            },
            });
            Response response = await client.Base64urlArrayAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Property_Base64urlArray_AllParameters_Convenience()
        {
            Uri endpoint = null;
            Property client = CreateBytesClient(endpoint).GetPropertyClient();

            Base64urlArrayBytesProperty body = new Base64urlArrayBytesProperty(new BinaryData[]
            {
BinaryData.FromObjectAsJson(new object())
            });
            Response<Base64urlArrayBytesProperty> response = await client.Base64urlArrayAsync(body);
        }
    }
}
