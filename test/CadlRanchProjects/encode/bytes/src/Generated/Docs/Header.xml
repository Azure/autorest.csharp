<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="DefaultAsync(BinaryData,RequestContext)">
<example>
This sample shows how to call DefaultAsync with required parameters.
<code><![CDATA[
var client = new BytesClient().GetHeaderClient("1.0.0");

Response response = await client.DefaultAsync(BinaryData.FromString("<your binary data content>"));
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Default(BinaryData,RequestContext)">
<example>
This sample shows how to call Default with required parameters.
<code><![CDATA[
var client = new BytesClient().GetHeaderClient("1.0.0");

Response response = client.Default(BinaryData.FromString("<your binary data content>"));
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Base64Async(BinaryData,RequestContext)">
<example>
This sample shows how to call Base64Async with required parameters.
<code><![CDATA[
var client = new BytesClient().GetHeaderClient("1.0.0");

Response response = await client.Base64Async(BinaryData.FromString("<your binary data content>"));
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Base64(BinaryData,RequestContext)">
<example>
This sample shows how to call Base64 with required parameters.
<code><![CDATA[
var client = new BytesClient().GetHeaderClient("1.0.0");

Response response = client.Base64(BinaryData.FromString("<your binary data content>"));
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Base64urlAsync(BinaryData,RequestContext)">
<example>
This sample shows how to call Base64urlAsync with required parameters.
<code><![CDATA[
var client = new BytesClient().GetHeaderClient("1.0.0");

Response response = await client.Base64urlAsync(BinaryData.FromString("<your binary data content>"));
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Base64url(BinaryData,RequestContext)">
<example>
This sample shows how to call Base64url with required parameters.
<code><![CDATA[
var client = new BytesClient().GetHeaderClient("1.0.0");

Response response = client.Base64url(BinaryData.FromString("<your binary data content>"));
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Base64urlArrayAsync(IEnumerable{BinaryData},RequestContext)">
<example>
This sample shows how to call Base64urlArrayAsync with required parameters.
<code><![CDATA[
var client = new BytesClient().GetHeaderClient("1.0.0");

Response response = await client.Base64urlArrayAsync(new BinaryData[]{BinaryData.FromString("<your binary data content>")});
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Base64urlArray(IEnumerable{BinaryData},RequestContext)">
<example>
This sample shows how to call Base64urlArray with required parameters.
<code><![CDATA[
var client = new BytesClient().GetHeaderClient("1.0.0");

Response response = client.Base64urlArray(new BinaryData[]{BinaryData.FromString("<your binary data content>")});
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
  </members>
</doc>