<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="DefaultAsync(TimeSpan,RequestContext)">
      <example>
This sample shows how to call DefaultAsync with required parameters.
<code><![CDATA[
Query client = new DurationClient().GetQueryClient(apiVersion: "1.0.0");

Response response = await client.DefaultAsync(XmlConvert.ToTimeSpan("PT1H23M45S"));
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="Default(TimeSpan,RequestContext)">
      <example>
This sample shows how to call Default with required parameters.
<code><![CDATA[
Query client = new DurationClient().GetQueryClient(apiVersion: "1.0.0");

Response response = client.Default(XmlConvert.ToTimeSpan("PT1H23M45S"));
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="Iso8601Async(TimeSpan,RequestContext)">
      <example>
This sample shows how to call Iso8601Async with required parameters.
<code><![CDATA[
Query client = new DurationClient().GetQueryClient(apiVersion: "1.0.0");

Response response = await client.Iso8601Async(XmlConvert.ToTimeSpan("PT1H23M45S"));
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="Iso8601(TimeSpan,RequestContext)">
      <example>
This sample shows how to call Iso8601 with required parameters.
<code><![CDATA[
Query client = new DurationClient().GetQueryClient(apiVersion: "1.0.0");

Response response = client.Iso8601(XmlConvert.ToTimeSpan("PT1H23M45S"));
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="Int32SecondsAsync(TimeSpan,RequestContext)">
      <example>
This sample shows how to call Int32SecondsAsync with required parameters.
<code><![CDATA[
Query client = new DurationClient().GetQueryClient(apiVersion: "1.0.0");

Response response = await client.Int32SecondsAsync(TimeSpan.FromSeconds(10));
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="Int32Seconds(TimeSpan,RequestContext)">
      <example>
This sample shows how to call Int32Seconds with required parameters.
<code><![CDATA[
Query client = new DurationClient().GetQueryClient(apiVersion: "1.0.0");

Response response = client.Int32Seconds(TimeSpan.FromSeconds(10));
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="FloatSecondsAsync(TimeSpan,RequestContext)">
      <example>
This sample shows how to call FloatSecondsAsync with required parameters.
<code><![CDATA[
Query client = new DurationClient().GetQueryClient(apiVersion: "1.0.0");

Response response = await client.FloatSecondsAsync(TimeSpan.FromSeconds(10F));
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="FloatSeconds(TimeSpan,RequestContext)">
      <example>
This sample shows how to call FloatSeconds with required parameters.
<code><![CDATA[
Query client = new DurationClient().GetQueryClient(apiVersion: "1.0.0");

Response response = client.FloatSeconds(TimeSpan.FromSeconds(10F));
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="Int32SecondsArrayAsync(IEnumerable{TimeSpan},RequestContext)">
      <example>
This sample shows how to call Int32SecondsArrayAsync with required parameters.
<code><![CDATA[
Query client = new DurationClient().GetQueryClient(apiVersion: "1.0.0");

Response response = await client.Int32SecondsArrayAsync(new List<TimeSpan>()
{
TimeSpan.FromSeconds(10)
});
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="Int32SecondsArray(IEnumerable{TimeSpan},RequestContext)">
      <example>
This sample shows how to call Int32SecondsArray with required parameters.
<code><![CDATA[
Query client = new DurationClient().GetQueryClient(apiVersion: "1.0.0");

Response response = client.Int32SecondsArray(new List<TimeSpan>()
{
TimeSpan.FromSeconds(10)
});
Console.WriteLine(response.Status);
]]></code></example>
    </member>
  </members>
</doc>