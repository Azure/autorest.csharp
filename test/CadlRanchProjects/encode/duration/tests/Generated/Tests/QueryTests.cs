// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using System.Xml;
using Azure;
using Azure.Identity;
using NUnit.Framework;

namespace Encode.Duration.Tests
{
    public partial class QueryTests : EncodeDurationTestBase
    {
        public QueryTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Query_Default_ShortVersion()
        {
            Uri endpoint = null;
            Query client = CreateDurationClient(endpoint).GetQueryClient();

            Response response = await client.DefaultAsync(XmlConvert.ToTimeSpan("PT1H23M45S"));
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Query_Default_AllParameters()
        {
            Uri endpoint = null;
            Query client = CreateDurationClient(endpoint).GetQueryClient();

            Response response = await client.DefaultAsync(XmlConvert.ToTimeSpan("PT1H23M45S"));
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Query_Iso8601_ShortVersion()
        {
            Uri endpoint = null;
            Query client = CreateDurationClient(endpoint).GetQueryClient();

            Response response = await client.Iso8601Async(XmlConvert.ToTimeSpan("PT1H23M45S"));
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Query_Iso8601_AllParameters()
        {
            Uri endpoint = null;
            Query client = CreateDurationClient(endpoint).GetQueryClient();

            Response response = await client.Iso8601Async(XmlConvert.ToTimeSpan("PT1H23M45S"));
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Query_Int32Seconds_ShortVersion()
        {
            Uri endpoint = null;
            Query client = CreateDurationClient(endpoint).GetQueryClient();

            Response response = await client.Int32SecondsAsync(TimeSpan.FromSeconds(10));
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Query_Int32Seconds_AllParameters()
        {
            Uri endpoint = null;
            Query client = CreateDurationClient(endpoint).GetQueryClient();

            Response response = await client.Int32SecondsAsync(TimeSpan.FromSeconds(10));
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Query_FloatSeconds_ShortVersion()
        {
            Uri endpoint = null;
            Query client = CreateDurationClient(endpoint).GetQueryClient();

            Response response = await client.FloatSecondsAsync(TimeSpan.FromSeconds(10F));
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Query_FloatSeconds_AllParameters()
        {
            Uri endpoint = null;
            Query client = CreateDurationClient(endpoint).GetQueryClient();

            Response response = await client.FloatSecondsAsync(TimeSpan.FromSeconds(10F));
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Query_Float64Seconds_ShortVersion()
        {
            Uri endpoint = null;
            Query client = CreateDurationClient(endpoint).GetQueryClient();

            Response response = await client.Float64SecondsAsync(TimeSpan.FromSeconds(3.141592));
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Query_Float64Seconds_AllParameters()
        {
            Uri endpoint = null;
            Query client = CreateDurationClient(endpoint).GetQueryClient();

            Response response = await client.Float64SecondsAsync(TimeSpan.FromSeconds(3.141592));
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Query_Int32SecondsArray_ShortVersion()
        {
            Uri endpoint = null;
            Query client = CreateDurationClient(endpoint).GetQueryClient();

            Response response = await client.Int32SecondsArrayAsync(new TimeSpan[] { TimeSpan.FromSeconds(10) });
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Query_Int32SecondsArray_AllParameters()
        {
            Uri endpoint = null;
            Query client = CreateDurationClient(endpoint).GetQueryClient();

            Response response = await client.Int32SecondsArrayAsync(new TimeSpan[] { TimeSpan.FromSeconds(10) });
        }
    }
}
