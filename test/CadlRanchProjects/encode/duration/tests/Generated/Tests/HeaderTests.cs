// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using System.Xml;
using Azure;
using Azure.Identity;
using Encode.Duration;
using NUnit.Framework;

namespace Encode.Duration.Tests
{
    public class HeaderTests : EncodeDurationTestBase
    {
        public HeaderTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        public async Task Default_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Header client = CreateDurationClient(endpoint).GetHeaderClient(apiVersion: "1.0.0");

            Response response = await client.DefaultAsync(XmlConvert.ToTimeSpan("PT1H23M45S"));
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Default_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Header client = CreateDurationClient(endpoint).GetHeaderClient(apiVersion: "1.0.0");

            Response response = await client.DefaultAsync(XmlConvert.ToTimeSpan("PT1H23M45S"));
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Iso8601_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Header client = CreateDurationClient(endpoint).GetHeaderClient(apiVersion: "1.0.0");

            Response response = await client.Iso8601Async(XmlConvert.ToTimeSpan("PT1H23M45S"));
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Iso8601_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Header client = CreateDurationClient(endpoint).GetHeaderClient(apiVersion: "1.0.0");

            Response response = await client.Iso8601Async(XmlConvert.ToTimeSpan("PT1H23M45S"));
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Iso8601Array_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Header client = CreateDurationClient(endpoint).GetHeaderClient(apiVersion: "1.0.0");

            Response response = await client.Iso8601ArrayAsync(new List<TimeSpan>()
{
XmlConvert.ToTimeSpan("PT1H23M45S")
});
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Iso8601Array_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Header client = CreateDurationClient(endpoint).GetHeaderClient(apiVersion: "1.0.0");

            Response response = await client.Iso8601ArrayAsync(new List<TimeSpan>()
{
XmlConvert.ToTimeSpan("PT1H23M45S")
});
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Int32Seconds_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Header client = CreateDurationClient(endpoint).GetHeaderClient(apiVersion: "1.0.0");

            Response response = await client.Int32SecondsAsync(TimeSpan.FromSeconds(10));
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task Int32Seconds_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Header client = CreateDurationClient(endpoint).GetHeaderClient(apiVersion: "1.0.0");

            Response response = await client.Int32SecondsAsync(TimeSpan.FromSeconds(10));
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task FloatSeconds_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Header client = CreateDurationClient(endpoint).GetHeaderClient(apiVersion: "1.0.0");

            Response response = await client.FloatSecondsAsync(TimeSpan.FromSeconds(10F));
            Console.WriteLine(response.Status);
        }

        [Test]
        public async Task FloatSeconds_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Header client = CreateDurationClient(endpoint).GetHeaderClient(apiVersion: "1.0.0");

            Response response = await client.FloatSecondsAsync(TimeSpan.FromSeconds(10F));
            Console.WriteLine(response.Status);
        }
    }
}
