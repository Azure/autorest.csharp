// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>

namespace Fixtures.AcceptanceTestsBodyBoolean
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// BoolModel operations.
    /// </summary>
    public partial interface IBoolModel
    {
        IBoolModelWithHttpMessages WithHttpMessages();

        /// <summary>
        /// Get true Boolean value
        /// </summary>
        bool? GetTrue();

        /// <summary>
        /// Get true Boolean value
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<bool?> GetTrueAsync(CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Set Boolean value true
        /// </summary>
        /// <param name='boolBody'>
        /// </param>
        void PutTrue(bool boolBody);

        /// <summary>
        /// Set Boolean value true
        /// </summary>
        /// <param name='boolBody'>
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task PutTrueAsync(bool boolBody, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get false Boolean value
        /// </summary>
        bool? GetFalse();

        /// <summary>
        /// Get false Boolean value
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<bool?> GetFalseAsync(CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Set Boolean value false
        /// </summary>
        /// <param name='boolBody'>
        /// </param>
        void PutFalse(bool boolBody);

        /// <summary>
        /// Set Boolean value false
        /// </summary>
        /// <param name='boolBody'>
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task PutFalseAsync(bool boolBody, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get null Boolean value
        /// </summary>
        bool? GetNull();

        /// <summary>
        /// Get null Boolean value
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<bool?> GetNullAsync(CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get invalid Boolean value
        /// </summary>
        bool? GetInvalid();

        /// <summary>
        /// Get invalid Boolean value
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<bool?> GetInvalidAsync(CancellationToken cancellationToken = default(CancellationToken));
    }
}
