// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>

namespace Fixtures.AcceptanceTestsParameterFlattening
{
    using Microsoft.Rest;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// AvailabilitySets operations.
    /// </summary>
    public partial class AvailabilitySets : IAvailabilitySets
    {
        /// <summary>
        /// Initializes a new instance of the AvailabilitySets class.
        /// </summary>
        /// <param name='operationsWithHttpMessages'>
        /// Reference to the low level operations
        /// </param>
        /// <exception cref='System.ArgumentNullException'>
        /// Thrown when a required parameter is null.
        /// </exception>
        public AvailabilitySets(IAvailabilitySetsWithHttpMessages operationsWithHttpMessages)
        {
            if (operationsWithHttpMessages == null)
            {
                throw new System.ArgumentNullException(nameof(operationsWithHttpMessages));
            }
            OperationsWithHttpMessages = operationsWithHttpMessages;
        }

        private IAvailabilitySetsWithHttpMessages OperationsWithHttpMessages { get; set; }

        public IAvailabilitySetsWithHttpMessages WithHttpMessages()
        {
            return OperationsWithHttpMessages;
        }

        /// <summary>
        /// Updates the tags for an availability set.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='avset'>
        /// The name of the storage availability set.
        /// </param>
        /// <param name='tags'>
        /// A set of tags. A description about the set of tags.
        /// </param>
        public void Update(string resourceGroupName, string avset, IDictionary<string, string> tags)
        {
            UpdateAsync(resourceGroupName, avset, tags).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Updates the tags for an availability set.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='avset'>
        /// The name of the storage availability set.
        /// </param>
        /// <param name='tags'>
        /// A set of tags. A description about the set of tags.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public async Task UpdateAsync(string resourceGroupName, string avset, IDictionary<string, string> tags, CancellationToken cancellationToken = default(CancellationToken))
        {
            (await OperationsWithHttpMessages.UpdateAsync(resourceGroupName, avset, tags, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }

    }
}
