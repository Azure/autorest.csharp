// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>

namespace Fixtures.AcceptanceTestsHttp
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// HttpClientFailure operations.
    /// </summary>
    public partial interface IHttpClientFailure
    {
        IHttpClientFailureWithHttpMessages WithHttpMessages();

        /// <summary>
        /// Return 400 status code - should be represented in the client as an error
        /// </summary>
        Error Head400();

        /// <summary>
        /// Return 400 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<Error> Head400Async(CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Return 400 status code - should be represented in the client as an error
        /// </summary>
        Error Get400();

        /// <summary>
        /// Return 400 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<Error> Get400Async(CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Return 400 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        Error Put400(bool? booleanValue = default(bool?));

        /// <summary>
        /// Return 400 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<Error> Put400Async(bool? booleanValue = default(bool?), CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Return 400 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        Error Patch400(bool? booleanValue = default(bool?));

        /// <summary>
        /// Return 400 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<Error> Patch400Async(bool? booleanValue = default(bool?), CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Return 400 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        Error Post400(bool? booleanValue = default(bool?));

        /// <summary>
        /// Return 400 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<Error> Post400Async(bool? booleanValue = default(bool?), CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Return 400 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        Error Delete400(bool? booleanValue = default(bool?));

        /// <summary>
        /// Return 400 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<Error> Delete400Async(bool? booleanValue = default(bool?), CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Return 401 status code - should be represented in the client as an error
        /// </summary>
        Error Head401();

        /// <summary>
        /// Return 401 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<Error> Head401Async(CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Return 402 status code - should be represented in the client as an error
        /// </summary>
        Error Get402();

        /// <summary>
        /// Return 402 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<Error> Get402Async(CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Return 403 status code - should be represented in the client as an error
        /// </summary>
        Error Get403();

        /// <summary>
        /// Return 403 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<Error> Get403Async(CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Return 404 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        Error Put404(bool? booleanValue = default(bool?));

        /// <summary>
        /// Return 404 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<Error> Put404Async(bool? booleanValue = default(bool?), CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Return 405 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        Error Patch405(bool? booleanValue = default(bool?));

        /// <summary>
        /// Return 405 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<Error> Patch405Async(bool? booleanValue = default(bool?), CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Return 406 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        Error Post406(bool? booleanValue = default(bool?));

        /// <summary>
        /// Return 406 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<Error> Post406Async(bool? booleanValue = default(bool?), CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Return 407 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        Error Delete407(bool? booleanValue = default(bool?));

        /// <summary>
        /// Return 407 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<Error> Delete407Async(bool? booleanValue = default(bool?), CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Return 409 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        Error Put409(bool? booleanValue = default(bool?));

        /// <summary>
        /// Return 409 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<Error> Put409Async(bool? booleanValue = default(bool?), CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Return 410 status code - should be represented in the client as an error
        /// </summary>
        Error Head410();

        /// <summary>
        /// Return 410 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<Error> Head410Async(CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Return 411 status code - should be represented in the client as an error
        /// </summary>
        Error Get411();

        /// <summary>
        /// Return 411 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<Error> Get411Async(CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Return 412 status code - should be represented in the client as an error
        /// </summary>
        Error Get412();

        /// <summary>
        /// Return 412 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<Error> Get412Async(CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Return 413 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        Error Put413(bool? booleanValue = default(bool?));

        /// <summary>
        /// Return 413 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<Error> Put413Async(bool? booleanValue = default(bool?), CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Return 414 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        Error Patch414(bool? booleanValue = default(bool?));

        /// <summary>
        /// Return 414 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<Error> Patch414Async(bool? booleanValue = default(bool?), CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Return 415 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        Error Post415(bool? booleanValue = default(bool?));

        /// <summary>
        /// Return 415 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<Error> Post415Async(bool? booleanValue = default(bool?), CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Return 416 status code - should be represented in the client as an error
        /// </summary>
        Error Get416();

        /// <summary>
        /// Return 416 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<Error> Get416Async(CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Return 417 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        Error Delete417(bool? booleanValue = default(bool?));

        /// <summary>
        /// Return 417 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<Error> Delete417Async(bool? booleanValue = default(bool?), CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Return 429 status code - should be represented in the client as an error
        /// </summary>
        Error Head429();

        /// <summary>
        /// Return 429 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<Error> Head429Async(CancellationToken cancellationToken = default(CancellationToken));
    }
}
