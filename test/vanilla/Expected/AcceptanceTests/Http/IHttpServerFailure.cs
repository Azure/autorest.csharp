// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>

namespace Fixtures.AcceptanceTestsHttp
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// HttpServerFailure operations.
    /// </summary>
    public partial interface IHttpServerFailure
    {
        IHttpServerFailureWithHttpMessages WithHttpMessages();

        /// <summary>
        /// Return 501 status code - should be represented in the client as an error
        /// </summary>
        Error Head501();

        /// <summary>
        /// Return 501 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<Error> Head501Async(CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Return 501 status code - should be represented in the client as an error
        /// </summary>
        Error Get501();

        /// <summary>
        /// Return 501 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<Error> Get501Async(CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Return 505 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        Error Post505(bool? booleanValue = default(bool?));

        /// <summary>
        /// Return 505 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<Error> Post505Async(bool? booleanValue = default(bool?), CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Return 505 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        Error Delete505(bool? booleanValue = default(bool?));

        /// <summary>
        /// Return 505 status code - should be represented in the client as an error
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<Error> Delete505Async(bool? booleanValue = default(bool?), CancellationToken cancellationToken = default(CancellationToken));
    }
}
