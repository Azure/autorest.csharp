// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>

namespace Fixtures.AcceptanceTestsHttp
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// HttpFailure operations.
    /// </summary>
    public partial interface IHttpFailure
    {
        IHttpFailureWithHttpMessages WithHttpMessages();

        /// <summary>
        /// Get empty error form server
        /// </summary>
        bool? GetEmptyError();

        /// <summary>
        /// Get empty error form server
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<bool?> GetEmptyErrorAsync(CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get empty error form server
        /// </summary>
        bool? GetNoModelError();

        /// <summary>
        /// Get empty error form server
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<bool?> GetNoModelErrorAsync(CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get empty response from server
        /// </summary>
        bool? GetNoModelEmpty();

        /// <summary>
        /// Get empty response from server
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<bool?> GetNoModelEmptyAsync(CancellationToken cancellationToken = default(CancellationToken));
    }
}
