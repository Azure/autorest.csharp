// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>

namespace Fixtures.AcceptanceTestsHttp
{
    using Microsoft.Rest;
    using Models;
    using System.IO;
    using System.Linq;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// HttpSuccess operations.
    /// </summary>
    public partial class HttpSuccess : IHttpSuccess
    {
        /// <summary>
        /// Initializes a new instance of the HttpSuccess class.
        /// </summary>
        /// <param name='operationsWithHttpMessages'>
        /// Reference to the low level operations
        /// </param>
        /// <exception cref='System.ArgumentNullException'>
        /// Thrown when a required parameter is null.
        /// </exception>
        public HttpSuccess(IHttpSuccessWithHttpMessages operationsWithHttpMessages)
        {
            if (operationsWithHttpMessages == null)
            {
                throw new System.ArgumentNullException(nameof(operationsWithHttpMessages));
            }
            OperationsWithHttpMessages = operationsWithHttpMessages;
        }

        private IHttpSuccessWithHttpMessages OperationsWithHttpMessages { get; set; }

        public IHttpSuccessWithHttpMessages WithHttpMessages()
        {
            return OperationsWithHttpMessages;
        }

        /// <summary>
        /// Return 200 status code if successful
        /// </summary>
        public void Head200()
        {
            Head200Async().GetAwaiter().GetResult();
        }

        /// <summary>
        /// Return 200 status code if successful
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public async Task Head200Async(CancellationToken cancellationToken = default(CancellationToken))
        {
            (await OperationsWithHttpMessages.Head200Async(null, cancellationToken).ConfigureAwait(false)).Dispose();
        }

        /// <summary>
        /// Get 200 success
        /// </summary>
        public bool? Get200()
        {
            return Get200Async().GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get 200 success
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public async Task<bool?> Get200Async(CancellationToken cancellationToken = default(CancellationToken))
        {
            using (var _result = await OperationsWithHttpMessages.Get200Async(null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }

        /// <summary>
        /// Put boolean value true returning 200 success
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        public void Put200(bool? booleanValue = default(bool?))
        {
            Put200Async(booleanValue).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Put boolean value true returning 200 success
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public async Task Put200Async(bool? booleanValue = default(bool?), CancellationToken cancellationToken = default(CancellationToken))
        {
            (await OperationsWithHttpMessages.Put200Async(booleanValue, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }

        /// <summary>
        /// Patch true Boolean value in request returning 200
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        public void Patch200(bool? booleanValue = default(bool?))
        {
            Patch200Async(booleanValue).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Patch true Boolean value in request returning 200
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public async Task Patch200Async(bool? booleanValue = default(bool?), CancellationToken cancellationToken = default(CancellationToken))
        {
            (await OperationsWithHttpMessages.Patch200Async(booleanValue, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }

        /// <summary>
        /// Post bollean value true in request that returns a 200
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        public void Post200(bool? booleanValue = default(bool?))
        {
            Post200Async(booleanValue).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Post bollean value true in request that returns a 200
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public async Task Post200Async(bool? booleanValue = default(bool?), CancellationToken cancellationToken = default(CancellationToken))
        {
            (await OperationsWithHttpMessages.Post200Async(booleanValue, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }

        /// <summary>
        /// Delete simple boolean value true returns 200
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        public void Delete200(bool? booleanValue = default(bool?))
        {
            Delete200Async(booleanValue).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Delete simple boolean value true returns 200
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public async Task Delete200Async(bool? booleanValue = default(bool?), CancellationToken cancellationToken = default(CancellationToken))
        {
            (await OperationsWithHttpMessages.Delete200Async(booleanValue, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }

        /// <summary>
        /// Put true Boolean value in request returns 201
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        public void Put201(bool? booleanValue = default(bool?))
        {
            Put201Async(booleanValue).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Put true Boolean value in request returns 201
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public async Task Put201Async(bool? booleanValue = default(bool?), CancellationToken cancellationToken = default(CancellationToken))
        {
            (await OperationsWithHttpMessages.Put201Async(booleanValue, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }

        /// <summary>
        /// Post true Boolean value in request returns 201 (Created)
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        public void Post201(bool? booleanValue = default(bool?))
        {
            Post201Async(booleanValue).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Post true Boolean value in request returns 201 (Created)
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public async Task Post201Async(bool? booleanValue = default(bool?), CancellationToken cancellationToken = default(CancellationToken))
        {
            (await OperationsWithHttpMessages.Post201Async(booleanValue, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }

        /// <summary>
        /// Put true Boolean value in request returns 202 (Accepted)
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        public void Put202(bool? booleanValue = default(bool?))
        {
            Put202Async(booleanValue).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Put true Boolean value in request returns 202 (Accepted)
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public async Task Put202Async(bool? booleanValue = default(bool?), CancellationToken cancellationToken = default(CancellationToken))
        {
            (await OperationsWithHttpMessages.Put202Async(booleanValue, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }

        /// <summary>
        /// Patch true Boolean value in request returns 202
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        public void Patch202(bool? booleanValue = default(bool?))
        {
            Patch202Async(booleanValue).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Patch true Boolean value in request returns 202
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public async Task Patch202Async(bool? booleanValue = default(bool?), CancellationToken cancellationToken = default(CancellationToken))
        {
            (await OperationsWithHttpMessages.Patch202Async(booleanValue, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }

        /// <summary>
        /// Post true Boolean value in request returns 202 (Accepted)
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        public void Post202(bool? booleanValue = default(bool?))
        {
            Post202Async(booleanValue).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Post true Boolean value in request returns 202 (Accepted)
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public async Task Post202Async(bool? booleanValue = default(bool?), CancellationToken cancellationToken = default(CancellationToken))
        {
            (await OperationsWithHttpMessages.Post202Async(booleanValue, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }

        /// <summary>
        /// Delete true Boolean value in request returns 202 (accepted)
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        public void Delete202(bool? booleanValue = default(bool?))
        {
            Delete202Async(booleanValue).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Delete true Boolean value in request returns 202 (accepted)
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public async Task Delete202Async(bool? booleanValue = default(bool?), CancellationToken cancellationToken = default(CancellationToken))
        {
            (await OperationsWithHttpMessages.Delete202Async(booleanValue, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }

        /// <summary>
        /// Return 204 status code if successful
        /// </summary>
        public void Head204()
        {
            Head204Async().GetAwaiter().GetResult();
        }

        /// <summary>
        /// Return 204 status code if successful
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public async Task Head204Async(CancellationToken cancellationToken = default(CancellationToken))
        {
            (await OperationsWithHttpMessages.Head204Async(null, cancellationToken).ConfigureAwait(false)).Dispose();
        }

        /// <summary>
        /// Put true Boolean value in request returns 204 (no content)
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        public void Put204(bool? booleanValue = default(bool?))
        {
            Put204Async(booleanValue).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Put true Boolean value in request returns 204 (no content)
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public async Task Put204Async(bool? booleanValue = default(bool?), CancellationToken cancellationToken = default(CancellationToken))
        {
            (await OperationsWithHttpMessages.Put204Async(booleanValue, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }

        /// <summary>
        /// Patch true Boolean value in request returns 204 (no content)
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        public void Patch204(bool? booleanValue = default(bool?))
        {
            Patch204Async(booleanValue).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Patch true Boolean value in request returns 204 (no content)
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public async Task Patch204Async(bool? booleanValue = default(bool?), CancellationToken cancellationToken = default(CancellationToken))
        {
            (await OperationsWithHttpMessages.Patch204Async(booleanValue, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }

        /// <summary>
        /// Post true Boolean value in request returns 204 (no content)
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        public void Post204(bool? booleanValue = default(bool?))
        {
            Post204Async(booleanValue).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Post true Boolean value in request returns 204 (no content)
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public async Task Post204Async(bool? booleanValue = default(bool?), CancellationToken cancellationToken = default(CancellationToken))
        {
            (await OperationsWithHttpMessages.Post204Async(booleanValue, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }

        /// <summary>
        /// Delete true Boolean value in request returns 204 (no content)
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        public void Delete204(bool? booleanValue = default(bool?))
        {
            Delete204Async(booleanValue).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Delete true Boolean value in request returns 204 (no content)
        /// </summary>
        /// <param name='booleanValue'>
        /// Simple boolean value true
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public async Task Delete204Async(bool? booleanValue = default(bool?), CancellationToken cancellationToken = default(CancellationToken))
        {
            (await OperationsWithHttpMessages.Delete204Async(booleanValue, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }

        /// <summary>
        /// Return 404 status code
        /// </summary>
        public void Head404()
        {
            Head404Async().GetAwaiter().GetResult();
        }

        /// <summary>
        /// Return 404 status code
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public async Task Head404Async(CancellationToken cancellationToken = default(CancellationToken))
        {
            (await OperationsWithHttpMessages.Head404Async(null, cancellationToken).ConfigureAwait(false)).Dispose();
        }

    }
}
