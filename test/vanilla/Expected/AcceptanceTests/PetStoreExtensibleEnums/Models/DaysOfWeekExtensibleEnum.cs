// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Fixtures.AcceptanceTestsPetStoreExtensibleEnums.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.ClientRuntime;
    using Microsoft.Rest.ClientRuntime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// Defines values for DaysOfWeekExtensibleEnum.
    /// </summary>
    [JsonConverter(typeof(Microsoft.Rest.ClientRuntime.Serialization.ExtensibleEnumConverter<DaysOfWeekExtensibleEnum, string>))]
    public sealed class DaysOfWeekExtensibleEnum : Microsoft.Rest.ExtensibleEnum<DaysOfWeekExtensibleEnum, string>
    {
        private DaysOfWeekExtensibleEnum(string value):base(value)
        {
        }

        public static readonly DaysOfWeekExtensibleEnum Monday = "Monday";

        public static readonly DaysOfWeekExtensibleEnum Tuesday = "Tuesday";

        public static readonly DaysOfWeekExtensibleEnum Wednesday = "Wednesday";

        public static readonly DaysOfWeekExtensibleEnum Thursday = "Thursday";

        public static readonly DaysOfWeekExtensibleEnum Friday = "Friday";

        public static readonly DaysOfWeekExtensibleEnum Saturday = "Saturday";

        public static readonly DaysOfWeekExtensibleEnum Sunday = "Sunday";


        /// <summary>
        /// Defines ctor/explicit conversion from value type to
        /// DaysOfWeekExtensibleEnum.
        /// </summary>
        /// <param name="value">string to convert.</param>
        public static implicit operator DaysOfWeekExtensibleEnum(string value) => Create(value);

        /// <summary>
        /// Create method used by deserializer to create instances of DaysOfWeekExtensibleEnum type
        /// </summary>
        /// <returns>The value as a DaysOfWeekExtensibleEnum.</returns>
        public static DaysOfWeekExtensibleEnum Create(string value)
            => _valueMap.GetOrAdd(value, (v) => new DaysOfWeekExtensibleEnum(v));
    }
}
