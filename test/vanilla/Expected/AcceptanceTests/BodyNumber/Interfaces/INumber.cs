// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>

namespace Fixtures.AcceptanceTestsBodyNumber
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Number operations.
    /// </summary>
    public partial interface INumber
    {
        INumberWithHttpMessages WithHttpMessages();

        /// <summary>
        /// Get null Number value
        /// </summary>
        double? GetNull();

        /// <summary>
        /// Get null Number value
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<double?> GetNullAsync(CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get invalid float Number value
        /// </summary>
        double? GetInvalidFloat();

        /// <summary>
        /// Get invalid float Number value
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<double?> GetInvalidFloatAsync(CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get invalid double Number value
        /// </summary>
        double? GetInvalidDouble();

        /// <summary>
        /// Get invalid double Number value
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<double?> GetInvalidDoubleAsync(CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get invalid decimal Number value
        /// </summary>
        decimal? GetInvalidDecimal();

        /// <summary>
        /// Get invalid decimal Number value
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<decimal?> GetInvalidDecimalAsync(CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Put big float value 3.402823e+20
        /// </summary>
        /// <param name='numberBody'>
        /// </param>
        void PutBigFloat(double numberBody);

        /// <summary>
        /// Put big float value 3.402823e+20
        /// </summary>
        /// <param name='numberBody'>
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task PutBigFloatAsync(double numberBody, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get big float value 3.402823e+20
        /// </summary>
        double? GetBigFloat();

        /// <summary>
        /// Get big float value 3.402823e+20
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<double?> GetBigFloatAsync(CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Put big double value 2.5976931e+101
        /// </summary>
        /// <param name='numberBody'>
        /// </param>
        void PutBigDouble(double numberBody);

        /// <summary>
        /// Put big double value 2.5976931e+101
        /// </summary>
        /// <param name='numberBody'>
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task PutBigDoubleAsync(double numberBody, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get big double value 2.5976931e+101
        /// </summary>
        double? GetBigDouble();

        /// <summary>
        /// Get big double value 2.5976931e+101
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<double?> GetBigDoubleAsync(CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Put big double value 99999999.99
        /// </summary>
        /// <param name='numberBody'>
        /// </param>
        void PutBigDoublePositiveDecimal(double numberBody);

        /// <summary>
        /// Put big double value 99999999.99
        /// </summary>
        /// <param name='numberBody'>
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task PutBigDoublePositiveDecimalAsync(double numberBody, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get big double value 99999999.99
        /// </summary>
        double? GetBigDoublePositiveDecimal();

        /// <summary>
        /// Get big double value 99999999.99
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<double?> GetBigDoublePositiveDecimalAsync(CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Put big double value -99999999.99
        /// </summary>
        /// <param name='numberBody'>
        /// </param>
        void PutBigDoubleNegativeDecimal(double numberBody);

        /// <summary>
        /// Put big double value -99999999.99
        /// </summary>
        /// <param name='numberBody'>
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task PutBigDoubleNegativeDecimalAsync(double numberBody, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get big double value -99999999.99
        /// </summary>
        double? GetBigDoubleNegativeDecimal();

        /// <summary>
        /// Get big double value -99999999.99
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<double?> GetBigDoubleNegativeDecimalAsync(CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Put big decimal value 2.5976931e+101
        /// </summary>
        /// <param name='numberBody'>
        /// </param>
        void PutBigDecimal(decimal numberBody);

        /// <summary>
        /// Put big decimal value 2.5976931e+101
        /// </summary>
        /// <param name='numberBody'>
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task PutBigDecimalAsync(decimal numberBody, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get big decimal value 2.5976931e+101
        /// </summary>
        decimal? GetBigDecimal();

        /// <summary>
        /// Get big decimal value 2.5976931e+101
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<decimal?> GetBigDecimalAsync(CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Put big decimal value 99999999.99
        /// </summary>
        /// <param name='numberBody'>
        /// </param>
        void PutBigDecimalPositiveDecimal(decimal numberBody);

        /// <summary>
        /// Put big decimal value 99999999.99
        /// </summary>
        /// <param name='numberBody'>
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task PutBigDecimalPositiveDecimalAsync(decimal numberBody, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get big decimal value 99999999.99
        /// </summary>
        decimal? GetBigDecimalPositiveDecimal();

        /// <summary>
        /// Get big decimal value 99999999.99
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<decimal?> GetBigDecimalPositiveDecimalAsync(CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Put big decimal value -99999999.99
        /// </summary>
        /// <param name='numberBody'>
        /// </param>
        void PutBigDecimalNegativeDecimal(decimal numberBody);

        /// <summary>
        /// Put big decimal value -99999999.99
        /// </summary>
        /// <param name='numberBody'>
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task PutBigDecimalNegativeDecimalAsync(decimal numberBody, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get big decimal value -99999999.99
        /// </summary>
        decimal? GetBigDecimalNegativeDecimal();

        /// <summary>
        /// Get big decimal value -99999999.99
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<decimal?> GetBigDecimalNegativeDecimalAsync(CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Put small float value 3.402823e-20
        /// </summary>
        /// <param name='numberBody'>
        /// </param>
        void PutSmallFloat(double numberBody);

        /// <summary>
        /// Put small float value 3.402823e-20
        /// </summary>
        /// <param name='numberBody'>
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task PutSmallFloatAsync(double numberBody, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get big double value 3.402823e-20
        /// </summary>
        double? GetSmallFloat();

        /// <summary>
        /// Get big double value 3.402823e-20
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<double?> GetSmallFloatAsync(CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Put small double value 2.5976931e-101
        /// </summary>
        /// <param name='numberBody'>
        /// </param>
        void PutSmallDouble(double numberBody);

        /// <summary>
        /// Put small double value 2.5976931e-101
        /// </summary>
        /// <param name='numberBody'>
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task PutSmallDoubleAsync(double numberBody, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get big double value 2.5976931e-101
        /// </summary>
        double? GetSmallDouble();

        /// <summary>
        /// Get big double value 2.5976931e-101
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<double?> GetSmallDoubleAsync(CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Put small decimal value 2.5976931e-101
        /// </summary>
        /// <param name='numberBody'>
        /// </param>
        void PutSmallDecimal(decimal numberBody);

        /// <summary>
        /// Put small decimal value 2.5976931e-101
        /// </summary>
        /// <param name='numberBody'>
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task PutSmallDecimalAsync(decimal numberBody, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get small decimal value 2.5976931e-101
        /// </summary>
        decimal? GetSmallDecimal();

        /// <summary>
        /// Get small decimal value 2.5976931e-101
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<decimal?> GetSmallDecimalAsync(CancellationToken cancellationToken = default(CancellationToken));
    }
}
