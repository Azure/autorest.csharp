// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Fixtures.BodyArray.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for FooEnum.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum FooEnum
    {
        [EnumMember(Value = "foo1")]
        Foo1,
        [EnumMember(Value = "foo2")]
        Foo2,
        [EnumMember(Value = "foo3")]
        Foo3
    }
    internal static class FooEnumEnumExtension
    {
        internal static string ToSerializedValue(this FooEnum? value)
        {
            return value == null ? null : ((FooEnum)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this FooEnum value)
        {
            switch( value )
            {
                case FooEnum.Foo1:
                    return "foo1";
                case FooEnum.Foo2:
                    return "foo2";
                case FooEnum.Foo3:
                    return "foo3";
            }
            return null;
        }

        internal static FooEnum? ParseFooEnum(this string value)
        {
            switch( value )
            {
                case "foo1":
                    return FooEnum.Foo1;
                case "foo2":
                    return FooEnum.Foo2;
                case "foo3":
                    return FooEnum.Foo3;
            }
            return null;
        }
    }
}
