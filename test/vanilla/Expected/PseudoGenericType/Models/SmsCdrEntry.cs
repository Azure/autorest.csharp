// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Zapappi.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class SmsCdrEntry
    {
        /// <summary>
        /// Initializes a new instance of the SmsCdrEntry class.
        /// </summary>
        public SmsCdrEntry()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SmsCdrEntry class.
        /// </summary>
        /// <param name="type">Possible values include: 'Outbound',
        /// 'Inbound'</param>
        /// <param name="status">Possible values include: 'Received', 'Sent',
        /// 'Delivered', 'Failed'</param>
        public SmsCdrEntry(string id = default(string), string messageId = default(string), string subscriptionId = default(string), string type = default(string), System.DateTime? created = default(System.DateTime?), System.DateTime? sent = default(System.DateTime?), System.DateTime? delivered = default(System.DateTime?), System.DateTime? failed = default(System.DateTime?), string destination = default(string), string source = default(string), string message = default(string), string webhookUrl = default(string), int? parts = default(int?), string status = default(string), string statusMessage = default(string), string originatingIP = default(string), string originatingService = default(string), double? ratedValue = default(double?))
        {
            Id = id;
            MessageId = messageId;
            SubscriptionId = subscriptionId;
            Type = type;
            Created = created;
            Sent = sent;
            Delivered = delivered;
            Failed = failed;
            Destination = destination;
            Source = source;
            Message = message;
            WebhookUrl = webhookUrl;
            Parts = parts;
            Status = status;
            StatusMessage = statusMessage;
            OriginatingIP = originatingIP;
            OriginatingService = originatingService;
            RatedValue = ratedValue;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MessageId")]
        public string MessageId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SubscriptionId")]
        public string SubscriptionId { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Outbound', 'Inbound'
        /// </summary>
        [JsonProperty(PropertyName = "Type")]
        public string Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Created")]
        public System.DateTime? Created { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Sent")]
        public System.DateTime? Sent { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Delivered")]
        public System.DateTime? Delivered { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Failed")]
        public System.DateTime? Failed { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Destination")]
        public string Destination { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Source")]
        public string Source { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Message")]
        public string Message { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "WebhookUrl")]
        public string WebhookUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Parts")]
        public int? Parts { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Received', 'Sent',
        /// 'Delivered', 'Failed'
        /// </summary>
        [JsonProperty(PropertyName = "Status")]
        public string Status { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "StatusMessage")]
        public string StatusMessage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OriginatingIP")]
        public string OriginatingIP { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OriginatingService")]
        public string OriginatingService { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "RatedValue")]
        public double? RatedValue { get; set; }

    }
}
