// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Zapappi.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class EndpointViewModel
    {
        /// <summary>
        /// Initializes a new instance of the EndpointViewModel class.
        /// </summary>
        public EndpointViewModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EndpointViewModel class.
        /// </summary>
        /// <param name="type">Possible values include: 'Simple', 'Dispatcher',
        /// 'Dynamic', 'LCR'</param>
        public EndpointViewModel(string id = default(string), int? customerId = default(int?), string subscriptionId = default(string), string type = default(string), string description = default(string), string proxyUri = default(string))
        {
            Id = id;
            CustomerId = customerId;
            SubscriptionId = subscriptionId;
            Type = type;
            Description = description;
            ProxyUri = proxyUri;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CustomerId")]
        public int? CustomerId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SubscriptionId")]
        public string SubscriptionId { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Simple', 'Dispatcher',
        /// 'Dynamic', 'LCR'
        /// </summary>
        [JsonProperty(PropertyName = "Type")]
        public string Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ProxyUri")]
        public string ProxyUri { get; set; }

    }
}
