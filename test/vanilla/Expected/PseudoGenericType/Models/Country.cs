// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Zapappi.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class Country
    {
        /// <summary>
        /// Initializes a new instance of the Country class.
        /// </summary>
        public Country()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Country class.
        /// </summary>
        public Country(string description = default(string), string dialCode = default(string), bool? hasRestrictions = default(bool?), bool? hasStates = default(bool?), string iSO2Digit = default(string), string iSO3Digit = default(string), string id = default(string))
        {
            Description = description;
            DialCode = dialCode;
            HasRestrictions = hasRestrictions;
            HasStates = hasStates;
            ISO2Digit = iSO2Digit;
            ISO3Digit = iSO3Digit;
            Id = id;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DialCode")]
        public string DialCode { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "HasRestrictions")]
        public bool? HasRestrictions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "HasStates")]
        public bool? HasStates { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ISO2Digit")]
        public string ISO2Digit { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ISO3Digit")]
        public string ISO3Digit { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public string Id { get; set; }

    }
}
