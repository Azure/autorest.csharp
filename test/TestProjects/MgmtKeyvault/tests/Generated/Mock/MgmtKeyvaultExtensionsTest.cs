// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.TestFramework;
using MgmtKeyvault.Models;

namespace MgmtKeyvault.Tests.Mock
{
    /// <summary> Test for MgmtKeyvaultExtensions. </summary>
    public partial class MgmtKeyvaultExtensionsMockTests : MockTestBase
    {
        public MgmtKeyvaultExtensionsMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task GetVaults()
        {
            // Example: List vaults in the specified subscription
            var subscriptionResource = GetArmClient().GetSubscriptionResource(SubscriptionResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000"));
            int? top = 1;

            await foreach (var _ in subscriptionResource.GetVaultsAsync(top))
            {
            }
        }

        [RecordedTest]
        public async Task GetDeletedVaults()
        {
            // Example: List deleted vaults in the specified subscription
            var subscriptionResource = GetArmClient().GetSubscriptionResource(SubscriptionResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000"));

            await foreach (var _ in subscriptionResource.GetDeletedVaultsAsync())
            {
            }
        }

        [RecordedTest]
        public async Task CheckNameAvailabilityVault()
        {
            // Example: Validate a vault name
            var subscriptionResource = GetArmClient().GetSubscriptionResource(SubscriptionResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000"));
            MgmtKeyvault.Models.VaultCheckNameAvailabilityParameters vaultName = new MgmtKeyvault.Models.VaultCheckNameAvailabilityParameters(name: "sample-vault");

            await subscriptionResource.CheckNameAvailabilityVaultAsync(vaultName);
        }

        [RecordedTest]
        public async Task GetManagedHsms()
        {
            // Example: List managed HSM Pools in a subscription
            var subscriptionResource = GetArmClient().GetSubscriptionResource(SubscriptionResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000"));
            int? top = default;

            await foreach (var _ in subscriptionResource.GetManagedHsmsAsync(top))
            {
            }
        }

        [RecordedTest]
        public async Task GetDeletedManagedHsms()
        {
            // Example: List deleted managed HSMs in the specified subscription
            var subscriptionResource = GetArmClient().GetSubscriptionResource(SubscriptionResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000"));

            await foreach (var _ in subscriptionResource.GetDeletedManagedHsmsAsync())
            {
            }
        }
    }
}
