// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;
using MgmtKeyvault;
using MgmtKeyvault.Models;

namespace MgmtKeyvault.Tests.Mock
{
    /// <summary> Test for DeletedManagedHsm. </summary>
    public partial class DeletedManagedHsmMockTests : MockTestBase
    {
        public DeletedManagedHsmMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Retrieve a deleted managed HSM
<<<<<<< HEAD
            var deletedManagedHsmId = MgmtKeyvault.DeletedManagedHsm.CreateResourceIdentifier(/ subscriptions /{ subscriptionId}/ providers / Microsoft.KeyVault / locations /{ location}/ deletedManagedHSMs /{ name});
=======
            var deletedManagedHsmId = MgmtKeyvault.DeletedManagedHsm.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "westus", "hsm1");
>>>>>>> generate-test
            var deletedManagedHsm = GetArmClient().GetDeletedManagedHsm(deletedManagedHsmId);

            await deletedManagedHsm.GetAsync();
        }

        [RecordedTest]
        public async Task PurgeDeleted()
        {
            // Example: Purge a managed HSM Pool
<<<<<<< HEAD
            var deletedManagedHsmId = MgmtKeyvault.DeletedManagedHsm.CreateResourceIdentifier(/ subscriptions /{ subscriptionId}/ providers / Microsoft.KeyVault / locations /{ location}/ deletedManagedHSMs /{ name});
=======
            var deletedManagedHsmId = MgmtKeyvault.DeletedManagedHsm.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "westus", "hsm1");
>>>>>>> generate-test
            var deletedManagedHsm = GetArmClient().GetDeletedManagedHsm(deletedManagedHsmId);

            await deletedManagedHsm.PurgeDeletedAsync(true);
        }
    }
}
