// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core.Expressions.DataFactory;

namespace Inheritance.Models
{
    /// <summary> The ClassThatInheritsFromBaseClassWithDiscriminatorAndSomeProperties. </summary>
    public partial class ClassThatInheritsFromBaseClassWithDiscriminatorAndSomeProperties : BaseClassWithDiscriminator
    {
        /// <summary> Initializes a new instance of ClassThatInheritsFromBaseClassWithDiscriminatorAndSomeProperties. </summary>
        public ClassThatInheritsFromBaseClassWithDiscriminatorAndSomeProperties()
        {
            DiscriminatorProperty = "ClassThatInheritsFromBaseClassWithDiscriminatorAndSomeProperties";
        }

        /// <summary> Initializes a new instance of ClassThatInheritsFromBaseClassWithDiscriminatorAndSomeProperties. </summary>
        /// <param name="baseClassProperty"></param>
        /// <param name="dfeString"> Any object. </param>
        /// <param name="dfeDouble"> Any object. </param>
        /// <param name="dfeBool"> Any object. </param>
        /// <param name="dfeInt"> Any object. </param>
        /// <param name="dfeArray"> Any object. </param>
        /// <param name="discriminatorProperty"></param>
        /// <param name="someProperty"></param>
        /// <param name="someOtherProperty"></param>
        internal ClassThatInheritsFromBaseClassWithDiscriminatorAndSomeProperties(string baseClassProperty, DataFactoryExpression<string> dfeString, DataFactoryExpression<double> dfeDouble, DataFactoryExpression<bool> dfeBool, DataFactoryExpression<int> dfeInt, DataFactoryExpression<Array> dfeArray, string discriminatorProperty, string someProperty, string someOtherProperty) : base(baseClassProperty, dfeString, dfeDouble, dfeBool, dfeInt, dfeArray, discriminatorProperty)
        {
            SomeProperty = someProperty;
            SomeOtherProperty = someOtherProperty;
            DiscriminatorProperty = discriminatorProperty ?? "ClassThatInheritsFromBaseClassWithDiscriminatorAndSomeProperties";
        }

        /// <summary> Gets or sets the some property. </summary>
        public string SomeProperty { get; set; }
        /// <summary> Gets or sets the some other property. </summary>
        public string SomeOtherProperty { get; set; }
    }
}
