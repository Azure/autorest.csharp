// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Threading.Tasks;
using Azure;
using Azure.Identity;
using NUnit.Framework;
using SingleTopLevelClientWithOperations_LowLevel;

namespace SingleTopLevelClientWithOperations_LowLevel.Samples
{
    public class Samples_Client4
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Patch()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Client4 client = new TopLevelClientWithOperationClient(credential).GetClient4("<ClientParameter>");

            Response response = client.Patch("<filter>", null);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Patch_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Client4 client = new TopLevelClientWithOperationClient(credential).GetClient4("<ClientParameter>");

            Response response = await client.PatchAsync("<filter>", null);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Patch_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Client4 client = new TopLevelClientWithOperationClient(credential).GetClient4("<ClientParameter>");

            Response response = client.Patch("<filter>", null);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Patch_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Client4 client = new TopLevelClientWithOperationClient(credential).GetClient4("<ClientParameter>");

            Response response = await client.PatchAsync("<filter>", null);
        }
    }
}
