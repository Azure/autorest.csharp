<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="NoRequestBodyResponseBodyAsync(int,int,int?,string,RequestContext)">
<example>
This sample shows how to call NoRequestBodyResponseBodyAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ParametersLowlevelClient(credential);

Response response = await client.NoRequestBodyResponseBodyAsync(1234, 1234, 1234, "<status>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
    <member name="NoRequestBodyResponseBody(int,int,int?,string,RequestContext)">
<example>
This sample shows how to call NoRequestBodyResponseBody with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ParametersLowlevelClient(credential);

Response response = client.NoRequestBodyResponseBody(1234, 1234, 1234, "<status>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
    <member name="RequestBodyResponseBodyAsync(RequestContent,RequestContext)">
<example>
This sample shows how to call RequestBodyResponseBodyAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ParametersLowlevelClient(credential);

var data = new {};

Response response = await client.RequestBodyResponseBodyAsync(RequestContent.Create(data), new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call RequestBodyResponseBodyAsync with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ParametersLowlevelClient(credential);

var data = new {
    Code = "<Code>",
    Status = "<Status>",
};

Response response = await client.RequestBodyResponseBodyAsync(RequestContent.Create(data), new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("Code").ToString());
Console.WriteLine(result.GetProperty("Status").ToString());
]]></code>
</example>
    </member>
    <member name="RequestBodyResponseBody(RequestContent,RequestContext)">
<example>
This sample shows how to call RequestBodyResponseBody with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ParametersLowlevelClient(credential);

var data = new {};

Response response = client.RequestBodyResponseBody(RequestContent.Create(data), new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call RequestBodyResponseBody with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ParametersLowlevelClient(credential);

var data = new {
    Code = "<Code>",
    Status = "<Status>",
};

Response response = client.RequestBodyResponseBody(RequestContent.Create(data), new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("Code").ToString());
Console.WriteLine(result.GetProperty("Status").ToString());
]]></code>
</example>
    </member>
    <member name="DeleteNoRequestBodyResponseBodyAsync(string,RequestContext)">
<example>
This sample shows how to call DeleteNoRequestBodyResponseBodyAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ParametersLowlevelClient(credential);

Response response = await client.DeleteNoRequestBodyResponseBodyAsync("<resourceName>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
    <member name="DeleteNoRequestBodyResponseBody(string,RequestContext)">
<example>
This sample shows how to call DeleteNoRequestBodyResponseBody with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ParametersLowlevelClient(credential);

Response response = client.DeleteNoRequestBodyResponseBody("<resourceName>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
</example>
    </member>
    <member name="NoRequestBodyNoResponseBodyAsync(RequestContext)">
<example>
This sample shows how to call NoRequestBodyNoResponseBodyAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ParametersLowlevelClient(credential);

Response response = await client.NoRequestBodyNoResponseBodyAsync();
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="NoRequestBodyNoResponseBody(RequestContext)">
<example>
This sample shows how to call NoRequestBodyNoResponseBody.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ParametersLowlevelClient(credential);

Response response = client.NoRequestBodyNoResponseBody();
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="RequestBodyNoResponseBodyAsync(RequestContent,RequestContext)">
<example>
This sample shows how to call RequestBodyNoResponseBodyAsync with required parameters and request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ParametersLowlevelClient(credential);

var data = "<String>";

Response response = await client.RequestBodyNoResponseBodyAsync(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="RequestBodyNoResponseBody(RequestContent,RequestContext)">
<example>
This sample shows how to call RequestBodyNoResponseBody with required parameters and request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ParametersLowlevelClient(credential);

var data = "<String>";

Response response = client.RequestBodyNoResponseBody(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="OptionalPathParametersAsync(int,string,int,RequestContext)">
<example>
This sample shows how to call OptionalPathParametersAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ParametersLowlevelClient(credential);

Response response = await client.OptionalPathParametersAsync(1234, "<name>", 1234);
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="OptionalPathParameters(int,string,int,RequestContext)">
<example>
This sample shows how to call OptionalPathParameters with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ParametersLowlevelClient(credential);

Response response = client.OptionalPathParameters(1234, "<name>", 1234);
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="OptionalPathParametersWithMixedSequenceAsync(int,string,int,RequestContext)">
<example>
This sample shows how to call OptionalPathParametersWithMixedSequenceAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ParametersLowlevelClient(credential);

Response response = await client.OptionalPathParametersWithMixedSequenceAsync(1234, "<name>", 1234);
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="OptionalPathParametersWithMixedSequence(int,string,int,RequestContext)">
<example>
This sample shows how to call OptionalPathParametersWithMixedSequence with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ParametersLowlevelClient(credential);

Response response = client.OptionalPathParametersWithMixedSequence(1234, "<name>", 1234);
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="OptionalPathBodyParametersWithMixedSequenceAsync(int,string,int,int,RequestContent,int?,RequestContext)">
<example>
This sample shows how to call OptionalPathBodyParametersWithMixedSequenceAsync with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ParametersLowlevelClient(credential);

var data = new {};

Response response = await client.OptionalPathBodyParametersWithMixedSequenceAsync(1234, "<name>", 1234, 1234, RequestContent.Create(data), 1234, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call OptionalPathBodyParametersWithMixedSequenceAsync with all parameters and request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ParametersLowlevelClient(credential);

var data = new {
    Code = "<Code>",
    Status = "<Status>",
};

Response response = await client.OptionalPathBodyParametersWithMixedSequenceAsync(1234, "<name>", 1234, 1234, RequestContent.Create(data), 1234, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="OptionalPathBodyParametersWithMixedSequence(int,string,int,int,RequestContent,int?,RequestContext)">
<example>
This sample shows how to call OptionalPathBodyParametersWithMixedSequence with required parameters.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ParametersLowlevelClient(credential);

var data = new {};

Response response = client.OptionalPathBodyParametersWithMixedSequence(1234, "<name>", 1234, 1234, RequestContent.Create(data), 1234, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call OptionalPathBodyParametersWithMixedSequence with all parameters and request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new ParametersLowlevelClient(credential);

var data = new {
    Code = "<Code>",
    Status = "<Status>",
};

Response response = client.OptionalPathBodyParametersWithMixedSequence(1234, "<name>", 1234, 1234, RequestContent.Create(data), 1234, new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
  </members>
</doc>