// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.IO;
using System.Text.Json;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace BodyAndPath_LowLevel.Samples
{
    public class Samples_BodyAndPathClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Create()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new BodyAndPathClient(credential);

            var data = new { };

            Response response = client.Create("<itemName>", RequestContent.Create(data));
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CreateStream()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new BodyAndPathClient(credential);

            var data = File.OpenRead("<filePath>");

            Response response = client.CreateStream("<itemNameStream>", RequestContent.Create(data), ContentType.ApplicationOctetStream);
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CreateEnum()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new BodyAndPathClient(credential);

            var data = new { };

            Response response = client.CreateEnum("<enumName1>", "<enumName2>", RequestContent.Create(data));
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetBodyAndPaths()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new BodyAndPathClient(credential);

            Response response = client.GetBodyAndPaths();

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetItems()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new BodyAndPathClient(credential);

            Response response = client.GetItems();

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Update()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new BodyAndPathClient(credential);

            var data = new { };

            Response response = client.Update("<item3>", "<item2>", "<item4>", RequestContent.Create(data));
            Console.WriteLine(response.Status);
        }
    }
}
