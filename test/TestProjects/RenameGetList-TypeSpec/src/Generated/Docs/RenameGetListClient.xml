<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetProjectAsync(string,RequestContext)">
      <example>
This sample shows how to call GetProjectAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
RenameGetListClient client = new RenameGetListClient(endpoint);

Response response = await client.GetProjectAsync("<projectName>", null);

JsonElement element = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(element.GetProperty("projectName").ToString());
Console.WriteLine(element.GetProperty("projectKind").ToString());
Console.WriteLine(element.GetProperty("storageInputContainerName").ToString());
Console.WriteLine(element.GetProperty("language").ToString());
Console.WriteLine(element.GetProperty("createdDateTime").ToString());
Console.WriteLine(element.GetProperty("lastModifiedDateTime").ToString());
Console.WriteLine(element.GetProperty("lastTrainedDateTime").ToString());
Console.WriteLine(element.GetProperty("lastDeployedDateTime").ToString());
]]></code>
This sample shows how to call GetProjectAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
RenameGetListClient client = new RenameGetListClient(endpoint);

Response response = await client.GetProjectAsync("<projectName>", null);

JsonElement element = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(element.GetProperty("projectName").ToString());
Console.WriteLine(element.GetProperty("projectKind").ToString());
Console.WriteLine(element.GetProperty("storageInputContainerName").ToString());
Console.WriteLine(element.GetProperty("settings").GetProperty("<key>").ToString());
Console.WriteLine(element.GetProperty("multilingual").ToString());
Console.WriteLine(element.GetProperty("description").ToString());
Console.WriteLine(element.GetProperty("language").ToString());
Console.WriteLine(element.GetProperty("createdDateTime").ToString());
Console.WriteLine(element.GetProperty("lastModifiedDateTime").ToString());
Console.WriteLine(element.GetProperty("lastTrainedDateTime").ToString());
Console.WriteLine(element.GetProperty("lastDeployedDateTime").ToString());
]]></code></example>
    </member>
    <member name="GetProject(string,RequestContext)">
      <example>
This sample shows how to call GetProject and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
RenameGetListClient client = new RenameGetListClient(endpoint);

Response response = client.GetProject("<projectName>", null);

JsonElement element = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(element.GetProperty("projectName").ToString());
Console.WriteLine(element.GetProperty("projectKind").ToString());
Console.WriteLine(element.GetProperty("storageInputContainerName").ToString());
Console.WriteLine(element.GetProperty("language").ToString());
Console.WriteLine(element.GetProperty("createdDateTime").ToString());
Console.WriteLine(element.GetProperty("lastModifiedDateTime").ToString());
Console.WriteLine(element.GetProperty("lastTrainedDateTime").ToString());
Console.WriteLine(element.GetProperty("lastDeployedDateTime").ToString());
]]></code>
This sample shows how to call GetProject with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
RenameGetListClient client = new RenameGetListClient(endpoint);

Response response = client.GetProject("<projectName>", null);

JsonElement element = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(element.GetProperty("projectName").ToString());
Console.WriteLine(element.GetProperty("projectKind").ToString());
Console.WriteLine(element.GetProperty("storageInputContainerName").ToString());
Console.WriteLine(element.GetProperty("settings").GetProperty("<key>").ToString());
Console.WriteLine(element.GetProperty("multilingual").ToString());
Console.WriteLine(element.GetProperty("description").ToString());
Console.WriteLine(element.GetProperty("language").ToString());
Console.WriteLine(element.GetProperty("createdDateTime").ToString());
Console.WriteLine(element.GetProperty("lastModifiedDateTime").ToString());
Console.WriteLine(element.GetProperty("lastTrainedDateTime").ToString());
Console.WriteLine(element.GetProperty("lastDeployedDateTime").ToString());
]]></code></example>
    </member>
    <member name="GetDeploymentAsync(string,string,RequestContext)">
      <example>
This sample shows how to call GetDeploymentAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
RenameGetListClient client = new RenameGetListClient(endpoint);

Response response = await client.GetDeploymentAsync("<projectName>", "<deploymentName>", null);

JsonElement element = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(element.GetProperty("name").ToString());
]]></code>
This sample shows how to call GetDeploymentAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
RenameGetListClient client = new RenameGetListClient(endpoint);

Response response = await client.GetDeploymentAsync("<projectName>", "<deploymentName>", null);

JsonElement element = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(element.GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="GetDeployment(string,string,RequestContext)">
      <example>
This sample shows how to call GetDeployment and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
RenameGetListClient client = new RenameGetListClient(endpoint);

Response response = client.GetDeployment("<projectName>", "<deploymentName>", null);

JsonElement element = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(element.GetProperty("name").ToString());
]]></code>
This sample shows how to call GetDeployment with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
RenameGetListClient client = new RenameGetListClient(endpoint);

Response response = client.GetDeployment("<projectName>", "<deploymentName>", null);

JsonElement element = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(element.GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="GetProjectsAsync(RequestContext)">
      <example>
This sample shows how to call GetProjectsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
RenameGetListClient client = new RenameGetListClient(endpoint);

await foreach (BinaryData item in client.GetProjectsAsync(null))
{
    JsonElement element = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(element.GetProperty("projectName").ToString());
    Console.WriteLine(element.GetProperty("projectKind").ToString());
    Console.WriteLine(element.GetProperty("storageInputContainerName").ToString());
    Console.WriteLine(element.GetProperty("language").ToString());
    Console.WriteLine(element.GetProperty("createdDateTime").ToString());
    Console.WriteLine(element.GetProperty("lastModifiedDateTime").ToString());
    Console.WriteLine(element.GetProperty("lastTrainedDateTime").ToString());
    Console.WriteLine(element.GetProperty("lastDeployedDateTime").ToString());
}
]]></code>
This sample shows how to call GetProjectsAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
RenameGetListClient client = new RenameGetListClient(endpoint);

await foreach (BinaryData item in client.GetProjectsAsync(null))
{
    JsonElement element = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(element.GetProperty("projectName").ToString());
    Console.WriteLine(element.GetProperty("projectKind").ToString());
    Console.WriteLine(element.GetProperty("storageInputContainerName").ToString());
    Console.WriteLine(element.GetProperty("settings").GetProperty("<key>").ToString());
    Console.WriteLine(element.GetProperty("multilingual").ToString());
    Console.WriteLine(element.GetProperty("description").ToString());
    Console.WriteLine(element.GetProperty("language").ToString());
    Console.WriteLine(element.GetProperty("createdDateTime").ToString());
    Console.WriteLine(element.GetProperty("lastModifiedDateTime").ToString());
    Console.WriteLine(element.GetProperty("lastTrainedDateTime").ToString());
    Console.WriteLine(element.GetProperty("lastDeployedDateTime").ToString());
}
]]></code></example>
    </member>
    <member name="GetProjects(RequestContext)">
      <example>
This sample shows how to call GetProjects and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
RenameGetListClient client = new RenameGetListClient(endpoint);

foreach (BinaryData item in client.GetProjects(null))
{
    JsonElement element = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(element.GetProperty("projectName").ToString());
    Console.WriteLine(element.GetProperty("projectKind").ToString());
    Console.WriteLine(element.GetProperty("storageInputContainerName").ToString());
    Console.WriteLine(element.GetProperty("language").ToString());
    Console.WriteLine(element.GetProperty("createdDateTime").ToString());
    Console.WriteLine(element.GetProperty("lastModifiedDateTime").ToString());
    Console.WriteLine(element.GetProperty("lastTrainedDateTime").ToString());
    Console.WriteLine(element.GetProperty("lastDeployedDateTime").ToString());
}
]]></code>
This sample shows how to call GetProjects with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
RenameGetListClient client = new RenameGetListClient(endpoint);

foreach (BinaryData item in client.GetProjects(null))
{
    JsonElement element = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(element.GetProperty("projectName").ToString());
    Console.WriteLine(element.GetProperty("projectKind").ToString());
    Console.WriteLine(element.GetProperty("storageInputContainerName").ToString());
    Console.WriteLine(element.GetProperty("settings").GetProperty("<key>").ToString());
    Console.WriteLine(element.GetProperty("multilingual").ToString());
    Console.WriteLine(element.GetProperty("description").ToString());
    Console.WriteLine(element.GetProperty("language").ToString());
    Console.WriteLine(element.GetProperty("createdDateTime").ToString());
    Console.WriteLine(element.GetProperty("lastModifiedDateTime").ToString());
    Console.WriteLine(element.GetProperty("lastTrainedDateTime").ToString());
    Console.WriteLine(element.GetProperty("lastDeployedDateTime").ToString());
}
]]></code></example>
    </member>
    <member name="GetDeploymentsAsync(string,RequestContext)">
      <example>
This sample shows how to call GetDeploymentsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
RenameGetListClient client = new RenameGetListClient(endpoint);

await foreach (BinaryData item in client.GetDeploymentsAsync("<projectName>", null))
{
    JsonElement element = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(element.GetProperty("name").ToString());
}
]]></code>
This sample shows how to call GetDeploymentsAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
RenameGetListClient client = new RenameGetListClient(endpoint);

await foreach (BinaryData item in client.GetDeploymentsAsync("<projectName>", null))
{
    JsonElement element = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(element.GetProperty("name").ToString());
}
]]></code></example>
    </member>
    <member name="GetDeployments(string,RequestContext)">
      <example>
This sample shows how to call GetDeployments and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
RenameGetListClient client = new RenameGetListClient(endpoint);

foreach (BinaryData item in client.GetDeployments("<projectName>", null))
{
    JsonElement element = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(element.GetProperty("name").ToString());
}
]]></code>
This sample shows how to call GetDeployments with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
RenameGetListClient client = new RenameGetListClient(endpoint);

foreach (BinaryData item in client.GetDeployments("<projectName>", null))
{
    JsonElement element = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(element.GetProperty("name").ToString());
}
]]></code></example>
    </member>
  </members>
</doc>