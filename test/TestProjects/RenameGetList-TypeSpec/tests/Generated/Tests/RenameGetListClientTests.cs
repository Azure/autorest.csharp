// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Identity;
using NUnit.Framework;
using RenameGetList;

namespace RenameGetList.Tests
{
    public partial class RenameGetListClientTests : RenameGetListTestBase
    {
        public RenameGetListClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetProject_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            RenameGetListClient client = CreateRenameGetListClient(endpoint);

            Response response = await client.GetProjectAsync("<projectName>", null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetProject_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            RenameGetListClient client = CreateRenameGetListClient(endpoint);

            Response response = await client.GetProjectAsync("<projectName>", null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetDeployment_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            RenameGetListClient client = CreateRenameGetListClient(endpoint);

            Response response = await client.GetDeploymentAsync("<projectName>", "<deploymentName>", null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetDeployment_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            RenameGetListClient client = CreateRenameGetListClient(endpoint);

            Response response = await client.GetDeploymentAsync("<projectName>", "<deploymentName>", null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetProjects_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            RenameGetListClient client = CreateRenameGetListClient(endpoint);

            await foreach (BinaryData item in client.GetProjectsAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetProjects_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            RenameGetListClient client = CreateRenameGetListClient(endpoint);

            await foreach (BinaryData item in client.GetProjectsAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetDeployments_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            RenameGetListClient client = CreateRenameGetListClient(endpoint);

            await foreach (BinaryData item in client.GetDeploymentsAsync("<projectName>", null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetDeployments_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            RenameGetListClient client = CreateRenameGetListClient(endpoint);

            await foreach (BinaryData item in client.GetDeploymentsAsync("<projectName>", null))
            {
            }
        }
    }
}
