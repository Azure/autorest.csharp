<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetSupportedLanguagesAsync(int?,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetSupportedLanguagesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
Global client = new AuthoringTypeSpecClient(endpoint).GetGlobalClient(apiVersion: "2022-05-15-preview");

Response response = await client.GetSupportedLanguagesAsync();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("languageName").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("languageCode").ToString());
]]></code>
This sample shows how to call GetSupportedLanguagesAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
Global client = new AuthoringTypeSpecClient(endpoint).GetGlobalClient(apiVersion: "2022-05-15-preview");

Response response = await client.GetSupportedLanguagesAsync(top: 1234, skip: 1234, maxpagesize: 1234);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("languageName").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("languageCode").ToString());
Console.WriteLine(result.GetProperty("nextLink").ToString());
]]></code></example>
    </member>
    <member name="GetSupportedLanguages(int?,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetSupportedLanguages and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
Global client = new AuthoringTypeSpecClient(endpoint).GetGlobalClient(apiVersion: "2022-05-15-preview");

Response response = client.GetSupportedLanguages();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("languageName").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("languageCode").ToString());
]]></code>
This sample shows how to call GetSupportedLanguages with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
Global client = new AuthoringTypeSpecClient(endpoint).GetGlobalClient(apiVersion: "2022-05-15-preview");

Response response = client.GetSupportedLanguages(top: 1234, skip: 1234, maxpagesize: 1234);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("languageName").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("languageCode").ToString());
Console.WriteLine(result.GetProperty("nextLink").ToString());
]]></code></example>
    </member>
    <member name="GetTrainingConfigVersionsAsync(int?,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetTrainingConfigVersionsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
Global client = new AuthoringTypeSpecClient(endpoint).GetGlobalClient(apiVersion: "2022-05-15-preview");

Response response = await client.GetTrainingConfigVersionsAsync();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("trainingConfigVersionStr").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("modelExpirationDate").ToString());
]]></code>
This sample shows how to call GetTrainingConfigVersionsAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
Global client = new AuthoringTypeSpecClient(endpoint).GetGlobalClient(apiVersion: "2022-05-15-preview");

Response response = await client.GetTrainingConfigVersionsAsync(top: 1234, skip: 1234, maxpagesize: 1234);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("trainingConfigVersionStr").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("modelExpirationDate").ToString());
Console.WriteLine(result.GetProperty("nextLink").ToString());
]]></code></example>
    </member>
    <member name="GetTrainingConfigVersions(int?,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetTrainingConfigVersions and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
Global client = new AuthoringTypeSpecClient(endpoint).GetGlobalClient(apiVersion: "2022-05-15-preview");

Response response = client.GetTrainingConfigVersions();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("trainingConfigVersionStr").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("modelExpirationDate").ToString());
]]></code>
This sample shows how to call GetTrainingConfigVersions with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
Global client = new AuthoringTypeSpecClient(endpoint).GetGlobalClient(apiVersion: "2022-05-15-preview");

Response response = client.GetTrainingConfigVersions(top: 1234, skip: 1234, maxpagesize: 1234);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("trainingConfigVersionStr").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("modelExpirationDate").ToString());
Console.WriteLine(result.GetProperty("nextLink").ToString());
]]></code></example>
    </member>
  </members>
</doc>