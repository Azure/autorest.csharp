// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace SerializationCustomization.Models
{
    /// <summary> The AlwaysInitializeTestModel. </summary>
    public partial class AlwaysInitializeTestModel
    {
        /// <summary> Initializes a new instance of AlwaysInitializeTestModel. </summary>
        /// <param name="requiredList"> . </param>
        /// <param name="requiredAlwaysInitializeList"> . </param>
        /// <param name="requiredAlwaysInitializeObject"> . </param>
        public AlwaysInitializeTestModel(IEnumerable<Item> requiredList, IEnumerable<Item> requiredAlwaysInitializeList, Item requiredAlwaysInitializeObject)
        {
            if (requiredList == null)
            {
                throw new ArgumentNullException(nameof(requiredList));
            }
            if (requiredAlwaysInitializeList == null)
            {
                throw new ArgumentNullException(nameof(requiredAlwaysInitializeList));
            }
            if (requiredAlwaysInitializeObject == null)
            {
                throw new ArgumentNullException(nameof(requiredAlwaysInitializeObject));
            }

            AlwaysInitializeList = new List<Item>();
            RequiredList = requiredList.ToArray();
            RequiredAlwaysInitializeList = requiredAlwaysInitializeList.ToArray();
            RequiredAlwaysInitializeObject = requiredAlwaysInitializeObject;
            AlwaysInitializeObject = new Item();
        }

        /// <summary> Initializes a new instance of AlwaysInitializeTestModel. </summary>
        /// <param name="alwaysInitializeList"> . </param>
        /// <param name="requiredList"> . </param>
        /// <param name="requiredAlwaysInitializeList"> . </param>
        /// <param name="defaultList"> . </param>
        /// <param name="requiredAlwaysInitializeObject"> . </param>
        /// <param name="alwaysInitializeObject"> . </param>
        /// <param name="defaultObject"> . </param>
        internal AlwaysInitializeTestModel(IList<Item> alwaysInitializeList, IList<Item> requiredList, IList<Item> requiredAlwaysInitializeList, IList<Item> defaultList, Item requiredAlwaysInitializeObject, Item alwaysInitializeObject, Item defaultObject)
        {
            AlwaysInitializeList = alwaysInitializeList ?? new List<Item>();
            RequiredList = requiredList;
            RequiredAlwaysInitializeList = requiredAlwaysInitializeList ?? new List<Item>();
            DefaultList = defaultList;
            RequiredAlwaysInitializeObject = requiredAlwaysInitializeObject ?? new Item();
            AlwaysInitializeObject = alwaysInitializeObject ?? new Item();
            DefaultObject = defaultObject;
        }
        public IList<Item> RequiredList { get; set; }
        public IList<Item> DefaultList { get; set; }
        public Item DefaultObject { get; set; }
    }
}
