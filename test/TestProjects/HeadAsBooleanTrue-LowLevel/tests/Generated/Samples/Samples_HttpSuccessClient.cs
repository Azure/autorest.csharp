// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.IO;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace HeadAsBooleanTrue_LowLevel.Samples
{
    public class Samples_HttpSuccessClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Head200()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new HttpSuccessClient(credential);

            Response<bool> response = client.Head200();
            Console.WriteLine(response.GetRawResponse().Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Head200_AllParameters()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new HttpSuccessClient(credential);

            Response<bool> response = client.Head200(new RequestContext());
            Console.WriteLine(response.GetRawResponse().Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Head200_Async()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new HttpSuccessClient(credential);

            Response<bool> response = await client.Head200Async();
            Console.WriteLine(response.GetRawResponse().Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Head200_AllParameters_Async()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new HttpSuccessClient(credential);

            Response<bool> response = await client.Head200Async(new RequestContext());
            Console.WriteLine(response.GetRawResponse().Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Head204()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new HttpSuccessClient(credential);

            Response<bool> response = client.Head204();
            Console.WriteLine(response.GetRawResponse().Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Head204_AllParameters()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new HttpSuccessClient(credential);

            Response<bool> response = client.Head204(new RequestContext());
            Console.WriteLine(response.GetRawResponse().Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Head204_Async()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new HttpSuccessClient(credential);

            Response<bool> response = await client.Head204Async();
            Console.WriteLine(response.GetRawResponse().Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Head204_AllParameters_Async()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new HttpSuccessClient(credential);

            Response<bool> response = await client.Head204Async(new RequestContext());
            Console.WriteLine(response.GetRawResponse().Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Head404()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new HttpSuccessClient(credential);

            Response<bool> response = client.Head404();
            Console.WriteLine(response.GetRawResponse().Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Head404_AllParameters()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new HttpSuccessClient(credential);

            Response<bool> response = client.Head404(new RequestContext());
            Console.WriteLine(response.GetRawResponse().Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Head404_Async()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new HttpSuccessClient(credential);

            Response<bool> response = await client.Head404Async();
            Console.WriteLine(response.GetRawResponse().Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Head404_AllParameters_Async()
        {
            var credential = new AzureKeyCredential("<key>");
            var client = new HttpSuccessClient(credential);

            Response<bool> response = await client.Head404Async(new RequestContext());
            Console.WriteLine(response.GetRawResponse().Status);
        }
    }
}
