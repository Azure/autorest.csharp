// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using TypeSpec.Versioning.Latest.Models;

namespace TypeSpec.Versioning.Latest.Samples
{
    public partial class Samples_VersioningOp
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Resource_GetResources_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

            foreach (BinaryData item in client.GetResources(null, null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Resource_GetResources_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

            await foreach (BinaryData item in client.GetResourcesAsync(null, null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Resource_GetResources_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

            foreach (Models.Resource item in client.GetResources())
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Resource_GetResources_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

            await foreach (Models.Resource item in client.GetResourcesAsync())
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Resource_GetResources_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

            foreach (BinaryData item in client.GetResources(new string[] { "<select>" }, "<filter>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Resource_GetResources_AllParameters_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

            await foreach (BinaryData item in client.GetResourcesAsync(new string[] { "<select>" }, "<filter>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Resource_GetResources_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

            foreach (Models.Resource item in client.GetResources(select: new string[] { "<select>" }, filter: "<filter>"))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Resource_GetResources_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

            await foreach (Models.Resource item in client.GetResourcesAsync(select: new string[] { "<select>" }, filter: "<filter>"))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_VersioningOp_Export_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

            Operation<BinaryData> operation = client.Export(WaitUntil.Completed, "<name>", null, null, null, null);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("resourceUri").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_VersioningOp_Export_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

            Operation<BinaryData> operation = await client.ExportAsync(WaitUntil.Completed, "<name>", null, null, null, null);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("resourceUri").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_VersioningOp_Export_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

            Operation<ExportedResource> operation = client.Export(WaitUntil.Completed, "<name>");
            ExportedResource responseData = operation.Value;
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_VersioningOp_Export_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

            Operation<ExportedResource> operation = await client.ExportAsync(WaitUntil.Completed, "<name>");
            ExportedResource responseData = operation.Value;
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_VersioningOp_Export_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

            Operation<BinaryData> operation = client.Export(WaitUntil.Completed, "<name>", "<projectFileVersion>", "<projectedFileFormat>", 1234, null);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("resourceUri").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_VersioningOp_Export_AllParameters_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

            Operation<BinaryData> operation = await client.ExportAsync(WaitUntil.Completed, "<name>", "<projectFileVersion>", "<projectedFileFormat>", 1234, null);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("resourceUri").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_VersioningOp_Export_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

            Operation<ExportedResource> operation = client.Export(WaitUntil.Completed, "<name>", projectFileVersion: "<projectFileVersion>", projectedFileFormat: "<projectedFileFormat>", maxLines: 1234);
            ExportedResource responseData = operation.Value;
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_VersioningOp_Export_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

            Operation<ExportedResource> operation = await client.ExportAsync(WaitUntil.Completed, "<name>", projectFileVersion: "<projectFileVersion>", projectedFileFormat: "<projectedFileFormat>", maxLines: 1234);
            ExportedResource responseData = operation.Value;
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Resource_CreateLongRunning_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

            using RequestContent content = RequestContent.Create(new
            {
                type = "<type>",
            });
            Operation<BinaryData> operation = client.CreateLongRunning(WaitUntil.Completed, "<name>", content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Resource_CreateLongRunning_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

            using RequestContent content = RequestContent.Create(new
            {
                type = "<type>",
            });
            Operation<BinaryData> operation = await client.CreateLongRunningAsync(WaitUntil.Completed, "<name>", content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Resource_CreateLongRunning_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

            Models.Resource resource = new Models.Resource("<type>");
            Operation<Models.Resource> operation = client.CreateLongRunning(WaitUntil.Completed, "<name>", resource);
            Models.Resource responseData = operation.Value;
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Resource_CreateLongRunning_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

            Models.Resource resource = new Models.Resource("<type>");
            Operation<Models.Resource> operation = await client.CreateLongRunningAsync(WaitUntil.Completed, "<name>", resource);
            Models.Resource responseData = operation.Value;
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Resource_CreateLongRunning_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

            using RequestContent content = RequestContent.Create(new
            {
                type = "<type>",
            });
            Operation<BinaryData> operation = client.CreateLongRunning(WaitUntil.Completed, "<name>", content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Resource_CreateLongRunning_AllParameters_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

            using RequestContent content = RequestContent.Create(new
            {
                type = "<type>",
            });
            Operation<BinaryData> operation = await client.CreateLongRunningAsync(WaitUntil.Completed, "<name>", content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Resource_CreateLongRunning_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

            Models.Resource resource = new Models.Resource("<type>");
            Operation<Models.Resource> operation = client.CreateLongRunning(WaitUntil.Completed, "<name>", resource);
            Models.Resource responseData = operation.Value;
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Resource_CreateLongRunning_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

            Models.Resource resource = new Models.Resource("<type>");
            Operation<Models.Resource> operation = await client.CreateLongRunningAsync(WaitUntil.Completed, "<name>", resource);
            Models.Resource responseData = operation.Value;
        }
    }
}
