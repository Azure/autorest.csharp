<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetResourcesAsync(IEnumerable{string},string,CancellationToken)">
      <example>
This sample shows how to call GetResourcesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

await foreach (Models.Resource item in client.GetResourcesAsync())
{
}
]]></code>
This sample shows how to call GetResourcesAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

await foreach (Models.Resource item in client.GetResourcesAsync(select: new string[] { "<select>" }, filter: "<filter>"))
{
}
]]></code></example>
    </member>
    <member name="GetResources(IEnumerable{string},string,CancellationToken)">
      <example>
This sample shows how to call GetResources.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

foreach (Models.Resource item in client.GetResources())
{
}
]]></code>
This sample shows how to call GetResources with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

foreach (Models.Resource item in client.GetResources(select: new string[] { "<select>" }, filter: "<filter>"))
{
}
]]></code></example>
    </member>
    <member name="GetResourcesAsync(IEnumerable{string},string,RequestContext)">
      <example>
This sample shows how to call GetResourcesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

await foreach (BinaryData item in client.GetResourcesAsync(null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
}
]]></code>
This sample shows how to call GetResourcesAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

await foreach (BinaryData item in client.GetResourcesAsync(new string[] { "<select>" }, "<filter>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
}
]]></code></example>
    </member>
    <member name="GetResources(IEnumerable{string},string,RequestContext)">
      <example>
This sample shows how to call GetResources and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

foreach (BinaryData item in client.GetResources(null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
}
]]></code>
This sample shows how to call GetResources with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

foreach (BinaryData item in client.GetResources(new string[] { "<select>" }, "<filter>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
}
]]></code></example>
    </member>
    <member name="ExportAsync(WaitUntil,string,string,string,int?,CancellationToken)">
      <example>
This sample shows how to call ExportAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

Operation<ExportedResource> operation = await client.ExportAsync(WaitUntil.Completed, "<name>");
ExportedResource responseData = operation.Value;
]]></code>
This sample shows how to call ExportAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

Operation<ExportedResource> operation = await client.ExportAsync(WaitUntil.Completed, "<name>", projectFileVersion: "<projectFileVersion>", projectedFileFormat: "<projectedFileFormat>", maxLines: 1234);
ExportedResource responseData = operation.Value;
]]></code></example>
    </member>
    <member name="Export(WaitUntil,string,string,string,int?,CancellationToken)">
      <example>
This sample shows how to call Export.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

Operation<ExportedResource> operation = client.Export(WaitUntil.Completed, "<name>");
ExportedResource responseData = operation.Value;
]]></code>
This sample shows how to call Export with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

Operation<ExportedResource> operation = client.Export(WaitUntil.Completed, "<name>", projectFileVersion: "<projectFileVersion>", projectedFileFormat: "<projectedFileFormat>", maxLines: 1234);
ExportedResource responseData = operation.Value;
]]></code></example>
    </member>
    <member name="ExportAsync(WaitUntil,string,string,string,int?,RequestContext)">
      <example>
This sample shows how to call ExportAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

Operation<BinaryData> operation = await client.ExportAsync(WaitUntil.Completed, "<name>", null, null, null, null);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("resourceUri").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
This sample shows how to call ExportAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

Operation<BinaryData> operation = await client.ExportAsync(WaitUntil.Completed, "<name>", "<projectFileVersion>", "<projectedFileFormat>", 1234, null);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("resourceUri").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code></example>
    </member>
    <member name="Export(WaitUntil,string,string,string,int?,RequestContext)">
      <example>
This sample shows how to call Export and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

Operation<BinaryData> operation = client.Export(WaitUntil.Completed, "<name>", null, null, null, null);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("resourceUri").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
This sample shows how to call Export with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

Operation<BinaryData> operation = client.Export(WaitUntil.Completed, "<name>", "<projectFileVersion>", "<projectedFileFormat>", 1234, null);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("resourceUri").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code></example>
    </member>
    <member name="CreateLongRunningAsync(WaitUntil,string,Resource,CancellationToken)">
      <example>
This sample shows how to call CreateLongRunningAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

Models.Resource resource = new Models.Resource("<type>");
Operation<Models.Resource> operation = await client.CreateLongRunningAsync(WaitUntil.Completed, "<name>", resource);
Models.Resource responseData = operation.Value;
]]></code>
This sample shows how to call CreateLongRunningAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

Models.Resource resource = new Models.Resource("<type>");
Operation<Models.Resource> operation = await client.CreateLongRunningAsync(WaitUntil.Completed, "<name>", resource);
Models.Resource responseData = operation.Value;
]]></code></example>
    </member>
    <member name="CreateLongRunning(WaitUntil,string,Resource,CancellationToken)">
      <example>
This sample shows how to call CreateLongRunning.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

Models.Resource resource = new Models.Resource("<type>");
Operation<Models.Resource> operation = client.CreateLongRunning(WaitUntil.Completed, "<name>", resource);
Models.Resource responseData = operation.Value;
]]></code>
This sample shows how to call CreateLongRunning with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

Models.Resource resource = new Models.Resource("<type>");
Operation<Models.Resource> operation = client.CreateLongRunning(WaitUntil.Completed, "<name>", resource);
Models.Resource responseData = operation.Value;
]]></code></example>
    </member>
    <member name="CreateLongRunningAsync(WaitUntil,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateLongRunningAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

using RequestContent content = RequestContent.Create(new
{
    type = "<type>",
});
Operation<BinaryData> operation = await client.CreateLongRunningAsync(WaitUntil.Completed, "<name>", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
This sample shows how to call CreateLongRunningAsync with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

using RequestContent content = RequestContent.Create(new
{
    type = "<type>",
});
Operation<BinaryData> operation = await client.CreateLongRunningAsync(WaitUntil.Completed, "<name>", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code></example>
    </member>
    <member name="CreateLongRunning(WaitUntil,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateLongRunning and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

using RequestContent content = RequestContent.Create(new
{
    type = "<type>",
});
Operation<BinaryData> operation = client.CreateLongRunning(WaitUntil.Completed, "<name>", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
This sample shows how to call CreateLongRunning with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
VersioningOp client = new LatestClient(endpoint).GetVersioningOpClient(apiVersion: "2022-12-01-preview");

using RequestContent content = RequestContent.Create(new
{
    type = "<type>",
});
Operation<BinaryData> operation = client.CreateLongRunning(WaitUntil.Completed, "<name>", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code></example>
    </member>
  </members>
</doc>