// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace TypeSchemaMapping.Models
{
    internal static partial class UnexposedNonExtensibleEnumExtensions
    {
        public static string ToSerialString(this UnexposedNonExtensibleEnum value) => value switch
        {
            UnexposedNonExtensibleEnum.A => "A",
            UnexposedNonExtensibleEnum.B => "B",
            UnexposedNonExtensibleEnum.C => "C",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown UnexposedNonExtensibleEnum value.")
        };

        public static UnexposedNonExtensibleEnum ToUnexposedNonExtensibleEnum(this string value)
        {
            if (string.Equals(value, "A", StringComparison.InvariantCultureIgnoreCase)) return UnexposedNonExtensibleEnum.A;
            if (string.Equals(value, "B", StringComparison.InvariantCultureIgnoreCase)) return UnexposedNonExtensibleEnum.B;
            if (string.Equals(value, "C", StringComparison.InvariantCultureIgnoreCase)) return UnexposedNonExtensibleEnum.C;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown UnexposedNonExtensibleEnum value.");
        }
    }
}
