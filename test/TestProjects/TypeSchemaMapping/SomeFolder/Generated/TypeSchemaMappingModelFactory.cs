// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace TypeSchemaMapping.Models
{
    /// <summary> Model factory for models. </summary>
    public static partial class TypeSchemaMappingModelFactory
    {
        /// <summary> Initializes a new instance of ModelWithAbstractModel. </summary>
        /// <param name="abstractModelProperty">
        /// Please note <see cref="AbstractModel"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="DerivedFromAbstractModel"/>.
        /// </param>
        /// <returns> A new <see cref="Models.ModelWithAbstractModel"/> instance for mocking. </returns>
        public static ModelWithAbstractModel ModelWithAbstractModel(AbstractModel abstractModelProperty = null)
        {
            return new ModelWithAbstractModel(abstractModelProperty);
        }

        /// <summary> Initializes a new instance of ModelWithGuidProperty. </summary>
        /// <param name="modelProperty"> . </param>
        /// <returns> A new <see cref="Models.ModelWithGuidProperty"/> instance for mocking. </returns>
        public static ModelWithGuidProperty ModelWithGuidProperty(Guid? modelProperty = null)
        {
            return new ModelWithGuidProperty(modelProperty);
        }
    }
}
