import "@azure-tools/cadl-azure-core";
import "@cadl-lang/openapi";
import "@cadl-lang/rest";
import "@cadl-lang/versioning";
import "@azure-tools/cadl-dpg";

using Cadl.Http;
using Azure.DPG;
using Cadl.Versioning;
using Azure.Core;
using OpenAPI;

@serviceTitle("Text authoring")
@serviceVersion("2022-05-15-preview")
@versionedDependency(Azure.Core.Versions.v1_0_Preview_1)
@server(
    "{lroBasicUrl}",
    "Endpoint Service",
    {
        lroBasicUrl: string,
    }
)
namespace LroBasicCadl;


@Cadl.Rest.resource("projects")
model Project {
  @key
  @visibility("read")
  id: string;
  description?: string;

  name?: string;
}

interface Authoring {
  createProjectStatusMonitor is CustomCore.PollingOperation<Project>;

  @convenienceAPI
  @Azure.Core.pollingOperation(Authoring.createProjectStatusMonitor)
  createProject is Azure.Core.LongRunningResourceCreateWithServiceProvidedName<Project>;
  
  @convenienceAPI
  @Azure.Core.pollingOperation(Authoring.createProjectStatusMonitor)
  op updateProject is Azure.Core.LongRunningResourceCreateOrReplace<Project, Project>;
}

namespace CustomCore {
  @Cadl.Rest.parentResource(T)
  @Cadl.Rest.resource("operations")
  model OperationStatusResource<T> is Azure.Core.Foundations.OperationStatus {
    operationId: string;
  }

  @Cadl.Http.route("operations")
  @convenienceAPI
  op PollingOperation<TCustom> is Azure.Core.ResourceRead<OperationStatusResource<TCustom>>;
}

@route("/lro/pagination")
interface LROPagination {
  @summary("Gets projects.")
  @doc("LRO pagination method.")
  @convenienceAPI
  @pollingOperation
  op ListLroPaginationProjects is Azure.Core.ResourceList<Project>;
//   @post
//   op ListLroPaginationProjects is Foundations.Operation<{}, Foundations.CustomPage<Project, {}>>;

}

// @route("/lro/pagination2")
// interface LROPagination2 {
//   @summary("Gets projects.")
//   @doc("LRO pagination method.")
//   @convenienceAPI
//   @pollingOperation
//   @post
//   op FindLroPaginationProjects is Foundations.Operation<{}, Foundations.CustomPage<Project, {}>>;

//   @summary("Gets projects.")
//   @doc("LRO pagination method.")
//   @convenienceAPI
//   @pollingOperation
//   op generate is LongRunningResourceCollectionAction<
//     Project,
//     {},
//     Foundations.CustomPage<Project, {}>
//   >;
// op generate is Foundations.ResourceCollectionOperation<
//   Project,
//   {},
//   AcceptedResponse &
//     ResourceOperationStatus<Project, Foundations.CustomPage<Project, {}>, Foundations.Error> &
//     Foundations.LongRunningStatusLocation
// >;
// }
