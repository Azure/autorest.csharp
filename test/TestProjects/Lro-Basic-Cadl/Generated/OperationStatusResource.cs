// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.Core.Foundations;

namespace LroBasicCadl.CustomCore
{
    /// <summary> Status monitor resource for long running operations. </summary>
    public partial class OperationStatusResource
    {
        /// <summary> Initializes a new instance of OperationStatusResource. </summary>
        /// <param name="id"></param>
        /// <param name="status"></param>
        /// <param name="operationId"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="id"/> or <paramref name="operationId"/> is null. </exception>
        public OperationStatusResource(string id, Azure.Core.Foundations.OperationState status, string operationId)
        {
            Argument.AssertNotNull(id, nameof(id));
            Argument.AssertNotNull(operationId, nameof(operationId));

            Id = id;
            Status = status;
            OperationId = operationId;
        }

        /// <summary> Initializes a new instance of OperationStatusResource. </summary>
        /// <param name="id"></param>
        /// <param name="status"></param>
        /// <param name="error"></param>
        /// <param name="operationId"></param>
        internal OperationStatusResource(string id, Azure.Core.Foundations.OperationState status, Error error, string operationId)
        {
            Id = id;
            Status = status;
            Error = error;
            OperationId = operationId;
        }

        /// <summary> Gets or sets the id. </summary>
        public string Id { get; set; }
        /// <summary> Gets or sets the status. </summary>
        public Azure.Core.Foundations.OperationState Status { get; set; }
        /// <summary> Gets or sets the error. </summary>
        public Error Error { get; set; }
        /// <summary> Gets or sets the operation id. </summary>
        public string OperationId { get; set; }
    }
}
