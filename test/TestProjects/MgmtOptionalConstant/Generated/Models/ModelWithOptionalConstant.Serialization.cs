// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace MgmtOptionalConstant.Models
{
    public partial class ModelWithOptionalConstant : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(OptionalStringConstant))
            {
                writer.WritePropertyName("optionalStringConstant"u8);
                writer.WriteStringValue(OptionalStringConstant.Value.ToString());
            }
            if (Optional.IsDefined(OptionalIntConstant))
            {
                writer.WritePropertyName("optionalIntConstant"u8);
                writer.WriteNumberValue(OptionalIntConstant.Value.ToSerialInt32());
            }
            if (Optional.IsDefined(OptionalFloatConstant))
            {
                writer.WritePropertyName("optionalFloatConstant"u8);
                writer.WriteNumberValue(OptionalFloatConstant.Value.ToSerialSingle());
            }
            if (Optional.IsDefined(SettingName))
            {
                writer.WritePropertyName("settingName"u8);
                writer.WriteStringValue(SettingName.Value.ToSerialString());
            }
            writer.WriteEndObject();
        }

        internal static ModelWithOptionalConstant DeserializeModelWithOptionalConstant(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<StringConstant> optionalStringConstant = default;
            Optional<IntConstant> optionalIntConstant = default;
            Optional<FloatConstant> optionalFloatConstant = default;
            Optional<SettingName> settingName = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("optionalStringConstant"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    optionalStringConstant = new StringConstant(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("optionalIntConstant"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    optionalIntConstant = new IntConstant(property.Value.GetInt32());
                    continue;
                }
                if (property.NameEquals("optionalFloatConstant"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    optionalFloatConstant = new FloatConstant(property.Value.GetSingle());
                    continue;
                }
                if (property.NameEquals("settingName"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    settingName = property.Value.GetString().ToSettingName();
                    continue;
                }
            }
            return new ModelWithOptionalConstant(Optional.ToNullable(optionalStringConstant), Optional.ToNullable(optionalIntConstant), Optional.ToNullable(optionalFloatConstant), Optional.ToNullable(settingName));
        }
    }
}
