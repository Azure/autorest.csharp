{
    "swagger": "2.0",
    "info": {
        "title": "MgmtListMethods",
        "description": "Management List Methods",
        "version": "2020-06-01"
    },
    "host": "management.azure.com",
    "schemes": ["https"],
    "consumes": ["application/json"],
    "produces": ["application/json"],
    "security": [
        {
            "azure_auth": ["user_impersonation"]
        }
    ],
    "securityDefinitions": {
        "azure_auth": {
            "type": "oauth2",
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "flow": "implicit",
            "description": "Azure Active Directory OAuth2 Flow",
            "scopes": {
                "user_impersonation": "impersonate your user account"
            }
        }
    },
    "paths": {
        "/subscriptions/{subscriptionId}/providers/Microsoft.Fake/fakes/{fakeName}": {
            "put": {
                "tags": ["Fakes"],
                "operationId": "Fakes_CreateOrUpdate",
                "description": "Create or update an fake.",
                "parameters": [
                    {
                        "name": "fakeName",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The name of the fake."
                    },
                    {
                        "name": "parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Fake"
                        },
                        "description": "Parameters supplied to the Create Availability Set operation."
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    },
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Fake"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Fakes"
                ],
                "operationId": "Fakes_Get",
                "description": "Retrieves information about an fake.",
                "parameters": [
                    {
                        "name": "fakeName",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The name of the fake."
                    },
                    {
                        "name": "$expand",
                        "description": "May be used to expand the participants.",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    },
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Fake"
                        }
                    }
                }
            }
        },
        "/subscriptions/{subscriptionId}/providers/Microsoft.Fake/fakes": {
            "get": {
                "tags": [
                    "Fakes"
                ],
                "operationId": "Fakes_List",
                "description": "Lists all fakes in a resource group.",
                "parameters": [
                    {
                        "name": "requiredParam",
                        "in": "query",
                        "required": true,
                        "type": "string",
                        "description": "The expand expression to apply on the operation."
                    },
                    {
                        "name": "optionalParam",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "The expand expression to apply on the operation."
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    },
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FakeListResult"
                        }
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        }
    },
    "definitions": {
        "Fake": {
            "properties": {
                "bar": {
                    "type": "string",
                    "description": "specifies the bar"
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/Resource"
                }
            ],
            "description": "Specifies information about the fake that the virtual machine should be assigned to. Virtual machines specified in the same fake are allocated to different nodes to maximize availability. For more information about fakes, see [Manage the availability of virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-manage-availability?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json). <br><br> For more information on Azure planned maintenance, see [Planned maintenance for virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-planned-maintenance?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> Currently, a VM can only be added to fake at creation time. An existing VM cannot be added to an fake."
        },
        "FakeListResult": {
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Fake"
                    },
                    "description": "The list of fakes"
                },
                "nextLink": {
                    "type": "string",
                    "description": "The URI to fetch the next page of Fakes. Call ListNext() with this URI to fetch the next page of Fakes."
                }
            },
            "required": [
                "value"
            ],
            "description": "The List Availability Set operation response."
        },
        "FakeParentWithAncestorWithNonResChWithLoc": {
            "properties": {
                "bar": {
                    "type": "string",
                    "description": "specifies the bar"
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/Resource"
                }
            ],
            "description": "Specifies information."
        },
        "FakeParentWithAncestorWithNonResChWithLocListResult": {
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FakeParentWithAncestorWithNonResChWithLoc"
                    },
                    "description": "List"
                },
                "nextLink": {
                    "type": "string",
                    "description": "The URI to fetch the next page. Call ListNext() with this URI to fetch the next page."
                }
            },
            "required": [
                "value"
            ],
            "description": "The List operation response."
        },
        "FakeParentWithAncestorWithNonResCh": {
            "properties": {
                "bar": {
                    "type": "string",
                    "description": "specifies the bar"
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/Resource"
                }
            ],
            "description": "Specifies information."
        },
        "FakeParentWithAncestorWithNonResChListResult": {
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FakeParentWithAncestorWithNonResCh"
                    },
                    "description": "List"
                },
                "nextLink": {
                    "type": "string",
                    "description": "The URI to fetch the next page. Call ListNext() with this URI to fetch the next page."
                }
            },
            "required": [
                "value"
            ],
            "description": "The List operation response."
        },
        "FakeParentWithAncestorWithLoc": {
            "properties": {
                "bar": {
                    "type": "string",
                    "description": "specifies the bar"
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/Resource"
                }
            ],
            "description": "Specifies information."
        },
        "FakeParentWithAncestorWithLocListResult": {
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FakeParentWithAncestorWithLoc"
                    },
                    "description": "List"
                },
                "nextLink": {
                    "type": "string",
                    "description": "The URI to fetch the next page. Call ListNext() with this URI to fetch the next page."
                }
            },
            "required": [
                "value"
            ],
            "description": "The List operation response."
        },
        "FakeParentWithAncestor": {
            "properties": {
                "bar": {
                    "type": "string",
                    "description": "specifies the bar"
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/Resource"
                }
            ],
            "description": "Specifies information."
        },
        "FakeParentWithAncestorListResult": {
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FakeParentWithAncestor"
                    },
                    "description": "List"
                },
                "nextLink": {
                    "type": "string",
                    "description": "The URI to fetch the next page. Call ListNext() with this URI to fetch the next page."
                }
            },
            "required": [
                "value"
            ],
            "description": "The List operation response."
        },
        "FakeParentWithNonResCh": {
            "properties": {
                "bar": {
                    "type": "string",
                    "description": "specifies the bar"
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/Resource"
                }
            ],
            "description": "Specifies information."
        },
        "FakeParentWithNonResChListResult": {
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FakeParentWithNonResCh"
                    },
                    "description": "List"
                },
                "nextLink": {
                    "type": "string",
                    "description": "The URI to fetch the next page. Call ListNext() with this URI to fetch the next page."
                }
            },
            "required": [
                "value"
            ],
            "description": "The List operation response."
        },
        "FakeParent": {
            "properties": {
                "bar": {
                    "type": "string",
                    "description": "specifies the bar"
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/Resource"
                }
            ],
            "description": "Specifies information."
        },
        "FakeParentListResult": {
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FakeParent"
                    },
                    "description": "List"
                },
                "nextLink": {
                    "type": "string",
                    "description": "The URI to fetch the next page. Call ListNext() with this URI to fetch the next page."
                }
            },
            "required": [
                "value"
            ],
            "description": "The List operation response."
        },
        "ResGrpParentWithAncestorWithNonResChWithLoc": {
            "properties": {
                "bar": {
                    "type": "string",
                    "description": "specifies the bar"
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/Resource"
                }
            ],
            "description": "Specifies information."
        },
        "ResGrpParentWithAncestorWithNonResChWithLocListResult": {
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ResGrpParentWithAncestorWithNonResChWithLoc"
                    },
                    "description": "List"
                },
                "nextLink": {
                    "type": "string",
                    "description": "The URI to fetch the next page. Call ListNext() with this URI to fetch the next page."
                }
            },
            "required": [
                "value"
            ],
            "description": "The List operation response."
        },
        "ResGrpParentWithAncestorWithNonResCh": {
            "properties": {
                "bar": {
                    "type": "string",
                    "description": "specifies the bar"
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/Resource"
                }
            ],
            "description": "Specifies information."
        },
        "ResGrpParentWithAncestorWithNonResChListResult": {
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ResGrpParentWithAncestorWithNonResCh"
                    },
                    "description": "List"
                },
                "nextLink": {
                    "type": "string",
                    "description": "The URI to fetch the next page. Call ListNext() with this URI to fetch the next page."
                }
            },
            "required": [
                "value"
            ],
            "description": "The List operation response."
        },
        "ResGrpParentWithAncestorWithLoc": {
            "properties": {
                "bar": {
                    "type": "string",
                    "description": "specifies the bar"
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/Resource"
                }
            ],
            "description": "Specifies information."
        },
        "ResGrpParentWithAncestorWithLocListResult": {
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ResGrpParentWithAncestorWithLoc"
                    },
                    "description": "List"
                },
                "nextLink": {
                    "type": "string",
                    "description": "The URI to fetch the next page. Call ListNext() with this URI to fetch the next page."
                }
            },
            "required": [
                "value"
            ],
            "description": "The List operation response."
        },
        "ResGrpParentWithAncestor": {
            "properties": {
                "bar": {
                    "type": "string",
                    "description": "specifies the bar"
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/Resource"
                }
            ],
            "description": "Specifies information."
        },
        "ResGrpParentWithAncestorListResult": {
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ResGrpParentWithAncestor"
                    },
                    "description": "List"
                },
                "nextLink": {
                    "type": "string",
                    "description": "The URI to fetch the next page. Call ListNext() with this URI to fetch the next page."
                }
            },
            "required": [
                "value"
            ],
            "description": "The List operation response."
        },
        "ResGrpParentWithNonResCh": {
            "properties": {
                "bar": {
                    "type": "string",
                    "description": "specifies the bar"
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/Resource"
                }
            ],
            "description": "Specifies information."
        },
        "ResGrpParentWithNonResChListResult": {
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ResGrpParentWithNonResCh"
                    },
                    "description": "List"
                },
                "nextLink": {
                    "type": "string",
                    "description": "The URI to fetch the next page. Call ListNext() with this URI to fetch the next page."
                }
            },
            "required": [
                "value"
            ],
            "description": "The List operation response."
        },
        "ResGrpParent": {
            "properties": {
                "bar": {
                    "type": "string",
                    "description": "specifies the bar"
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/Resource"
                }
            ],
            "description": "Specifies information."
        },
        "ResGrpParentListResult": {
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ResGrpParent"
                    },
                    "description": "List"
                },
                "nextLink": {
                    "type": "string",
                    "description": "The URI to fetch the next page. Call ListNext() with this URI to fetch the next page."
                }
            },
            "required": [
                "value"
            ],
            "description": "The List operation response."
        },
        "SubParentWithNonResChWithLoc": {
            "properties": {
                "bar": {
                    "type": "string",
                    "description": "specifies the bar"
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/Resource"
                }
            ],
            "description": "Specifies information."
        },
        "SubParentWithNonResChWithLocListResult": {
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SubParentWithNonResChWithLoc"
                    },
                    "description": "List"
                },
                "nextLink": {
                    "type": "string",
                    "description": "The URI to fetch the next page. Call ListNext() with this URI to fetch the next page."
                }
            },
            "required": [
                "value"
            ],
            "description": "The List operation response."
        },
        "SubParentWithNonResCh": {
            "properties": {
                "bar": {
                    "type": "string",
                    "description": "specifies the bar"
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/Resource"
                }
            ],
            "description": "Specifies information."
        },
        "SubParentWithNonResChListResult": {
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SubParentWithNonResCh"
                    },
                    "description": "List"
                },
                "nextLink": {
                    "type": "string",
                    "description": "The URI to fetch the next page. Call ListNext() with this URI to fetch the next page."
                }
            },
            "required": [
                "value"
            ],
            "description": "The List operation response."
        },
        "SubParentWithLoc": {
            "properties": {
                "bar": {
                    "type": "string",
                    "description": "specifies the bar"
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/Resource"
                }
            ],
            "description": "Specifies information."
        },
        "SubParentWithLocListResult": {
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SubParentWithLoc"
                    },
                    "description": "List"
                },
                "nextLink": {
                    "type": "string",
                    "description": "The URI to fetch the next page. Call ListNext() with this URI to fetch the next page."
                }
            },
            "required": [
                "value"
            ],
            "description": "The List operation response."
        },
        "SubParent": {
            "properties": {
                "bar": {
                    "type": "string",
                    "description": "specifies the bar"
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/Resource"
                }
            ],
            "description": "Specifies information."
        },
        "SubParentListResult": {
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SubParent"
                    },
                    "description": "List"
                },
                "nextLink": {
                    "type": "string",
                    "description": "The URI to fetch the next page. Call ListNext() with this URI to fetch the next page."
                }
            },
            "required": [
                "value"
            ],
            "description": "The List operation response."
        },
        "DescendantListResult": {
            "description": "Describes the result of the request to view descendants.",
            "properties": {
                "value": {
                    "description": "The list of descendants.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DescendantInfo"
                    }
                },
                "nextLink": {
                    "description": "The URL to use for getting the next set of results.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "DescendantInfo": {
            "description": "The descendant.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The fully qualified ID for the descendant.  For example, /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000 or /subscriptions/0000000-0000-0000-0000-000000000000",
                    "readOnly": true,
                    "x-nullable": true
                },
                "type": {
                    "type": "string",
                    "description": "The type of the resource. For example, Microsoft.Management/managementGroups or /subscriptions",
                    "readOnly": true,
                    "x-nullable": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the descendant. For example, 00000000-0000-0000-0000-000000000000",
                    "readOnly": true
                },
                "properties": {
                    "title": "Properties",
                    "x-ms-client-flatten": true,
                    "x-nullable": true,
                    "$ref": "#/definitions/DescendantInfoProperties"
                }
            }
        },
        "DescendantInfoProperties": {
            "description": "The generic properties of an descendant.",
            "type": "object",
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "The friendly name of the management group.",
                    "x-nullable": true
                },
                "parent": {
                    "title": "Parent",
                    "$ref": "#/definitions/DescendantParentGroupInfo",
                    "x-nullable": true
                }
            }
        },
        "DescendantParentGroupInfo": {
            "description": "The ID of the parent management group.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The fully qualified ID for the parent management group.  For example, /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000"
                }
            }
        },
        "ManagementGroup": {
            "properties": {
                "bar": {
                    "type": "string",
                    "description": "specifies the bar"
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/Resource"
                }
            ],
            "description": "Specifies information about the fake that the virtual machine should be assigned to. Virtual machines specified in the same fake are allocated to different nodes to maximize availability. For more information about fakes, see [Manage the availability of virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-manage-availability?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json). <br><br> For more information on Azure planned maintenance, see [Planned maintenance for virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-planned-maintenance?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> Currently, a VM can only be added to fake at creation time. An existing VM cannot be added to an fake."
        },
        "ManagementGroupListResult": {
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ManagementGroup"
                    },
                    "description": "The list of fakes"
                },
                "nextLink": {
                    "type": "string",
                    "description": "The URI to fetch the next page of Fakes. Call ListNext() with this URI to fetch the next page of Fakes."
                }
            },
            "required": [
                "value"
            ],
            "description": "The List Availability Set operation response."
        },
        "MgmtGrpParentWithNonResChWithLoc": {
            "properties": {
                "bar": {
                    "type": "string",
                    "description": "specifies the bar"
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/Resource"
                }
            ],
            "description": "Specifies information."
        },
        "MgmtGrpParentWithNonResChWithLocListResult": {
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MgmtGrpParentWithNonResChWithLoc"
                    },
                    "description": "List"
                },
                "nextLink": {
                    "type": "string",
                    "description": "The URI to fetch the next page. Call ListNext() with this URI to fetch the next page."
                }
            },
            "required": [
                "value"
            ],
            "description": "The List operation response."
        },
        "MgmtGrpParentWithNonResCh": {
            "properties": {
                "bar": {
                    "type": "string",
                    "description": "specifies the bar"
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/Resource"
                }
            ],
            "description": "Specifies information."
        },
        "MgmtGrpParentWithNonResChListResult": {
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MgmtGrpParentWithNonResCh"
                    },
                    "description": "List"
                },
                "nextLink": {
                    "type": "string",
                    "description": "The URI to fetch the next page. Call ListNext() with this URI to fetch the next page."
                }
            },
            "required": [
                "value"
            ],
            "description": "The List operation response."
        },
        "MgmtGrpParentWithLoc": {
            "properties": {
                "bar": {
                    "type": "string",
                    "description": "specifies the bar"
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/Resource"
                }
            ],
            "description": "Specifies information."
        },
        "MgmtGrpParentWithLocListResult": {
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MgmtGrpParentWithLoc"
                    },
                    "description": "List"
                },
                "nextLink": {
                    "type": "string",
                    "description": "The URI to fetch the next page. Call ListNext() with this URI to fetch the next page."
                }
            },
            "required": [
                "value"
            ],
            "description": "The List operation response."
        },
        "MgmtGroupParent": {
            "properties": {
                "bar": {
                    "type": "string",
                    "description": "specifies the bar"
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/Resource"
                }
            ],
            "description": "Specifies information."
        },
        "MgmtGroupParentListResult": {
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MgmtGroupParent"
                    },
                    "description": "List"
                },
                "nextLink": {
                    "type": "string",
                    "description": "The URI to fetch the next page. Call ListNext() with this URI to fetch the next page."
                }
            },
            "required": [
                "value"
            ],
            "description": "The List operation response."
        },
        "TenantTest": {
            "properties": {
                "bar": {
                    "type": "string",
                    "description": "specifies the bar"
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/Resource"
                }
            ],
            "description": "Specifies information about the fake that the virtual machine should be assigned to. Virtual machines specified in the same fake are allocated to different nodes to maximize availability. For more information about fakes, see [Manage the availability of virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-manage-availability?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json). <br><br> For more information on Azure planned maintenance, see [Planned maintenance for virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-planned-maintenance?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> Currently, a VM can only be added to fake at creation time. An existing VM cannot be added to an fake."
        },
        "TenantTestListResult": {
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TenantTest"
                    },
                    "description": "The list of fakes"
                },
                "nextLink": {
                    "type": "string",
                    "description": "The URI to fetch the next page of Fakes. Call ListNext() with this URI to fetch the next page of Fakes."
                }
            },
            "required": [
                "value"
            ],
            "description": "The List Availability Set operation response."
        },
        "TenantParentWithNonResChWithLoc": {
            "properties": {
                "bar": {
                    "type": "string",
                    "description": "specifies the bar"
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/Resource"
                }
            ],
            "description": "Specifies information about the fake that the virtual machine should be assigned to. Virtual machines specified in the same fake are allocated to different nodes to maximize availability. For more information about fakes, see [Manage the availability of virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-manage-availability?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json). <br><br> For more information on Azure planned maintenance, see [Planned maintenance for virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-planned-maintenance?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> Currently, a VM can only be added to fake at creation time. An existing VM cannot be added to an fake."
        },
        "TenantParentWithNonResChWithLocListResult": {
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TenantParentWithNonResChWithLoc"
                    },
                    "description": "The list of fakes"
                },
                "nextLink": {
                    "type": "string",
                    "description": "The URI to fetch the next page of Fakes. Call ListNext() with this URI to fetch the next page of Fakes."
                }
            },
            "required": [
                "value"
            ],
            "description": "The List Availability Set operation response."
        },
        "TenantParentWithNonResCh": {
            "properties": {
                "bar": {
                    "type": "string",
                    "description": "specifies the bar"
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/Resource"
                }
            ],
            "description": "Specifies information about the fake that the virtual machine should be assigned to. Virtual machines specified in the same fake are allocated to different nodes to maximize availability. For more information about fakes, see [Manage the availability of virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-manage-availability?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json). <br><br> For more information on Azure planned maintenance, see [Planned maintenance for virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-planned-maintenance?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> Currently, a VM can only be added to fake at creation time. An existing VM cannot be added to an fake."
        },
        "TenantParentWithNonResChListResult": {
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TenantParentWithNonResCh"
                    },
                    "description": "The list of fakes"
                },
                "nextLink": {
                    "type": "string",
                    "description": "The URI to fetch the next page of Fakes. Call ListNext() with this URI to fetch the next page of Fakes."
                }
            },
            "required": [
                "value"
            ],
            "description": "The List Availability Set operation response."
        },
        "TenantParentWithLoc": {
            "properties": {
                "bar": {
                    "type": "string",
                    "description": "specifies the bar"
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/Resource"
                }
            ],
            "description": "Specifies information about the fake that the virtual machine should be assigned to. Virtual machines specified in the same fake are allocated to different nodes to maximize availability. For more information about fakes, see [Manage the availability of virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-manage-availability?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json). <br><br> For more information on Azure planned maintenance, see [Planned maintenance for virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-planned-maintenance?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> Currently, a VM can only be added to fake at creation time. An existing VM cannot be added to an fake."
        },
        "TenantParentWithLocListResult": {
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TenantParentWithLoc"
                    },
                    "description": "The list of fakes"
                },
                "nextLink": {
                    "type": "string",
                    "description": "The URI to fetch the next page of Fakes. Call ListNext() with this URI to fetch the next page of Fakes."
                }
            },
            "required": [
                "value"
            ],
            "description": "The List Availability Set operation response."
        },
        "TenantParent": {
            "properties": {
                "bar": {
                    "type": "string",
                    "description": "specifies the bar"
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/Resource"
                }
            ],
            "description": "Specifies information about the fake that the virtual machine should be assigned to. Virtual machines specified in the same fake are allocated to different nodes to maximize availability. For more information about fakes, see [Manage the availability of virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-manage-availability?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json). <br><br> For more information on Azure planned maintenance, see [Planned maintenance for virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-planned-maintenance?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> Currently, a VM can only be added to fake at creation time. An existing VM cannot be added to an fake."
        },
        "TenantParentListResult": {
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TenantParent"
                    },
                    "description": "The list of fakes"
                },
                "nextLink": {
                    "type": "string",
                    "description": "The URI to fetch the next page of Fakes. Call ListNext() with this URI to fetch the next page of Fakes."
                }
            },
            "required": [
                "value"
            ],
            "description": "The List Availability Set operation response."
        },
        "Resource": {
            "description": "The Resource model definition.",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Resource Id"
                },
                "name": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Resource name"
                },
                "type": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Resource type"
                },
                "location": {
                    "type": "string",
                    "description": "Resource location"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Resource tags"
                }
            },
            "required": ["location"],
            "x-ms-azure-resource": true
        },
        "NonResourceChild": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name."
                },
                "numberOfCores": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Test Desc."
                }
            },
            "description": "Describes the properties of a Non Resource Child."
        },
        "NonResourceChildListResult": {
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NonResourceChild"
                    },
                    "description": "The list of Non Resource Child."
                }
            },
            "description": "The List of Non Resource Child operation response."
        },
        "QuotaUpdateParameters": {
            "properties": {
                "value": {
                    "description": "The list for update quota.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuotaBaseProperties"
                    }
                },
                "location": {
                    "description": "Region of workspace quota to be updated.",
                    "type": "string"
                }
            },
            "description": "Quota update parameters."
        },
        "QuotaBaseProperties": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Specifies the resource ID."
                },
                "type": {
                    "type": "string",
                    "description": "Specifies the resource type."
                },
                "limit": {
                    "type": "integer",
                    "format": "int64",
                    "title": "Limit.",
                    "description": "The maximum permitted quota of the resource."
                },
                "unit": {
                    "type": "string",
                    "description": "An enum describing the unit of quota measurement.",
                    "enum": ["Count"],
                    "x-ms-enum": {
                        "name": "QuotaUnit",
                        "modelAsString": true
                    }
                }
            },
            "description": "The properties for Quota update or retrieval."
        },
        "UpdateWorkspaceQuotasResult": {
            "properties": {
                "value": {
                    "description": "The list of workspace quota update result.",
                    "items": {
                        "$ref": "#/definitions/UpdateWorkspaceQuotas"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "nextLink": {
                    "description": "The URI to fetch the next page of workspace quota update result. Call ListNext() with this to fetch the next page of Workspace Quota update result.",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "description": "The result of update workspace quota."
        },
        "UpdateWorkspaceQuotas": {
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Specifies the resource ID."
                },
                "type": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Specifies the resource type."
                },
                "limit": {
                    "type": "integer",
                    "format": "int64",
                    "title": "Limit.",
                    "description": "The maximum permitted quota of the resource."
                },
                "unit": {
                    "readOnly": true,
                    "type": "string",
                    "description": "An enum describing the unit of quota measurement.",
                    "enum": ["Count"],
                    "x-ms-enum": {
                        "name": "QuotaUnit",
                        "modelAsString": true
                    }
                },
                "status": {
                    "type": "string",
                    "readOnly": false,
                    "title": "Update Workspace Quota Status.",
                    "description": "Status of update workspace quota.",
                    "enum": [
                        "Undefined",
                        "Success",
                        "Failure",
                        "InvalidQuotaBelowClusterMinimum",
                        "InvalidQuotaExceedsSubscriptionLimit",
                        "InvalidVMFamilyName",
                        "OperationNotSupportedForSku",
                        "OperationNotEnabledForRegion"
                    ],
                    "x-ms-enum": {
                        "name": "status",
                        "modelAsString": true
                    }
                }
            },
            "description": "The properties for update Quota response."
        }
    },
    "parameters": {
        "SubscriptionIdParameter": {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
        },
        "ApiVersionParameter": {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
        },
        "GroupIdParameter": {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Management Group ID.",
            "x-ms-parameter-location": "method"
        },
        "TenantNameParameter": {
            "name": "tenantTestName",
            "in": "path",
            "description": "The ID that uniquely identifies a billing account.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
        }
    }
}
