{
 "$id": "1",
 "Name": "FirstTestTypeSpec",
 "ApiVersions": [
  "2022-05-15-preview"
 ],
 "Enums": [
  {
   "$id": "2",
   "kind": "enum",
   "name": "Thing_requiredLiteralString",
   "valueType": {
    "$id": "3",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "4",
     "kind": "enumvalue",
     "name": "accept",
     "value": "accept",
     "doc": "accept",
     "valueType": {
      "$ref": "3"
     },
     "enumType": {
      "$ref": "2"
     }
    }
   ],
   "crossLanguageDefinitionId": "",
   "namespace": "FirstTestTypeSpec",
   "doc": "The Thing_requiredLiteralString",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Spread,Json",
   "decorators": []
  },
  {
   "$id": "5",
   "kind": "enum",
   "name": "Thing_requiredLiteralInt",
   "valueType": {
    "$id": "6",
    "kind": "int32",
    "name": "int32",
    "crossLanguageDefinitionId": "TypeSpec.int32",
    "decorators": []
   },
   "values": [
    {
     "$id": "7",
     "kind": "enumvalue",
     "name": "123",
     "value": 123,
     "doc": "123",
     "valueType": {
      "$ref": "6"
     },
     "enumType": {
      "$ref": "5"
     }
    }
   ],
   "crossLanguageDefinitionId": "",
   "namespace": "FirstTestTypeSpec",
   "doc": "The Thing_requiredLiteralInt",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Spread,Json",
   "decorators": []
  },
  {
   "$id": "8",
   "kind": "enum",
   "name": "Thing_requiredLiteralFloat",
   "valueType": {
    "$id": "9",
    "kind": "float32",
    "name": "float32",
    "crossLanguageDefinitionId": "TypeSpec.float32",
    "decorators": []
   },
   "values": [
    {
     "$id": "10",
     "kind": "enumvalue",
     "name": "1.23",
     "value": 1.23,
     "doc": "1.23",
     "valueType": {
      "$ref": "9"
     },
     "enumType": {
      "$ref": "8"
     }
    }
   ],
   "crossLanguageDefinitionId": "",
   "namespace": "FirstTestTypeSpec",
   "doc": "The Thing_requiredLiteralFloat",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Spread,Json",
   "decorators": []
  },
  {
   "$id": "11",
   "kind": "enum",
   "name": "Thing_optionalLiteralString",
   "valueType": {
    "$id": "12",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "13",
     "kind": "enumvalue",
     "name": "reject",
     "value": "reject",
     "doc": "reject",
     "valueType": {
      "$ref": "12"
     },
     "enumType": {
      "$ref": "11"
     }
    }
   ],
   "crossLanguageDefinitionId": "",
   "namespace": "FirstTestTypeSpec",
   "doc": "The Thing_optionalLiteralString",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Spread,Json",
   "decorators": []
  },
  {
   "$id": "14",
   "kind": "enum",
   "name": "Thing_optionalLiteralInt",
   "valueType": {
    "$id": "15",
    "kind": "int32",
    "name": "int32",
    "crossLanguageDefinitionId": "TypeSpec.int32",
    "decorators": []
   },
   "values": [
    {
     "$id": "16",
     "kind": "enumvalue",
     "name": "456",
     "value": 456,
     "doc": "456",
     "valueType": {
      "$ref": "15"
     },
     "enumType": {
      "$ref": "14"
     }
    }
   ],
   "crossLanguageDefinitionId": "",
   "namespace": "FirstTestTypeSpec",
   "doc": "The Thing_optionalLiteralInt",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Spread,Json",
   "decorators": []
  },
  {
   "$id": "17",
   "kind": "enum",
   "name": "Thing_optionalLiteralFloat",
   "valueType": {
    "$id": "18",
    "kind": "float32",
    "name": "float32",
    "crossLanguageDefinitionId": "TypeSpec.float32",
    "decorators": []
   },
   "values": [
    {
     "$id": "19",
     "kind": "enumvalue",
     "name": "4.56",
     "value": 4.56,
     "doc": "4.56",
     "valueType": {
      "$ref": "18"
     },
     "enumType": {
      "$ref": "17"
     }
    }
   ],
   "crossLanguageDefinitionId": "",
   "namespace": "FirstTestTypeSpec",
   "doc": "The Thing_optionalLiteralFloat",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Spread,Json",
   "decorators": []
  },
  {
   "$id": "20",
   "kind": "enum",
   "name": "CsProjectedEnum",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.ProjectedEnum",
   "valueType": {
    "$id": "21",
    "kind": "float32",
    "name": "float32",
    "crossLanguageDefinitionId": "TypeSpec.float32",
    "decorators": []
   },
   "values": [
    {
     "$id": "22",
     "kind": "enumvalue",
     "name": "CsOne",
     "value": 1.1,
     "valueType": {
      "$id": "23",
      "kind": "float32",
      "name": "float32",
      "crossLanguageDefinitionId": "TypeSpec.float32",
      "decorators": []
     },
     "enumType": {
      "$ref": "20"
     },
     "decorators": []
    },
    {
     "$id": "24",
     "kind": "enumvalue",
     "name": "Two",
     "value": 2.2,
     "valueType": {
      "$id": "25",
      "kind": "float32",
      "name": "float32",
      "crossLanguageDefinitionId": "TypeSpec.float32",
      "decorators": []
     },
     "enumType": {
      "$ref": "20"
     },
     "decorators": []
    },
    {
     "$id": "26",
     "kind": "enumvalue",
     "name": "Four",
     "value": 4.4,
     "valueType": {
      "$id": "27",
      "kind": "float32",
      "name": "float32",
      "crossLanguageDefinitionId": "TypeSpec.float32",
      "decorators": []
     },
     "enumType": {
      "$ref": "20"
     },
     "decorators": []
    }
   ],
   "namespace": "FirstTestTypeSpec",
   "doc": "enum with projected name",
   "isFixed": true,
   "isFlags": false,
   "usage": "Input",
   "decorators": []
  },
  {
   "$id": "28",
   "kind": "enum",
   "name": "CsProjectedEnumInModel",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.ProjectedEnumInModel",
   "valueType": {
    "$id": "29",
    "kind": "float32",
    "name": "float32",
    "crossLanguageDefinitionId": "TypeSpec.float32",
    "decorators": []
   },
   "values": [
    {
     "$id": "30",
     "kind": "enumvalue",
     "name": "CsOne",
     "value": 1.1,
     "valueType": {
      "$id": "31",
      "kind": "float32",
      "name": "float32",
      "crossLanguageDefinitionId": "TypeSpec.float32",
      "decorators": []
     },
     "enumType": {
      "$ref": "28"
     },
     "decorators": []
    },
    {
     "$id": "32",
     "kind": "enumvalue",
     "name": "Two",
     "value": 2.2,
     "valueType": {
      "$id": "33",
      "kind": "float32",
      "name": "float32",
      "crossLanguageDefinitionId": "TypeSpec.float32",
      "decorators": []
     },
     "enumType": {
      "$ref": "28"
     },
     "decorators": []
    },
    {
     "$id": "34",
     "kind": "enumvalue",
     "name": "Four",
     "value": 4.4,
     "valueType": {
      "$id": "35",
      "kind": "float32",
      "name": "float32",
      "crossLanguageDefinitionId": "TypeSpec.float32",
      "decorators": []
     },
     "enumType": {
      "$ref": "28"
     },
     "decorators": []
    }
   ],
   "namespace": "FirstTestTypeSpec",
   "doc": "enum with projected name used in a model",
   "isFixed": true,
   "isFlags": false,
   "usage": "Input,Json",
   "decorators": []
  },
  {
   "$id": "36",
   "kind": "enum",
   "name": "StringFixedEnum",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.StringFixedEnum",
   "valueType": {
    "$id": "37",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "38",
     "kind": "enumvalue",
     "name": "One",
     "value": "1",
     "valueType": {
      "$id": "39",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "36"
     },
     "decorators": []
    },
    {
     "$id": "40",
     "kind": "enumvalue",
     "name": "Two",
     "value": "2",
     "valueType": {
      "$id": "41",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "36"
     },
     "decorators": []
    },
    {
     "$id": "42",
     "kind": "enumvalue",
     "name": "Four",
     "value": "4",
     "valueType": {
      "$id": "43",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "36"
     },
     "decorators": []
    }
   ],
   "namespace": "FirstTestTypeSpec",
   "doc": "Simple enum",
   "isFixed": true,
   "isFlags": false,
   "usage": "Input,Output,Json",
   "decorators": []
  },
  {
   "$id": "44",
   "kind": "enum",
   "name": "StringExtensibleEnum",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.StringExtensibleEnum",
   "valueType": {
    "$id": "45",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "46",
     "kind": "enumvalue",
     "name": "One",
     "value": "1",
     "valueType": {
      "$id": "47",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "44"
     },
     "decorators": []
    },
    {
     "$id": "48",
     "kind": "enumvalue",
     "name": "Two",
     "value": "2",
     "valueType": {
      "$id": "49",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "44"
     },
     "decorators": []
    },
    {
     "$id": "50",
     "kind": "enumvalue",
     "name": "Four",
     "value": "4",
     "valueType": {
      "$id": "51",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "44"
     },
     "decorators": []
    }
   ],
   "namespace": "FirstTestTypeSpec",
   "doc": "Extensible enum",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json",
   "decorators": []
  },
  {
   "$id": "52",
   "kind": "enum",
   "name": "IntExtensibleEnum",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.IntExtensibleEnum",
   "valueType": {
    "$id": "53",
    "kind": "int32",
    "name": "int32",
    "crossLanguageDefinitionId": "TypeSpec.int32",
    "decorators": []
   },
   "values": [
    {
     "$id": "54",
     "kind": "enumvalue",
     "name": "One",
     "value": 1,
     "valueType": {
      "$id": "55",
      "kind": "int32",
      "name": "int32",
      "crossLanguageDefinitionId": "TypeSpec.int32",
      "decorators": []
     },
     "enumType": {
      "$ref": "52"
     },
     "decorators": []
    },
    {
     "$id": "56",
     "kind": "enumvalue",
     "name": "Two",
     "value": 2,
     "valueType": {
      "$id": "57",
      "kind": "int32",
      "name": "int32",
      "crossLanguageDefinitionId": "TypeSpec.int32",
      "decorators": []
     },
     "enumType": {
      "$ref": "52"
     },
     "decorators": []
    },
    {
     "$id": "58",
     "kind": "enumvalue",
     "name": "Four",
     "value": 4,
     "valueType": {
      "$id": "59",
      "kind": "int32",
      "name": "int32",
      "crossLanguageDefinitionId": "TypeSpec.int32",
      "decorators": []
     },
     "enumType": {
      "$ref": "52"
     },
     "decorators": []
    }
   ],
   "namespace": "FirstTestTypeSpec",
   "doc": "Int based extensible enum",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json",
   "decorators": []
  },
  {
   "$id": "60",
   "kind": "enum",
   "name": "FloatExtensibleEnum",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.FloatExtensibleEnum",
   "valueType": {
    "$id": "61",
    "kind": "float32",
    "name": "float32",
    "crossLanguageDefinitionId": "TypeSpec.float32",
    "decorators": []
   },
   "values": [
    {
     "$id": "62",
     "kind": "enumvalue",
     "name": "One",
     "value": 1,
     "valueType": {
      "$id": "63",
      "kind": "float32",
      "name": "float32",
      "crossLanguageDefinitionId": "TypeSpec.float32",
      "decorators": []
     },
     "enumType": {
      "$ref": "60"
     },
     "decorators": []
    },
    {
     "$id": "64",
     "kind": "enumvalue",
     "name": "Two",
     "value": 2,
     "valueType": {
      "$id": "65",
      "kind": "float32",
      "name": "float32",
      "crossLanguageDefinitionId": "TypeSpec.float32",
      "decorators": []
     },
     "enumType": {
      "$ref": "60"
     },
     "decorators": []
    },
    {
     "$id": "66",
     "kind": "enumvalue",
     "name": "Four",
     "value": 4,
     "valueType": {
      "$id": "67",
      "kind": "float32",
      "name": "float32",
      "crossLanguageDefinitionId": "TypeSpec.float32",
      "decorators": []
     },
     "enumType": {
      "$ref": "60"
     },
     "decorators": []
    }
   ],
   "namespace": "FirstTestTypeSpec",
   "doc": "Float based extensible enum",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json",
   "decorators": []
  },
  {
   "$id": "68",
   "kind": "enum",
   "name": "FloatFixedEnum",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.FloatFixedEnum",
   "valueType": {
    "$id": "69",
    "kind": "float32",
    "name": "float32",
    "crossLanguageDefinitionId": "TypeSpec.float32",
    "decorators": []
   },
   "values": [
    {
     "$id": "70",
     "kind": "enumvalue",
     "name": "One",
     "value": 1.1,
     "valueType": {
      "$id": "71",
      "kind": "float32",
      "name": "float32",
      "crossLanguageDefinitionId": "TypeSpec.float32",
      "decorators": []
     },
     "enumType": {
      "$ref": "68"
     },
     "decorators": []
    },
    {
     "$id": "72",
     "kind": "enumvalue",
     "name": "Two",
     "value": 2.2,
     "valueType": {
      "$id": "73",
      "kind": "float32",
      "name": "float32",
      "crossLanguageDefinitionId": "TypeSpec.float32",
      "decorators": []
     },
     "enumType": {
      "$ref": "68"
     },
     "decorators": []
    },
    {
     "$id": "74",
     "kind": "enumvalue",
     "name": "Four",
     "value": 4.4,
     "valueType": {
      "$id": "75",
      "kind": "float32",
      "name": "float32",
      "crossLanguageDefinitionId": "TypeSpec.float32",
      "decorators": []
     },
     "enumType": {
      "$ref": "68"
     },
     "decorators": []
    }
   ],
   "namespace": "FirstTestTypeSpec",
   "doc": "float fixed enum",
   "isFixed": true,
   "isFlags": false,
   "usage": "Input,Output,Json",
   "decorators": []
  },
  {
   "$id": "76",
   "kind": "enum",
   "name": "IntFixedEnum",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.IntFixedEnum",
   "valueType": {
    "$id": "77",
    "kind": "int32",
    "name": "int32",
    "crossLanguageDefinitionId": "TypeSpec.int32",
    "decorators": []
   },
   "values": [
    {
     "$id": "78",
     "kind": "enumvalue",
     "name": "One",
     "value": 1,
     "valueType": {
      "$id": "79",
      "kind": "int32",
      "name": "int32",
      "crossLanguageDefinitionId": "TypeSpec.int32",
      "decorators": []
     },
     "enumType": {
      "$ref": "76"
     },
     "decorators": []
    },
    {
     "$id": "80",
     "kind": "enumvalue",
     "name": "Two",
     "value": 2,
     "valueType": {
      "$id": "81",
      "kind": "int32",
      "name": "int32",
      "crossLanguageDefinitionId": "TypeSpec.int32",
      "decorators": []
     },
     "enumType": {
      "$ref": "76"
     },
     "decorators": []
    },
    {
     "$id": "82",
     "kind": "enumvalue",
     "name": "Four",
     "value": 4,
     "valueType": {
      "$id": "83",
      "kind": "int32",
      "name": "int32",
      "crossLanguageDefinitionId": "TypeSpec.int32",
      "decorators": []
     },
     "enumType": {
      "$ref": "76"
     },
     "decorators": []
    }
   ],
   "namespace": "FirstTestTypeSpec",
   "doc": "int fixed enum",
   "isFixed": true,
   "isFlags": false,
   "usage": "Input,Output,Json",
   "decorators": []
  },
  {
   "$id": "84",
   "kind": "enum",
   "name": "Versions",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.Versions",
   "valueType": {
    "$id": "85",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "86",
     "kind": "enumvalue",
     "name": "2022-05-15-preview",
     "value": "2022-05-15-preview",
     "valueType": {
      "$id": "87",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "84"
     },
     "decorators": []
    }
   ],
   "namespace": "FirstTestTypeSpec",
   "isFixed": true,
   "isFlags": false,
   "usage": "ApiVersionEnum",
   "decorators": []
  },
  {
   "$id": "88",
   "kind": "enum",
   "name": "DaysOfWeekExtensibleEnum",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.DaysOfWeekExtensibleEnum",
   "valueType": {
    "$id": "89",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "90",
     "kind": "enumvalue",
     "name": "Monday",
     "value": "Monday",
     "valueType": {
      "$id": "91",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "88"
     },
     "decorators": []
    },
    {
     "$id": "92",
     "kind": "enumvalue",
     "name": "Tuesday",
     "value": "Tuesday",
     "valueType": {
      "$id": "93",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "88"
     },
     "decorators": []
    },
    {
     "$id": "94",
     "kind": "enumvalue",
     "name": "Wednesday",
     "value": "Wednesday",
     "valueType": {
      "$id": "95",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "88"
     },
     "decorators": []
    },
    {
     "$id": "96",
     "kind": "enumvalue",
     "name": "Thursday",
     "value": "Thursday",
     "valueType": {
      "$id": "97",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "88"
     },
     "decorators": []
    },
    {
     "$id": "98",
     "kind": "enumvalue",
     "name": "Friday",
     "value": "Friday",
     "valueType": {
      "$id": "99",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "88"
     },
     "decorators": []
    },
    {
     "$id": "100",
     "kind": "enumvalue",
     "name": "Saturday",
     "value": "Saturday",
     "valueType": {
      "$id": "101",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "88"
     },
     "decorators": []
    },
    {
     "$id": "102",
     "kind": "enumvalue",
     "name": "Sunday",
     "value": "Sunday",
     "valueType": {
      "$id": "103",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "88"
     },
     "decorators": []
    }
   ],
   "namespace": "FirstTestTypeSpec",
   "isFixed": false,
   "isFlags": false,
   "usage": "None",
   "decorators": []
  },
  {
   "$id": "104",
   "kind": "enum",
   "name": "OperationState",
   "crossLanguageDefinitionId": "Azure.Core.Foundations.OperationState",
   "valueType": {
    "$id": "105",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "106",
     "kind": "enumvalue",
     "name": "NotStarted",
     "value": "NotStarted",
     "valueType": {
      "$id": "107",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "104"
     },
     "doc": "The operation has not started.",
     "decorators": []
    },
    {
     "$id": "108",
     "kind": "enumvalue",
     "name": "Running",
     "value": "Running",
     "valueType": {
      "$id": "109",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "104"
     },
     "doc": "The operation is in progress.",
     "decorators": []
    },
    {
     "$id": "110",
     "kind": "enumvalue",
     "name": "Succeeded",
     "value": "Succeeded",
     "valueType": {
      "$id": "111",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "104"
     },
     "doc": "The operation has completed successfully.",
     "decorators": []
    },
    {
     "$id": "112",
     "kind": "enumvalue",
     "name": "Failed",
     "value": "Failed",
     "valueType": {
      "$id": "113",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "104"
     },
     "doc": "The operation has failed.",
     "decorators": []
    },
    {
     "$id": "114",
     "kind": "enumvalue",
     "name": "Canceled",
     "value": "Canceled",
     "valueType": {
      "$id": "115",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "104"
     },
     "doc": "The operation has been canceled by the user.",
     "decorators": []
    }
   ],
   "namespace": "Azure.Core.Foundations",
   "doc": "Enum describing allowed operation states.",
   "isFixed": false,
   "isFlags": false,
   "usage": "None",
   "decorators": []
  }
 ],
 "Models": [
  {
   "$id": "116",
   "kind": "model",
   "name": "Thing",
   "namespace": "FirstTestTypeSpec",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.Thing",
   "usage": "Input,Output,Spread,Json",
   "doc": "A model with a few properties of literal types",
   "decorators": [],
   "properties": [
    {
     "$id": "117",
     "kind": "property",
     "name": "name",
     "serializedName": "name",
     "doc": "name of the Thing",
     "type": {
      "$id": "118",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Thing.name",
     "serializationOptions": {
      "$id": "119",
      "json": {
       "$id": "120",
       "name": "name"
      }
     }
    },
    {
     "$id": "121",
     "kind": "property",
     "name": "requiredUnion",
     "serializedName": "requiredUnion",
     "doc": "required Union",
     "type": {
      "$id": "122",
      "kind": "union",
      "name": "ThingRequiredUnion",
      "variantTypes": [
       {
        "$id": "123",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       {
        "$id": "124",
        "kind": "array",
        "name": "Array",
        "valueType": {
         "$id": "125",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "crossLanguageDefinitionId": "TypeSpec.Array",
        "decorators": []
       },
       {
        "$id": "126",
        "kind": "int32",
        "name": "int32",
        "crossLanguageDefinitionId": "TypeSpec.int32",
        "decorators": []
       }
      ],
      "namespace": "",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Thing.requiredUnion",
     "serializationOptions": {
      "$id": "127",
      "json": {
       "$id": "128",
       "name": "requiredUnion"
      }
     }
    },
    {
     "$id": "129",
     "kind": "property",
     "name": "requiredLiteralString",
     "serializedName": "requiredLiteralString",
     "doc": "required literal string",
     "type": {
      "$id": "130",
      "kind": "constant",
      "valueType": {
       "$ref": "2"
      },
      "value": "accept",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Thing.requiredLiteralString",
     "serializationOptions": {
      "$id": "131",
      "json": {
       "$id": "132",
       "name": "requiredLiteralString"
      }
     }
    },
    {
     "$id": "133",
     "kind": "property",
     "name": "requiredLiteralInt",
     "serializedName": "requiredLiteralInt",
     "doc": "required literal int",
     "type": {
      "$id": "134",
      "kind": "constant",
      "valueType": {
       "$ref": "5"
      },
      "value": 123,
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Thing.requiredLiteralInt",
     "serializationOptions": {
      "$id": "135",
      "json": {
       "$id": "136",
       "name": "requiredLiteralInt"
      }
     }
    },
    {
     "$id": "137",
     "kind": "property",
     "name": "requiredLiteralFloat",
     "serializedName": "requiredLiteralFloat",
     "doc": "required literal float",
     "type": {
      "$id": "138",
      "kind": "constant",
      "valueType": {
       "$ref": "8"
      },
      "value": 1.23,
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Thing.requiredLiteralFloat",
     "serializationOptions": {
      "$id": "139",
      "json": {
       "$id": "140",
       "name": "requiredLiteralFloat"
      }
     }
    },
    {
     "$id": "141",
     "kind": "property",
     "name": "requiredLiteralBool",
     "serializedName": "requiredLiteralBool",
     "doc": "required literal bool",
     "type": {
      "$id": "142",
      "kind": "constant",
      "valueType": {
       "$id": "143",
       "kind": "boolean",
       "name": "boolean",
       "crossLanguageDefinitionId": "TypeSpec.boolean",
       "decorators": []
      },
      "value": false,
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Thing.requiredLiteralBool",
     "serializationOptions": {
      "$id": "144",
      "json": {
       "$id": "145",
       "name": "requiredLiteralBool"
      }
     }
    },
    {
     "$id": "146",
     "kind": "property",
     "name": "optionalLiteralString",
     "serializedName": "optionalLiteralString",
     "doc": "optional literal string",
     "type": {
      "$id": "147",
      "kind": "constant",
      "valueType": {
       "$ref": "11"
      },
      "value": "reject",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Thing.optionalLiteralString",
     "serializationOptions": {
      "$id": "148",
      "json": {
       "$id": "149",
       "name": "optionalLiteralString"
      }
     }
    },
    {
     "$id": "150",
     "kind": "property",
     "name": "optionalLiteralInt",
     "serializedName": "optionalLiteralInt",
     "doc": "optional literal int",
     "type": {
      "$id": "151",
      "kind": "constant",
      "valueType": {
       "$ref": "14"
      },
      "value": 456,
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Thing.optionalLiteralInt",
     "serializationOptions": {
      "$id": "152",
      "json": {
       "$id": "153",
       "name": "optionalLiteralInt"
      }
     }
    },
    {
     "$id": "154",
     "kind": "property",
     "name": "optionalLiteralFloat",
     "serializedName": "optionalLiteralFloat",
     "doc": "optional literal float",
     "type": {
      "$id": "155",
      "kind": "constant",
      "valueType": {
       "$ref": "17"
      },
      "value": 4.56,
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Thing.optionalLiteralFloat",
     "serializationOptions": {
      "$id": "156",
      "json": {
       "$id": "157",
       "name": "optionalLiteralFloat"
      }
     }
    },
    {
     "$id": "158",
     "kind": "property",
     "name": "optionalLiteralBool",
     "serializedName": "optionalLiteralBool",
     "doc": "optional literal bool",
     "type": {
      "$id": "159",
      "kind": "constant",
      "valueType": {
       "$id": "160",
       "kind": "boolean",
       "name": "boolean",
       "crossLanguageDefinitionId": "TypeSpec.boolean",
       "decorators": []
      },
      "value": true,
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Thing.optionalLiteralBool",
     "serializationOptions": {
      "$id": "161",
      "json": {
       "$id": "162",
       "name": "optionalLiteralBool"
      }
     }
    },
    {
     "$id": "163",
     "kind": "property",
     "name": "requiredBadDescription",
     "serializedName": "requiredBadDescription",
     "doc": "description with xml <|endoftext|>",
     "type": {
      "$id": "164",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Thing.requiredBadDescription",
     "serializationOptions": {
      "$id": "165",
      "json": {
       "$id": "166",
       "name": "requiredBadDescription"
      }
     }
    },
    {
     "$id": "167",
     "kind": "property",
     "name": "optionalNullableList",
     "serializedName": "optionalNullableList",
     "doc": "optional nullable collection",
     "type": {
      "$id": "168",
      "kind": "nullable",
      "type": {
       "$id": "169",
       "kind": "array",
       "name": "Array",
       "valueType": {
        "$id": "170",
        "kind": "int32",
        "name": "int32",
        "crossLanguageDefinitionId": "TypeSpec.int32",
        "decorators": []
       },
       "crossLanguageDefinitionId": "TypeSpec.Array",
       "decorators": []
      },
      "namespace": ""
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Thing.optionalNullableList",
     "serializationOptions": {
      "$id": "171",
      "json": {
       "$id": "172",
       "name": "optionalNullableList"
      }
     }
    },
    {
     "$id": "173",
     "kind": "property",
     "name": "requiredNullableList",
     "serializedName": "requiredNullableList",
     "doc": "required nullable collection",
     "type": {
      "$id": "174",
      "kind": "nullable",
      "type": {
       "$id": "175",
       "kind": "array",
       "name": "Array",
       "valueType": {
        "$id": "176",
        "kind": "int32",
        "name": "int32",
        "crossLanguageDefinitionId": "TypeSpec.int32",
        "decorators": []
       },
       "crossLanguageDefinitionId": "TypeSpec.Array",
       "decorators": []
      },
      "namespace": ""
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Thing.requiredNullableList",
     "serializationOptions": {
      "$id": "177",
      "json": {
       "$id": "178",
       "name": "requiredNullableList"
      }
     }
    },
    {
     "$id": "179",
     "kind": "property",
     "name": "requiredFloatProperty",
     "serializedName": "requiredFloatProperty",
     "doc": "required float property",
     "type": {
      "$id": "180",
      "kind": "float",
      "name": "float",
      "crossLanguageDefinitionId": "TypeSpec.float",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Thing.requiredFloatProperty",
     "serializationOptions": {
      "$id": "181",
      "json": {
       "$id": "182",
       "name": "requiredFloatProperty"
      }
     }
    },
    {
     "$id": "183",
     "kind": "property",
     "name": "optionalFloatProperty",
     "serializedName": "optionalFloatProperty",
     "doc": "optional float property",
     "type": {
      "$id": "184",
      "kind": "float",
      "name": "float",
      "crossLanguageDefinitionId": "TypeSpec.float",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Thing.optionalFloatProperty",
     "serializationOptions": {
      "$id": "185",
      "json": {
       "$id": "186",
       "name": "optionalFloatProperty"
      }
     }
    },
    {
     "$id": "187",
     "kind": "property",
     "name": "optionalResourceId",
     "serializedName": "optionalResourceId",
     "doc": "optional arm id.",
     "type": {
      "$id": "188",
      "kind": "string",
      "name": "armResourceIdentifier",
      "crossLanguageDefinitionId": "Azure.Core.armResourceIdentifier",
      "baseType": {
       "$id": "189",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Thing.optionalResourceId",
     "serializationOptions": {
      "$id": "190",
      "json": {
       "$id": "191",
       "name": "optionalResourceId"
      }
     }
    }
   ]
  },
  {
   "$id": "192",
   "kind": "model",
   "name": "Friend",
   "namespace": "FirstTestTypeSpec",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.NotFriend",
   "usage": "Output,Spread,Json",
   "doc": "this is not a friendly model but with a friendly name",
   "decorators": [],
   "properties": [
    {
     "$id": "193",
     "kind": "property",
     "name": "name",
     "serializedName": "name",
     "doc": "name of the NotFriend",
     "type": {
      "$id": "194",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.NotFriend.name",
     "serializationOptions": {
      "$id": "195",
      "json": {
       "$id": "196",
       "name": "name"
      }
     }
    }
   ]
  },
  {
   "$id": "197",
   "kind": "model",
   "name": "ModelWithFormat",
   "namespace": "FirstTestTypeSpec",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.ModelWithFormat",
   "usage": "Input,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "198",
     "kind": "property",
     "name": "sourceUrl",
     "serializedName": "sourceUrl",
     "doc": "url format",
     "type": {
      "$id": "199",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.ModelWithFormat.sourceUrl",
     "serializationOptions": {
      "$id": "200",
      "json": {
       "$id": "201",
       "name": "sourceUrl"
      }
     }
    },
    {
     "$id": "202",
     "kind": "property",
     "name": "guid",
     "serializedName": "guid",
     "doc": "uuid format",
     "type": {
      "$id": "203",
      "kind": "string",
      "name": "uuid",
      "crossLanguageDefinitionId": "Azure.Core.uuid",
      "baseType": {
       "$id": "204",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.ModelWithFormat.guid",
     "serializationOptions": {
      "$id": "205",
      "json": {
       "$id": "206",
       "name": "guid"
      }
     }
    }
   ]
  },
  {
   "$id": "207",
   "kind": "model",
   "name": "ProjectedModel",
   "namespace": "FirstTestTypeSpec",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.ModelWithProjectedName",
   "usage": "Output,Spread,Json",
   "doc": "this is a model with a projected name",
   "decorators": [],
   "properties": [
    {
     "$id": "208",
     "kind": "property",
     "name": "name",
     "serializedName": "name",
     "doc": "name of the ModelWithProjectedName",
     "type": {
      "$id": "209",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.ModelWithProjectedName.name",
     "serializationOptions": {
      "$id": "210",
      "json": {
       "$id": "211",
       "name": "name"
      }
     }
    }
   ]
  },
  {
   "$id": "212",
   "kind": "model",
   "name": "ReturnsAnonymousModelResponse",
   "namespace": "FirstTestTypeSpec",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.returnsAnonymousModel.Response.anonymous",
   "usage": "Output,Json",
   "decorators": [],
   "properties": []
  },
  {
   "$id": "213",
   "kind": "model",
   "name": "Extension",
   "namespace": "FirstTestTypeSpec",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.Extension",
   "usage": "Input,Json",
   "doc": "extension",
   "decorators": [],
   "baseModel": {
    "$id": "214",
    "kind": "model",
    "name": "Element",
    "namespace": "FirstTestTypeSpec",
    "crossLanguageDefinitionId": "FirstTestTypeSpec.Element",
    "usage": "Input,Json",
    "doc": "element",
    "decorators": [],
    "properties": [
     {
      "$id": "215",
      "kind": "property",
      "name": "extension",
      "serializedName": "extension",
      "type": {
       "$id": "216",
       "kind": "array",
       "name": "ArrayExtension",
       "valueType": {
        "$ref": "213"
       },
       "crossLanguageDefinitionId": "TypeSpec.Array",
       "decorators": []
      },
      "optional": true,
      "readOnly": false,
      "discriminator": false,
      "flatten": false,
      "decorators": [],
      "crossLanguageDefinitionId": "FirstTestTypeSpec.Element.extension",
      "serializationOptions": {
       "$id": "217",
       "json": {
        "$id": "218",
        "name": "extension"
       }
      }
     }
    ]
   },
   "properties": [
    {
     "$id": "219",
     "kind": "property",
     "name": "level",
     "serializedName": "level",
     "type": {
      "$id": "220",
      "kind": "int8",
      "name": "int8",
      "crossLanguageDefinitionId": "TypeSpec.int8",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Extension.level",
     "serializationOptions": {
      "$id": "221",
      "json": {
       "$id": "222",
       "name": "level"
      }
     }
    }
   ]
  },
  {
   "$ref": "214"
  },
  {
   "$id": "223",
   "kind": "model",
   "name": "Extendible",
   "namespace": "FirstTestTypeSpec",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.Extendible",
   "usage": "Input,Json",
   "doc": "FHIR extendible element",
   "decorators": [],
   "properties": [
    {
     "$id": "224",
     "kind": "property",
     "name": "extension",
     "serializedName": "extension",
     "doc": "Additional Content defined by implementations",
     "type": {
      "$id": "225",
      "kind": "array",
      "name": "ArrayThereLevelExtension",
      "valueType": {
       "$id": "226",
       "kind": "model",
       "name": "ThereLevelExtension",
       "namespace": "FirstTestTypeSpec",
       "crossLanguageDefinitionId": "FirstTestTypeSpec.ThereLevelExtension",
       "usage": "Input,Json",
       "doc": "extension",
       "decorators": [],
       "baseModel": {
        "$id": "227",
        "kind": "model",
        "name": "ThereLevelElement",
        "namespace": "FirstTestTypeSpec",
        "crossLanguageDefinitionId": "FirstTestTypeSpec.ThereLevelElement",
        "usage": "Input,Json",
        "doc": "element",
        "decorators": [],
        "properties": [
         {
          "$id": "228",
          "kind": "property",
          "name": "extension",
          "serializedName": "extension",
          "type": {
           "$id": "229",
           "kind": "array",
           "name": "ArrayThereLevelExtension",
           "valueType": {
            "$ref": "226"
           },
           "crossLanguageDefinitionId": "TypeSpec.Array",
           "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "FirstTestTypeSpec.ThereLevelElement.extension",
          "serializationOptions": {
           "$id": "230",
           "json": {
            "$id": "231",
            "name": "extension"
           }
          }
         }
        ]
       },
       "properties": [
        {
         "$id": "232",
         "kind": "property",
         "name": "level",
         "serializedName": "level",
         "type": {
          "$id": "233",
          "kind": "int8",
          "name": "int8",
          "crossLanguageDefinitionId": "TypeSpec.int8",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "FirstTestTypeSpec.ThereLevelExtension.level",
         "serializationOptions": {
          "$id": "234",
          "json": {
           "$id": "235",
           "name": "level"
          }
         }
        }
       ]
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Extendible.extension",
     "serializationOptions": {
      "$id": "236",
      "json": {
       "$id": "237",
       "name": "extension"
      }
     }
    }
   ]
  },
  {
   "$ref": "226"
  },
  {
   "$ref": "227"
  },
  {
   "$id": "238",
   "kind": "model",
   "name": "ChildModel",
   "namespace": "FirstTestTypeSpec",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.ChildModel",
   "usage": "Input,Json",
   "doc": "ChildModel",
   "decorators": [],
   "baseModel": {
    "$id": "239",
    "kind": "model",
    "name": "BaseModel",
    "namespace": "FirstTestTypeSpec",
    "crossLanguageDefinitionId": "FirstTestTypeSpec.BaseModel",
    "usage": "Input,Json",
    "doc": "parenetModel",
    "decorators": [],
    "properties": [
     {
      "$id": "240",
      "kind": "property",
      "name": "level",
      "serializedName": "level",
      "type": {
       "$id": "241",
       "kind": "int8",
       "name": "int8",
       "crossLanguageDefinitionId": "TypeSpec.int8",
       "decorators": []
      },
      "optional": false,
      "readOnly": false,
      "discriminator": false,
      "flatten": false,
      "decorators": [],
      "crossLanguageDefinitionId": "FirstTestTypeSpec.BaseModel.level",
      "serializationOptions": {
       "$id": "242",
       "json": {
        "$id": "243",
        "name": "level"
       }
      }
     }
    ]
   },
   "properties": [
    {
     "$id": "244",
     "kind": "property",
     "name": "parent",
     "serializedName": "parent",
     "type": {
      "$id": "245",
      "kind": "array",
      "name": "ArrayBaseModel",
      "valueType": {
       "$ref": "239"
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.ChildModel.parent",
     "serializationOptions": {
      "$id": "246",
      "json": {
       "$id": "247",
       "name": "parent"
      }
     }
    }
   ]
  },
  {
   "$ref": "239"
  },
  {
   "$id": "248",
   "kind": "model",
   "name": "ContainSelf",
   "namespace": "FirstTestTypeSpec",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.ContainSelf",
   "usage": "Input,Json",
   "doc": "containself",
   "decorators": [],
   "properties": [
    {
     "$id": "249",
     "kind": "property",
     "name": "self",
     "serializedName": "self",
     "type": {
      "$ref": "248"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.ContainSelf.self",
     "serializationOptions": {
      "$id": "250",
      "json": {
       "$id": "251",
       "name": "self"
      }
     }
    }
   ]
  },
  {
   "$id": "252",
   "kind": "model",
   "name": "ModelWithProjectedEnum",
   "namespace": "FirstTestTypeSpec",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.ModelWithProjectedEnum",
   "usage": "Input,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "253",
     "kind": "property",
     "name": "enumProperty",
     "serializedName": "enumProperty",
     "doc": "enum with projected name used in a model",
     "type": {
      "$ref": "28"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.ModelWithProjectedEnum.enumProperty",
     "serializationOptions": {
      "$id": "254",
      "json": {
       "$id": "255",
       "name": "enumProperty"
      }
     }
    }
   ]
  },
  {
   "$id": "256",
   "kind": "model",
   "name": "AzureLocationModel",
   "namespace": "FirstTestTypeSpec",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.AzureLocationModel",
   "usage": "Input,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "257",
     "kind": "property",
     "name": "location",
     "serializedName": "location",
     "type": {
      "$id": "258",
      "kind": "string",
      "name": "azureLocation",
      "crossLanguageDefinitionId": "Azure.Core.azureLocation",
      "baseType": {
       "$id": "259",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.AzureLocationModel.location",
     "serializationOptions": {
      "$id": "260",
      "json": {
       "$id": "261",
       "name": "location"
      }
     }
    }
   ]
  },
  {
   "$id": "262",
   "kind": "model",
   "name": "RoundTripModel",
   "namespace": "FirstTestTypeSpec",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel",
   "usage": "Input,Output,Json",
   "doc": "this is a roundtrip model",
   "decorators": [],
   "properties": [
    {
     "$id": "263",
     "kind": "property",
     "name": "requiredString",
     "serializedName": "requiredString",
     "doc": "Required string, illustrating a reference type property.",
     "type": {
      "$id": "264",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.requiredString",
     "serializationOptions": {
      "$id": "265",
      "json": {
       "$id": "266",
       "name": "requiredString"
      }
     }
    },
    {
     "$id": "267",
     "kind": "property",
     "name": "requiredInt",
     "serializedName": "requiredInt",
     "doc": "Required int, illustrating a value type property.",
     "type": {
      "$id": "268",
      "kind": "int32",
      "name": "int32",
      "crossLanguageDefinitionId": "TypeSpec.int32",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.requiredInt",
     "serializationOptions": {
      "$id": "269",
      "json": {
       "$id": "270",
       "name": "requiredInt"
      }
     }
    },
    {
     "$id": "271",
     "kind": "property",
     "name": "requiredCollection",
     "serializedName": "requiredCollection",
     "doc": "Required collection of enums",
     "type": {
      "$id": "272",
      "kind": "array",
      "name": "ArrayStringFixedEnum",
      "valueType": {
       "$ref": "36"
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.requiredCollection",
     "serializationOptions": {
      "$id": "273",
      "json": {
       "$id": "274",
       "name": "requiredCollection"
      }
     }
    },
    {
     "$id": "275",
     "kind": "property",
     "name": "requiredDictionary",
     "serializedName": "requiredDictionary",
     "doc": "Required dictionary of enums",
     "type": {
      "$id": "276",
      "kind": "dict",
      "keyType": {
       "$id": "277",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "valueType": {
       "$ref": "44"
      },
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.requiredDictionary",
     "serializationOptions": {
      "$id": "278",
      "json": {
       "$id": "279",
       "name": "requiredDictionary"
      }
     }
    },
    {
     "$id": "280",
     "kind": "property",
     "name": "requiredModel",
     "serializedName": "requiredModel",
     "doc": "Required model",
     "type": {
      "$ref": "116"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.requiredModel",
     "serializationOptions": {
      "$id": "281",
      "json": {
       "$id": "282",
       "name": "requiredModel"
      }
     }
    },
    {
     "$id": "283",
     "kind": "property",
     "name": "intExtensibleEnum",
     "serializedName": "intExtensibleEnum",
     "doc": "this is an int based extensible enum",
     "type": {
      "$ref": "52"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.intExtensibleEnum",
     "serializationOptions": {
      "$id": "284",
      "json": {
       "$id": "285",
       "name": "intExtensibleEnum"
      }
     }
    },
    {
     "$id": "286",
     "kind": "property",
     "name": "intExtensibleEnumCollection",
     "serializedName": "intExtensibleEnumCollection",
     "doc": "this is a collection of int based extensible enum",
     "type": {
      "$id": "287",
      "kind": "array",
      "name": "ArrayIntExtensibleEnum",
      "valueType": {
       "$ref": "52"
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.intExtensibleEnumCollection",
     "serializationOptions": {
      "$id": "288",
      "json": {
       "$id": "289",
       "name": "intExtensibleEnumCollection"
      }
     }
    },
    {
     "$id": "290",
     "kind": "property",
     "name": "floatExtensibleEnum",
     "serializedName": "floatExtensibleEnum",
     "doc": "this is a float based extensible enum",
     "type": {
      "$ref": "60"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.floatExtensibleEnum",
     "serializationOptions": {
      "$id": "291",
      "json": {
       "$id": "292",
       "name": "floatExtensibleEnum"
      }
     }
    },
    {
     "$id": "293",
     "kind": "property",
     "name": "floatExtensibleEnumCollection",
     "serializedName": "floatExtensibleEnumCollection",
     "doc": "this is a collection of float based extensible enum",
     "type": {
      "$id": "294",
      "kind": "array",
      "name": "ArrayFloatExtensibleEnum",
      "valueType": {
       "$ref": "60"
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.floatExtensibleEnumCollection",
     "serializationOptions": {
      "$id": "295",
      "json": {
       "$id": "296",
       "name": "floatExtensibleEnumCollection"
      }
     }
    },
    {
     "$id": "297",
     "kind": "property",
     "name": "floatFixedEnum",
     "serializedName": "floatFixedEnum",
     "doc": "this is a float based fixed enum",
     "type": {
      "$ref": "68"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.floatFixedEnum",
     "serializationOptions": {
      "$id": "298",
      "json": {
       "$id": "299",
       "name": "floatFixedEnum"
      }
     }
    },
    {
     "$id": "300",
     "kind": "property",
     "name": "floatFixedEnumCollection",
     "serializedName": "floatFixedEnumCollection",
     "doc": "this is a collection of float based fixed enum",
     "type": {
      "$id": "301",
      "kind": "array",
      "name": "ArrayFloatFixedEnum",
      "valueType": {
       "$ref": "68"
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.floatFixedEnumCollection",
     "serializationOptions": {
      "$id": "302",
      "json": {
       "$id": "303",
       "name": "floatFixedEnumCollection"
      }
     }
    },
    {
     "$id": "304",
     "kind": "property",
     "name": "intFixedEnum",
     "serializedName": "intFixedEnum",
     "doc": "this is a int based fixed enum",
     "type": {
      "$ref": "76"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.intFixedEnum",
     "serializationOptions": {
      "$id": "305",
      "json": {
       "$id": "306",
       "name": "intFixedEnum"
      }
     }
    },
    {
     "$id": "307",
     "kind": "property",
     "name": "intFixedEnumCollection",
     "serializedName": "intFixedEnumCollection",
     "doc": "this is a collection of int based fixed enum",
     "type": {
      "$id": "308",
      "kind": "array",
      "name": "ArrayIntFixedEnum",
      "valueType": {
       "$ref": "76"
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.intFixedEnumCollection",
     "serializationOptions": {
      "$id": "309",
      "json": {
       "$id": "310",
       "name": "intFixedEnumCollection"
      }
     }
    },
    {
     "$id": "311",
     "kind": "property",
     "name": "stringFixedEnum",
     "serializedName": "stringFixedEnum",
     "doc": "this is a string based fixed enum",
     "type": {
      "$ref": "36"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.stringFixedEnum",
     "serializationOptions": {
      "$id": "312",
      "json": {
       "$id": "313",
       "name": "stringFixedEnum"
      }
     }
    },
    {
     "$id": "314",
     "kind": "property",
     "name": "requiredUnknown",
     "serializedName": "requiredUnknown",
     "doc": "required unknown",
     "type": {
      "$id": "315",
      "kind": "unknown",
      "name": "unknown",
      "crossLanguageDefinitionId": "",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.requiredUnknown",
     "serializationOptions": {
      "$id": "316",
      "json": {
       "$id": "317",
       "name": "requiredUnknown"
      }
     }
    },
    {
     "$id": "318",
     "kind": "property",
     "name": "optionalUnknown",
     "serializedName": "optionalUnknown",
     "doc": "optional unknown",
     "type": {
      "$id": "319",
      "kind": "unknown",
      "name": "unknown",
      "crossLanguageDefinitionId": "",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.optionalUnknown",
     "serializationOptions": {
      "$id": "320",
      "json": {
       "$id": "321",
       "name": "optionalUnknown"
      }
     }
    },
    {
     "$id": "322",
     "kind": "property",
     "name": "requiredRecordUnknown",
     "serializedName": "requiredRecordUnknown",
     "doc": "required record of unknown",
     "type": {
      "$id": "323",
      "kind": "dict",
      "keyType": {
       "$id": "324",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "valueType": {
       "$id": "325",
       "kind": "unknown",
       "name": "unknown",
       "crossLanguageDefinitionId": "",
       "decorators": []
      },
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.requiredRecordUnknown",
     "serializationOptions": {
      "$id": "326",
      "json": {
       "$id": "327",
       "name": "requiredRecordUnknown"
      }
     }
    },
    {
     "$id": "328",
     "kind": "property",
     "name": "optionalRecordUnknown",
     "serializedName": "optionalRecordUnknown",
     "doc": "optional record of unknown",
     "type": {
      "$id": "329",
      "kind": "dict",
      "keyType": {
       "$id": "330",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "valueType": {
       "$id": "331",
       "kind": "unknown",
       "name": "unknown",
       "crossLanguageDefinitionId": "",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.optionalRecordUnknown",
     "serializationOptions": {
      "$id": "332",
      "json": {
       "$id": "333",
       "name": "optionalRecordUnknown"
      }
     }
    },
    {
     "$id": "334",
     "kind": "property",
     "name": "readOnlyRequiredRecordUnknown",
     "serializedName": "readOnlyRequiredRecordUnknown",
     "doc": "required readonly record of unknown",
     "type": {
      "$id": "335",
      "kind": "dict",
      "keyType": {
       "$id": "336",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "valueType": {
       "$id": "337",
       "kind": "unknown",
       "name": "unknown",
       "crossLanguageDefinitionId": "",
       "decorators": []
      },
      "decorators": []
     },
     "optional": false,
     "readOnly": true,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.readOnlyRequiredRecordUnknown",
     "serializationOptions": {
      "$id": "338",
      "json": {
       "$id": "339",
       "name": "readOnlyRequiredRecordUnknown"
      }
     }
    },
    {
     "$id": "340",
     "kind": "property",
     "name": "readOnlyOptionalRecordUnknown",
     "serializedName": "readOnlyOptionalRecordUnknown",
     "doc": "optional readonly record of unknown",
     "type": {
      "$id": "341",
      "kind": "dict",
      "keyType": {
       "$id": "342",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "valueType": {
       "$id": "343",
       "kind": "unknown",
       "name": "unknown",
       "crossLanguageDefinitionId": "",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": true,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.readOnlyOptionalRecordUnknown",
     "serializationOptions": {
      "$id": "344",
      "json": {
       "$id": "345",
       "name": "readOnlyOptionalRecordUnknown"
      }
     }
    },
    {
     "$id": "346",
     "kind": "property",
     "name": "modelWithRequiredNullable",
     "serializedName": "modelWithRequiredNullable",
     "doc": "this is a model with required nullable properties",
     "type": {
      "$id": "347",
      "kind": "model",
      "name": "ModelWithRequiredNullableProperties",
      "namespace": "FirstTestTypeSpec",
      "crossLanguageDefinitionId": "FirstTestTypeSpec.ModelWithRequiredNullableProperties",
      "usage": "Input,Output,Json",
      "doc": "A model with a few required nullable properties",
      "decorators": [],
      "properties": [
       {
        "$id": "348",
        "kind": "property",
        "name": "requiredNullablePrimitive",
        "serializedName": "requiredNullablePrimitive",
        "doc": "required nullable primitive type",
        "type": {
         "$id": "349",
         "kind": "nullable",
         "type": {
          "$id": "350",
          "kind": "int32",
          "name": "int32",
          "crossLanguageDefinitionId": "TypeSpec.int32",
          "decorators": []
         },
         "namespace": ""
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "FirstTestTypeSpec.ModelWithRequiredNullableProperties.requiredNullablePrimitive",
        "serializationOptions": {
         "$id": "351",
         "json": {
          "$id": "352",
          "name": "requiredNullablePrimitive"
         }
        }
       },
       {
        "$id": "353",
        "kind": "property",
        "name": "requiredExtensibleEnum",
        "serializedName": "requiredExtensibleEnum",
        "doc": "required nullable extensible enum type",
        "type": {
         "$id": "354",
         "kind": "nullable",
         "type": {
          "$ref": "44"
         },
         "namespace": ""
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "FirstTestTypeSpec.ModelWithRequiredNullableProperties.requiredExtensibleEnum",
        "serializationOptions": {
         "$id": "355",
         "json": {
          "$id": "356",
          "name": "requiredExtensibleEnum"
         }
        }
       },
       {
        "$id": "357",
        "kind": "property",
        "name": "requiredFixedEnum",
        "serializedName": "requiredFixedEnum",
        "doc": "required nullable fixed enum type",
        "type": {
         "$id": "358",
         "kind": "nullable",
         "type": {
          "$ref": "36"
         },
         "namespace": ""
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "FirstTestTypeSpec.ModelWithRequiredNullableProperties.requiredFixedEnum",
        "serializationOptions": {
         "$id": "359",
         "json": {
          "$id": "360",
          "name": "requiredFixedEnum"
         }
        }
       }
      ]
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.modelWithRequiredNullable",
     "serializationOptions": {
      "$id": "361",
      "json": {
       "$id": "362",
       "name": "modelWithRequiredNullable"
      }
     }
    },
    {
     "$id": "363",
     "kind": "property",
     "name": "unionList",
     "serializedName": "unionList",
     "doc": "this is a list of union types",
     "type": {
      "$id": "364",
      "kind": "array",
      "name": "Array",
      "valueType": {
       "$id": "365",
       "kind": "union",
       "name": "RoundTripModelUnionList",
       "variantTypes": [
        {
         "$id": "366",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        {
         "$id": "367",
         "kind": "int32",
         "name": "int32",
         "crossLanguageDefinitionId": "TypeSpec.int32",
         "decorators": []
        },
        {
         "$id": "368",
         "kind": "model",
         "name": "ModelForUnion",
         "namespace": "FirstTestTypeSpec",
         "crossLanguageDefinitionId": "FirstTestTypeSpec.ModelForUnion",
         "usage": "Input,Output,Json",
         "doc": "This is a model only used in union types, please do not use it anywhere else.",
         "decorators": [],
         "properties": [
          {
           "$id": "369",
           "kind": "property",
           "name": "name",
           "serializedName": "name",
           "doc": "name of the ModelForUnion",
           "type": {
            "$id": "370",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           },
           "optional": false,
           "readOnly": false,
           "discriminator": false,
           "flatten": false,
           "decorators": [],
           "crossLanguageDefinitionId": "FirstTestTypeSpec.ModelForUnion.name",
           "serializationOptions": {
            "$id": "371",
            "json": {
             "$id": "372",
             "name": "name"
            }
           }
          },
          {
           "$id": "373",
           "kind": "property",
           "name": "age",
           "serializedName": "age",
           "doc": "age of the ModelForUnion",
           "type": {
            "$id": "374",
            "kind": "int32",
            "name": "int32",
            "crossLanguageDefinitionId": "TypeSpec.int32",
            "decorators": []
           },
           "optional": true,
           "readOnly": false,
           "discriminator": false,
           "flatten": false,
           "decorators": [],
           "crossLanguageDefinitionId": "FirstTestTypeSpec.ModelForUnion.age",
           "serializationOptions": {
            "$id": "375",
            "json": {
             "$id": "376",
             "name": "age"
            }
           }
          }
         ]
        },
        {
         "$id": "377",
         "kind": "array",
         "name": "ArrayModelForUnion",
         "valueType": {
          "$ref": "368"
         },
         "crossLanguageDefinitionId": "TypeSpec.Array",
         "decorators": []
        }
       ],
       "namespace": "",
       "decorators": []
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.unionList",
     "serializationOptions": {
      "$id": "378",
      "json": {
       "$id": "379",
       "name": "unionList"
      }
     }
    },
    {
     "$id": "380",
     "kind": "property",
     "name": "binaryDataRecord",
     "serializedName": "binaryDataRecord",
     "doc": "this is a record of unknown to be changed to BinaryData in customized code",
     "type": {
      "$id": "381",
      "kind": "dict",
      "keyType": {
       "$id": "382",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "valueType": {
       "$id": "383",
       "kind": "unknown",
       "name": "unknown",
       "crossLanguageDefinitionId": "",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.binaryDataRecord",
     "serializationOptions": {
      "$id": "384",
      "json": {
       "$id": "385",
       "name": "binaryDataRecord"
      }
     }
    }
   ]
  },
  {
   "$ref": "347"
  },
  {
   "$ref": "368"
  },
  {
   "$id": "386",
   "kind": "model",
   "name": "ResourceOperationStatusResourceExportedResourceError",
   "namespace": "Azure.Core",
   "crossLanguageDefinitionId": "Azure.Core.ResourceOperationStatus",
   "usage": "None",
   "doc": "Provides status details for long running operations.",
   "decorators": [],
   "properties": [
    {
     "$id": "387",
     "kind": "property",
     "name": "id",
     "serializedName": "id",
     "doc": "The unique ID of the operation.",
     "type": {
      "$id": "388",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Azure.Core.ResourceOperationStatus.id",
     "serializationOptions": {
      "$id": "389"
     }
    },
    {
     "$id": "390",
     "kind": "property",
     "name": "status",
     "serializedName": "status",
     "doc": "The status of the operation",
     "type": {
      "$ref": "104"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Azure.Core.ResourceOperationStatus.status",
     "serializationOptions": {
      "$id": "391"
     }
    },
    {
     "$id": "392",
     "kind": "property",
     "name": "error",
     "serializedName": "error",
     "doc": "Error object that describes the error when status is \"Failed\".",
     "type": {
      "$id": "393",
      "kind": "model",
      "name": "Error",
      "namespace": "Azure.Core.Foundations",
      "crossLanguageDefinitionId": "Azure.Core.Foundations.Error",
      "usage": "None",
      "doc": "The error object.",
      "decorators": [],
      "properties": [
       {
        "$id": "394",
        "kind": "property",
        "name": "code",
        "serializedName": "code",
        "doc": "One of a server-defined set of error codes.",
        "type": {
         "$id": "395",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Azure.Core.Foundations.Error.code",
        "serializationOptions": {
         "$id": "396"
        }
       },
       {
        "$id": "397",
        "kind": "property",
        "name": "message",
        "serializedName": "message",
        "doc": "A human-readable representation of the error.",
        "type": {
         "$id": "398",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Azure.Core.Foundations.Error.message",
        "serializationOptions": {
         "$id": "399"
        }
       },
       {
        "$id": "400",
        "kind": "property",
        "name": "target",
        "serializedName": "target",
        "doc": "The target of the error.",
        "type": {
         "$id": "401",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Azure.Core.Foundations.Error.target",
        "serializationOptions": {
         "$id": "402"
        }
       },
       {
        "$id": "403",
        "kind": "property",
        "name": "details",
        "serializedName": "details",
        "doc": "An array of details about specific errors that led to this reported error.",
        "type": {
         "$id": "404",
         "kind": "array",
         "name": "ArrayError",
         "valueType": {
          "$ref": "393"
         },
         "crossLanguageDefinitionId": "TypeSpec.Array",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Azure.Core.Foundations.Error.details",
        "serializationOptions": {
         "$id": "405"
        }
       },
       {
        "$id": "406",
        "kind": "property",
        "name": "innererror",
        "serializedName": "innererror",
        "doc": "An object containing more specific information than the current object about the error.",
        "type": {
         "$id": "407",
         "kind": "model",
         "name": "InnerError",
         "namespace": "Azure.Core.Foundations",
         "crossLanguageDefinitionId": "Azure.Core.Foundations.InnerError",
         "usage": "None",
         "doc": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
         "decorators": [],
         "properties": [
          {
           "$id": "408",
           "kind": "property",
           "name": "code",
           "serializedName": "code",
           "doc": "One of a server-defined set of error codes.",
           "type": {
            "$id": "409",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           },
           "optional": true,
           "readOnly": false,
           "discriminator": false,
           "flatten": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Azure.Core.Foundations.InnerError.code",
           "serializationOptions": {
            "$id": "410"
           }
          },
          {
           "$id": "411",
           "kind": "property",
           "name": "innererror",
           "serializedName": "innererror",
           "doc": "Inner error.",
           "type": {
            "$ref": "407"
           },
           "optional": true,
           "readOnly": false,
           "discriminator": false,
           "flatten": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Azure.Core.Foundations.InnerError.innererror",
           "serializationOptions": {
            "$id": "412"
           }
          }
         ]
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Azure.Core.Foundations.Error.innererror",
        "serializationOptions": {
         "$id": "413"
        }
       }
      ]
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Azure.Core.ResourceOperationStatus.error",
     "serializationOptions": {
      "$id": "414"
     }
    },
    {
     "$id": "415",
     "kind": "property",
     "name": "result",
     "serializedName": "result",
     "doc": "The result of the operation.",
     "type": {
      "$id": "416",
      "kind": "model",
      "name": "ExportedResource",
      "namespace": "FirstTestTypeSpec",
      "crossLanguageDefinitionId": "FirstTestTypeSpec.ExportedResource",
      "usage": "None",
      "decorators": [],
      "properties": [
       {
        "$id": "417",
        "kind": "property",
        "name": "id",
        "serializedName": "id",
        "type": {
         "$id": "418",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "FirstTestTypeSpec.ExportedResource.id",
        "serializationOptions": {
         "$id": "419"
        }
       },
       {
        "$id": "420",
        "kind": "property",
        "name": "name",
        "serializedName": "name",
        "type": {
         "$id": "421",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "FirstTestTypeSpec.ExportedResource.name",
        "serializationOptions": {
         "$id": "422"
        }
       }
      ]
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Azure.Core.ResourceOperationStatus.result",
     "serializationOptions": {
      "$id": "423"
     }
    }
   ]
  },
  {
   "$ref": "393"
  },
  {
   "$ref": "407"
  },
  {
   "$ref": "416"
  }
 ],
 "Clients": [
  {
   "$id": "424",
   "Name": "FirstTestTypeSpecClient",
   "Namespace": "FirstTestTypeSpec",
   "Doc": "This is a sample typespec project.",
   "Operations": [
    {
     "$id": "425",
     "Name": "topAction",
     "ResourceName": "FirstTestTypeSpec",
     "Doc": "top level method",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "426",
       "Name": "action",
       "NameInRequest": "action",
       "Type": {
        "$id": "427",
        "kind": "utcDateTime",
        "name": "utcDateTime",
        "encode": "rfc3339",
        "wireType": {
         "$id": "428",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
        "decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "429",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "430",
        "kind": "constant",
        "valueType": {
         "$id": "431",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "432",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "116"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{firstTestTypeSpecUrl}",
     "Path": "/top/{action}",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "FirstTestTypeSpec.topAction",
     "Decorators": []
    },
    {
     "$id": "433",
     "Name": "topAction2",
     "ResourceName": "FirstTestTypeSpec",
     "Doc": "top level method2",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "434",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "435",
        "kind": "constant",
        "valueType": {
         "$id": "436",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "437",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "116"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{firstTestTypeSpecUrl}",
     "Path": "/top2",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": false,
     "CrossLanguageDefinitionId": "FirstTestTypeSpec.topAction2",
     "Decorators": []
    },
    {
     "$id": "438",
     "Name": "patchAction",
     "ResourceName": "FirstTestTypeSpec",
     "Doc": "top level patch",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "439",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Doc": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "440",
        "kind": "constant",
        "valueType": {
         "$id": "441",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "442",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "443",
        "kind": "constant",
        "valueType": {
         "$id": "444",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "445",
       "Name": "body",
       "NameInRequest": "body",
       "Type": {
        "$ref": "116"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "446",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "116"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "PATCH",
     "RequestBodyMediaType": "Json",
     "Uri": "{firstTestTypeSpecUrl}",
     "Path": "/patch",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": false,
     "CrossLanguageDefinitionId": "FirstTestTypeSpec.patchAction",
     "Decorators": []
    },
    {
     "$id": "447",
     "Name": "anonymousBody",
     "ResourceName": "FirstTestTypeSpec",
     "Doc": "body parameter without body decorator",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "448",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Doc": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "449",
        "kind": "constant",
        "valueType": {
         "$id": "450",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "451",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "452",
        "kind": "constant",
        "valueType": {
         "$id": "453",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "454",
       "Name": "thing",
       "NameInRequest": "thing",
       "Type": {
        "$ref": "116"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Spread",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "455",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "116"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{firstTestTypeSpecUrl}",
     "Path": "/anonymousBody",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "FirstTestTypeSpec.anonymousBody",
     "Decorators": []
    },
    {
     "$id": "456",
     "Name": "friendlyModel",
     "ResourceName": "FirstTestTypeSpec",
     "Doc": "Model can have its friendly name",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "457",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Doc": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "458",
        "kind": "constant",
        "valueType": {
         "$id": "459",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "460",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "461",
        "kind": "constant",
        "valueType": {
         "$id": "462",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "463",
       "Name": "friend",
       "NameInRequest": "friend",
       "Type": {
        "$ref": "192"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Spread",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "464",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "192"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{firstTestTypeSpecUrl}",
     "Path": "/friendlyName",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "FirstTestTypeSpec.friendlyModel",
     "Decorators": []
    },
    {
     "$id": "465",
     "Name": "addTimeHeader",
     "ResourceName": "FirstTestTypeSpec",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "466",
       "Name": "repeatabilityFirstSent",
       "NameInRequest": "Repeatability-First-Sent",
       "Type": {
        "$id": "467",
        "kind": "utcDateTime",
        "name": "utcDateTime",
        "encode": "rfc7231",
        "wireType": {
         "$id": "468",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "469",
       "StatusCodes": [
        204
       ],
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{firstTestTypeSpecUrl}",
     "Path": "/",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": false,
     "CrossLanguageDefinitionId": "FirstTestTypeSpec.addTimeHeader",
     "Decorators": []
    },
    {
     "$id": "470",
     "Name": "stringFormat",
     "ResourceName": "FirstTestTypeSpec",
     "Doc": "paramete has string format.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "471",
       "Name": "subscriptionId",
       "NameInRequest": "subscriptionId",
       "Type": {
        "$id": "472",
        "kind": "string",
        "name": "uuid",
        "crossLanguageDefinitionId": "Azure.Core.uuid",
        "baseType": {
         "$id": "473",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "474",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Doc": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "475",
        "kind": "constant",
        "valueType": {
         "$id": "476",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "477",
       "Name": "body",
       "NameInRequest": "body",
       "Type": {
        "$ref": "197"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "478",
       "StatusCodes": [
        204
       ],
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{firstTestTypeSpecUrl}",
     "Path": "/stringFormat/{subscriptionId}",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "FirstTestTypeSpec.stringFormat",
     "Decorators": []
    },
    {
     "$id": "479",
     "Name": "projectedNameModel",
     "ResourceName": "FirstTestTypeSpec",
     "Doc": "Model can have its projected name",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "480",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Doc": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "481",
        "kind": "constant",
        "valueType": {
         "$id": "482",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "483",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "484",
        "kind": "constant",
        "valueType": {
         "$id": "485",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "486",
       "Name": "projectedModel",
       "NameInRequest": "projectedModel",
       "Type": {
        "$ref": "207"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Spread",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "487",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "207"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{firstTestTypeSpecUrl}",
     "Path": "/projectedName",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "FirstTestTypeSpec.projectedNameModel",
     "Decorators": []
    },
    {
     "$id": "488",
     "Name": "returnsAnonymousModel",
     "ResourceName": "FirstTestTypeSpec",
     "Doc": "return anonymous model",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "489",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "490",
        "kind": "constant",
        "valueType": {
         "$id": "491",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "492",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "212"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "None",
     "Uri": "{firstTestTypeSpecUrl}",
     "Path": "/retunsAnonymousModel",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "FirstTestTypeSpec.returnsAnonymousModel",
     "Decorators": []
    },
    {
     "$id": "493",
     "Name": "headAsBoolean",
     "ResourceName": "FirstTestTypeSpec",
     "Doc": "head as boolean.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "494",
       "Name": "id",
       "NameInRequest": "id",
       "Type": {
        "$id": "495",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "496",
       "StatusCodes": [
        204
       ],
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false
      }
     ],
     "HttpMethod": "HEAD",
     "RequestBodyMediaType": "None",
     "Uri": "{firstTestTypeSpecUrl}",
     "Path": "/headAsBoolean/{id}",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "FirstTestTypeSpec.headAsBoolean",
     "Decorators": []
    },
    {
     "$id": "497",
     "Name": "stringBody",
     "ResourceName": "FirstTestTypeSpec",
     "Doc": "The body parameter type is string.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "498",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Doc": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "499",
        "kind": "constant",
        "valueType": {
         "$id": "500",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "501",
       "Name": "body",
       "NameInRequest": "body",
       "Type": {
        "$id": "502",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "503",
       "StatusCodes": [
        204
       ],
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false
      }
     ],
     "HttpMethod": "PUT",
     "RequestBodyMediaType": "Text",
     "Uri": "{firstTestTypeSpecUrl}",
     "Path": "/stringBody",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "FirstTestTypeSpec.stringBody",
     "Decorators": []
    },
    {
     "$id": "504",
     "Name": "boolBody",
     "ResourceName": "FirstTestTypeSpec",
     "Doc": "The body parameter type is bool.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "505",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Doc": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "506",
        "kind": "constant",
        "valueType": {
         "$id": "507",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "508",
       "Name": "body",
       "NameInRequest": "body",
       "Type": {
        "$id": "509",
        "kind": "boolean",
        "name": "boolean",
        "crossLanguageDefinitionId": "TypeSpec.boolean",
        "decorators": []
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "510",
       "StatusCodes": [
        204
       ],
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false
      }
     ],
     "HttpMethod": "PUT",
     "RequestBodyMediaType": "None",
     "Uri": "{firstTestTypeSpecUrl}",
     "Path": "/boolBody",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "FirstTestTypeSpec.boolBody",
     "Decorators": []
    },
    {
     "$id": "511",
     "Name": "dateTimeBody",
     "ResourceName": "FirstTestTypeSpec",
     "Doc": "The body parameter type is datetime.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "512",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Doc": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "513",
        "kind": "constant",
        "valueType": {
         "$id": "514",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "515",
       "Name": "body",
       "NameInRequest": "body",
       "Type": {
        "$id": "516",
        "kind": "utcDateTime",
        "name": "utcDateTime",
        "encode": "rfc3339",
        "wireType": {
         "$id": "517",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
        "decorators": []
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "518",
       "StatusCodes": [
        204
       ],
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false
      }
     ],
     "HttpMethod": "PUT",
     "RequestBodyMediaType": "None",
     "Uri": "{firstTestTypeSpecUrl}",
     "Path": "/dateTimeBody",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "FirstTestTypeSpec.dateTimeBody",
     "Decorators": []
    },
    {
     "$id": "519",
     "Name": "returnString",
     "ResourceName": "FirstTestTypeSpec",
     "Doc": "The return type is datetime.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "520",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "521",
        "kind": "constant",
        "valueType": {
         "$id": "522",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "523",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$id": "524",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "PUT",
     "RequestBodyMediaType": "None",
     "Uri": "{firstTestTypeSpecUrl}",
     "Path": "/returnString",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "FirstTestTypeSpec.returnString",
     "Decorators": []
    },
    {
     "$id": "525",
     "Name": "returnUnknown",
     "ResourceName": "FirstTestTypeSpec",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "526",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "527",
        "kind": "constant",
        "valueType": {
         "$id": "528",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "529",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$id": "530",
        "kind": "unknown",
        "name": "unknown",
        "crossLanguageDefinitionId": "",
        "decorators": []
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "PUT",
     "RequestBodyMediaType": "None",
     "Uri": "{firstTestTypeSpecUrl}",
     "Path": "/returnUnknown",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "FirstTestTypeSpec.returnUnknown",
     "Decorators": []
    },
    {
     "$id": "531",
     "Name": "recursiveExtension",
     "ResourceName": "FirstTestTypeSpec",
     "Doc": "test parent reference child",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "532",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Doc": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "533",
        "kind": "constant",
        "valueType": {
         "$id": "534",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "535",
       "Name": "input",
       "NameInRequest": "input",
       "Type": {
        "$ref": "213"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "536",
       "StatusCodes": [
        204
       ],
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false
      }
     ],
     "HttpMethod": "PUT",
     "RequestBodyMediaType": "Json",
     "Uri": "{firstTestTypeSpecUrl}",
     "Path": "/recursiveExtension",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "FirstTestTypeSpec.recursiveExtension",
     "Decorators": []
    },
    {
     "$id": "537",
     "Name": "threeLevelRecursive",
     "ResourceName": "FirstTestTypeSpec",
     "Doc": "test three level recursive extension",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "538",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Doc": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "539",
        "kind": "constant",
        "valueType": {
         "$id": "540",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "541",
       "Name": "input",
       "NameInRequest": "input",
       "Type": {
        "$ref": "223"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "542",
       "StatusCodes": [
        204
       ],
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false
      }
     ],
     "HttpMethod": "PUT",
     "RequestBodyMediaType": "Json",
     "Uri": "{firstTestTypeSpecUrl}",
     "Path": "/threeLevelRecursive",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "FirstTestTypeSpec.threeLevelRecursive",
     "Decorators": []
    },
    {
     "$id": "543",
     "Name": "recursiveModels",
     "ResourceName": "FirstTestTypeSpec",
     "Doc": "test child reference parent",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "544",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Doc": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "545",
        "kind": "constant",
        "valueType": {
         "$id": "546",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "547",
       "Name": "input",
       "NameInRequest": "input",
       "Type": {
        "$ref": "238"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "548",
       "StatusCodes": [
        204
       ],
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false
      }
     ],
     "HttpMethod": "PUT",
     "RequestBodyMediaType": "Json",
     "Uri": "{firstTestTypeSpecUrl}",
     "Path": "/recursiveModels",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "FirstTestTypeSpec.recursiveModels",
     "Decorators": []
    },
    {
     "$id": "549",
     "Name": "ContainSelfModels",
     "ResourceName": "FirstTestTypeSpec",
     "Doc": "test contain self models",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "550",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Doc": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "551",
        "kind": "constant",
        "valueType": {
         "$id": "552",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "553",
       "Name": "input",
       "NameInRequest": "input",
       "Type": {
        "$ref": "248"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "554",
       "StatusCodes": [
        204
       ],
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false
      }
     ],
     "HttpMethod": "PUT",
     "RequestBodyMediaType": "Json",
     "Uri": "{firstTestTypeSpecUrl}",
     "Path": "/containSelfModels",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "FirstTestTypeSpec.ContainSelfModels",
     "Decorators": []
    },
    {
     "$id": "555",
     "Name": "enumParameter",
     "ResourceName": "FirstTestTypeSpec",
     "Doc": "test enum parameter.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "556",
       "Name": "p1",
       "NameInRequest": "p1",
       "Type": {
        "$ref": "20"
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "557",
       "StatusCodes": [
        204
       ],
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{firstTestTypeSpecUrl}",
     "Path": "/enumParameter/{p1}",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "FirstTestTypeSpec.enumParameter",
     "Decorators": []
    },
    {
     "$id": "558",
     "Name": "bodyIsModelWithProjectedEnum",
     "ResourceName": "FirstTestTypeSpec",
     "Doc": "test enum parameter.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "559",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Doc": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "560",
        "kind": "constant",
        "valueType": {
         "$id": "561",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "562",
       "Name": "body",
       "NameInRequest": "body",
       "Type": {
        "$ref": "252"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "563",
       "StatusCodes": [
        204
       ],
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false
      }
     ],
     "HttpMethod": "PUT",
     "RequestBodyMediaType": "Json",
     "Uri": "{firstTestTypeSpecUrl}",
     "Path": "/bodyIsModelWithProjectedEnum",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "FirstTestTypeSpec.bodyIsModelWithProjectedEnum",
     "Decorators": []
    },
    {
     "$id": "564",
     "Name": "optionalDictionary",
     "ResourceName": "FirstTestTypeSpec",
     "Doc": "test optional dictionary.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "565",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Doc": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "566",
        "kind": "constant",
        "valueType": {
         "$id": "567",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "568",
       "Name": "body",
       "NameInRequest": "body",
       "Type": {
        "$id": "569",
        "kind": "dict",
        "keyType": {
         "$id": "570",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "valueType": {
         "$id": "571",
         "kind": "int32",
         "name": "int32",
         "crossLanguageDefinitionId": "TypeSpec.int32",
         "decorators": []
        },
        "decorators": []
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "572",
       "StatusCodes": [
        204
       ],
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false
      }
     ],
     "HttpMethod": "PUT",
     "RequestBodyMediaType": "None",
     "Uri": "{firstTestTypeSpecUrl}",
     "Path": "/optionalDictionary",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "FirstTestTypeSpec.optionalDictionary",
     "Decorators": []
    },
    {
     "$id": "573",
     "Name": "azureLocationOp",
     "ResourceName": "FirstTestTypeSpec",
     "Doc": "test optional dictionary.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "574",
       "Name": "location",
       "NameInRequest": "location",
       "Type": {
        "$id": "575",
        "kind": "string",
        "name": "azureLocation",
        "crossLanguageDefinitionId": "Azure.Core.azureLocation",
        "baseType": {
         "$id": "576",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "577",
       "Name": "regenLocation",
       "NameInRequest": "regen-location",
       "Type": {
        "$id": "578",
        "kind": "string",
        "name": "azureLocation",
        "crossLanguageDefinitionId": "Azure.Core.azureLocation",
        "baseType": {
         "$id": "579",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "580",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Doc": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "581",
        "kind": "constant",
        "valueType": {
         "$id": "582",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "583",
       "Name": "body",
       "NameInRequest": "body",
       "Type": {
        "$ref": "256"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "584",
       "StatusCodes": [
        204
       ],
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false
      }
     ],
     "HttpMethod": "PUT",
     "RequestBodyMediaType": "Json",
     "Uri": "{firstTestTypeSpecUrl}",
     "Path": "/azureLocation",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "FirstTestTypeSpec.azureLocationOp",
     "Decorators": []
    }
   ],
   "Protocol": {
    "$id": "585"
   },
   "Parameters": [
    {
     "$id": "586",
     "Name": "firstTestTypeSpecUrl",
     "NameInRequest": "firstTestTypeSpecUrl",
     "Type": {
      "$id": "587",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "Location": "Uri",
     "IsApiVersion": false,
     "IsResourceParameter": false,
     "IsContentType": false,
     "IsRequired": true,
     "IsEndpoint": true,
     "SkipUrlEncoding": false,
     "Explode": false,
     "Kind": "Client"
    }
   ],
   "Decorators": []
  },
  {
   "$id": "588",
   "Name": "Hello",
   "Namespace": "FirstTestTypeSpec.Hello",
   "Operations": [],
   "Protocol": {
    "$id": "589"
   },
   "Parent": "FirstTestTypeSpecClient",
   "Parameters": [
    {
     "$id": "590",
     "Name": "firstTestTypeSpecUrl",
     "NameInRequest": "firstTestTypeSpecUrl",
     "Type": {
      "$id": "591",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "Location": "Uri",
     "IsApiVersion": false,
     "IsResourceParameter": false,
     "IsContentType": false,
     "IsRequired": true,
     "IsEndpoint": true,
     "SkipUrlEncoding": false,
     "Explode": false,
     "Kind": "Client"
    }
   ],
   "Decorators": []
  },
  {
   "$id": "592",
   "Name": "HelloDemo",
   "Namespace": "FirstTestTypeSpec.Hello.Demo",
   "Doc": "Hello world service",
   "Operations": [
    {
     "$id": "593",
     "Name": "sayHi",
     "ResourceName": "Demo",
     "Doc": "Return hi",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "594",
       "Name": "headParameter",
       "NameInRequest": "head-parameter",
       "Type": {
        "$id": "595",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "596",
       "Name": "queryParameter",
       "NameInRequest": "queryParameter",
       "Type": {
        "$id": "597",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "598",
       "Name": "optionalQuery",
       "NameInRequest": "optionalQuery",
       "Type": {
        "$id": "599",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "600",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "601",
        "kind": "constant",
        "valueType": {
         "$id": "602",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "603",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "116"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{firstTestTypeSpecUrl}",
     "Path": "/hello",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": false,
     "CrossLanguageDefinitionId": "FirstTestTypeSpec.Hello.Demo.sayHi",
     "Decorators": []
    }
   ],
   "Protocol": {
    "$id": "604"
   },
   "Parent": "Hello",
   "Parameters": [
    {
     "$id": "605",
     "Name": "firstTestTypeSpecUrl",
     "NameInRequest": "firstTestTypeSpecUrl",
     "Type": {
      "$id": "606",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "Location": "Uri",
     "IsApiVersion": false,
     "IsResourceParameter": false,
     "IsContentType": false,
     "IsRequired": true,
     "IsEndpoint": true,
     "SkipUrlEncoding": false,
     "Explode": false,
     "Kind": "Client"
    }
   ],
   "Decorators": []
  },
  {
   "$id": "607",
   "Name": "HelloDemo2",
   "Namespace": "FirstTestTypeSpec.Hello.Demo2",
   "Operations": [
    {
     "$id": "608",
     "Name": "helloAgain",
     "ResourceName": "Demo2",
     "Doc": "Return hi again",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "609",
       "Name": "p1",
       "NameInRequest": "p1",
       "Type": {
        "$id": "610",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "611",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Type": {
        "$id": "612",
        "kind": "constant",
        "valueType": {
         "$id": "613",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "text/plain",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "614",
       "Name": "p2",
       "NameInRequest": "p2",
       "Type": {
        "$id": "615",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "616",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "617",
        "kind": "constant",
        "valueType": {
         "$id": "618",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "619",
       "Name": "action",
       "NameInRequest": "action",
       "Type": {
        "$ref": "262"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "620",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "262"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "Json",
     "Uri": "{firstTestTypeSpecUrl}",
     "Path": "/againHi/{p2}",
     "RequestMediaTypes": [
      "text/plain"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "FirstTestTypeSpec.Hello.Demo2.helloAgain",
     "Decorators": []
    },
    {
     "$id": "621",
     "Name": "noContentType",
     "ResourceName": "Demo2",
     "Doc": "Return hi again",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "622",
       "Name": "p1",
       "NameInRequest": "p1",
       "Type": {
        "$id": "623",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "624",
       "Name": "p2",
       "NameInRequest": "p2",
       "Type": {
        "$id": "625",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "626",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Doc": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "627",
        "kind": "constant",
        "valueType": {
         "$id": "628",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "629",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "630",
        "kind": "constant",
        "valueType": {
         "$id": "631",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "632",
       "Name": "action",
       "NameInRequest": "action",
       "Type": {
        "$ref": "262"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "633",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "262"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "Json",
     "Uri": "{firstTestTypeSpecUrl}",
     "Path": "/noContentType/{p2}",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": false,
     "CrossLanguageDefinitionId": "FirstTestTypeSpec.Hello.Demo2.noContentType",
     "Decorators": []
    },
    {
     "$id": "634",
     "Name": "helloDemoAgain",
     "ResourceName": "Demo2",
     "Doc": "Return hi in demo2",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "635",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "636",
        "kind": "constant",
        "valueType": {
         "$id": "637",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "638",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "116"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{firstTestTypeSpecUrl}",
     "Path": "/demoHi",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "FirstTestTypeSpec.Hello.Demo2.helloDemoAgain",
     "Decorators": []
    },
    {
     "$id": "639",
     "Name": "createLiteral",
     "ResourceName": "Demo2",
     "Doc": "Create with literal value",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "640",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Doc": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "641",
        "kind": "constant",
        "valueType": {
         "$id": "642",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "643",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "644",
        "kind": "constant",
        "valueType": {
         "$id": "645",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "646",
       "Name": "body",
       "NameInRequest": "body",
       "Type": {
        "$ref": "116"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "647",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "116"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{firstTestTypeSpecUrl}",
     "Path": "/literal",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "FirstTestTypeSpec.Hello.Demo2.createLiteral",
     "Decorators": []
    },
    {
     "$id": "648",
     "Name": "helloLiteral",
     "ResourceName": "Demo2",
     "Doc": "Send literal parameters",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "649",
       "Name": "p1",
       "NameInRequest": "p1",
       "Type": {
        "$id": "650",
        "kind": "constant",
        "valueType": {
         "$id": "651",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "test",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "652",
       "Name": "p2",
       "NameInRequest": "p2",
       "Type": {
        "$id": "653",
        "kind": "constant",
        "valueType": {
         "$id": "654",
         "kind": "int32",
         "name": "int32",
         "crossLanguageDefinitionId": "TypeSpec.int32",
         "decorators": []
        },
        "value": 123,
        "decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "655",
       "Name": "p3",
       "NameInRequest": "p3",
       "Type": {
        "$id": "656",
        "kind": "constant",
        "valueType": {
         "$id": "657",
         "kind": "boolean",
         "name": "boolean",
         "crossLanguageDefinitionId": "TypeSpec.boolean",
         "decorators": []
        },
        "value": true,
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "658",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "659",
        "kind": "constant",
        "valueType": {
         "$id": "660",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "661",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "116"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{firstTestTypeSpecUrl}",
     "Path": "/helloLiteral/{p2}",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "FirstTestTypeSpec.Hello.Demo2.helloLiteral",
     "Decorators": []
    }
   ],
   "Protocol": {
    "$id": "662"
   },
   "Parent": "Hello",
   "Parameters": [
    {
     "$id": "663",
     "Name": "firstTestTypeSpecUrl",
     "NameInRequest": "firstTestTypeSpecUrl",
     "Type": {
      "$id": "664",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "Location": "Uri",
     "IsApiVersion": false,
     "IsResourceParameter": false,
     "IsContentType": false,
     "IsRequired": true,
     "IsEndpoint": true,
     "SkipUrlEncoding": false,
     "Explode": false,
     "Kind": "Client"
    }
   ],
   "Decorators": []
  },
  {
   "$id": "665",
   "Name": "EnumTest",
   "Namespace": "FirstTestTypeSpec.EnumTest",
   "Operations": [
    {
     "$id": "666",
     "Name": "createUnknownValue",
     "ResourceName": "EnumTest",
     "Doc": "get extensible enum",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "667",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Doc": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "668",
        "kind": "constant",
        "valueType": {
         "$id": "669",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "670",
       "Name": "input",
       "NameInRequest": "input",
       "Type": {
        "$ref": "88"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "671",
       "StatusCodes": [
        204
       ],
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false
      }
     ],
     "HttpMethod": "PUT",
     "RequestBodyMediaType": "None",
     "Uri": "{firstTestTypeSpecUrl}",
     "Path": "/unknown-value",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": false,
     "CrossLanguageDefinitionId": "FirstTestTypeSpec.EnumTest.createUnknownValue",
     "Decorators": []
    }
   ],
   "Protocol": {
    "$id": "672"
   },
   "Parent": "FirstTestTypeSpecClient",
   "Parameters": [
    {
     "$id": "673",
     "Name": "firstTestTypeSpecUrl",
     "NameInRequest": "firstTestTypeSpecUrl",
     "Type": {
      "$id": "674",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "Location": "Uri",
     "IsApiVersion": false,
     "IsResourceParameter": false,
     "IsContentType": false,
     "IsRequired": true,
     "IsEndpoint": true,
     "SkipUrlEncoding": false,
     "Explode": false,
     "Kind": "Client"
    }
   ],
   "Decorators": []
  },
  {
   "$id": "675",
   "Name": "ProtocolAndConvenient",
   "Namespace": "FirstTestTypeSpec.ProtocolAndConvenient",
   "Operations": [
    {
     "$id": "676",
     "Name": "internalProtocol",
     "ResourceName": "ProtocolAndConvenient",
     "Doc": "When set protocol false and convenient true, then the protocol method should be internal",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "677",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Doc": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "678",
        "kind": "constant",
        "valueType": {
         "$id": "679",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "680",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "681",
        "kind": "constant",
        "valueType": {
         "$id": "682",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "683",
       "Name": "body",
       "NameInRequest": "body",
       "Type": {
        "$ref": "116"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "684",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "116"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{firstTestTypeSpecUrl}",
     "Path": "/internalProtocol",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": false,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "FirstTestTypeSpec.ProtocolAndConvenient.internalProtocol",
     "Decorators": []
    },
    {
     "$id": "685",
     "Name": "stillConvenient",
     "ResourceName": "ProtocolAndConvenient",
     "Doc": "When set protocol false and convenient true, the convenient method should be generated even it has the same signature as protocol one",
     "Accessibility": "public",
     "Parameters": [],
     "Responses": [
      {
       "$id": "686",
       "StatusCodes": [
        204
       ],
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{firstTestTypeSpecUrl}",
     "Path": "/stillConvenient",
     "BufferResponse": true,
     "GenerateProtocolMethod": false,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "FirstTestTypeSpec.ProtocolAndConvenient.stillConvenient",
     "Decorators": []
    }
   ],
   "Protocol": {
    "$id": "687"
   },
   "Parent": "FirstTestTypeSpecClient",
   "Parameters": [
    {
     "$id": "688",
     "Name": "firstTestTypeSpecUrl",
     "NameInRequest": "firstTestTypeSpecUrl",
     "Type": {
      "$id": "689",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "Location": "Uri",
     "IsApiVersion": false,
     "IsResourceParameter": false,
     "IsContentType": false,
     "IsRequired": true,
     "IsEndpoint": true,
     "SkipUrlEncoding": false,
     "Explode": false,
     "Kind": "Client"
    }
   ],
   "Decorators": []
  },
  {
   "$id": "690",
   "Name": "Entity",
   "Namespace": "FirstTestTypeSpec",
   "Operations": [
    {
     "$id": "691",
     "Name": "doSomething",
     "ResourceName": "Entity",
     "Doc": "doSomething for entity",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "692",
       "Name": "p2",
       "NameInRequest": "p2",
       "Type": {
        "$id": "693",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "694",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "695",
        "kind": "constant",
        "valueType": {
         "$id": "696",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "697",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "116"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{firstTestTypeSpecUrl}",
     "Path": "/entity/doSomething/{p2}",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "FirstTestTypeSpec.Entity.doSomething",
     "Decorators": []
    }
   ],
   "Protocol": {
    "$id": "698"
   },
   "Parent": "FirstTestTypeSpecClient",
   "Parameters": [
    {
     "$id": "699",
     "Name": "firstTestTypeSpecUrl",
     "NameInRequest": "firstTestTypeSpecUrl",
     "Type": {
      "$id": "700",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "Location": "Uri",
     "IsApiVersion": false,
     "IsResourceParameter": false,
     "IsContentType": false,
     "IsRequired": true,
     "IsEndpoint": true,
     "SkipUrlEncoding": false,
     "Explode": false,
     "Kind": "Client"
    }
   ],
   "Decorators": []
  },
  {
   "$id": "701",
   "Name": "Glossary",
   "Namespace": "FirstTestTypeSpec",
   "Operations": [
    {
     "$id": "702",
     "Name": "doSomething",
     "ResourceName": "Glossary",
     "Doc": "doSomething for glossary",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "703",
       "Name": "id",
       "NameInRequest": "id",
       "Type": {
        "$id": "704",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "705",
       "Name": "h1",
       "NameInRequest": "h1",
       "Type": {
        "$id": "706",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "707",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "708",
        "kind": "constant",
        "valueType": {
         "$id": "709",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "710",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "116"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{firstTestTypeSpecUrl}",
     "Path": "/glossary/doSomething/{id}",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "FirstTestTypeSpec.Glossary.doSomething",
     "Decorators": []
    }
   ],
   "Protocol": {
    "$id": "711"
   },
   "Parent": "FirstTestTypeSpecClient",
   "Parameters": [
    {
     "$id": "712",
     "Name": "firstTestTypeSpecUrl",
     "NameInRequest": "firstTestTypeSpecUrl",
     "Type": {
      "$id": "713",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "Location": "Uri",
     "IsApiVersion": false,
     "IsResourceParameter": false,
     "IsContentType": false,
     "IsRequired": true,
     "IsEndpoint": true,
     "SkipUrlEncoding": false,
     "Explode": false,
     "Kind": "Client"
    }
   ],
   "Decorators": []
  },
  {
   "$id": "714",
   "Name": "ResourceOperations",
   "Namespace": "FirstTestTypeSpec",
   "Operations": [],
   "Protocol": {
    "$id": "715"
   },
   "Parent": "FirstTestTypeSpecClient",
   "Parameters": [
    {
     "$id": "716",
     "Name": "firstTestTypeSpecUrl",
     "NameInRequest": "firstTestTypeSpecUrl",
     "Type": {
      "$id": "717",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "Location": "Uri",
     "IsApiVersion": false,
     "IsResourceParameter": false,
     "IsContentType": false,
     "IsRequired": true,
     "IsEndpoint": true,
     "SkipUrlEncoding": false,
     "Explode": false,
     "Kind": "Client"
    }
   ],
   "Decorators": []
  },
  {
   "$id": "718",
   "Name": "VersioningOp",
   "Namespace": "FirstTestTypeSpec",
   "Operations": [
    {
     "$id": "719",
     "Name": "export",
     "ResourceName": "VersioningOp",
     "Doc": "Long-running resource action operation template.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "720",
       "Name": "apiVersion",
       "NameInRequest": "api-version",
       "Doc": "The API version to use for this operation.",
       "Type": {
        "$id": "721",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": true,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Client",
       "DefaultValue": {
        "$id": "722",
        "Type": {
         "$id": "723",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "2022-05-15-preview"
       },
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "724",
       "Name": "name",
       "NameInRequest": "name",
       "Type": {
        "$id": "725",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "726",
       "Name": "projectFileVersion",
       "NameInRequest": "projectFileVersion",
       "Type": {
        "$id": "727",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "728",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "729",
        "kind": "constant",
        "valueType": {
         "$id": "730",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "731",
       "StatusCodes": [
        202
       ],
       "BodyType": {
        "$ref": "386"
       },
       "BodyMediaType": "Json",
       "Headers": [
        {
         "$id": "732",
         "Name": "operationLocation",
         "NameInResponse": "Operation-Location",
         "Doc": "The location for monitoring the operation state.",
         "Type": {
          "$id": "733",
          "kind": "url",
          "name": "ResourceLocation",
          "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
          "baseType": {
           "$id": "734",
           "kind": "url",
           "name": "url",
           "crossLanguageDefinitionId": "TypeSpec.url",
           "decorators": []
          },
          "decorators": []
         }
        }
       ],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "None",
     "Uri": "{firstTestTypeSpecUrl}",
     "Path": "/lro/resources/{name}:export",
     "BufferResponse": true,
     "LongRunning": {
      "$id": "735",
      "FinalStateVia": 3,
      "FinalResponse": {
       "$id": "736",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "386"
       },
       "BodyMediaType": "Json"
      },
      "ResultPath": "result"
     },
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": false,
     "CrossLanguageDefinitionId": "FirstTestTypeSpec.VersioningOp.export",
     "Decorators": []
    },
    {
     "$id": "737",
     "Name": "exportW",
     "ResourceName": "VersioningOp",
     "Doc": "Long-running resource action operation template.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "738",
       "Name": "apiVersion",
       "NameInRequest": "api-version",
       "Doc": "The API version to use for this operation.",
       "Type": {
        "$id": "739",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": true,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Client",
       "DefaultValue": {
        "$id": "740",
        "Type": {
         "$id": "741",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "2022-05-15-preview"
       },
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "742",
       "Name": "name",
       "NameInRequest": "name",
       "Type": {
        "$id": "743",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "744",
       "Name": "projectFileVersion",
       "NameInRequest": "projectFileVersion",
       "Type": {
        "$id": "745",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "746",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "747",
        "kind": "constant",
        "valueType": {
         "$id": "748",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "749",
       "StatusCodes": [
        202
       ],
       "BodyType": {
        "$ref": "386"
       },
       "BodyMediaType": "Json",
       "Headers": [
        {
         "$id": "750",
         "Name": "operationLocation",
         "NameInResponse": "Operation-Location",
         "Doc": "The location for monitoring the operation state.",
         "Type": {
          "$id": "751",
          "kind": "url",
          "name": "ResourceLocation",
          "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
          "baseType": {
           "$id": "752",
           "kind": "url",
           "name": "url",
           "crossLanguageDefinitionId": "TypeSpec.url",
           "decorators": []
          },
          "decorators": []
         }
        }
       ],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "None",
     "Uri": "{firstTestTypeSpecUrl}",
     "Path": "/lro/resources/{name}:exportW",
     "BufferResponse": true,
     "LongRunning": {
      "$id": "753",
      "FinalStateVia": 3,
      "FinalResponse": {
       "$id": "754",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "386"
       },
       "BodyMediaType": "Json"
      },
      "ResultPath": "result"
     },
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": false,
     "CrossLanguageDefinitionId": "FirstTestTypeSpec.VersioningOp.exportW",
     "Decorators": []
    }
   ],
   "Protocol": {
    "$id": "755"
   },
   "Parent": "FirstTestTypeSpecClient",
   "Parameters": [
    {
     "$id": "756",
     "Name": "firstTestTypeSpecUrl",
     "NameInRequest": "firstTestTypeSpecUrl",
     "Type": {
      "$id": "757",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "Location": "Uri",
     "IsApiVersion": false,
     "IsResourceParameter": false,
     "IsContentType": false,
     "IsRequired": true,
     "IsEndpoint": true,
     "SkipUrlEncoding": false,
     "Explode": false,
     "Kind": "Client"
    }
   ],
   "Decorators": []
  }
 ],
 "Auth": {
  "$id": "758",
  "OAuth2": {
   "$id": "759",
   "Scopes": [
    "https://api.example.com/.default"
   ]
  },
  "ApiKey": {
   "$id": "760",
   "Name": "x-ms-api-key",
   "In": "header"
  }
 }
}
