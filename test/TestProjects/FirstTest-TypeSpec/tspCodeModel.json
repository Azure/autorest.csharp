{
 "$id": "1",
 "name": "FirstTestTypeSpec",
 "apiVersions": [
  "2022-05-15-preview"
 ],
 "enums": [
  {
   "$id": "2",
   "kind": "enum",
   "name": "CsProjectedEnum",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.ProjectedEnum",
   "valueType": {
    "$id": "3",
    "kind": "float32",
    "name": "float32",
    "crossLanguageDefinitionId": "TypeSpec.float32",
    "decorators": []
   },
   "values": [
    {
     "$id": "4",
     "kind": "enumvalue",
     "name": "CsOne",
     "value": 1.1,
     "valueType": {
      "$id": "5",
      "kind": "float32",
      "name": "float32",
      "crossLanguageDefinitionId": "TypeSpec.float32",
      "decorators": []
     },
     "enumType": {
      "$ref": "2"
     },
     "decorators": []
    },
    {
     "$id": "6",
     "kind": "enumvalue",
     "name": "Two",
     "value": 2.2,
     "valueType": {
      "$id": "7",
      "kind": "float32",
      "name": "float32",
      "crossLanguageDefinitionId": "TypeSpec.float32",
      "decorators": []
     },
     "enumType": {
      "$ref": "2"
     },
     "decorators": []
    },
    {
     "$id": "8",
     "kind": "enumvalue",
     "name": "Four",
     "value": 4.4,
     "valueType": {
      "$id": "9",
      "kind": "float32",
      "name": "float32",
      "crossLanguageDefinitionId": "TypeSpec.float32",
      "decorators": []
     },
     "enumType": {
      "$ref": "2"
     },
     "decorators": []
    }
   ],
   "namespace": "FirstTestTypeSpec",
   "doc": "enum with projected name",
   "isFixed": true,
   "isFlags": false,
   "usage": "Input",
   "decorators": []
  },
  {
   "$id": "10",
   "kind": "enum",
   "name": "CsProjectedEnumInModel",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.ProjectedEnumInModel",
   "valueType": {
    "$id": "11",
    "kind": "float32",
    "name": "float32",
    "crossLanguageDefinitionId": "TypeSpec.float32",
    "decorators": []
   },
   "values": [
    {
     "$id": "12",
     "kind": "enumvalue",
     "name": "CsOne",
     "value": 1.1,
     "valueType": {
      "$id": "13",
      "kind": "float32",
      "name": "float32",
      "crossLanguageDefinitionId": "TypeSpec.float32",
      "decorators": []
     },
     "enumType": {
      "$ref": "10"
     },
     "decorators": []
    },
    {
     "$id": "14",
     "kind": "enumvalue",
     "name": "Two",
     "value": 2.2,
     "valueType": {
      "$id": "15",
      "kind": "float32",
      "name": "float32",
      "crossLanguageDefinitionId": "TypeSpec.float32",
      "decorators": []
     },
     "enumType": {
      "$ref": "10"
     },
     "decorators": []
    },
    {
     "$id": "16",
     "kind": "enumvalue",
     "name": "Four",
     "value": 4.4,
     "valueType": {
      "$id": "17",
      "kind": "float32",
      "name": "float32",
      "crossLanguageDefinitionId": "TypeSpec.float32",
      "decorators": []
     },
     "enumType": {
      "$ref": "10"
     },
     "decorators": []
    }
   ],
   "namespace": "FirstTestTypeSpec",
   "doc": "enum with projected name used in a model",
   "isFixed": true,
   "isFlags": false,
   "usage": "Input,Json",
   "decorators": []
  },
  {
   "$id": "18",
   "kind": "enum",
   "name": "StringFixedEnum",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.StringFixedEnum",
   "valueType": {
    "$id": "19",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "20",
     "kind": "enumvalue",
     "name": "One",
     "value": "1",
     "valueType": {
      "$id": "21",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "18"
     },
     "decorators": []
    },
    {
     "$id": "22",
     "kind": "enumvalue",
     "name": "Two",
     "value": "2",
     "valueType": {
      "$id": "23",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "18"
     },
     "decorators": []
    },
    {
     "$id": "24",
     "kind": "enumvalue",
     "name": "Four",
     "value": "4",
     "valueType": {
      "$id": "25",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "18"
     },
     "decorators": []
    }
   ],
   "namespace": "FirstTestTypeSpec",
   "doc": "Simple enum",
   "isFixed": true,
   "isFlags": false,
   "usage": "Input,Output,Json",
   "decorators": []
  },
  {
   "$id": "26",
   "kind": "enum",
   "name": "StringExtensibleEnum",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.StringExtensibleEnum",
   "valueType": {
    "$id": "27",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "28",
     "kind": "enumvalue",
     "name": "One",
     "value": "1",
     "valueType": {
      "$id": "29",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "26"
     },
     "decorators": []
    },
    {
     "$id": "30",
     "kind": "enumvalue",
     "name": "Two",
     "value": "2",
     "valueType": {
      "$id": "31",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "26"
     },
     "decorators": []
    },
    {
     "$id": "32",
     "kind": "enumvalue",
     "name": "Four",
     "value": "4",
     "valueType": {
      "$id": "33",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "26"
     },
     "decorators": []
    }
   ],
   "namespace": "FirstTestTypeSpec",
   "doc": "Extensible enum",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json",
   "decorators": []
  },
  {
   "$id": "34",
   "kind": "enum",
   "name": "IntExtensibleEnum",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.IntExtensibleEnum",
   "valueType": {
    "$id": "35",
    "kind": "int32",
    "name": "int32",
    "crossLanguageDefinitionId": "TypeSpec.int32",
    "decorators": []
   },
   "values": [
    {
     "$id": "36",
     "kind": "enumvalue",
     "name": "One",
     "value": 1,
     "valueType": {
      "$id": "37",
      "kind": "int32",
      "name": "int32",
      "crossLanguageDefinitionId": "TypeSpec.int32",
      "decorators": []
     },
     "enumType": {
      "$ref": "34"
     },
     "decorators": []
    },
    {
     "$id": "38",
     "kind": "enumvalue",
     "name": "Two",
     "value": 2,
     "valueType": {
      "$id": "39",
      "kind": "int32",
      "name": "int32",
      "crossLanguageDefinitionId": "TypeSpec.int32",
      "decorators": []
     },
     "enumType": {
      "$ref": "34"
     },
     "decorators": []
    },
    {
     "$id": "40",
     "kind": "enumvalue",
     "name": "Four",
     "value": 4,
     "valueType": {
      "$id": "41",
      "kind": "int32",
      "name": "int32",
      "crossLanguageDefinitionId": "TypeSpec.int32",
      "decorators": []
     },
     "enumType": {
      "$ref": "34"
     },
     "decorators": []
    }
   ],
   "namespace": "FirstTestTypeSpec",
   "doc": "Int based extensible enum",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json",
   "decorators": []
  },
  {
   "$id": "42",
   "kind": "enum",
   "name": "FloatExtensibleEnum",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.FloatExtensibleEnum",
   "valueType": {
    "$id": "43",
    "kind": "float32",
    "name": "float32",
    "crossLanguageDefinitionId": "TypeSpec.float32",
    "decorators": []
   },
   "values": [
    {
     "$id": "44",
     "kind": "enumvalue",
     "name": "One",
     "value": 1,
     "valueType": {
      "$id": "45",
      "kind": "float32",
      "name": "float32",
      "crossLanguageDefinitionId": "TypeSpec.float32",
      "decorators": []
     },
     "enumType": {
      "$ref": "42"
     },
     "decorators": []
    },
    {
     "$id": "46",
     "kind": "enumvalue",
     "name": "Two",
     "value": 2,
     "valueType": {
      "$id": "47",
      "kind": "float32",
      "name": "float32",
      "crossLanguageDefinitionId": "TypeSpec.float32",
      "decorators": []
     },
     "enumType": {
      "$ref": "42"
     },
     "decorators": []
    },
    {
     "$id": "48",
     "kind": "enumvalue",
     "name": "Four",
     "value": 4,
     "valueType": {
      "$id": "49",
      "kind": "float32",
      "name": "float32",
      "crossLanguageDefinitionId": "TypeSpec.float32",
      "decorators": []
     },
     "enumType": {
      "$ref": "42"
     },
     "decorators": []
    }
   ],
   "namespace": "FirstTestTypeSpec",
   "doc": "Float based extensible enum",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json",
   "decorators": []
  },
  {
   "$id": "50",
   "kind": "enum",
   "name": "FloatFixedEnum",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.FloatFixedEnum",
   "valueType": {
    "$id": "51",
    "kind": "float32",
    "name": "float32",
    "crossLanguageDefinitionId": "TypeSpec.float32",
    "decorators": []
   },
   "values": [
    {
     "$id": "52",
     "kind": "enumvalue",
     "name": "One",
     "value": 1.1,
     "valueType": {
      "$id": "53",
      "kind": "float32",
      "name": "float32",
      "crossLanguageDefinitionId": "TypeSpec.float32",
      "decorators": []
     },
     "enumType": {
      "$ref": "50"
     },
     "decorators": []
    },
    {
     "$id": "54",
     "kind": "enumvalue",
     "name": "Two",
     "value": 2.2,
     "valueType": {
      "$id": "55",
      "kind": "float32",
      "name": "float32",
      "crossLanguageDefinitionId": "TypeSpec.float32",
      "decorators": []
     },
     "enumType": {
      "$ref": "50"
     },
     "decorators": []
    },
    {
     "$id": "56",
     "kind": "enumvalue",
     "name": "Four",
     "value": 4.4,
     "valueType": {
      "$id": "57",
      "kind": "float32",
      "name": "float32",
      "crossLanguageDefinitionId": "TypeSpec.float32",
      "decorators": []
     },
     "enumType": {
      "$ref": "50"
     },
     "decorators": []
    }
   ],
   "namespace": "FirstTestTypeSpec",
   "doc": "float fixed enum",
   "isFixed": true,
   "isFlags": false,
   "usage": "Input,Output,Json",
   "decorators": []
  },
  {
   "$id": "58",
   "kind": "enum",
   "name": "IntFixedEnum",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.IntFixedEnum",
   "valueType": {
    "$id": "59",
    "kind": "int32",
    "name": "int32",
    "crossLanguageDefinitionId": "TypeSpec.int32",
    "decorators": []
   },
   "values": [
    {
     "$id": "60",
     "kind": "enumvalue",
     "name": "One",
     "value": 1,
     "valueType": {
      "$id": "61",
      "kind": "int32",
      "name": "int32",
      "crossLanguageDefinitionId": "TypeSpec.int32",
      "decorators": []
     },
     "enumType": {
      "$ref": "58"
     },
     "decorators": []
    },
    {
     "$id": "62",
     "kind": "enumvalue",
     "name": "Two",
     "value": 2,
     "valueType": {
      "$id": "63",
      "kind": "int32",
      "name": "int32",
      "crossLanguageDefinitionId": "TypeSpec.int32",
      "decorators": []
     },
     "enumType": {
      "$ref": "58"
     },
     "decorators": []
    },
    {
     "$id": "64",
     "kind": "enumvalue",
     "name": "Four",
     "value": 4,
     "valueType": {
      "$id": "65",
      "kind": "int32",
      "name": "int32",
      "crossLanguageDefinitionId": "TypeSpec.int32",
      "decorators": []
     },
     "enumType": {
      "$ref": "58"
     },
     "decorators": []
    }
   ],
   "namespace": "FirstTestTypeSpec",
   "doc": "int fixed enum",
   "isFixed": true,
   "isFlags": false,
   "usage": "Input,Output,Json",
   "decorators": []
  },
  {
   "$id": "66",
   "kind": "enum",
   "name": "Versions",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.Versions",
   "valueType": {
    "$id": "67",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "68",
     "kind": "enumvalue",
     "name": "2022-05-15-preview",
     "value": "2022-05-15-preview",
     "valueType": {
      "$id": "69",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "66"
     },
     "decorators": []
    }
   ],
   "namespace": "FirstTestTypeSpec",
   "isFixed": true,
   "isFlags": false,
   "usage": "ApiVersionEnum",
   "decorators": []
  },
  {
   "$id": "70",
   "kind": "enum",
   "name": "DaysOfWeekExtensibleEnum",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.DaysOfWeekExtensibleEnum",
   "valueType": {
    "$id": "71",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "72",
     "kind": "enumvalue",
     "name": "Monday",
     "value": "Monday",
     "valueType": {
      "$id": "73",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "70"
     },
     "decorators": []
    },
    {
     "$id": "74",
     "kind": "enumvalue",
     "name": "Tuesday",
     "value": "Tuesday",
     "valueType": {
      "$id": "75",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "70"
     },
     "decorators": []
    },
    {
     "$id": "76",
     "kind": "enumvalue",
     "name": "Wednesday",
     "value": "Wednesday",
     "valueType": {
      "$id": "77",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "70"
     },
     "decorators": []
    },
    {
     "$id": "78",
     "kind": "enumvalue",
     "name": "Thursday",
     "value": "Thursday",
     "valueType": {
      "$id": "79",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "70"
     },
     "decorators": []
    },
    {
     "$id": "80",
     "kind": "enumvalue",
     "name": "Friday",
     "value": "Friday",
     "valueType": {
      "$id": "81",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "70"
     },
     "decorators": []
    },
    {
     "$id": "82",
     "kind": "enumvalue",
     "name": "Saturday",
     "value": "Saturday",
     "valueType": {
      "$id": "83",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "70"
     },
     "decorators": []
    },
    {
     "$id": "84",
     "kind": "enumvalue",
     "name": "Sunday",
     "value": "Sunday",
     "valueType": {
      "$id": "85",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "70"
     },
     "decorators": []
    }
   ],
   "namespace": "FirstTestTypeSpec",
   "isFixed": false,
   "isFlags": false,
   "usage": "None",
   "decorators": []
  },
  {
   "$id": "86",
   "kind": "enum",
   "name": "OperationState",
   "crossLanguageDefinitionId": "Azure.Core.Foundations.OperationState",
   "valueType": {
    "$id": "87",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "88",
     "kind": "enumvalue",
     "name": "NotStarted",
     "value": "NotStarted",
     "valueType": {
      "$id": "89",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "86"
     },
     "doc": "The operation has not started.",
     "decorators": []
    },
    {
     "$id": "90",
     "kind": "enumvalue",
     "name": "Running",
     "value": "Running",
     "valueType": {
      "$id": "91",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "86"
     },
     "doc": "The operation is in progress.",
     "decorators": []
    },
    {
     "$id": "92",
     "kind": "enumvalue",
     "name": "Succeeded",
     "value": "Succeeded",
     "valueType": {
      "$id": "93",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "86"
     },
     "doc": "The operation has completed successfully.",
     "decorators": []
    },
    {
     "$id": "94",
     "kind": "enumvalue",
     "name": "Failed",
     "value": "Failed",
     "valueType": {
      "$id": "95",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "86"
     },
     "doc": "The operation has failed.",
     "decorators": []
    },
    {
     "$id": "96",
     "kind": "enumvalue",
     "name": "Canceled",
     "value": "Canceled",
     "valueType": {
      "$id": "97",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "86"
     },
     "doc": "The operation has been canceled by the user.",
     "decorators": []
    }
   ],
   "namespace": "Azure.Core.Foundations",
   "doc": "Enum describing allowed operation states.",
   "isFixed": false,
   "isFlags": false,
   "usage": "None",
   "decorators": []
  },
  {
   "$id": "98",
   "kind": "enum",
   "name": "ThingRequiredLiteralString",
   "crossLanguageDefinitionId": "",
   "valueType": {
    "$id": "99",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "100",
     "kind": "enumvalue",
     "name": "accept",
     "value": "accept",
     "valueType": {
      "$ref": "99"
     },
     "enumType": {
      "$ref": "98"
     }
    }
   ],
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Spread,Json",
   "namespace": "FirstTestTypeSpec",
   "decorators": []
  },
  {
   "$id": "101",
   "kind": "enum",
   "name": "ThingRequiredLiteralInt",
   "crossLanguageDefinitionId": "",
   "valueType": {
    "$id": "102",
    "kind": "int32",
    "name": "int32",
    "crossLanguageDefinitionId": "TypeSpec.int32",
    "decorators": []
   },
   "values": [
    {
     "$id": "103",
     "kind": "enumvalue",
     "name": "123",
     "value": 123,
     "valueType": {
      "$ref": "102"
     },
     "enumType": {
      "$ref": "101"
     }
    }
   ],
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Spread,Json",
   "namespace": "FirstTestTypeSpec",
   "decorators": []
  },
  {
   "$id": "104",
   "kind": "enum",
   "name": "ThingRequiredLiteralFloat",
   "crossLanguageDefinitionId": "",
   "valueType": {
    "$id": "105",
    "kind": "float32",
    "name": "float32",
    "crossLanguageDefinitionId": "TypeSpec.float32",
    "decorators": []
   },
   "values": [
    {
     "$id": "106",
     "kind": "enumvalue",
     "name": "1.23",
     "value": 1.23,
     "valueType": {
      "$ref": "105"
     },
     "enumType": {
      "$ref": "104"
     }
    }
   ],
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Spread,Json",
   "namespace": "FirstTestTypeSpec",
   "decorators": []
  },
  {
   "$id": "107",
   "kind": "enum",
   "name": "ThingOptionalLiteralString",
   "crossLanguageDefinitionId": "",
   "valueType": {
    "$id": "108",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "109",
     "kind": "enumvalue",
     "name": "reject",
     "value": "reject",
     "valueType": {
      "$ref": "108"
     },
     "enumType": {
      "$ref": "107"
     }
    }
   ],
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Spread,Json",
   "namespace": "FirstTestTypeSpec",
   "decorators": []
  },
  {
   "$id": "110",
   "kind": "enum",
   "name": "ThingOptionalLiteralInt",
   "crossLanguageDefinitionId": "",
   "valueType": {
    "$id": "111",
    "kind": "int32",
    "name": "int32",
    "crossLanguageDefinitionId": "TypeSpec.int32",
    "decorators": []
   },
   "values": [
    {
     "$id": "112",
     "kind": "enumvalue",
     "name": "456",
     "value": 456,
     "valueType": {
      "$ref": "111"
     },
     "enumType": {
      "$ref": "110"
     }
    }
   ],
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Spread,Json",
   "namespace": "FirstTestTypeSpec",
   "decorators": []
  },
  {
   "$id": "113",
   "kind": "enum",
   "name": "ThingOptionalLiteralFloat",
   "crossLanguageDefinitionId": "",
   "valueType": {
    "$id": "114",
    "kind": "float32",
    "name": "float32",
    "crossLanguageDefinitionId": "TypeSpec.float32",
    "decorators": []
   },
   "values": [
    {
     "$id": "115",
     "kind": "enumvalue",
     "name": "4.56",
     "value": 4.56,
     "valueType": {
      "$ref": "114"
     },
     "enumType": {
      "$ref": "113"
     }
    }
   ],
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Spread,Json",
   "namespace": "FirstTestTypeSpec",
   "decorators": []
  }
 ],
 "constants": [
  {
   "$id": "116",
   "kind": "constant",
   "name": "ThingRequiredLiteralString",
   "namespace": "FirstTestTypeSpec",
   "usage": "Input,Output,Spread,Json",
   "valueType": {
    "$ref": "98"
   },
   "value": "accept",
   "decorators": []
  },
  {
   "$id": "117",
   "kind": "constant",
   "name": "ThingRequiredLiteralInt",
   "namespace": "FirstTestTypeSpec",
   "usage": "Input,Output,Spread,Json",
   "valueType": {
    "$ref": "101"
   },
   "value": 123,
   "decorators": []
  },
  {
   "$id": "118",
   "kind": "constant",
   "name": "ThingRequiredLiteralFloat",
   "namespace": "FirstTestTypeSpec",
   "usage": "Input,Output,Spread,Json",
   "valueType": {
    "$ref": "104"
   },
   "value": 1.23,
   "decorators": []
  },
  {
   "$id": "119",
   "kind": "constant",
   "name": "ThingRequiredLiteralBool",
   "namespace": "FirstTestTypeSpec",
   "usage": "Input,Output,Spread,Json",
   "valueType": {
    "$id": "120",
    "kind": "boolean",
    "name": "boolean",
    "crossLanguageDefinitionId": "TypeSpec.boolean",
    "decorators": []
   },
   "value": false,
   "decorators": []
  },
  {
   "$id": "121",
   "kind": "constant",
   "name": "ThingOptionalLiteralString",
   "namespace": "FirstTestTypeSpec",
   "usage": "Input,Output,Spread,Json",
   "valueType": {
    "$ref": "107"
   },
   "value": "reject",
   "decorators": []
  },
  {
   "$id": "122",
   "kind": "constant",
   "name": "ThingOptionalLiteralInt",
   "namespace": "FirstTestTypeSpec",
   "usage": "Input,Output,Spread,Json",
   "valueType": {
    "$ref": "110"
   },
   "value": 456,
   "decorators": []
  },
  {
   "$id": "123",
   "kind": "constant",
   "name": "ThingOptionalLiteralFloat",
   "namespace": "FirstTestTypeSpec",
   "usage": "Input,Output,Spread,Json",
   "valueType": {
    "$ref": "113"
   },
   "value": 4.56,
   "decorators": []
  },
  {
   "$id": "124",
   "kind": "constant",
   "name": "ThingOptionalLiteralBool",
   "namespace": "FirstTestTypeSpec",
   "usage": "Input,Output,Spread,Json",
   "valueType": {
    "$id": "125",
    "kind": "boolean",
    "name": "boolean",
    "crossLanguageDefinitionId": "TypeSpec.boolean",
    "decorators": []
   },
   "value": true,
   "decorators": []
  },
  {
   "$id": "126",
   "kind": "constant",
   "name": "topActionContentType",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "127",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "128",
   "kind": "constant",
   "name": "topAction2ContentType",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "129",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "130",
   "kind": "constant",
   "name": "patchActionContentType",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "131",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "132",
   "kind": "constant",
   "name": "patchActionContentType1",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "133",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "134",
   "kind": "constant",
   "name": "anonymousBodyContentType",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "135",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "136",
   "kind": "constant",
   "name": "anonymousBodyContentType1",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "137",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "138",
   "kind": "constant",
   "name": "ThingRequiredLiteralString1",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "139",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "accept",
   "decorators": []
  },
  {
   "$id": "140",
   "kind": "constant",
   "name": "ThingRequiredLiteralInt1",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "141",
    "kind": "int32",
    "name": "int32",
    "crossLanguageDefinitionId": "TypeSpec.int32",
    "decorators": []
   },
   "value": 123,
   "decorators": []
  },
  {
   "$id": "142",
   "kind": "constant",
   "name": "ThingRequiredLiteralFloat1",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "143",
    "kind": "float32",
    "name": "float32",
    "crossLanguageDefinitionId": "TypeSpec.float32",
    "decorators": []
   },
   "value": 1.23,
   "decorators": []
  },
  {
   "$id": "144",
   "kind": "constant",
   "name": "ThingRequiredLiteralBool1",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "145",
    "kind": "boolean",
    "name": "boolean",
    "crossLanguageDefinitionId": "TypeSpec.boolean",
    "decorators": []
   },
   "value": false,
   "decorators": []
  },
  {
   "$id": "146",
   "kind": "constant",
   "name": "ThingOptionalLiteralString1",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "147",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "reject",
   "decorators": []
  },
  {
   "$id": "148",
   "kind": "constant",
   "name": "ThingOptionalLiteralInt1",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "149",
    "kind": "int32",
    "name": "int32",
    "crossLanguageDefinitionId": "TypeSpec.int32",
    "decorators": []
   },
   "value": 456,
   "decorators": []
  },
  {
   "$id": "150",
   "kind": "constant",
   "name": "ThingOptionalLiteralFloat1",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "151",
    "kind": "float32",
    "name": "float32",
    "crossLanguageDefinitionId": "TypeSpec.float32",
    "decorators": []
   },
   "value": 4.56,
   "decorators": []
  },
  {
   "$id": "152",
   "kind": "constant",
   "name": "ThingOptionalLiteralBool1",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "153",
    "kind": "boolean",
    "name": "boolean",
    "crossLanguageDefinitionId": "TypeSpec.boolean",
    "decorators": []
   },
   "value": true,
   "decorators": []
  },
  {
   "$id": "154",
   "kind": "constant",
   "name": "friendlyModelContentType",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "155",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "156",
   "kind": "constant",
   "name": "friendlyModelContentType1",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "157",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "158",
   "kind": "constant",
   "name": "stringFormatContentType",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "159",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "160",
   "kind": "constant",
   "name": "projectedNameModelContentType",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "161",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "162",
   "kind": "constant",
   "name": "projectedNameModelContentType1",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "163",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "164",
   "kind": "constant",
   "name": "returnsAnonymousModelContentType",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "165",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "166",
   "kind": "constant",
   "name": "listWithOptionalBodyContentType",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "167",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "168",
   "kind": "constant",
   "name": "listWithOptionalBodyContentType1",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "169",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "170",
   "kind": "constant",
   "name": "stringBodyContentType",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "171",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "text/plain",
   "decorators": []
  },
  {
   "$id": "172",
   "kind": "constant",
   "name": "boolBodyContentType",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "173",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "text/plain",
   "decorators": []
  },
  {
   "$id": "174",
   "kind": "constant",
   "name": "dateTimeBodyContentType",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "175",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "text/plain",
   "decorators": []
  },
  {
   "$id": "176",
   "kind": "constant",
   "name": "returnStringContentType",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "177",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "text/plain",
   "decorators": []
  },
  {
   "$id": "178",
   "kind": "constant",
   "name": "returnUnknownContentType",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "179",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "180",
   "kind": "constant",
   "name": "recursiveExtensionContentType",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "181",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "182",
   "kind": "constant",
   "name": "threeLevelRecursiveContentType",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "183",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "184",
   "kind": "constant",
   "name": "recursiveModelsContentType",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "185",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "186",
   "kind": "constant",
   "name": "ContainSelfModelsContentType",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "187",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "188",
   "kind": "constant",
   "name": "bodyIsModelWithProjectedEnumContentType",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "189",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "190",
   "kind": "constant",
   "name": "optionalDictionaryContentType",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "191",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "192",
   "kind": "constant",
   "name": "azureLocationOpContentType",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "193",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "194",
   "kind": "constant",
   "name": "sayHiContentType",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "195",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "196",
   "kind": "constant",
   "name": "HelloAgainRequestContentType",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "197",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "text/plain",
   "decorators": []
  },
  {
   "$id": "198",
   "kind": "constant",
   "name": "helloAgainContentType",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "199",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "200",
   "kind": "constant",
   "name": "HelloAgainRequestContentType1",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "201",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "text/plain",
   "decorators": []
  },
  {
   "$id": "202",
   "kind": "constant",
   "name": "noContentTypeContentType",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "203",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "204",
   "kind": "constant",
   "name": "noContentTypeContentType1",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "205",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "206",
   "kind": "constant",
   "name": "helloDemoAgainContentType",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "207",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "208",
   "kind": "constant",
   "name": "createLiteralContentType",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "209",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "210",
   "kind": "constant",
   "name": "createLiteralContentType1",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "211",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "212",
   "kind": "constant",
   "name": "HelloLiteralRequestP1",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "213",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "test",
   "decorators": []
  },
  {
   "$id": "214",
   "kind": "constant",
   "name": "ThingRequiredLiteralInt2",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "215",
    "kind": "int32",
    "name": "int32",
    "crossLanguageDefinitionId": "TypeSpec.int32",
    "decorators": []
   },
   "value": 123,
   "decorators": []
  },
  {
   "$id": "216",
   "kind": "constant",
   "name": "ThingOptionalLiteralBool2",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "217",
    "kind": "boolean",
    "name": "boolean",
    "crossLanguageDefinitionId": "TypeSpec.boolean",
    "decorators": []
   },
   "value": true,
   "decorators": []
  },
  {
   "$id": "218",
   "kind": "constant",
   "name": "helloLiteralContentType",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "219",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "220",
   "kind": "constant",
   "name": "HelloLiteralRequestP11",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "221",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "test",
   "decorators": []
  },
  {
   "$id": "222",
   "kind": "constant",
   "name": "ThingRequiredLiteralInt3",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "223",
    "kind": "int32",
    "name": "int32",
    "crossLanguageDefinitionId": "TypeSpec.int32",
    "decorators": []
   },
   "value": 123,
   "decorators": []
  },
  {
   "$id": "224",
   "kind": "constant",
   "name": "ThingOptionalLiteralBool3",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "225",
    "kind": "boolean",
    "name": "boolean",
    "crossLanguageDefinitionId": "TypeSpec.boolean",
    "decorators": []
   },
   "value": true,
   "decorators": []
  },
  {
   "$id": "226",
   "kind": "constant",
   "name": "createUnknownValueContentType",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "227",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "text/plain",
   "decorators": []
  },
  {
   "$id": "228",
   "kind": "constant",
   "name": "internalProtocolContentType",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "229",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "230",
   "kind": "constant",
   "name": "internalProtocolContentType1",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "231",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "232",
   "kind": "constant",
   "name": "doSomethingContentType",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "233",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "234",
   "kind": "constant",
   "name": "doSomethingContentType1",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "235",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "236",
   "kind": "constant",
   "name": "exportContentType",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "237",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "238",
   "kind": "constant",
   "name": "exportContentType1",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "239",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "240",
   "kind": "constant",
   "name": "exportWContentType",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "241",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "242",
   "kind": "constant",
   "name": "exportWContentType1",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "243",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  }
 ],
 "models": [
  {
   "$id": "244",
   "kind": "model",
   "name": "Thing",
   "namespace": "FirstTestTypeSpec",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.Thing",
   "usage": "Input,Output,Spread,Json",
   "doc": "A model with a few properties of literal types",
   "decorators": [],
   "properties": [
    {
     "$id": "245",
     "kind": "property",
     "name": "name",
     "serializedName": "name",
     "doc": "name of the Thing",
     "type": {
      "$id": "246",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Thing.name",
     "serializationOptions": {
      "$id": "247",
      "json": {
       "$id": "248",
       "name": "name"
      }
     }
    },
    {
     "$id": "249",
     "kind": "property",
     "name": "requiredUnion",
     "serializedName": "requiredUnion",
     "doc": "required Union",
     "type": {
      "$id": "250",
      "kind": "union",
      "name": "ThingRequiredUnion",
      "variantTypes": [
       {
        "$id": "251",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       {
        "$id": "252",
        "kind": "array",
        "name": "Array",
        "valueType": {
         "$id": "253",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "crossLanguageDefinitionId": "TypeSpec.Array",
        "decorators": []
       },
       {
        "$id": "254",
        "kind": "int32",
        "name": "int32",
        "crossLanguageDefinitionId": "TypeSpec.int32",
        "decorators": []
       }
      ],
      "namespace": "",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Thing.requiredUnion",
     "serializationOptions": {
      "$id": "255",
      "json": {
       "$id": "256",
       "name": "requiredUnion"
      }
     }
    },
    {
     "$id": "257",
     "kind": "property",
     "name": "requiredLiteralString",
     "serializedName": "requiredLiteralString",
     "doc": "required literal string",
     "type": {
      "$ref": "116"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Thing.requiredLiteralString",
     "serializationOptions": {
      "$id": "258",
      "json": {
       "$id": "259",
       "name": "requiredLiteralString"
      }
     }
    },
    {
     "$id": "260",
     "kind": "property",
     "name": "requiredLiteralInt",
     "serializedName": "requiredLiteralInt",
     "doc": "required literal int",
     "type": {
      "$ref": "117"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Thing.requiredLiteralInt",
     "serializationOptions": {
      "$id": "261",
      "json": {
       "$id": "262",
       "name": "requiredLiteralInt"
      }
     }
    },
    {
     "$id": "263",
     "kind": "property",
     "name": "requiredLiteralFloat",
     "serializedName": "requiredLiteralFloat",
     "doc": "required literal float",
     "type": {
      "$ref": "118"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Thing.requiredLiteralFloat",
     "serializationOptions": {
      "$id": "264",
      "json": {
       "$id": "265",
       "name": "requiredLiteralFloat"
      }
     }
    },
    {
     "$id": "266",
     "kind": "property",
     "name": "requiredLiteralBool",
     "serializedName": "requiredLiteralBool",
     "doc": "required literal bool",
     "type": {
      "$ref": "119"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Thing.requiredLiteralBool",
     "serializationOptions": {
      "$id": "267",
      "json": {
       "$id": "268",
       "name": "requiredLiteralBool"
      }
     }
    },
    {
     "$id": "269",
     "kind": "property",
     "name": "optionalLiteralString",
     "serializedName": "optionalLiteralString",
     "doc": "optional literal string",
     "type": {
      "$ref": "121"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Thing.optionalLiteralString",
     "serializationOptions": {
      "$id": "270",
      "json": {
       "$id": "271",
       "name": "optionalLiteralString"
      }
     }
    },
    {
     "$id": "272",
     "kind": "property",
     "name": "optionalLiteralInt",
     "serializedName": "optionalLiteralInt",
     "doc": "optional literal int",
     "type": {
      "$ref": "122"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Thing.optionalLiteralInt",
     "serializationOptions": {
      "$id": "273",
      "json": {
       "$id": "274",
       "name": "optionalLiteralInt"
      }
     }
    },
    {
     "$id": "275",
     "kind": "property",
     "name": "optionalLiteralFloat",
     "serializedName": "optionalLiteralFloat",
     "doc": "optional literal float",
     "type": {
      "$ref": "123"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Thing.optionalLiteralFloat",
     "serializationOptions": {
      "$id": "276",
      "json": {
       "$id": "277",
       "name": "optionalLiteralFloat"
      }
     }
    },
    {
     "$id": "278",
     "kind": "property",
     "name": "optionalLiteralBool",
     "serializedName": "optionalLiteralBool",
     "doc": "optional literal bool",
     "type": {
      "$ref": "124"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Thing.optionalLiteralBool",
     "serializationOptions": {
      "$id": "279",
      "json": {
       "$id": "280",
       "name": "optionalLiteralBool"
      }
     }
    },
    {
     "$id": "281",
     "kind": "property",
     "name": "requiredBadDescription",
     "serializedName": "requiredBadDescription",
     "doc": "description with xml <|endoftext|>",
     "type": {
      "$id": "282",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Thing.requiredBadDescription",
     "serializationOptions": {
      "$id": "283",
      "json": {
       "$id": "284",
       "name": "requiredBadDescription"
      }
     }
    },
    {
     "$id": "285",
     "kind": "property",
     "name": "optionalNullableList",
     "serializedName": "optionalNullableList",
     "doc": "optional nullable collection",
     "type": {
      "$id": "286",
      "kind": "nullable",
      "type": {
       "$id": "287",
       "kind": "array",
       "name": "Array1",
       "valueType": {
        "$id": "288",
        "kind": "int32",
        "name": "int32",
        "crossLanguageDefinitionId": "TypeSpec.int32",
        "decorators": []
       },
       "crossLanguageDefinitionId": "TypeSpec.Array",
       "decorators": []
      },
      "namespace": ""
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Thing.optionalNullableList",
     "serializationOptions": {
      "$id": "289",
      "json": {
       "$id": "290",
       "name": "optionalNullableList"
      }
     }
    },
    {
     "$id": "291",
     "kind": "property",
     "name": "requiredNullableList",
     "serializedName": "requiredNullableList",
     "doc": "required nullable collection",
     "type": {
      "$id": "292",
      "kind": "nullable",
      "type": {
       "$ref": "287"
      },
      "namespace": ""
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Thing.requiredNullableList",
     "serializationOptions": {
      "$id": "293",
      "json": {
       "$id": "294",
       "name": "requiredNullableList"
      }
     }
    },
    {
     "$id": "295",
     "kind": "property",
     "name": "requiredFloatProperty",
     "serializedName": "requiredFloatProperty",
     "doc": "required float property",
     "type": {
      "$id": "296",
      "kind": "float",
      "name": "float",
      "crossLanguageDefinitionId": "TypeSpec.float",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Thing.requiredFloatProperty",
     "serializationOptions": {
      "$id": "297",
      "json": {
       "$id": "298",
       "name": "requiredFloatProperty"
      }
     }
    },
    {
     "$id": "299",
     "kind": "property",
     "name": "optionalFloatProperty",
     "serializedName": "optionalFloatProperty",
     "doc": "optional float property",
     "type": {
      "$id": "300",
      "kind": "float",
      "name": "float",
      "crossLanguageDefinitionId": "TypeSpec.float",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Thing.optionalFloatProperty",
     "serializationOptions": {
      "$id": "301",
      "json": {
       "$id": "302",
       "name": "optionalFloatProperty"
      }
     }
    },
    {
     "$id": "303",
     "kind": "property",
     "name": "optionalResourceId",
     "serializedName": "optionalResourceId",
     "doc": "optional arm id.",
     "type": {
      "$id": "304",
      "kind": "string",
      "name": "armResourceIdentifier",
      "crossLanguageDefinitionId": "Azure.Core.armResourceIdentifier",
      "baseType": {
       "$id": "305",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Thing.optionalResourceId",
     "serializationOptions": {
      "$id": "306",
      "json": {
       "$id": "307",
       "name": "optionalResourceId"
      }
     }
    }
   ]
  },
  {
   "$id": "308",
   "kind": "model",
   "name": "Friend",
   "namespace": "FirstTestTypeSpec",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.NotFriend",
   "usage": "Output,Spread,Json",
   "doc": "this is not a friendly model but with a friendly name",
   "decorators": [],
   "properties": [
    {
     "$id": "309",
     "kind": "property",
     "name": "name",
     "serializedName": "name",
     "doc": "name of the NotFriend",
     "type": {
      "$id": "310",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.NotFriend.name",
     "serializationOptions": {
      "$id": "311",
      "json": {
       "$id": "312",
       "name": "name"
      }
     }
    }
   ]
  },
  {
   "$id": "313",
   "kind": "model",
   "name": "ModelWithFormat",
   "namespace": "FirstTestTypeSpec",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.ModelWithFormat",
   "usage": "Input,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "314",
     "kind": "property",
     "name": "sourceUrl",
     "serializedName": "sourceUrl",
     "doc": "url format",
     "type": {
      "$id": "315",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.ModelWithFormat.sourceUrl",
     "serializationOptions": {
      "$id": "316",
      "json": {
       "$id": "317",
       "name": "sourceUrl"
      }
     }
    },
    {
     "$id": "318",
     "kind": "property",
     "name": "guid",
     "serializedName": "guid",
     "doc": "uuid format",
     "type": {
      "$id": "319",
      "kind": "string",
      "name": "uuid",
      "crossLanguageDefinitionId": "Azure.Core.uuid",
      "baseType": {
       "$id": "320",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.ModelWithFormat.guid",
     "serializationOptions": {
      "$id": "321",
      "json": {
       "$id": "322",
       "name": "guid"
      }
     }
    }
   ]
  },
  {
   "$id": "323",
   "kind": "model",
   "name": "ProjectedModel",
   "namespace": "FirstTestTypeSpec",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.ModelWithProjectedName",
   "usage": "Output,Spread,Json",
   "doc": "this is a model with a projected name",
   "decorators": [],
   "properties": [
    {
     "$id": "324",
     "kind": "property",
     "name": "name",
     "serializedName": "name",
     "doc": "name of the ModelWithProjectedName",
     "type": {
      "$id": "325",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.ModelWithProjectedName.name",
     "serializationOptions": {
      "$id": "326",
      "json": {
       "$id": "327",
       "name": "name"
      }
     }
    }
   ]
  },
  {
   "$id": "328",
   "kind": "model",
   "name": "ReturnsAnonymousModelResponse",
   "namespace": "FirstTestTypeSpec",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.returnsAnonymousModel.Response.anonymous",
   "usage": "Output,Json",
   "decorators": [],
   "properties": []
  },
  {
   "$id": "329",
   "kind": "model",
   "name": "ListBody",
   "namespace": "FirstTestTypeSpec",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.ListBody",
   "usage": "Input,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "330",
     "kind": "property",
     "name": "filter",
     "serializedName": "filter",
     "doc": "Metric dimension filter ",
     "type": {
      "$id": "331",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.ListBody.filter",
     "serializationOptions": {
      "$id": "332",
      "json": {
       "$id": "333",
       "name": "filter"
      }
     }
    }
   ]
  },
  {
   "$id": "334",
   "kind": "model",
   "name": "Extension",
   "namespace": "FirstTestTypeSpec",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.Extension",
   "usage": "Input,Json",
   "doc": "extension",
   "decorators": [],
   "baseModel": {
    "$id": "335",
    "kind": "model",
    "name": "Element",
    "namespace": "FirstTestTypeSpec",
    "crossLanguageDefinitionId": "FirstTestTypeSpec.Element",
    "usage": "Input,Json",
    "doc": "element",
    "decorators": [],
    "properties": [
     {
      "$id": "336",
      "kind": "property",
      "name": "extension",
      "serializedName": "extension",
      "type": {
       "$id": "337",
       "kind": "array",
       "name": "ArrayExtension",
       "valueType": {
        "$ref": "334"
       },
       "crossLanguageDefinitionId": "TypeSpec.Array",
       "decorators": []
      },
      "optional": true,
      "readOnly": false,
      "discriminator": false,
      "flatten": false,
      "decorators": [],
      "crossLanguageDefinitionId": "FirstTestTypeSpec.Element.extension",
      "serializationOptions": {
       "$id": "338",
       "json": {
        "$id": "339",
        "name": "extension"
       }
      }
     }
    ]
   },
   "properties": [
    {
     "$id": "340",
     "kind": "property",
     "name": "level",
     "serializedName": "level",
     "type": {
      "$id": "341",
      "kind": "int8",
      "name": "int8",
      "crossLanguageDefinitionId": "TypeSpec.int8",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Extension.level",
     "serializationOptions": {
      "$id": "342",
      "json": {
       "$id": "343",
       "name": "level"
      }
     }
    }
   ]
  },
  {
   "$ref": "335"
  },
  {
   "$id": "344",
   "kind": "model",
   "name": "Extendible",
   "namespace": "FirstTestTypeSpec",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.Extendible",
   "usage": "Input,Json",
   "doc": "FHIR extendible element",
   "decorators": [],
   "properties": [
    {
     "$id": "345",
     "kind": "property",
     "name": "extension",
     "serializedName": "extension",
     "doc": "Additional Content defined by implementations",
     "type": {
      "$id": "346",
      "kind": "array",
      "name": "ArrayThereLevelExtension",
      "valueType": {
       "$id": "347",
       "kind": "model",
       "name": "ThereLevelExtension",
       "namespace": "FirstTestTypeSpec",
       "crossLanguageDefinitionId": "FirstTestTypeSpec.ThereLevelExtension",
       "usage": "Input,Json",
       "doc": "extension",
       "decorators": [],
       "baseModel": {
        "$id": "348",
        "kind": "model",
        "name": "ThereLevelElement",
        "namespace": "FirstTestTypeSpec",
        "crossLanguageDefinitionId": "FirstTestTypeSpec.ThereLevelElement",
        "usage": "Input,Json",
        "doc": "element",
        "decorators": [],
        "properties": [
         {
          "$id": "349",
          "kind": "property",
          "name": "extension",
          "serializedName": "extension",
          "type": {
           "$id": "350",
           "kind": "array",
           "name": "ArrayThereLevelExtension",
           "valueType": {
            "$ref": "347"
           },
           "crossLanguageDefinitionId": "TypeSpec.Array",
           "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "FirstTestTypeSpec.ThereLevelElement.extension",
          "serializationOptions": {
           "$id": "351",
           "json": {
            "$id": "352",
            "name": "extension"
           }
          }
         }
        ]
       },
       "properties": [
        {
         "$id": "353",
         "kind": "property",
         "name": "level",
         "serializedName": "level",
         "type": {
          "$id": "354",
          "kind": "int8",
          "name": "int8",
          "crossLanguageDefinitionId": "TypeSpec.int8",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "FirstTestTypeSpec.ThereLevelExtension.level",
         "serializationOptions": {
          "$id": "355",
          "json": {
           "$id": "356",
           "name": "level"
          }
         }
        }
       ]
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Extendible.extension",
     "serializationOptions": {
      "$id": "357",
      "json": {
       "$id": "358",
       "name": "extension"
      }
     }
    }
   ]
  },
  {
   "$ref": "347"
  },
  {
   "$ref": "348"
  },
  {
   "$id": "359",
   "kind": "model",
   "name": "ChildModel",
   "namespace": "FirstTestTypeSpec",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.ChildModel",
   "usage": "Input,Json",
   "doc": "ChildModel",
   "decorators": [],
   "baseModel": {
    "$id": "360",
    "kind": "model",
    "name": "BaseModel",
    "namespace": "FirstTestTypeSpec",
    "crossLanguageDefinitionId": "FirstTestTypeSpec.BaseModel",
    "usage": "Input,Json",
    "doc": "parentModel",
    "decorators": [],
    "properties": [
     {
      "$id": "361",
      "kind": "property",
      "name": "level",
      "serializedName": "level",
      "type": {
       "$id": "362",
       "kind": "int8",
       "name": "int8",
       "crossLanguageDefinitionId": "TypeSpec.int8",
       "decorators": []
      },
      "optional": false,
      "readOnly": false,
      "discriminator": false,
      "flatten": false,
      "decorators": [],
      "crossLanguageDefinitionId": "FirstTestTypeSpec.BaseModel.level",
      "serializationOptions": {
       "$id": "363",
       "json": {
        "$id": "364",
        "name": "level"
       }
      }
     }
    ]
   },
   "properties": [
    {
     "$id": "365",
     "kind": "property",
     "name": "parent",
     "serializedName": "parent",
     "type": {
      "$id": "366",
      "kind": "array",
      "name": "ArrayBaseModel",
      "valueType": {
       "$ref": "360"
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.ChildModel.parent",
     "serializationOptions": {
      "$id": "367",
      "json": {
       "$id": "368",
       "name": "parent"
      }
     }
    }
   ]
  },
  {
   "$ref": "360"
  },
  {
   "$id": "369",
   "kind": "model",
   "name": "ContainSelf",
   "namespace": "FirstTestTypeSpec",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.ContainSelf",
   "usage": "Input,Json",
   "doc": "containSelf",
   "decorators": [],
   "properties": [
    {
     "$id": "370",
     "kind": "property",
     "name": "self",
     "serializedName": "self",
     "type": {
      "$ref": "369"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.ContainSelf.self",
     "serializationOptions": {
      "$id": "371",
      "json": {
       "$id": "372",
       "name": "self"
      }
     }
    }
   ]
  },
  {
   "$id": "373",
   "kind": "model",
   "name": "ModelWithProjectedEnum",
   "namespace": "FirstTestTypeSpec",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.ModelWithProjectedEnum",
   "usage": "Input,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "374",
     "kind": "property",
     "name": "enumProperty",
     "serializedName": "enumProperty",
     "doc": "enum with projected name used in a model",
     "type": {
      "$ref": "10"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.ModelWithProjectedEnum.enumProperty",
     "serializationOptions": {
      "$id": "375",
      "json": {
       "$id": "376",
       "name": "enumProperty"
      }
     }
    }
   ]
  },
  {
   "$id": "377",
   "kind": "model",
   "name": "AzureLocationModel",
   "namespace": "FirstTestTypeSpec",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.AzureLocationModel",
   "usage": "Input,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "378",
     "kind": "property",
     "name": "location",
     "serializedName": "location",
     "type": {
      "$id": "379",
      "kind": "string",
      "name": "azureLocation",
      "crossLanguageDefinitionId": "Azure.Core.azureLocation",
      "baseType": {
       "$id": "380",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.AzureLocationModel.location",
     "serializationOptions": {
      "$id": "381",
      "json": {
       "$id": "382",
       "name": "location"
      }
     }
    }
   ]
  },
  {
   "$id": "383",
   "kind": "model",
   "name": "RoundTripModel",
   "namespace": "FirstTestTypeSpec",
   "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel",
   "usage": "Input,Output,Json",
   "doc": "this is a roundtrip model",
   "decorators": [],
   "properties": [
    {
     "$id": "384",
     "kind": "property",
     "name": "requiredString",
     "serializedName": "requiredString",
     "doc": "Required string, illustrating a reference type property.",
     "type": {
      "$id": "385",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.requiredString",
     "serializationOptions": {
      "$id": "386",
      "json": {
       "$id": "387",
       "name": "requiredString"
      }
     }
    },
    {
     "$id": "388",
     "kind": "property",
     "name": "requiredInt",
     "serializedName": "requiredInt",
     "doc": "Required int, illustrating a value type property.",
     "type": {
      "$id": "389",
      "kind": "int32",
      "name": "int32",
      "crossLanguageDefinitionId": "TypeSpec.int32",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.requiredInt",
     "serializationOptions": {
      "$id": "390",
      "json": {
       "$id": "391",
       "name": "requiredInt"
      }
     }
    },
    {
     "$id": "392",
     "kind": "property",
     "name": "requiredCollection",
     "serializedName": "requiredCollection",
     "doc": "Required collection of enums",
     "type": {
      "$id": "393",
      "kind": "array",
      "name": "ArrayStringFixedEnum",
      "valueType": {
       "$ref": "18"
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.requiredCollection",
     "serializationOptions": {
      "$id": "394",
      "json": {
       "$id": "395",
       "name": "requiredCollection"
      }
     }
    },
    {
     "$id": "396",
     "kind": "property",
     "name": "requiredDictionary",
     "serializedName": "requiredDictionary",
     "doc": "Required dictionary of enums",
     "type": {
      "$id": "397",
      "kind": "dict",
      "keyType": {
       "$id": "398",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "valueType": {
       "$ref": "26"
      },
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.requiredDictionary",
     "serializationOptions": {
      "$id": "399",
      "json": {
       "$id": "400",
       "name": "requiredDictionary"
      }
     }
    },
    {
     "$id": "401",
     "kind": "property",
     "name": "requiredModel",
     "serializedName": "requiredModel",
     "doc": "Required model",
     "type": {
      "$ref": "244"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.requiredModel",
     "serializationOptions": {
      "$id": "402",
      "json": {
       "$id": "403",
       "name": "requiredModel"
      }
     }
    },
    {
     "$id": "404",
     "kind": "property",
     "name": "intExtensibleEnum",
     "serializedName": "intExtensibleEnum",
     "doc": "this is an int based extensible enum",
     "type": {
      "$ref": "34"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.intExtensibleEnum",
     "serializationOptions": {
      "$id": "405",
      "json": {
       "$id": "406",
       "name": "intExtensibleEnum"
      }
     }
    },
    {
     "$id": "407",
     "kind": "property",
     "name": "intExtensibleEnumCollection",
     "serializedName": "intExtensibleEnumCollection",
     "doc": "this is a collection of int based extensible enum",
     "type": {
      "$id": "408",
      "kind": "array",
      "name": "ArrayIntExtensibleEnum",
      "valueType": {
       "$ref": "34"
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.intExtensibleEnumCollection",
     "serializationOptions": {
      "$id": "409",
      "json": {
       "$id": "410",
       "name": "intExtensibleEnumCollection"
      }
     }
    },
    {
     "$id": "411",
     "kind": "property",
     "name": "floatExtensibleEnum",
     "serializedName": "floatExtensibleEnum",
     "doc": "this is a float based extensible enum",
     "type": {
      "$ref": "42"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.floatExtensibleEnum",
     "serializationOptions": {
      "$id": "412",
      "json": {
       "$id": "413",
       "name": "floatExtensibleEnum"
      }
     }
    },
    {
     "$id": "414",
     "kind": "property",
     "name": "floatExtensibleEnumCollection",
     "serializedName": "floatExtensibleEnumCollection",
     "doc": "this is a collection of float based extensible enum",
     "type": {
      "$id": "415",
      "kind": "array",
      "name": "ArrayFloatExtensibleEnum",
      "valueType": {
       "$ref": "42"
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.floatExtensibleEnumCollection",
     "serializationOptions": {
      "$id": "416",
      "json": {
       "$id": "417",
       "name": "floatExtensibleEnumCollection"
      }
     }
    },
    {
     "$id": "418",
     "kind": "property",
     "name": "floatFixedEnum",
     "serializedName": "floatFixedEnum",
     "doc": "this is a float based fixed enum",
     "type": {
      "$ref": "50"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.floatFixedEnum",
     "serializationOptions": {
      "$id": "419",
      "json": {
       "$id": "420",
       "name": "floatFixedEnum"
      }
     }
    },
    {
     "$id": "421",
     "kind": "property",
     "name": "floatFixedEnumCollection",
     "serializedName": "floatFixedEnumCollection",
     "doc": "this is a collection of float based fixed enum",
     "type": {
      "$id": "422",
      "kind": "array",
      "name": "ArrayFloatFixedEnum",
      "valueType": {
       "$ref": "50"
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.floatFixedEnumCollection",
     "serializationOptions": {
      "$id": "423",
      "json": {
       "$id": "424",
       "name": "floatFixedEnumCollection"
      }
     }
    },
    {
     "$id": "425",
     "kind": "property",
     "name": "intFixedEnum",
     "serializedName": "intFixedEnum",
     "doc": "this is a int based fixed enum",
     "type": {
      "$ref": "58"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.intFixedEnum",
     "serializationOptions": {
      "$id": "426",
      "json": {
       "$id": "427",
       "name": "intFixedEnum"
      }
     }
    },
    {
     "$id": "428",
     "kind": "property",
     "name": "intFixedEnumCollection",
     "serializedName": "intFixedEnumCollection",
     "doc": "this is a collection of int based fixed enum",
     "type": {
      "$id": "429",
      "kind": "array",
      "name": "ArrayIntFixedEnum",
      "valueType": {
       "$ref": "58"
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.intFixedEnumCollection",
     "serializationOptions": {
      "$id": "430",
      "json": {
       "$id": "431",
       "name": "intFixedEnumCollection"
      }
     }
    },
    {
     "$id": "432",
     "kind": "property",
     "name": "stringFixedEnum",
     "serializedName": "stringFixedEnum",
     "doc": "this is a string based fixed enum",
     "type": {
      "$ref": "18"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.stringFixedEnum",
     "serializationOptions": {
      "$id": "433",
      "json": {
       "$id": "434",
       "name": "stringFixedEnum"
      }
     }
    },
    {
     "$id": "435",
     "kind": "property",
     "name": "requiredUnknown",
     "serializedName": "requiredUnknown",
     "doc": "required unknown",
     "type": {
      "$id": "436",
      "kind": "unknown",
      "name": "unknown",
      "crossLanguageDefinitionId": "",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.requiredUnknown",
     "serializationOptions": {
      "$id": "437",
      "json": {
       "$id": "438",
       "name": "requiredUnknown"
      }
     }
    },
    {
     "$id": "439",
     "kind": "property",
     "name": "optionalUnknown",
     "serializedName": "optionalUnknown",
     "doc": "optional unknown",
     "type": {
      "$id": "440",
      "kind": "unknown",
      "name": "unknown",
      "crossLanguageDefinitionId": "",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.optionalUnknown",
     "serializationOptions": {
      "$id": "441",
      "json": {
       "$id": "442",
       "name": "optionalUnknown"
      }
     }
    },
    {
     "$id": "443",
     "kind": "property",
     "name": "requiredRecordUnknown",
     "serializedName": "requiredRecordUnknown",
     "doc": "required record of unknown",
     "type": {
      "$id": "444",
      "kind": "dict",
      "keyType": {
       "$id": "445",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "valueType": {
       "$id": "446",
       "kind": "unknown",
       "name": "unknown",
       "crossLanguageDefinitionId": "",
       "decorators": []
      },
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.requiredRecordUnknown",
     "serializationOptions": {
      "$id": "447",
      "json": {
       "$id": "448",
       "name": "requiredRecordUnknown"
      }
     }
    },
    {
     "$id": "449",
     "kind": "property",
     "name": "optionalRecordUnknown",
     "serializedName": "optionalRecordUnknown",
     "doc": "optional record of unknown",
     "type": {
      "$ref": "444"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.optionalRecordUnknown",
     "serializationOptions": {
      "$id": "450",
      "json": {
       "$id": "451",
       "name": "optionalRecordUnknown"
      }
     }
    },
    {
     "$id": "452",
     "kind": "property",
     "name": "readOnlyRequiredRecordUnknown",
     "serializedName": "readOnlyRequiredRecordUnknown",
     "doc": "required readonly record of unknown",
     "type": {
      "$ref": "444"
     },
     "optional": false,
     "readOnly": true,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.readOnlyRequiredRecordUnknown",
     "serializationOptions": {
      "$id": "453",
      "json": {
       "$id": "454",
       "name": "readOnlyRequiredRecordUnknown"
      }
     }
    },
    {
     "$id": "455",
     "kind": "property",
     "name": "readOnlyOptionalRecordUnknown",
     "serializedName": "readOnlyOptionalRecordUnknown",
     "doc": "optional readonly record of unknown",
     "type": {
      "$ref": "444"
     },
     "optional": true,
     "readOnly": true,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.readOnlyOptionalRecordUnknown",
     "serializationOptions": {
      "$id": "456",
      "json": {
       "$id": "457",
       "name": "readOnlyOptionalRecordUnknown"
      }
     }
    },
    {
     "$id": "458",
     "kind": "property",
     "name": "modelWithRequiredNullable",
     "serializedName": "modelWithRequiredNullable",
     "doc": "this is a model with required nullable properties",
     "type": {
      "$id": "459",
      "kind": "model",
      "name": "ModelWithRequiredNullableProperties",
      "namespace": "FirstTestTypeSpec",
      "crossLanguageDefinitionId": "FirstTestTypeSpec.ModelWithRequiredNullableProperties",
      "usage": "Input,Output,Json",
      "doc": "A model with a few required nullable properties",
      "decorators": [],
      "properties": [
       {
        "$id": "460",
        "kind": "property",
        "name": "requiredNullablePrimitive",
        "serializedName": "requiredNullablePrimitive",
        "doc": "required nullable primitive type",
        "type": {
         "$id": "461",
         "kind": "nullable",
         "type": {
          "$id": "462",
          "kind": "int32",
          "name": "int32",
          "crossLanguageDefinitionId": "TypeSpec.int32",
          "decorators": []
         },
         "namespace": ""
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "FirstTestTypeSpec.ModelWithRequiredNullableProperties.requiredNullablePrimitive",
        "serializationOptions": {
         "$id": "463",
         "json": {
          "$id": "464",
          "name": "requiredNullablePrimitive"
         }
        }
       },
       {
        "$id": "465",
        "kind": "property",
        "name": "requiredExtensibleEnum",
        "serializedName": "requiredExtensibleEnum",
        "doc": "required nullable extensible enum type",
        "type": {
         "$id": "466",
         "kind": "nullable",
         "type": {
          "$ref": "26"
         },
         "namespace": ""
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "FirstTestTypeSpec.ModelWithRequiredNullableProperties.requiredExtensibleEnum",
        "serializationOptions": {
         "$id": "467",
         "json": {
          "$id": "468",
          "name": "requiredExtensibleEnum"
         }
        }
       },
       {
        "$id": "469",
        "kind": "property",
        "name": "requiredFixedEnum",
        "serializedName": "requiredFixedEnum",
        "doc": "required nullable fixed enum type",
        "type": {
         "$id": "470",
         "kind": "nullable",
         "type": {
          "$ref": "18"
         },
         "namespace": ""
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "FirstTestTypeSpec.ModelWithRequiredNullableProperties.requiredFixedEnum",
        "serializationOptions": {
         "$id": "471",
         "json": {
          "$id": "472",
          "name": "requiredFixedEnum"
         }
        }
       }
      ]
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.modelWithRequiredNullable",
     "serializationOptions": {
      "$id": "473",
      "json": {
       "$id": "474",
       "name": "modelWithRequiredNullable"
      }
     }
    },
    {
     "$id": "475",
     "kind": "property",
     "name": "unionList",
     "serializedName": "unionList",
     "doc": "this is a list of union types",
     "type": {
      "$id": "476",
      "kind": "array",
      "name": "Array2",
      "valueType": {
       "$id": "477",
       "kind": "union",
       "name": "RoundTripModelUnionList",
       "variantTypes": [
        {
         "$id": "478",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        {
         "$id": "479",
         "kind": "int32",
         "name": "int32",
         "crossLanguageDefinitionId": "TypeSpec.int32",
         "decorators": []
        },
        {
         "$id": "480",
         "kind": "model",
         "name": "ModelForUnion",
         "namespace": "FirstTestTypeSpec",
         "crossLanguageDefinitionId": "FirstTestTypeSpec.ModelForUnion",
         "usage": "Input,Output,Json",
         "doc": "This is a model only used in union types, please do not use it anywhere else.",
         "decorators": [],
         "properties": [
          {
           "$id": "481",
           "kind": "property",
           "name": "name",
           "serializedName": "name",
           "doc": "name of the ModelForUnion",
           "type": {
            "$id": "482",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           },
           "optional": false,
           "readOnly": false,
           "discriminator": false,
           "flatten": false,
           "decorators": [],
           "crossLanguageDefinitionId": "FirstTestTypeSpec.ModelForUnion.name",
           "serializationOptions": {
            "$id": "483",
            "json": {
             "$id": "484",
             "name": "name"
            }
           }
          },
          {
           "$id": "485",
           "kind": "property",
           "name": "age",
           "serializedName": "age",
           "doc": "age of the ModelForUnion",
           "type": {
            "$id": "486",
            "kind": "int32",
            "name": "int32",
            "crossLanguageDefinitionId": "TypeSpec.int32",
            "decorators": []
           },
           "optional": true,
           "readOnly": false,
           "discriminator": false,
           "flatten": false,
           "decorators": [],
           "crossLanguageDefinitionId": "FirstTestTypeSpec.ModelForUnion.age",
           "serializationOptions": {
            "$id": "487",
            "json": {
             "$id": "488",
             "name": "age"
            }
           }
          }
         ]
        },
        {
         "$id": "489",
         "kind": "array",
         "name": "ArrayModelForUnion",
         "valueType": {
          "$ref": "480"
         },
         "crossLanguageDefinitionId": "TypeSpec.Array",
         "decorators": []
        }
       ],
       "namespace": "",
       "decorators": []
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.unionList",
     "serializationOptions": {
      "$id": "490",
      "json": {
       "$id": "491",
       "name": "unionList"
      }
     }
    },
    {
     "$id": "492",
     "kind": "property",
     "name": "binaryDataRecord",
     "serializedName": "binaryDataRecord",
     "doc": "this is a record of unknown to be changed to BinaryData in customized code",
     "type": {
      "$ref": "444"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.RoundTripModel.binaryDataRecord",
     "serializationOptions": {
      "$id": "493",
      "json": {
       "$id": "494",
       "name": "binaryDataRecord"
      }
     }
    }
   ]
  },
  {
   "$ref": "459"
  },
  {
   "$ref": "480"
  },
  {
   "$id": "495",
   "kind": "model",
   "name": "PagedThing",
   "namespace": "Azure.Core",
   "crossLanguageDefinitionId": "Azure.Core.Page",
   "usage": "Output,Json",
   "doc": "Paged collection of Thing items",
   "decorators": [],
   "properties": [
    {
     "$id": "496",
     "kind": "property",
     "name": "value",
     "serializedName": "value",
     "doc": "The Thing items on this page",
     "type": {
      "$id": "497",
      "kind": "array",
      "name": "ArrayThing",
      "valueType": {
       "$ref": "244"
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Azure.Core.Page.value",
     "serializationOptions": {
      "$id": "498",
      "json": {
       "$id": "499",
       "name": "value"
      }
     }
    },
    {
     "$id": "500",
     "kind": "property",
     "name": "nextLink",
     "serializedName": "nextLink",
     "doc": "The link to the next page of items",
     "type": {
      "$id": "501",
      "kind": "url",
      "name": "ResourceLocation",
      "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
      "baseType": {
       "$id": "502",
       "kind": "url",
       "name": "url",
       "crossLanguageDefinitionId": "TypeSpec.url",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Azure.Core.Page.nextLink",
     "serializationOptions": {
      "$id": "503",
      "json": {
       "$id": "504",
       "name": "nextLink"
      }
     }
    }
   ]
  },
  {
   "$id": "505",
   "kind": "model",
   "name": "ResourceOperationStatusResourceExportedResourceError",
   "namespace": "Azure.Core",
   "crossLanguageDefinitionId": "Azure.Core.ResourceOperationStatus",
   "usage": "None",
   "doc": "Provides status details for long running operations.",
   "decorators": [],
   "properties": [
    {
     "$id": "506",
     "kind": "property",
     "name": "id",
     "serializedName": "id",
     "doc": "The unique ID of the operation.",
     "type": {
      "$id": "507",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Azure.Core.ResourceOperationStatus.id",
     "serializationOptions": {
      "$id": "508"
     }
    },
    {
     "$id": "509",
     "kind": "property",
     "name": "status",
     "serializedName": "status",
     "doc": "The status of the operation",
     "type": {
      "$ref": "86"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Azure.Core.ResourceOperationStatus.status",
     "serializationOptions": {
      "$id": "510"
     }
    },
    {
     "$id": "511",
     "kind": "property",
     "name": "error",
     "serializedName": "error",
     "doc": "Error object that describes the error when status is \"Failed\".",
     "type": {
      "$id": "512",
      "kind": "model",
      "name": "Error",
      "namespace": "Azure.Core.Foundations",
      "crossLanguageDefinitionId": "Azure.Core.Foundations.Error",
      "usage": "Json,Exception",
      "doc": "The error object.",
      "decorators": [],
      "properties": [
       {
        "$id": "513",
        "kind": "property",
        "name": "code",
        "serializedName": "code",
        "doc": "One of a server-defined set of error codes.",
        "type": {
         "$id": "514",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Azure.Core.Foundations.Error.code",
        "serializationOptions": {
         "$id": "515",
         "json": {
          "$id": "516",
          "name": "code"
         }
        }
       },
       {
        "$id": "517",
        "kind": "property",
        "name": "message",
        "serializedName": "message",
        "doc": "A human-readable representation of the error.",
        "type": {
         "$id": "518",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Azure.Core.Foundations.Error.message",
        "serializationOptions": {
         "$id": "519",
         "json": {
          "$id": "520",
          "name": "message"
         }
        }
       },
       {
        "$id": "521",
        "kind": "property",
        "name": "target",
        "serializedName": "target",
        "doc": "The target of the error.",
        "type": {
         "$id": "522",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Azure.Core.Foundations.Error.target",
        "serializationOptions": {
         "$id": "523",
         "json": {
          "$id": "524",
          "name": "target"
         }
        }
       },
       {
        "$id": "525",
        "kind": "property",
        "name": "details",
        "serializedName": "details",
        "doc": "An array of details about specific errors that led to this reported error.",
        "type": {
         "$id": "526",
         "kind": "array",
         "name": "ArrayError",
         "valueType": {
          "$ref": "512"
         },
         "crossLanguageDefinitionId": "TypeSpec.Array",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Azure.Core.Foundations.Error.details",
        "serializationOptions": {
         "$id": "527",
         "json": {
          "$id": "528",
          "name": "details"
         }
        }
       },
       {
        "$id": "529",
        "kind": "property",
        "name": "innererror",
        "serializedName": "innererror",
        "doc": "An object containing more specific information than the current object about the error.",
        "type": {
         "$id": "530",
         "kind": "model",
         "name": "InnerError",
         "namespace": "Azure.Core.Foundations",
         "crossLanguageDefinitionId": "Azure.Core.Foundations.InnerError",
         "usage": "Json,Exception",
         "doc": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/microsoft/api-guidelines/blob/vNext/azure/Guidelines.md#handling-errors.",
         "decorators": [],
         "properties": [
          {
           "$id": "531",
           "kind": "property",
           "name": "code",
           "serializedName": "code",
           "doc": "One of a server-defined set of error codes.",
           "type": {
            "$id": "532",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           },
           "optional": true,
           "readOnly": false,
           "discriminator": false,
           "flatten": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Azure.Core.Foundations.InnerError.code",
           "serializationOptions": {
            "$id": "533",
            "json": {
             "$id": "534",
             "name": "code"
            }
           }
          },
          {
           "$id": "535",
           "kind": "property",
           "name": "innererror",
           "serializedName": "innererror",
           "doc": "Inner error.",
           "type": {
            "$ref": "530"
           },
           "optional": true,
           "readOnly": false,
           "discriminator": false,
           "flatten": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Azure.Core.Foundations.InnerError.innererror",
           "serializationOptions": {
            "$id": "536",
            "json": {
             "$id": "537",
             "name": "innererror"
            }
           }
          }
         ]
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Azure.Core.Foundations.Error.innererror",
        "serializationOptions": {
         "$id": "538",
         "json": {
          "$id": "539",
          "name": "innererror"
         }
        }
       }
      ]
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Azure.Core.ResourceOperationStatus.error",
     "serializationOptions": {
      "$id": "540"
     }
    },
    {
     "$id": "541",
     "kind": "property",
     "name": "result",
     "serializedName": "result",
     "doc": "The result of the operation.",
     "type": {
      "$id": "542",
      "kind": "model",
      "name": "ExportedResource",
      "namespace": "FirstTestTypeSpec",
      "crossLanguageDefinitionId": "FirstTestTypeSpec.ExportedResource",
      "usage": "None",
      "decorators": [],
      "properties": [
       {
        "$id": "543",
        "kind": "property",
        "name": "id",
        "serializedName": "id",
        "type": {
         "$id": "544",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "FirstTestTypeSpec.ExportedResource.id",
        "serializationOptions": {
         "$id": "545"
        }
       },
       {
        "$id": "546",
        "kind": "property",
        "name": "name",
        "serializedName": "name",
        "type": {
         "$id": "547",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "FirstTestTypeSpec.ExportedResource.name",
        "serializationOptions": {
         "$id": "548"
        }
       }
      ]
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Azure.Core.ResourceOperationStatus.result",
     "serializationOptions": {
      "$id": "549"
     }
    }
   ]
  },
  {
   "$ref": "512"
  },
  {
   "$ref": "530"
  },
  {
   "$ref": "542"
  }
 ],
 "clients": [
  {
   "$id": "550",
   "kind": "client",
   "name": "FirstTestTypeSpecClient",
   "namespace": "FirstTestTypeSpec",
   "doc": "This is a sample typespec project.",
   "methods": [
    {
     "$id": "551",
     "kind": "basic",
     "name": "topAction",
     "accessibility": "public",
     "apiVersions": [
      "2022-05-15-preview"
     ],
     "doc": "top level method",
     "operation": {
      "$id": "552",
      "name": "topAction",
      "resourceName": "FirstTestTypeSpec",
      "doc": "top level method",
      "accessibility": "public",
      "parameters": [
       {
        "$id": "553",
        "name": "action",
        "nameInRequest": "action",
        "type": {
         "$id": "554",
         "kind": "utcDateTime",
         "name": "utcDateTime",
         "encode": "rfc3339",
         "wireType": {
          "$id": "555",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
         "decorators": []
        },
        "location": "Path",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Method",
        "decorators": [],
        "skipUrlEncoding": false
       },
       {
        "$id": "556",
        "name": "accept",
        "nameInRequest": "Accept",
        "type": {
         "$ref": "126"
        },
        "location": "Header",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Constant",
        "decorators": [],
        "skipUrlEncoding": false
       }
      ],
      "responses": [
       {
        "$id": "557",
        "statusCodes": [
         200
        ],
        "bodyType": {
         "$ref": "244"
        },
        "headers": [],
        "isErrorResponse": false,
        "contentTypes": [
         "application/json"
        ]
       }
      ],
      "httpMethod": "GET",
      "uri": "{firstTestTypeSpecUrl}",
      "path": "/top/{action}",
      "bufferResponse": true,
      "generateProtocolMethod": true,
      "generateConvenienceMethod": true,
      "crossLanguageDefinitionId": "FirstTestTypeSpec.topAction",
      "decorators": []
     },
     "parameters": [
      {
       "$id": "558",
       "name": "action",
       "nameInRequest": "action",
       "type": {
        "$id": "559",
        "kind": "utcDateTime",
        "name": "utcDateTime",
        "encode": "rfc3339",
        "wireType": {
         "$id": "560",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
        "decorators": []
       },
       "location": "Path",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Method",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "561",
       "name": "accept",
       "nameInRequest": "accept",
       "type": {
        "$ref": "126"
       },
       "location": "Header",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Constant",
       "decorators": [],
       "skipUrlEncoding": false
      }
     ],
     "response": {
      "$id": "562",
      "type": {
       "$ref": "244"
      }
     },
     "isOverride": false,
     "generateConvenient": true,
     "generateProtocol": true,
     "crossLanguageDefinitionId": "FirstTestTypeSpec.topAction"
    },
    {
     "$id": "563",
     "kind": "basic",
     "name": "topAction2",
     "accessibility": "public",
     "apiVersions": [
      "2022-05-15-preview"
     ],
     "doc": "top level method2",
     "operation": {
      "$id": "564",
      "name": "topAction2",
      "resourceName": "FirstTestTypeSpec",
      "doc": "top level method2",
      "accessibility": "public",
      "parameters": [
       {
        "$id": "565",
        "name": "accept",
        "nameInRequest": "Accept",
        "type": {
         "$ref": "128"
        },
        "location": "Header",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Constant",
        "decorators": [],
        "skipUrlEncoding": false
       }
      ],
      "responses": [
       {
        "$id": "566",
        "statusCodes": [
         200
        ],
        "bodyType": {
         "$ref": "244"
        },
        "headers": [],
        "isErrorResponse": false,
        "contentTypes": [
         "application/json"
        ]
       }
      ],
      "httpMethod": "GET",
      "uri": "{firstTestTypeSpecUrl}",
      "path": "/top2",
      "bufferResponse": true,
      "generateProtocolMethod": true,
      "generateConvenienceMethod": false,
      "crossLanguageDefinitionId": "FirstTestTypeSpec.topAction2",
      "decorators": []
     },
     "parameters": [
      {
       "$id": "567",
       "name": "accept",
       "nameInRequest": "accept",
       "type": {
        "$ref": "128"
       },
       "location": "Header",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Constant",
       "decorators": [],
       "skipUrlEncoding": false
      }
     ],
     "response": {
      "$id": "568",
      "type": {
       "$ref": "244"
      }
     },
     "isOverride": false,
     "generateConvenient": false,
     "generateProtocol": true,
     "crossLanguageDefinitionId": "FirstTestTypeSpec.topAction2"
    },
    {
     "$id": "569",
     "kind": "basic",
     "name": "patchAction",
     "accessibility": "public",
     "apiVersions": [
      "2022-05-15-preview"
     ],
     "doc": "top level patch",
     "operation": {
      "$id": "570",
      "name": "patchAction",
      "resourceName": "FirstTestTypeSpec",
      "doc": "top level patch",
      "accessibility": "public",
      "parameters": [
       {
        "$id": "571",
        "name": "contentType",
        "nameInRequest": "Content-Type",
        "doc": "Body parameter's content type. Known values are application/json",
        "type": {
         "$ref": "130"
        },
        "location": "Header",
        "isApiVersion": false,
        "isContentType": true,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Constant",
        "decorators": [],
        "skipUrlEncoding": false
       },
       {
        "$id": "572",
        "name": "accept",
        "nameInRequest": "Accept",
        "type": {
         "$ref": "132"
        },
        "location": "Header",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Constant",
        "decorators": [],
        "skipUrlEncoding": false
       },
       {
        "$id": "573",
        "name": "body",
        "nameInRequest": "body",
        "type": {
         "$ref": "244"
        },
        "location": "Body",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Method",
        "decorators": [],
        "skipUrlEncoding": false
       }
      ],
      "responses": [
       {
        "$id": "574",
        "statusCodes": [
         200
        ],
        "bodyType": {
         "$ref": "244"
        },
        "headers": [],
        "isErrorResponse": false,
        "contentTypes": [
         "application/json"
        ]
       }
      ],
      "httpMethod": "PATCH",
      "uri": "{firstTestTypeSpecUrl}",
      "path": "/patch",
      "requestMediaTypes": [
       "application/json"
      ],
      "bufferResponse": true,
      "generateProtocolMethod": true,
      "generateConvenienceMethod": false,
      "crossLanguageDefinitionId": "FirstTestTypeSpec.patchAction",
      "decorators": []
     },
     "parameters": [
      {
       "$id": "575",
       "name": "body",
       "nameInRequest": "body",
       "type": {
        "$ref": "244"
       },
       "location": "Body",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Method",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "576",
       "name": "contentType",
       "nameInRequest": "contentType",
       "doc": "Body parameter's content type. Known values are application/json",
       "type": {
        "$ref": "130"
       },
       "location": "Header",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Constant",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "577",
       "name": "accept",
       "nameInRequest": "accept",
       "type": {
        "$ref": "132"
       },
       "location": "Header",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Constant",
       "decorators": [],
       "skipUrlEncoding": false
      }
     ],
     "response": {
      "$id": "578",
      "type": {
       "$ref": "244"
      }
     },
     "isOverride": false,
     "generateConvenient": true,
     "generateProtocol": true,
     "crossLanguageDefinitionId": "FirstTestTypeSpec.patchAction"
    },
    {
     "$id": "579",
     "kind": "basic",
     "name": "anonymousBody",
     "accessibility": "public",
     "apiVersions": [
      "2022-05-15-preview"
     ],
     "doc": "body parameter without body decorator",
     "operation": {
      "$id": "580",
      "name": "anonymousBody",
      "resourceName": "FirstTestTypeSpec",
      "doc": "body parameter without body decorator",
      "accessibility": "public",
      "parameters": [
       {
        "$id": "581",
        "name": "contentType",
        "nameInRequest": "Content-Type",
        "doc": "Body parameter's content type. Known values are application/json",
        "type": {
         "$ref": "134"
        },
        "location": "Header",
        "isApiVersion": false,
        "isContentType": true,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Constant",
        "decorators": [],
        "skipUrlEncoding": false
       },
       {
        "$id": "582",
        "name": "accept",
        "nameInRequest": "Accept",
        "type": {
         "$ref": "136"
        },
        "location": "Header",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Constant",
        "decorators": [],
        "skipUrlEncoding": false
       },
       {
        "$id": "583",
        "name": "thing",
        "nameInRequest": "thing",
        "type": {
         "$ref": "244"
        },
        "location": "Body",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Spread",
        "decorators": [],
        "skipUrlEncoding": false
       }
      ],
      "responses": [
       {
        "$id": "584",
        "statusCodes": [
         200
        ],
        "bodyType": {
         "$ref": "244"
        },
        "headers": [],
        "isErrorResponse": false,
        "contentTypes": [
         "application/json"
        ]
       }
      ],
      "httpMethod": "POST",
      "uri": "{firstTestTypeSpecUrl}",
      "path": "/anonymousBody",
      "requestMediaTypes": [
       "application/json"
      ],
      "bufferResponse": true,
      "generateProtocolMethod": true,
      "generateConvenienceMethod": true,
      "crossLanguageDefinitionId": "FirstTestTypeSpec.anonymousBody",
      "decorators": []
     },
     "parameters": [
      {
       "$id": "585",
       "name": "name",
       "nameInRequest": "name",
       "doc": "name of the Thing",
       "type": {
        "$id": "586",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "location": "Body",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Method",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "587",
       "name": "requiredUnion",
       "nameInRequest": "requiredUnion",
       "doc": "required Union",
       "type": {
        "$ref": "250"
       },
       "location": "Body",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Method",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "588",
       "name": "requiredLiteralString",
       "nameInRequest": "requiredLiteralString",
       "doc": "required literal string",
       "type": {
        "$ref": "116"
       },
       "location": "Body",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Constant",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "589",
       "name": "requiredLiteralInt",
       "nameInRequest": "requiredLiteralInt",
       "doc": "required literal int",
       "type": {
        "$ref": "117"
       },
       "location": "Body",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Constant",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "590",
       "name": "requiredLiteralFloat",
       "nameInRequest": "requiredLiteralFloat",
       "doc": "required literal float",
       "type": {
        "$ref": "118"
       },
       "location": "Body",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Constant",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "591",
       "name": "requiredLiteralBool",
       "nameInRequest": "requiredLiteralBool",
       "doc": "required literal bool",
       "type": {
        "$ref": "119"
       },
       "location": "Body",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Constant",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "592",
       "name": "optionalLiteralString",
       "nameInRequest": "optionalLiteralString",
       "doc": "optional literal string",
       "type": {
        "$ref": "121"
       },
       "location": "Body",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": false,
       "kind": "Constant",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "593",
       "name": "optionalLiteralInt",
       "nameInRequest": "optionalLiteralInt",
       "doc": "optional literal int",
       "type": {
        "$ref": "122"
       },
       "location": "Body",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": false,
       "kind": "Constant",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "594",
       "name": "optionalLiteralFloat",
       "nameInRequest": "optionalLiteralFloat",
       "doc": "optional literal float",
       "type": {
        "$ref": "123"
       },
       "location": "Body",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": false,
       "kind": "Constant",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "595",
       "name": "optionalLiteralBool",
       "nameInRequest": "optionalLiteralBool",
       "doc": "optional literal bool",
       "type": {
        "$ref": "124"
       },
       "location": "Body",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": false,
       "kind": "Constant",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "596",
       "name": "requiredBadDescription",
       "nameInRequest": "requiredBadDescription",
       "doc": "description with xml <|endoftext|>",
       "type": {
        "$id": "597",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "location": "Body",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Method",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "598",
       "name": "optionalNullableList",
       "nameInRequest": "optionalNullableList",
       "doc": "optional nullable collection",
       "type": {
        "$ref": "286"
       },
       "location": "Body",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": false,
       "kind": "Method",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "599",
       "name": "requiredNullableList",
       "nameInRequest": "requiredNullableList",
       "doc": "required nullable collection",
       "type": {
        "$ref": "292"
       },
       "location": "Body",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Method",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "600",
       "name": "requiredFloatProperty",
       "nameInRequest": "requiredFloatProperty",
       "doc": "required float property",
       "type": {
        "$id": "601",
        "kind": "float",
        "name": "float",
        "crossLanguageDefinitionId": "TypeSpec.float",
        "decorators": []
       },
       "location": "Body",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Method",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "602",
       "name": "optionalFloatProperty",
       "nameInRequest": "optionalFloatProperty",
       "doc": "optional float property",
       "type": {
        "$id": "603",
        "kind": "float",
        "name": "float",
        "crossLanguageDefinitionId": "TypeSpec.float",
        "decorators": []
       },
       "location": "Body",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": false,
       "kind": "Method",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "604",
       "name": "optionalResourceId",
       "nameInRequest": "optionalResourceId",
       "doc": "optional arm id.",
       "type": {
        "$id": "605",
        "kind": "string",
        "name": "armResourceIdentifier",
        "crossLanguageDefinitionId": "Azure.Core.armResourceIdentifier",
        "baseType": {
         "$id": "606",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "decorators": []
       },
       "location": "Body",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": false,
       "kind": "Method",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "607",
       "name": "contentType",
       "nameInRequest": "contentType",
       "doc": "Body parameter's content type. Known values are application/json",
       "type": {
        "$ref": "134"
       },
       "location": "Header",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Constant",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "608",
       "name": "accept",
       "nameInRequest": "accept",
       "type": {
        "$ref": "136"
       },
       "location": "Header",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Constant",
       "decorators": [],
       "skipUrlEncoding": false
      }
     ],
     "response": {
      "$id": "609",
      "type": {
       "$ref": "244"
      }
     },
     "isOverride": false,
     "generateConvenient": true,
     "generateProtocol": true,
     "crossLanguageDefinitionId": "FirstTestTypeSpec.anonymousBody"
    },
    {
     "$id": "610",
     "kind": "basic",
     "name": "friendlyModel",
     "accessibility": "public",
     "apiVersions": [
      "2022-05-15-preview"
     ],
     "doc": "Model can have its friendly name",
     "operation": {
      "$id": "611",
      "name": "friendlyModel",
      "resourceName": "FirstTestTypeSpec",
      "doc": "Model can have its friendly name",
      "accessibility": "public",
      "parameters": [
       {
        "$id": "612",
        "name": "contentType",
        "nameInRequest": "Content-Type",
        "doc": "Body parameter's content type. Known values are application/json",
        "type": {
         "$ref": "154"
        },
        "location": "Header",
        "isApiVersion": false,
        "isContentType": true,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Constant",
        "decorators": [],
        "skipUrlEncoding": false
       },
       {
        "$id": "613",
        "name": "accept",
        "nameInRequest": "Accept",
        "type": {
         "$ref": "156"
        },
        "location": "Header",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Constant",
        "decorators": [],
        "skipUrlEncoding": false
       },
       {
        "$id": "614",
        "name": "friend",
        "nameInRequest": "friend",
        "type": {
         "$ref": "308"
        },
        "location": "Body",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Spread",
        "decorators": [],
        "skipUrlEncoding": false
       }
      ],
      "responses": [
       {
        "$id": "615",
        "statusCodes": [
         200
        ],
        "bodyType": {
         "$ref": "308"
        },
        "headers": [],
        "isErrorResponse": false,
        "contentTypes": [
         "application/json"
        ]
       }
      ],
      "httpMethod": "POST",
      "uri": "{firstTestTypeSpecUrl}",
      "path": "/friendlyName",
      "requestMediaTypes": [
       "application/json"
      ],
      "bufferResponse": true,
      "generateProtocolMethod": true,
      "generateConvenienceMethod": true,
      "crossLanguageDefinitionId": "FirstTestTypeSpec.friendlyModel",
      "decorators": []
     },
     "parameters": [
      {
       "$id": "616",
       "name": "name",
       "nameInRequest": "name",
       "doc": "name of the NotFriend",
       "type": {
        "$id": "617",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "location": "Body",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Method",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "618",
       "name": "contentType",
       "nameInRequest": "contentType",
       "doc": "Body parameter's content type. Known values are application/json",
       "type": {
        "$ref": "154"
       },
       "location": "Header",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Constant",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "619",
       "name": "accept",
       "nameInRequest": "accept",
       "type": {
        "$ref": "156"
       },
       "location": "Header",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Constant",
       "decorators": [],
       "skipUrlEncoding": false
      }
     ],
     "response": {
      "$id": "620",
      "type": {
       "$ref": "308"
      }
     },
     "isOverride": false,
     "generateConvenient": true,
     "generateProtocol": true,
     "crossLanguageDefinitionId": "FirstTestTypeSpec.friendlyModel"
    },
    {
     "$id": "621",
     "kind": "basic",
     "name": "addTimeHeader",
     "accessibility": "public",
     "apiVersions": [
      "2022-05-15-preview"
     ],
     "operation": {
      "$id": "622",
      "name": "addTimeHeader",
      "resourceName": "FirstTestTypeSpec",
      "accessibility": "public",
      "parameters": [
       {
        "$id": "623",
        "name": "repeatabilityFirstSent",
        "nameInRequest": "Repeatability-First-Sent",
        "type": {
         "$id": "624",
         "kind": "utcDateTime",
         "name": "utcDateTime",
         "encode": "rfc7231",
         "wireType": {
          "$id": "625",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
         "decorators": []
        },
        "location": "Header",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": false,
        "kind": "Method",
        "decorators": [],
        "skipUrlEncoding": false
       }
      ],
      "responses": [
       {
        "$id": "626",
        "statusCodes": [
         204
        ],
        "headers": [],
        "isErrorResponse": false
       }
      ],
      "httpMethod": "GET",
      "uri": "{firstTestTypeSpecUrl}",
      "path": "/",
      "bufferResponse": true,
      "generateProtocolMethod": true,
      "generateConvenienceMethod": false,
      "crossLanguageDefinitionId": "FirstTestTypeSpec.addTimeHeader",
      "decorators": []
     },
     "parameters": [
      {
       "$id": "627",
       "name": "repeatabilityFirstSent",
       "nameInRequest": "Repeatability-First-Sent",
       "type": {
        "$id": "628",
        "kind": "utcDateTime",
        "name": "utcDateTime",
        "encode": "rfc7231",
        "wireType": {
         "$id": "629",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
        "decorators": []
       },
       "location": "Header",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": false,
       "kind": "Method",
       "decorators": [],
       "skipUrlEncoding": false
      }
     ],
     "response": {
      "$id": "630"
     },
     "isOverride": false,
     "generateConvenient": false,
     "generateProtocol": true,
     "crossLanguageDefinitionId": "FirstTestTypeSpec.addTimeHeader"
    },
    {
     "$id": "631",
     "kind": "basic",
     "name": "stringFormat",
     "accessibility": "public",
     "apiVersions": [
      "2022-05-15-preview"
     ],
     "doc": "paramete has string format.",
     "operation": {
      "$id": "632",
      "name": "stringFormat",
      "resourceName": "FirstTestTypeSpec",
      "doc": "paramete has string format.",
      "accessibility": "public",
      "parameters": [
       {
        "$id": "633",
        "name": "subscriptionId",
        "nameInRequest": "subscriptionId",
        "type": {
         "$id": "634",
         "kind": "string",
         "name": "uuid",
         "crossLanguageDefinitionId": "Azure.Core.uuid",
         "baseType": {
          "$id": "635",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "decorators": []
        },
        "location": "Path",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Method",
        "decorators": [],
        "skipUrlEncoding": false
       },
       {
        "$id": "636",
        "name": "contentType",
        "nameInRequest": "Content-Type",
        "doc": "Body parameter's content type. Known values are application/json",
        "type": {
         "$ref": "158"
        },
        "location": "Header",
        "isApiVersion": false,
        "isContentType": true,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Constant",
        "decorators": [],
        "skipUrlEncoding": false
       },
       {
        "$id": "637",
        "name": "body",
        "nameInRequest": "body",
        "type": {
         "$ref": "313"
        },
        "location": "Body",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Method",
        "decorators": [],
        "skipUrlEncoding": false
       }
      ],
      "responses": [
       {
        "$id": "638",
        "statusCodes": [
         204
        ],
        "headers": [],
        "isErrorResponse": false
       }
      ],
      "httpMethod": "POST",
      "uri": "{firstTestTypeSpecUrl}",
      "path": "/stringFormat/{subscriptionId}",
      "requestMediaTypes": [
       "application/json"
      ],
      "bufferResponse": true,
      "generateProtocolMethod": true,
      "generateConvenienceMethod": true,
      "crossLanguageDefinitionId": "FirstTestTypeSpec.stringFormat",
      "decorators": []
     },
     "parameters": [
      {
       "$id": "639",
       "name": "subscriptionId",
       "nameInRequest": "subscriptionId",
       "type": {
        "$id": "640",
        "kind": "string",
        "name": "uuid",
        "crossLanguageDefinitionId": "Azure.Core.uuid",
        "baseType": {
         "$id": "641",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "decorators": []
       },
       "location": "Path",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Method",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "642",
       "name": "body",
       "nameInRequest": "body",
       "type": {
        "$ref": "313"
       },
       "location": "Body",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Method",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "643",
       "name": "contentType",
       "nameInRequest": "contentType",
       "doc": "Body parameter's content type. Known values are application/json",
       "type": {
        "$ref": "158"
       },
       "location": "Header",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Constant",
       "decorators": [],
       "skipUrlEncoding": false
      }
     ],
     "response": {
      "$id": "644"
     },
     "isOverride": false,
     "generateConvenient": true,
     "generateProtocol": true,
     "crossLanguageDefinitionId": "FirstTestTypeSpec.stringFormat"
    },
    {
     "$id": "645",
     "kind": "basic",
     "name": "projectedNameModel",
     "accessibility": "public",
     "apiVersions": [
      "2022-05-15-preview"
     ],
     "doc": "Model can have its projected name",
     "operation": {
      "$id": "646",
      "name": "projectedNameModel",
      "resourceName": "FirstTestTypeSpec",
      "doc": "Model can have its projected name",
      "accessibility": "public",
      "parameters": [
       {
        "$id": "647",
        "name": "contentType",
        "nameInRequest": "Content-Type",
        "doc": "Body parameter's content type. Known values are application/json",
        "type": {
         "$ref": "160"
        },
        "location": "Header",
        "isApiVersion": false,
        "isContentType": true,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Constant",
        "decorators": [],
        "skipUrlEncoding": false
       },
       {
        "$id": "648",
        "name": "accept",
        "nameInRequest": "Accept",
        "type": {
         "$ref": "162"
        },
        "location": "Header",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Constant",
        "decorators": [],
        "skipUrlEncoding": false
       },
       {
        "$id": "649",
        "name": "projectedModel",
        "nameInRequest": "projectedModel",
        "type": {
         "$ref": "323"
        },
        "location": "Body",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Spread",
        "decorators": [],
        "skipUrlEncoding": false
       }
      ],
      "responses": [
       {
        "$id": "650",
        "statusCodes": [
         200
        ],
        "bodyType": {
         "$ref": "323"
        },
        "headers": [],
        "isErrorResponse": false,
        "contentTypes": [
         "application/json"
        ]
       }
      ],
      "httpMethod": "POST",
      "uri": "{firstTestTypeSpecUrl}",
      "path": "/projectedName",
      "requestMediaTypes": [
       "application/json"
      ],
      "bufferResponse": true,
      "generateProtocolMethod": true,
      "generateConvenienceMethod": true,
      "crossLanguageDefinitionId": "FirstTestTypeSpec.projectedNameModel",
      "decorators": []
     },
     "parameters": [
      {
       "$id": "651",
       "name": "name",
       "nameInRequest": "name",
       "doc": "name of the ModelWithProjectedName",
       "type": {
        "$id": "652",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "location": "Body",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Method",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "653",
       "name": "contentType",
       "nameInRequest": "contentType",
       "doc": "Body parameter's content type. Known values are application/json",
       "type": {
        "$ref": "160"
       },
       "location": "Header",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Constant",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "654",
       "name": "accept",
       "nameInRequest": "accept",
       "type": {
        "$ref": "162"
       },
       "location": "Header",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Constant",
       "decorators": [],
       "skipUrlEncoding": false
      }
     ],
     "response": {
      "$id": "655",
      "type": {
       "$ref": "323"
      }
     },
     "isOverride": false,
     "generateConvenient": true,
     "generateProtocol": true,
     "crossLanguageDefinitionId": "FirstTestTypeSpec.projectedNameModel"
    },
    {
     "$id": "656",
     "kind": "basic",
     "name": "returnsAnonymousModel",
     "accessibility": "public",
     "apiVersions": [
      "2022-05-15-preview"
     ],
     "doc": "return anonymous model",
     "operation": {
      "$id": "657",
      "name": "returnsAnonymousModel",
      "resourceName": "FirstTestTypeSpec",
      "doc": "return anonymous model",
      "accessibility": "public",
      "parameters": [
       {
        "$id": "658",
        "name": "accept",
        "nameInRequest": "Accept",
        "type": {
         "$ref": "164"
        },
        "location": "Header",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Constant",
        "decorators": [],
        "skipUrlEncoding": false
       }
      ],
      "responses": [
       {
        "$id": "659",
        "statusCodes": [
         200
        ],
        "bodyType": {
         "$ref": "328"
        },
        "headers": [],
        "isErrorResponse": false,
        "contentTypes": [
         "application/json"
        ]
       }
      ],
      "httpMethod": "POST",
      "uri": "{firstTestTypeSpecUrl}",
      "path": "/retunsAnonymousModel",
      "bufferResponse": true,
      "generateProtocolMethod": true,
      "generateConvenienceMethod": true,
      "crossLanguageDefinitionId": "FirstTestTypeSpec.returnsAnonymousModel",
      "decorators": []
     },
     "parameters": [
      {
       "$id": "660",
       "name": "accept",
       "nameInRequest": "accept",
       "type": {
        "$ref": "164"
       },
       "location": "Header",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Constant",
       "decorators": [],
       "skipUrlEncoding": false
      }
     ],
     "response": {
      "$id": "661",
      "type": {
       "$ref": "328"
      }
     },
     "isOverride": false,
     "generateConvenient": true,
     "generateProtocol": true,
     "crossLanguageDefinitionId": "FirstTestTypeSpec.returnsAnonymousModel"
    },
    {
     "$id": "662",
     "kind": "paging",
     "name": "listWithOptionalBody",
     "accessibility": "public",
     "apiVersions": [
      "2022-05-15-preview"
     ],
     "doc": "List the metric values for a load test run.",
     "summary": "This is a list operation with an optional body.",
     "operation": {
      "$id": "663",
      "name": "listWithOptionalBody",
      "resourceName": "FirstTestTypeSpec",
      "summary": "This is a list operation with an optional body.",
      "doc": "List the metric values for a load test run.",
      "accessibility": "public",
      "parameters": [
       {
        "$id": "664",
        "name": "apiVersion",
        "nameInRequest": "api-version",
        "doc": "The API version to use for this operation.",
        "type": {
         "$id": "665",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "location": "Query",
        "isApiVersion": true,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Client",
        "defaultValue": {
         "$id": "666",
         "type": {
          "$id": "667",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string"
         },
         "value": "2022-05-15-preview"
        },
        "decorators": [],
        "skipUrlEncoding": false
       },
       {
        "$id": "668",
        "name": "contentType",
        "nameInRequest": "Content-Type",
        "doc": "Body parameter's content type. Known values are application/json",
        "type": {
         "$ref": "166"
        },
        "location": "Header",
        "isApiVersion": false,
        "isContentType": true,
        "isEndpoint": false,
        "explode": false,
        "isRequired": false,
        "kind": "Constant",
        "decorators": [],
        "skipUrlEncoding": false
       },
       {
        "$id": "669",
        "name": "accept",
        "nameInRequest": "Accept",
        "type": {
         "$ref": "168"
        },
        "location": "Header",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Constant",
        "decorators": [],
        "skipUrlEncoding": false
       },
       {
        "$id": "670",
        "name": "body",
        "nameInRequest": "body",
        "doc": "Metric dimension filter ",
        "type": {
         "$ref": "329"
        },
        "location": "Body",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": false,
        "kind": "Method",
        "decorators": [],
        "skipUrlEncoding": false
       }
      ],
      "responses": [
       {
        "$id": "671",
        "statusCodes": [
         200
        ],
        "bodyType": {
         "$ref": "495"
        },
        "headers": [],
        "isErrorResponse": false,
        "contentTypes": [
         "application/json"
        ]
       }
      ],
      "httpMethod": "POST",
      "uri": "{firstTestTypeSpecUrl}",
      "path": "/listWithOptionalBody",
      "requestMediaTypes": [
       "application/json"
      ],
      "bufferResponse": true,
      "generateProtocolMethod": true,
      "generateConvenienceMethod": true,
      "crossLanguageDefinitionId": "FirstTestTypeSpec.listWithOptionalBody",
      "decorators": []
     },
     "parameters": [
      {
       "$id": "672",
       "name": "body",
       "nameInRequest": "body",
       "doc": "Metric dimension filter ",
       "type": {
        "$ref": "329"
       },
       "location": "Body",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": false,
       "kind": "Method",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "673",
       "name": "contentType",
       "nameInRequest": "contentType",
       "doc": "Body parameter's content type. Known values are application/json",
       "type": {
        "$ref": "166"
       },
       "location": "Header",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": false,
       "kind": "Constant",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "674",
       "name": "accept",
       "nameInRequest": "accept",
       "type": {
        "$ref": "168"
       },
       "location": "Header",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Constant",
       "decorators": [],
       "skipUrlEncoding": false
      }
     ],
     "response": {
      "$id": "675",
      "type": {
       "$ref": "497"
      },
      "resultSegments": [
       "value"
      ]
     },
     "isOverride": false,
     "generateConvenient": true,
     "generateProtocol": true,
     "crossLanguageDefinitionId": "FirstTestTypeSpec.listWithOptionalBody",
     "pagingMetadata": {
      "$id": "676",
      "itemPropertySegments": [
       "value"
      ],
      "nextLink": {
       "$id": "677",
       "responseSegments": [
        "nextLink"
       ],
       "responseLocation": "Body"
      }
     }
    },
    {
     "$id": "678",
     "kind": "basic",
     "name": "headAsBoolean",
     "accessibility": "public",
     "apiVersions": [
      "2022-05-15-preview"
     ],
     "doc": "head as boolean.",
     "operation": {
      "$id": "679",
      "name": "headAsBoolean",
      "resourceName": "FirstTestTypeSpec",
      "doc": "head as boolean.",
      "accessibility": "public",
      "parameters": [
       {
        "$id": "680",
        "name": "id",
        "nameInRequest": "id",
        "type": {
         "$id": "681",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "location": "Path",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Method",
        "decorators": [],
        "skipUrlEncoding": false
       }
      ],
      "responses": [
       {
        "$id": "682",
        "statusCodes": [
         204
        ],
        "headers": [],
        "isErrorResponse": false
       }
      ],
      "httpMethod": "HEAD",
      "uri": "{firstTestTypeSpecUrl}",
      "path": "/headAsBoolean/{id}",
      "bufferResponse": true,
      "generateProtocolMethod": true,
      "generateConvenienceMethod": true,
      "crossLanguageDefinitionId": "FirstTestTypeSpec.headAsBoolean",
      "decorators": []
     },
     "parameters": [
      {
       "$id": "683",
       "name": "id",
       "nameInRequest": "id",
       "type": {
        "$id": "684",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "location": "Path",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Method",
       "decorators": [],
       "skipUrlEncoding": false
      }
     ],
     "response": {
      "$id": "685"
     },
     "isOverride": false,
     "generateConvenient": true,
     "generateProtocol": true,
     "crossLanguageDefinitionId": "FirstTestTypeSpec.headAsBoolean"
    },
    {
     "$id": "686",
     "kind": "basic",
     "name": "stringBody",
     "accessibility": "public",
     "apiVersions": [
      "2022-05-15-preview"
     ],
     "doc": "The body parameter type is string.",
     "operation": {
      "$id": "687",
      "name": "stringBody",
      "resourceName": "FirstTestTypeSpec",
      "doc": "The body parameter type is string.",
      "accessibility": "public",
      "parameters": [
       {
        "$id": "688",
        "name": "contentType",
        "nameInRequest": "Content-Type",
        "doc": "Body parameter's content type. Known values are text/plain",
        "type": {
         "$ref": "170"
        },
        "location": "Header",
        "isApiVersion": false,
        "isContentType": true,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Constant",
        "decorators": [],
        "skipUrlEncoding": false
       },
       {
        "$id": "689",
        "name": "body",
        "nameInRequest": "body",
        "type": {
         "$id": "690",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "location": "Body",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Method",
        "decorators": [],
        "skipUrlEncoding": false
       }
      ],
      "responses": [
       {
        "$id": "691",
        "statusCodes": [
         204
        ],
        "headers": [],
        "isErrorResponse": false
       }
      ],
      "httpMethod": "PUT",
      "uri": "{firstTestTypeSpecUrl}",
      "path": "/stringBody",
      "requestMediaTypes": [
       "text/plain"
      ],
      "bufferResponse": true,
      "generateProtocolMethod": true,
      "generateConvenienceMethod": true,
      "crossLanguageDefinitionId": "FirstTestTypeSpec.stringBody",
      "decorators": []
     },
     "parameters": [
      {
       "$id": "692",
       "name": "body",
       "nameInRequest": "body",
       "type": {
        "$id": "693",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "location": "Body",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Method",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "694",
       "name": "contentType",
       "nameInRequest": "contentType",
       "doc": "Body parameter's content type. Known values are text/plain",
       "type": {
        "$ref": "170"
       },
       "location": "Header",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Constant",
       "decorators": [],
       "skipUrlEncoding": false
      }
     ],
     "response": {
      "$id": "695"
     },
     "isOverride": false,
     "generateConvenient": true,
     "generateProtocol": true,
     "crossLanguageDefinitionId": "FirstTestTypeSpec.stringBody"
    },
    {
     "$id": "696",
     "kind": "basic",
     "name": "boolBody",
     "accessibility": "public",
     "apiVersions": [
      "2022-05-15-preview"
     ],
     "doc": "The body parameter type is bool.",
     "operation": {
      "$id": "697",
      "name": "boolBody",
      "resourceName": "FirstTestTypeSpec",
      "doc": "The body parameter type is bool.",
      "accessibility": "public",
      "parameters": [
       {
        "$id": "698",
        "name": "contentType",
        "nameInRequest": "Content-Type",
        "doc": "Body parameter's content type. Known values are text/plain",
        "type": {
         "$ref": "172"
        },
        "location": "Header",
        "isApiVersion": false,
        "isContentType": true,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Constant",
        "decorators": [],
        "skipUrlEncoding": false
       },
       {
        "$id": "699",
        "name": "body",
        "nameInRequest": "body",
        "type": {
         "$id": "700",
         "kind": "boolean",
         "name": "boolean",
         "crossLanguageDefinitionId": "TypeSpec.boolean",
         "decorators": []
        },
        "location": "Body",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Method",
        "decorators": [],
        "skipUrlEncoding": false
       }
      ],
      "responses": [
       {
        "$id": "701",
        "statusCodes": [
         204
        ],
        "headers": [],
        "isErrorResponse": false
       }
      ],
      "httpMethod": "PUT",
      "uri": "{firstTestTypeSpecUrl}",
      "path": "/boolBody",
      "requestMediaTypes": [
       "text/plain"
      ],
      "bufferResponse": true,
      "generateProtocolMethod": true,
      "generateConvenienceMethod": true,
      "crossLanguageDefinitionId": "FirstTestTypeSpec.boolBody",
      "decorators": []
     },
     "parameters": [
      {
       "$id": "702",
       "name": "body",
       "nameInRequest": "body",
       "type": {
        "$id": "703",
        "kind": "boolean",
        "name": "boolean",
        "crossLanguageDefinitionId": "TypeSpec.boolean",
        "decorators": []
       },
       "location": "Body",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Method",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "704",
       "name": "contentType",
       "nameInRequest": "contentType",
       "doc": "Body parameter's content type. Known values are text/plain",
       "type": {
        "$ref": "172"
       },
       "location": "Header",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Constant",
       "decorators": [],
       "skipUrlEncoding": false
      }
     ],
     "response": {
      "$id": "705"
     },
     "isOverride": false,
     "generateConvenient": true,
     "generateProtocol": true,
     "crossLanguageDefinitionId": "FirstTestTypeSpec.boolBody"
    },
    {
     "$id": "706",
     "kind": "basic",
     "name": "dateTimeBody",
     "accessibility": "public",
     "apiVersions": [
      "2022-05-15-preview"
     ],
     "doc": "The body parameter type is datetime.",
     "operation": {
      "$id": "707",
      "name": "dateTimeBody",
      "resourceName": "FirstTestTypeSpec",
      "doc": "The body parameter type is datetime.",
      "accessibility": "public",
      "parameters": [
       {
        "$id": "708",
        "name": "contentType",
        "nameInRequest": "Content-Type",
        "doc": "Body parameter's content type. Known values are text/plain",
        "type": {
         "$ref": "174"
        },
        "location": "Header",
        "isApiVersion": false,
        "isContentType": true,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Constant",
        "decorators": [],
        "skipUrlEncoding": false
       },
       {
        "$id": "709",
        "name": "body",
        "nameInRequest": "body",
        "type": {
         "$id": "710",
         "kind": "utcDateTime",
         "name": "utcDateTime",
         "encode": "rfc3339",
         "wireType": {
          "$id": "711",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
         "decorators": []
        },
        "location": "Body",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Method",
        "decorators": [],
        "skipUrlEncoding": false
       }
      ],
      "responses": [
       {
        "$id": "712",
        "statusCodes": [
         204
        ],
        "headers": [],
        "isErrorResponse": false
       }
      ],
      "httpMethod": "PUT",
      "uri": "{firstTestTypeSpecUrl}",
      "path": "/dateTimeBody",
      "requestMediaTypes": [
       "text/plain"
      ],
      "bufferResponse": true,
      "generateProtocolMethod": true,
      "generateConvenienceMethod": true,
      "crossLanguageDefinitionId": "FirstTestTypeSpec.dateTimeBody",
      "decorators": []
     },
     "parameters": [
      {
       "$id": "713",
       "name": "body",
       "nameInRequest": "body",
       "type": {
        "$id": "714",
        "kind": "utcDateTime",
        "name": "utcDateTime",
        "encode": "rfc3339",
        "wireType": {
         "$id": "715",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
        "decorators": []
       },
       "location": "Body",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Method",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "716",
       "name": "contentType",
       "nameInRequest": "contentType",
       "doc": "Body parameter's content type. Known values are text/plain",
       "type": {
        "$ref": "174"
       },
       "location": "Header",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Constant",
       "decorators": [],
       "skipUrlEncoding": false
      }
     ],
     "response": {
      "$id": "717"
     },
     "isOverride": false,
     "generateConvenient": true,
     "generateProtocol": true,
     "crossLanguageDefinitionId": "FirstTestTypeSpec.dateTimeBody"
    },
    {
     "$id": "718",
     "kind": "basic",
     "name": "returnString",
     "accessibility": "public",
     "apiVersions": [
      "2022-05-15-preview"
     ],
     "doc": "The return type is datetime.",
     "operation": {
      "$id": "719",
      "name": "returnString",
      "resourceName": "FirstTestTypeSpec",
      "doc": "The return type is datetime.",
      "accessibility": "public",
      "parameters": [
       {
        "$id": "720",
        "name": "accept",
        "nameInRequest": "Accept",
        "type": {
         "$ref": "176"
        },
        "location": "Header",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Constant",
        "decorators": [],
        "skipUrlEncoding": false
       }
      ],
      "responses": [
       {
        "$id": "721",
        "statusCodes": [
         200
        ],
        "bodyType": {
         "$id": "722",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "headers": [],
        "isErrorResponse": false,
        "contentTypes": [
         "text/plain"
        ]
       }
      ],
      "httpMethod": "PUT",
      "uri": "{firstTestTypeSpecUrl}",
      "path": "/returnString",
      "bufferResponse": true,
      "generateProtocolMethod": true,
      "generateConvenienceMethod": true,
      "crossLanguageDefinitionId": "FirstTestTypeSpec.returnString",
      "decorators": []
     },
     "parameters": [
      {
       "$id": "723",
       "name": "accept",
       "nameInRequest": "accept",
       "type": {
        "$ref": "176"
       },
       "location": "Header",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Constant",
       "decorators": [],
       "skipUrlEncoding": false
      }
     ],
     "response": {
      "$id": "724",
      "type": {
       "$ref": "722"
      }
     },
     "isOverride": false,
     "generateConvenient": true,
     "generateProtocol": true,
     "crossLanguageDefinitionId": "FirstTestTypeSpec.returnString"
    },
    {
     "$id": "725",
     "kind": "basic",
     "name": "returnUnknown",
     "accessibility": "public",
     "apiVersions": [
      "2022-05-15-preview"
     ],
     "operation": {
      "$id": "726",
      "name": "returnUnknown",
      "resourceName": "FirstTestTypeSpec",
      "accessibility": "public",
      "parameters": [
       {
        "$id": "727",
        "name": "accept",
        "nameInRequest": "Accept",
        "type": {
         "$ref": "178"
        },
        "location": "Header",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Constant",
        "decorators": [],
        "skipUrlEncoding": false
       }
      ],
      "responses": [
       {
        "$id": "728",
        "statusCodes": [
         200
        ],
        "bodyType": {
         "$id": "729",
         "kind": "unknown",
         "name": "unknown",
         "crossLanguageDefinitionId": "",
         "decorators": []
        },
        "headers": [],
        "isErrorResponse": false,
        "contentTypes": [
         "application/json"
        ]
       }
      ],
      "httpMethod": "PUT",
      "uri": "{firstTestTypeSpecUrl}",
      "path": "/returnUnknown",
      "bufferResponse": true,
      "generateProtocolMethod": true,
      "generateConvenienceMethod": true,
      "crossLanguageDefinitionId": "FirstTestTypeSpec.returnUnknown",
      "decorators": []
     },
     "parameters": [
      {
       "$id": "730",
       "name": "accept",
       "nameInRequest": "accept",
       "type": {
        "$ref": "178"
       },
       "location": "Header",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Constant",
       "decorators": [],
       "skipUrlEncoding": false
      }
     ],
     "response": {
      "$id": "731",
      "type": {
       "$ref": "729"
      }
     },
     "isOverride": false,
     "generateConvenient": true,
     "generateProtocol": true,
     "crossLanguageDefinitionId": "FirstTestTypeSpec.returnUnknown"
    },
    {
     "$id": "732",
     "kind": "basic",
     "name": "recursiveExtension",
     "accessibility": "public",
     "apiVersions": [
      "2022-05-15-preview"
     ],
     "doc": "test parent reference child",
     "operation": {
      "$id": "733",
      "name": "recursiveExtension",
      "resourceName": "FirstTestTypeSpec",
      "doc": "test parent reference child",
      "accessibility": "public",
      "parameters": [
       {
        "$id": "734",
        "name": "contentType",
        "nameInRequest": "Content-Type",
        "doc": "Body parameter's content type. Known values are application/json",
        "type": {
         "$ref": "180"
        },
        "location": "Header",
        "isApiVersion": false,
        "isContentType": true,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Constant",
        "decorators": [],
        "skipUrlEncoding": false
       },
       {
        "$id": "735",
        "name": "input",
        "nameInRequest": "input",
        "type": {
         "$ref": "334"
        },
        "location": "Body",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Method",
        "decorators": [],
        "skipUrlEncoding": false
       }
      ],
      "responses": [
       {
        "$id": "736",
        "statusCodes": [
         204
        ],
        "headers": [],
        "isErrorResponse": false
       }
      ],
      "httpMethod": "PUT",
      "uri": "{firstTestTypeSpecUrl}",
      "path": "/recursiveExtension",
      "requestMediaTypes": [
       "application/json"
      ],
      "bufferResponse": true,
      "generateProtocolMethod": true,
      "generateConvenienceMethod": true,
      "crossLanguageDefinitionId": "FirstTestTypeSpec.recursiveExtension",
      "decorators": []
     },
     "parameters": [
      {
       "$id": "737",
       "name": "input",
       "nameInRequest": "input",
       "type": {
        "$ref": "334"
       },
       "location": "Body",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Method",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "738",
       "name": "contentType",
       "nameInRequest": "contentType",
       "doc": "Body parameter's content type. Known values are application/json",
       "type": {
        "$ref": "180"
       },
       "location": "Header",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Constant",
       "decorators": [],
       "skipUrlEncoding": false
      }
     ],
     "response": {
      "$id": "739"
     },
     "isOverride": false,
     "generateConvenient": true,
     "generateProtocol": true,
     "crossLanguageDefinitionId": "FirstTestTypeSpec.recursiveExtension"
    },
    {
     "$id": "740",
     "kind": "basic",
     "name": "threeLevelRecursive",
     "accessibility": "public",
     "apiVersions": [
      "2022-05-15-preview"
     ],
     "doc": "test three level recursive extension",
     "operation": {
      "$id": "741",
      "name": "threeLevelRecursive",
      "resourceName": "FirstTestTypeSpec",
      "doc": "test three level recursive extension",
      "accessibility": "public",
      "parameters": [
       {
        "$id": "742",
        "name": "contentType",
        "nameInRequest": "Content-Type",
        "doc": "Body parameter's content type. Known values are application/json",
        "type": {
         "$ref": "182"
        },
        "location": "Header",
        "isApiVersion": false,
        "isContentType": true,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Constant",
        "decorators": [],
        "skipUrlEncoding": false
       },
       {
        "$id": "743",
        "name": "input",
        "nameInRequest": "input",
        "type": {
         "$ref": "344"
        },
        "location": "Body",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Method",
        "decorators": [],
        "skipUrlEncoding": false
       }
      ],
      "responses": [
       {
        "$id": "744",
        "statusCodes": [
         204
        ],
        "headers": [],
        "isErrorResponse": false
       }
      ],
      "httpMethod": "PUT",
      "uri": "{firstTestTypeSpecUrl}",
      "path": "/threeLevelRecursive",
      "requestMediaTypes": [
       "application/json"
      ],
      "bufferResponse": true,
      "generateProtocolMethod": true,
      "generateConvenienceMethod": true,
      "crossLanguageDefinitionId": "FirstTestTypeSpec.threeLevelRecursive",
      "decorators": []
     },
     "parameters": [
      {
       "$id": "745",
       "name": "input",
       "nameInRequest": "input",
       "type": {
        "$ref": "344"
       },
       "location": "Body",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Method",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "746",
       "name": "contentType",
       "nameInRequest": "contentType",
       "doc": "Body parameter's content type. Known values are application/json",
       "type": {
        "$ref": "182"
       },
       "location": "Header",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Constant",
       "decorators": [],
       "skipUrlEncoding": false
      }
     ],
     "response": {
      "$id": "747"
     },
     "isOverride": false,
     "generateConvenient": true,
     "generateProtocol": true,
     "crossLanguageDefinitionId": "FirstTestTypeSpec.threeLevelRecursive"
    },
    {
     "$id": "748",
     "kind": "basic",
     "name": "recursiveModels",
     "accessibility": "public",
     "apiVersions": [
      "2022-05-15-preview"
     ],
     "doc": "test child reference parent",
     "operation": {
      "$id": "749",
      "name": "recursiveModels",
      "resourceName": "FirstTestTypeSpec",
      "doc": "test child reference parent",
      "accessibility": "public",
      "parameters": [
       {
        "$id": "750",
        "name": "contentType",
        "nameInRequest": "Content-Type",
        "doc": "Body parameter's content type. Known values are application/json",
        "type": {
         "$ref": "184"
        },
        "location": "Header",
        "isApiVersion": false,
        "isContentType": true,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Constant",
        "decorators": [],
        "skipUrlEncoding": false
       },
       {
        "$id": "751",
        "name": "input",
        "nameInRequest": "input",
        "type": {
         "$ref": "359"
        },
        "location": "Body",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Method",
        "decorators": [],
        "skipUrlEncoding": false
       }
      ],
      "responses": [
       {
        "$id": "752",
        "statusCodes": [
         204
        ],
        "headers": [],
        "isErrorResponse": false
       }
      ],
      "httpMethod": "PUT",
      "uri": "{firstTestTypeSpecUrl}",
      "path": "/recursiveModels",
      "requestMediaTypes": [
       "application/json"
      ],
      "bufferResponse": true,
      "generateProtocolMethod": true,
      "generateConvenienceMethod": true,
      "crossLanguageDefinitionId": "FirstTestTypeSpec.recursiveModels",
      "decorators": []
     },
     "parameters": [
      {
       "$id": "753",
       "name": "input",
       "nameInRequest": "input",
       "type": {
        "$ref": "359"
       },
       "location": "Body",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Method",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "754",
       "name": "contentType",
       "nameInRequest": "contentType",
       "doc": "Body parameter's content type. Known values are application/json",
       "type": {
        "$ref": "184"
       },
       "location": "Header",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Constant",
       "decorators": [],
       "skipUrlEncoding": false
      }
     ],
     "response": {
      "$id": "755"
     },
     "isOverride": false,
     "generateConvenient": true,
     "generateProtocol": true,
     "crossLanguageDefinitionId": "FirstTestTypeSpec.recursiveModels"
    },
    {
     "$id": "756",
     "kind": "basic",
     "name": "ContainSelfModels",
     "accessibility": "public",
     "apiVersions": [
      "2022-05-15-preview"
     ],
     "doc": "test contain self models",
     "operation": {
      "$id": "757",
      "name": "ContainSelfModels",
      "resourceName": "FirstTestTypeSpec",
      "doc": "test contain self models",
      "accessibility": "public",
      "parameters": [
       {
        "$id": "758",
        "name": "contentType",
        "nameInRequest": "Content-Type",
        "doc": "Body parameter's content type. Known values are application/json",
        "type": {
         "$ref": "186"
        },
        "location": "Header",
        "isApiVersion": false,
        "isContentType": true,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Constant",
        "decorators": [],
        "skipUrlEncoding": false
       },
       {
        "$id": "759",
        "name": "input",
        "nameInRequest": "input",
        "type": {
         "$ref": "369"
        },
        "location": "Body",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Method",
        "decorators": [],
        "skipUrlEncoding": false
       }
      ],
      "responses": [
       {
        "$id": "760",
        "statusCodes": [
         204
        ],
        "headers": [],
        "isErrorResponse": false
       }
      ],
      "httpMethod": "PUT",
      "uri": "{firstTestTypeSpecUrl}",
      "path": "/containSelfModels",
      "requestMediaTypes": [
       "application/json"
      ],
      "bufferResponse": true,
      "generateProtocolMethod": true,
      "generateConvenienceMethod": true,
      "crossLanguageDefinitionId": "FirstTestTypeSpec.ContainSelfModels",
      "decorators": []
     },
     "parameters": [
      {
       "$id": "761",
       "name": "input",
       "nameInRequest": "input",
       "type": {
        "$ref": "369"
       },
       "location": "Body",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Method",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "762",
       "name": "contentType",
       "nameInRequest": "contentType",
       "doc": "Body parameter's content type. Known values are application/json",
       "type": {
        "$ref": "186"
       },
       "location": "Header",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Constant",
       "decorators": [],
       "skipUrlEncoding": false
      }
     ],
     "response": {
      "$id": "763"
     },
     "isOverride": false,
     "generateConvenient": true,
     "generateProtocol": true,
     "crossLanguageDefinitionId": "FirstTestTypeSpec.ContainSelfModels"
    },
    {
     "$id": "764",
     "kind": "basic",
     "name": "enumParameter",
     "accessibility": "public",
     "apiVersions": [
      "2022-05-15-preview"
     ],
     "doc": "test enum parameter.",
     "operation": {
      "$id": "765",
      "name": "enumParameter",
      "resourceName": "FirstTestTypeSpec",
      "doc": "test enum parameter.",
      "accessibility": "public",
      "parameters": [
       {
        "$id": "766",
        "name": "p1",
        "nameInRequest": "p1",
        "type": {
         "$ref": "2"
        },
        "location": "Path",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Method",
        "decorators": [],
        "skipUrlEncoding": false
       }
      ],
      "responses": [
       {
        "$id": "767",
        "statusCodes": [
         204
        ],
        "headers": [],
        "isErrorResponse": false
       }
      ],
      "httpMethod": "GET",
      "uri": "{firstTestTypeSpecUrl}",
      "path": "/enumParameter/{p1}",
      "bufferResponse": true,
      "generateProtocolMethod": true,
      "generateConvenienceMethod": true,
      "crossLanguageDefinitionId": "FirstTestTypeSpec.enumParameter",
      "decorators": []
     },
     "parameters": [
      {
       "$id": "768",
       "name": "p1",
       "nameInRequest": "p1",
       "type": {
        "$ref": "2"
       },
       "location": "Path",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Method",
       "decorators": [],
       "skipUrlEncoding": false
      }
     ],
     "response": {
      "$id": "769"
     },
     "isOverride": false,
     "generateConvenient": true,
     "generateProtocol": true,
     "crossLanguageDefinitionId": "FirstTestTypeSpec.enumParameter"
    },
    {
     "$id": "770",
     "kind": "basic",
     "name": "bodyIsModelWithProjectedEnum",
     "accessibility": "public",
     "apiVersions": [
      "2022-05-15-preview"
     ],
     "doc": "test enum parameter.",
     "operation": {
      "$id": "771",
      "name": "bodyIsModelWithProjectedEnum",
      "resourceName": "FirstTestTypeSpec",
      "doc": "test enum parameter.",
      "accessibility": "public",
      "parameters": [
       {
        "$id": "772",
        "name": "contentType",
        "nameInRequest": "Content-Type",
        "doc": "Body parameter's content type. Known values are application/json",
        "type": {
         "$ref": "188"
        },
        "location": "Header",
        "isApiVersion": false,
        "isContentType": true,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Constant",
        "decorators": [],
        "skipUrlEncoding": false
       },
       {
        "$id": "773",
        "name": "body",
        "nameInRequest": "body",
        "type": {
         "$ref": "373"
        },
        "location": "Body",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Method",
        "decorators": [],
        "skipUrlEncoding": false
       }
      ],
      "responses": [
       {
        "$id": "774",
        "statusCodes": [
         204
        ],
        "headers": [],
        "isErrorResponse": false
       }
      ],
      "httpMethod": "PUT",
      "uri": "{firstTestTypeSpecUrl}",
      "path": "/bodyIsModelWithProjectedEnum",
      "requestMediaTypes": [
       "application/json"
      ],
      "bufferResponse": true,
      "generateProtocolMethod": true,
      "generateConvenienceMethod": true,
      "crossLanguageDefinitionId": "FirstTestTypeSpec.bodyIsModelWithProjectedEnum",
      "decorators": []
     },
     "parameters": [
      {
       "$id": "775",
       "name": "body",
       "nameInRequest": "body",
       "type": {
        "$ref": "373"
       },
       "location": "Body",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Method",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "776",
       "name": "contentType",
       "nameInRequest": "contentType",
       "doc": "Body parameter's content type. Known values are application/json",
       "type": {
        "$ref": "188"
       },
       "location": "Header",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Constant",
       "decorators": [],
       "skipUrlEncoding": false
      }
     ],
     "response": {
      "$id": "777"
     },
     "isOverride": false,
     "generateConvenient": true,
     "generateProtocol": true,
     "crossLanguageDefinitionId": "FirstTestTypeSpec.bodyIsModelWithProjectedEnum"
    },
    {
     "$id": "778",
     "kind": "basic",
     "name": "optionalDictionary",
     "accessibility": "public",
     "apiVersions": [
      "2022-05-15-preview"
     ],
     "doc": "test optional dictionary.",
     "operation": {
      "$id": "779",
      "name": "optionalDictionary",
      "resourceName": "FirstTestTypeSpec",
      "doc": "test optional dictionary.",
      "accessibility": "public",
      "parameters": [
       {
        "$id": "780",
        "name": "contentType",
        "nameInRequest": "Content-Type",
        "doc": "Body parameter's content type. Known values are application/json",
        "type": {
         "$ref": "190"
        },
        "location": "Header",
        "isApiVersion": false,
        "isContentType": true,
        "isEndpoint": false,
        "explode": false,
        "isRequired": false,
        "kind": "Constant",
        "decorators": [],
        "skipUrlEncoding": false
       },
       {
        "$id": "781",
        "name": "body",
        "nameInRequest": "body",
        "type": {
         "$id": "782",
         "kind": "dict",
         "keyType": {
          "$id": "783",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "valueType": {
          "$id": "784",
          "kind": "int32",
          "name": "int32",
          "crossLanguageDefinitionId": "TypeSpec.int32",
          "decorators": []
         },
         "decorators": []
        },
        "location": "Body",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": false,
        "kind": "Method",
        "decorators": [],
        "skipUrlEncoding": false
       }
      ],
      "responses": [
       {
        "$id": "785",
        "statusCodes": [
         204
        ],
        "headers": [],
        "isErrorResponse": false
       }
      ],
      "httpMethod": "PUT",
      "uri": "{firstTestTypeSpecUrl}",
      "path": "/optionalDictionary",
      "requestMediaTypes": [
       "application/json"
      ],
      "bufferResponse": true,
      "generateProtocolMethod": true,
      "generateConvenienceMethod": true,
      "crossLanguageDefinitionId": "FirstTestTypeSpec.optionalDictionary",
      "decorators": []
     },
     "parameters": [
      {
       "$id": "786",
       "name": "body",
       "nameInRequest": "body",
       "type": {
        "$ref": "782"
       },
       "location": "Body",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": false,
       "kind": "Method",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "787",
       "name": "contentType",
       "nameInRequest": "contentType",
       "doc": "Body parameter's content type. Known values are application/json",
       "type": {
        "$ref": "190"
       },
       "location": "Header",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": false,
       "kind": "Constant",
       "decorators": [],
       "skipUrlEncoding": false
      }
     ],
     "response": {
      "$id": "788"
     },
     "isOverride": false,
     "generateConvenient": true,
     "generateProtocol": true,
     "crossLanguageDefinitionId": "FirstTestTypeSpec.optionalDictionary"
    },
    {
     "$id": "789",
     "kind": "basic",
     "name": "azureLocationOp",
     "accessibility": "public",
     "apiVersions": [
      "2022-05-15-preview"
     ],
     "doc": "test optional dictionary.",
     "operation": {
      "$id": "790",
      "name": "azureLocationOp",
      "resourceName": "FirstTestTypeSpec",
      "doc": "test optional dictionary.",
      "accessibility": "public",
      "parameters": [
       {
        "$id": "791",
        "name": "location",
        "nameInRequest": "location",
        "type": {
         "$id": "792",
         "kind": "string",
         "name": "azureLocation",
         "crossLanguageDefinitionId": "Azure.Core.azureLocation",
         "baseType": {
          "$id": "793",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "decorators": []
        },
        "location": "Query",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Method",
        "decorators": [],
        "skipUrlEncoding": false
       },
       {
        "$id": "794",
        "name": "regenLocation",
        "nameInRequest": "regen-location",
        "type": {
         "$id": "795",
         "kind": "string",
         "name": "azureLocation",
         "crossLanguageDefinitionId": "Azure.Core.azureLocation",
         "baseType": {
          "$id": "796",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "decorators": []
        },
        "location": "Header",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Method",
        "decorators": [],
        "skipUrlEncoding": false
       },
       {
        "$id": "797",
        "name": "contentType",
        "nameInRequest": "Content-Type",
        "doc": "Body parameter's content type. Known values are application/json",
        "type": {
         "$ref": "192"
        },
        "location": "Header",
        "isApiVersion": false,
        "isContentType": true,
        "isEndpoint": false,
        "explode": false,
        "isRequired": false,
        "kind": "Constant",
        "decorators": [],
        "skipUrlEncoding": false
       },
       {
        "$id": "798",
        "name": "body",
        "nameInRequest": "body",
        "type": {
         "$ref": "377"
        },
        "location": "Body",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": false,
        "kind": "Method",
        "decorators": [],
        "skipUrlEncoding": false
       }
      ],
      "responses": [
       {
        "$id": "799",
        "statusCodes": [
         204
        ],
        "headers": [],
        "isErrorResponse": false
       }
      ],
      "httpMethod": "PUT",
      "uri": "{firstTestTypeSpecUrl}",
      "path": "/azureLocation",
      "requestMediaTypes": [
       "application/json"
      ],
      "bufferResponse": true,
      "generateProtocolMethod": true,
      "generateConvenienceMethod": true,
      "crossLanguageDefinitionId": "FirstTestTypeSpec.azureLocationOp",
      "decorators": []
     },
     "parameters": [
      {
       "$id": "800",
       "name": "location",
       "nameInRequest": "location",
       "type": {
        "$id": "801",
        "kind": "string",
        "name": "azureLocation",
        "crossLanguageDefinitionId": "Azure.Core.azureLocation",
        "baseType": {
         "$id": "802",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "decorators": []
       },
       "location": "Query",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Method",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "803",
       "name": "regenLocation",
       "nameInRequest": "regen-location",
       "type": {
        "$id": "804",
        "kind": "string",
        "name": "azureLocation",
        "crossLanguageDefinitionId": "Azure.Core.azureLocation",
        "baseType": {
         "$id": "805",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "decorators": []
       },
       "location": "Header",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Method",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "806",
       "name": "body",
       "nameInRequest": "body",
       "type": {
        "$ref": "377"
       },
       "location": "Body",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": false,
       "kind": "Method",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "807",
       "name": "contentType",
       "nameInRequest": "contentType",
       "doc": "Body parameter's content type. Known values are application/json",
       "type": {
        "$ref": "192"
       },
       "location": "Header",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": false,
       "kind": "Constant",
       "decorators": [],
       "skipUrlEncoding": false
      }
     ],
     "response": {
      "$id": "808"
     },
     "isOverride": false,
     "generateConvenient": true,
     "generateProtocol": true,
     "crossLanguageDefinitionId": "FirstTestTypeSpec.azureLocationOp"
    }
   ],
   "parameters": [
    {
     "$id": "809",
     "name": "firstTestTypeSpecUrl",
     "nameInRequest": "firstTestTypeSpecUrl",
     "type": {
      "$id": "810",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "location": "Uri",
     "isApiVersion": false,
     "isContentType": false,
     "isRequired": true,
     "isEndpoint": true,
     "skipUrlEncoding": false,
     "explode": false,
     "kind": "Client",
     "serverUrlTemplate": "{firstTestTypeSpecUrl}"
    }
   ],
   "decorators": [
    {
     "$id": "811",
     "name": "TypeSpec.@service",
     "arguments": {
      "$id": "812",
      "options": {
       "$id": "813",
       "title": "hello world"
      }
     }
    }
   ],
   "crossLanguageDefinitionId": "FirstTestTypeSpec",
   "apiVersions": [
    "2022-05-15-preview"
   ],
   "children": [
    {
     "$id": "814",
     "kind": "client",
     "name": "Hello",
     "namespace": "FirstTestTypeSpec.Hello",
     "methods": [],
     "parameters": [
      {
       "$id": "815",
       "name": "firstTestTypeSpecUrl",
       "nameInRequest": "firstTestTypeSpecUrl",
       "type": {
        "$id": "816",
        "kind": "url",
        "name": "url",
        "crossLanguageDefinitionId": "TypeSpec.url"
       },
       "location": "Uri",
       "isApiVersion": false,
       "isContentType": false,
       "isRequired": true,
       "isEndpoint": true,
       "skipUrlEncoding": false,
       "explode": false,
       "kind": "Client",
       "serverUrlTemplate": "{firstTestTypeSpecUrl}"
      }
     ],
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Hello",
     "apiVersions": [
      "2022-05-15-preview"
     ],
     "parent": {
      "$ref": "550"
     },
     "children": [
      {
       "$id": "817",
       "kind": "client",
       "name": "Demo",
       "namespace": "FirstTestTypeSpec.Hello.Demo",
       "doc": "Hello world service",
       "methods": [
        {
         "$id": "818",
         "kind": "basic",
         "name": "sayHi",
         "accessibility": "public",
         "apiVersions": [
          "2022-05-15-preview"
         ],
         "doc": "Return hi",
         "operation": {
          "$id": "819",
          "name": "sayHi",
          "resourceName": "Demo",
          "doc": "Return hi",
          "accessibility": "public",
          "parameters": [
           {
            "$id": "820",
            "name": "headParameter",
            "nameInRequest": "head-parameter",
            "type": {
             "$id": "821",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "location": "Header",
            "isApiVersion": false,
            "isContentType": false,
            "isEndpoint": false,
            "explode": false,
            "isRequired": true,
            "kind": "Method",
            "decorators": [],
            "skipUrlEncoding": false
           },
           {
            "$id": "822",
            "name": "queryParameter",
            "nameInRequest": "queryParameter",
            "type": {
             "$id": "823",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "location": "Query",
            "isApiVersion": false,
            "isContentType": false,
            "isEndpoint": false,
            "explode": false,
            "isRequired": true,
            "kind": "Method",
            "decorators": [],
            "skipUrlEncoding": false
           },
           {
            "$id": "824",
            "name": "optionalQuery",
            "nameInRequest": "optionalQuery",
            "type": {
             "$id": "825",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "location": "Query",
            "isApiVersion": false,
            "isContentType": false,
            "isEndpoint": false,
            "explode": false,
            "isRequired": false,
            "kind": "Method",
            "decorators": [],
            "skipUrlEncoding": false
           },
           {
            "$id": "826",
            "name": "accept",
            "nameInRequest": "Accept",
            "type": {
             "$ref": "194"
            },
            "location": "Header",
            "isApiVersion": false,
            "isContentType": false,
            "isEndpoint": false,
            "explode": false,
            "isRequired": true,
            "kind": "Constant",
            "decorators": [],
            "skipUrlEncoding": false
           }
          ],
          "responses": [
           {
            "$id": "827",
            "statusCodes": [
             200
            ],
            "bodyType": {
             "$ref": "244"
            },
            "headers": [],
            "isErrorResponse": false,
            "contentTypes": [
             "application/json"
            ]
           }
          ],
          "httpMethod": "GET",
          "uri": "{firstTestTypeSpecUrl}",
          "path": "/hello",
          "bufferResponse": true,
          "generateProtocolMethod": true,
          "generateConvenienceMethod": false,
          "crossLanguageDefinitionId": "FirstTestTypeSpec.Hello.Demo.sayHi",
          "decorators": []
         },
         "parameters": [
          {
           "$id": "828",
           "name": "headParameter",
           "nameInRequest": "head-parameter",
           "type": {
            "$id": "829",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           },
           "location": "Header",
           "isApiVersion": false,
           "isContentType": false,
           "isEndpoint": false,
           "explode": false,
           "isRequired": true,
           "kind": "Method",
           "decorators": [],
           "skipUrlEncoding": false
          },
          {
           "$id": "830",
           "name": "queryParameter",
           "nameInRequest": "queryParameter",
           "type": {
            "$id": "831",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           },
           "location": "Query",
           "isApiVersion": false,
           "isContentType": false,
           "isEndpoint": false,
           "explode": false,
           "isRequired": true,
           "kind": "Method",
           "decorators": [],
           "skipUrlEncoding": false
          },
          {
           "$id": "832",
           "name": "optionalQuery",
           "nameInRequest": "optionalQuery",
           "type": {
            "$id": "833",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           },
           "location": "Query",
           "isApiVersion": false,
           "isContentType": false,
           "isEndpoint": false,
           "explode": false,
           "isRequired": false,
           "kind": "Method",
           "decorators": [],
           "skipUrlEncoding": false
          },
          {
           "$id": "834",
           "name": "accept",
           "nameInRequest": "accept",
           "type": {
            "$ref": "194"
           },
           "location": "Header",
           "isApiVersion": false,
           "isContentType": false,
           "isEndpoint": false,
           "explode": false,
           "isRequired": true,
           "kind": "Constant",
           "decorators": [],
           "skipUrlEncoding": false
          }
         ],
         "response": {
          "$id": "835",
          "type": {
           "$ref": "244"
          }
         },
         "isOverride": false,
         "generateConvenient": false,
         "generateProtocol": true,
         "crossLanguageDefinitionId": "FirstTestTypeSpec.Hello.Demo.sayHi"
        }
       ],
       "parameters": [
        {
         "$id": "836",
         "name": "firstTestTypeSpecUrl",
         "nameInRequest": "firstTestTypeSpecUrl",
         "type": {
          "$id": "837",
          "kind": "url",
          "name": "url",
          "crossLanguageDefinitionId": "TypeSpec.url"
         },
         "location": "Uri",
         "isApiVersion": false,
         "isContentType": false,
         "isRequired": true,
         "isEndpoint": true,
         "skipUrlEncoding": false,
         "explode": false,
         "kind": "Client",
         "serverUrlTemplate": "{firstTestTypeSpecUrl}"
        }
       ],
       "decorators": [],
       "crossLanguageDefinitionId": "FirstTestTypeSpec.Hello.Demo",
       "apiVersions": [
        "2022-05-15-preview"
       ],
       "parent": {
        "$ref": "814"
       }
      },
      {
       "$id": "838",
       "kind": "client",
       "name": "Demo2",
       "namespace": "FirstTestTypeSpec.Hello.Demo2",
       "methods": [
        {
         "$id": "839",
         "kind": "basic",
         "name": "helloAgain",
         "accessibility": "public",
         "apiVersions": [
          "2022-05-15-preview"
         ],
         "doc": "Return hi again",
         "operation": {
          "$id": "840",
          "name": "helloAgain",
          "resourceName": "Demo2",
          "doc": "Return hi again",
          "accessibility": "public",
          "parameters": [
           {
            "$id": "841",
            "name": "p1",
            "nameInRequest": "p1",
            "type": {
             "$id": "842",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "location": "Header",
            "isApiVersion": false,
            "isContentType": false,
            "isEndpoint": false,
            "explode": false,
            "isRequired": true,
            "kind": "Method",
            "decorators": [],
            "skipUrlEncoding": false
           },
           {
            "$id": "843",
            "name": "contentType",
            "nameInRequest": "Content-Type",
            "type": {
             "$ref": "196"
            },
            "location": "Header",
            "isApiVersion": false,
            "isContentType": true,
            "isEndpoint": false,
            "explode": false,
            "isRequired": true,
            "kind": "Constant",
            "decorators": [],
            "skipUrlEncoding": false
           },
           {
            "$id": "844",
            "name": "p2",
            "nameInRequest": "p2",
            "type": {
             "$id": "845",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "location": "Path",
            "isApiVersion": false,
            "isContentType": false,
            "isEndpoint": false,
            "explode": false,
            "isRequired": true,
            "kind": "Method",
            "decorators": [],
            "skipUrlEncoding": false
           },
           {
            "$id": "846",
            "name": "accept",
            "nameInRequest": "Accept",
            "type": {
             "$ref": "198"
            },
            "location": "Header",
            "isApiVersion": false,
            "isContentType": false,
            "isEndpoint": false,
            "explode": false,
            "isRequired": true,
            "kind": "Constant",
            "decorators": [],
            "skipUrlEncoding": false
           },
           {
            "$id": "847",
            "name": "action",
            "nameInRequest": "action",
            "type": {
             "$ref": "383"
            },
            "location": "Body",
            "isApiVersion": false,
            "isContentType": false,
            "isEndpoint": false,
            "explode": false,
            "isRequired": true,
            "kind": "Method",
            "decorators": [],
            "skipUrlEncoding": false
           }
          ],
          "responses": [
           {
            "$id": "848",
            "statusCodes": [
             200
            ],
            "bodyType": {
             "$ref": "383"
            },
            "headers": [],
            "isErrorResponse": false,
            "contentTypes": [
             "application/json"
            ]
           }
          ],
          "httpMethod": "GET",
          "uri": "{firstTestTypeSpecUrl}",
          "path": "/againHi/{p2}",
          "requestMediaTypes": [
           "text/plain"
          ],
          "bufferResponse": true,
          "generateProtocolMethod": true,
          "generateConvenienceMethod": true,
          "crossLanguageDefinitionId": "FirstTestTypeSpec.Hello.Demo2.helloAgain",
          "decorators": []
         },
         "parameters": [
          {
           "$id": "849",
           "name": "p1",
           "nameInRequest": "p1",
           "type": {
            "$id": "850",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           },
           "location": "Header",
           "isApiVersion": false,
           "isContentType": false,
           "isEndpoint": false,
           "explode": false,
           "isRequired": true,
           "kind": "Method",
           "decorators": [],
           "skipUrlEncoding": false
          },
          {
           "$id": "851",
           "name": "action",
           "nameInRequest": "action",
           "type": {
            "$ref": "383"
           },
           "location": "Body",
           "isApiVersion": false,
           "isContentType": false,
           "isEndpoint": false,
           "explode": false,
           "isRequired": true,
           "kind": "Method",
           "decorators": [],
           "skipUrlEncoding": false
          },
          {
           "$id": "852",
           "name": "contentType",
           "nameInRequest": "content-type",
           "type": {
            "$ref": "200"
           },
           "location": "Header",
           "isApiVersion": false,
           "isContentType": false,
           "isEndpoint": false,
           "explode": false,
           "isRequired": true,
           "kind": "Constant",
           "decorators": [],
           "skipUrlEncoding": false
          },
          {
           "$id": "853",
           "name": "p2",
           "nameInRequest": "p2",
           "type": {
            "$id": "854",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           },
           "location": "Path",
           "isApiVersion": false,
           "isContentType": false,
           "isEndpoint": false,
           "explode": false,
           "isRequired": true,
           "kind": "Method",
           "decorators": [],
           "skipUrlEncoding": false
          },
          {
           "$id": "855",
           "name": "accept",
           "nameInRequest": "accept",
           "type": {
            "$ref": "198"
           },
           "location": "Header",
           "isApiVersion": false,
           "isContentType": false,
           "isEndpoint": false,
           "explode": false,
           "isRequired": true,
           "kind": "Constant",
           "decorators": [],
           "skipUrlEncoding": false
          }
         ],
         "response": {
          "$id": "856",
          "type": {
           "$ref": "383"
          }
         },
         "isOverride": false,
         "generateConvenient": true,
         "generateProtocol": true,
         "crossLanguageDefinitionId": "FirstTestTypeSpec.Hello.Demo2.helloAgain"
        },
        {
         "$id": "857",
         "kind": "basic",
         "name": "noContentType",
         "accessibility": "public",
         "apiVersions": [
          "2022-05-15-preview"
         ],
         "doc": "Return hi again",
         "operation": {
          "$id": "858",
          "name": "noContentType",
          "resourceName": "Demo2",
          "doc": "Return hi again",
          "accessibility": "public",
          "parameters": [
           {
            "$id": "859",
            "name": "p1",
            "nameInRequest": "p1",
            "type": {
             "$id": "860",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "location": "Header",
            "isApiVersion": false,
            "isContentType": false,
            "isEndpoint": false,
            "explode": false,
            "isRequired": true,
            "kind": "Method",
            "decorators": [],
            "skipUrlEncoding": false
           },
           {
            "$id": "861",
            "name": "p2",
            "nameInRequest": "p2",
            "type": {
             "$id": "862",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "location": "Path",
            "isApiVersion": false,
            "isContentType": false,
            "isEndpoint": false,
            "explode": false,
            "isRequired": true,
            "kind": "Method",
            "decorators": [],
            "skipUrlEncoding": false
           },
           {
            "$id": "863",
            "name": "contentType",
            "nameInRequest": "Content-Type",
            "doc": "Body parameter's content type. Known values are application/json",
            "type": {
             "$ref": "202"
            },
            "location": "Header",
            "isApiVersion": false,
            "isContentType": true,
            "isEndpoint": false,
            "explode": false,
            "isRequired": true,
            "kind": "Constant",
            "decorators": [],
            "skipUrlEncoding": false
           },
           {
            "$id": "864",
            "name": "accept",
            "nameInRequest": "Accept",
            "type": {
             "$ref": "204"
            },
            "location": "Header",
            "isApiVersion": false,
            "isContentType": false,
            "isEndpoint": false,
            "explode": false,
            "isRequired": true,
            "kind": "Constant",
            "decorators": [],
            "skipUrlEncoding": false
           },
           {
            "$id": "865",
            "name": "action",
            "nameInRequest": "action",
            "type": {
             "$ref": "383"
            },
            "location": "Body",
            "isApiVersion": false,
            "isContentType": false,
            "isEndpoint": false,
            "explode": false,
            "isRequired": true,
            "kind": "Method",
            "decorators": [],
            "skipUrlEncoding": false
           }
          ],
          "responses": [
           {
            "$id": "866",
            "statusCodes": [
             200
            ],
            "bodyType": {
             "$ref": "383"
            },
            "headers": [],
            "isErrorResponse": false,
            "contentTypes": [
             "application/json"
            ]
           }
          ],
          "httpMethod": "GET",
          "uri": "{firstTestTypeSpecUrl}",
          "path": "/noContentType/{p2}",
          "requestMediaTypes": [
           "application/json"
          ],
          "bufferResponse": true,
          "generateProtocolMethod": true,
          "generateConvenienceMethod": false,
          "crossLanguageDefinitionId": "FirstTestTypeSpec.Hello.Demo2.noContentType",
          "decorators": []
         },
         "parameters": [
          {
           "$id": "867",
           "name": "p1",
           "nameInRequest": "p1",
           "type": {
            "$id": "868",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           },
           "location": "Header",
           "isApiVersion": false,
           "isContentType": false,
           "isEndpoint": false,
           "explode": false,
           "isRequired": true,
           "kind": "Method",
           "decorators": [],
           "skipUrlEncoding": false
          },
          {
           "$id": "869",
           "name": "action",
           "nameInRequest": "action",
           "type": {
            "$ref": "383"
           },
           "location": "Body",
           "isApiVersion": false,
           "isContentType": false,
           "isEndpoint": false,
           "explode": false,
           "isRequired": true,
           "kind": "Method",
           "decorators": [],
           "skipUrlEncoding": false
          },
          {
           "$id": "870",
           "name": "p2",
           "nameInRequest": "p2",
           "type": {
            "$id": "871",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           },
           "location": "Path",
           "isApiVersion": false,
           "isContentType": false,
           "isEndpoint": false,
           "explode": false,
           "isRequired": true,
           "kind": "Method",
           "decorators": [],
           "skipUrlEncoding": false
          },
          {
           "$id": "872",
           "name": "contentType",
           "nameInRequest": "contentType",
           "doc": "Body parameter's content type. Known values are application/json",
           "type": {
            "$ref": "202"
           },
           "location": "Header",
           "isApiVersion": false,
           "isContentType": false,
           "isEndpoint": false,
           "explode": false,
           "isRequired": true,
           "kind": "Constant",
           "decorators": [],
           "skipUrlEncoding": false
          },
          {
           "$id": "873",
           "name": "accept",
           "nameInRequest": "accept",
           "type": {
            "$ref": "204"
           },
           "location": "Header",
           "isApiVersion": false,
           "isContentType": false,
           "isEndpoint": false,
           "explode": false,
           "isRequired": true,
           "kind": "Constant",
           "decorators": [],
           "skipUrlEncoding": false
          }
         ],
         "response": {
          "$id": "874",
          "type": {
           "$ref": "383"
          }
         },
         "isOverride": false,
         "generateConvenient": false,
         "generateProtocol": true,
         "crossLanguageDefinitionId": "FirstTestTypeSpec.Hello.Demo2.noContentType"
        },
        {
         "$id": "875",
         "kind": "basic",
         "name": "helloDemoAgain",
         "accessibility": "public",
         "apiVersions": [
          "2022-05-15-preview"
         ],
         "doc": "Return hi in demo2",
         "operation": {
          "$id": "876",
          "name": "helloDemoAgain",
          "resourceName": "Demo2",
          "doc": "Return hi in demo2",
          "accessibility": "public",
          "parameters": [
           {
            "$id": "877",
            "name": "accept",
            "nameInRequest": "Accept",
            "type": {
             "$ref": "206"
            },
            "location": "Header",
            "isApiVersion": false,
            "isContentType": false,
            "isEndpoint": false,
            "explode": false,
            "isRequired": true,
            "kind": "Constant",
            "decorators": [],
            "skipUrlEncoding": false
           }
          ],
          "responses": [
           {
            "$id": "878",
            "statusCodes": [
             200
            ],
            "bodyType": {
             "$ref": "244"
            },
            "headers": [],
            "isErrorResponse": false,
            "contentTypes": [
             "application/json"
            ]
           }
          ],
          "httpMethod": "GET",
          "uri": "{firstTestTypeSpecUrl}",
          "path": "/demoHi",
          "bufferResponse": true,
          "generateProtocolMethod": true,
          "generateConvenienceMethod": true,
          "crossLanguageDefinitionId": "FirstTestTypeSpec.Hello.Demo2.helloDemoAgain",
          "decorators": []
         },
         "parameters": [
          {
           "$id": "879",
           "name": "accept",
           "nameInRequest": "accept",
           "type": {
            "$ref": "206"
           },
           "location": "Header",
           "isApiVersion": false,
           "isContentType": false,
           "isEndpoint": false,
           "explode": false,
           "isRequired": true,
           "kind": "Constant",
           "decorators": [],
           "skipUrlEncoding": false
          }
         ],
         "response": {
          "$id": "880",
          "type": {
           "$ref": "244"
          }
         },
         "isOverride": false,
         "generateConvenient": true,
         "generateProtocol": true,
         "crossLanguageDefinitionId": "FirstTestTypeSpec.Hello.Demo2.helloDemoAgain"
        },
        {
         "$id": "881",
         "kind": "basic",
         "name": "createLiteral",
         "accessibility": "public",
         "apiVersions": [
          "2022-05-15-preview"
         ],
         "doc": "Create with literal value",
         "operation": {
          "$id": "882",
          "name": "createLiteral",
          "resourceName": "Demo2",
          "doc": "Create with literal value",
          "accessibility": "public",
          "parameters": [
           {
            "$id": "883",
            "name": "contentType",
            "nameInRequest": "Content-Type",
            "doc": "Body parameter's content type. Known values are application/json",
            "type": {
             "$ref": "208"
            },
            "location": "Header",
            "isApiVersion": false,
            "isContentType": true,
            "isEndpoint": false,
            "explode": false,
            "isRequired": true,
            "kind": "Constant",
            "decorators": [],
            "skipUrlEncoding": false
           },
           {
            "$id": "884",
            "name": "accept",
            "nameInRequest": "Accept",
            "type": {
             "$ref": "210"
            },
            "location": "Header",
            "isApiVersion": false,
            "isContentType": false,
            "isEndpoint": false,
            "explode": false,
            "isRequired": true,
            "kind": "Constant",
            "decorators": [],
            "skipUrlEncoding": false
           },
           {
            "$id": "885",
            "name": "body",
            "nameInRequest": "body",
            "type": {
             "$ref": "244"
            },
            "location": "Body",
            "isApiVersion": false,
            "isContentType": false,
            "isEndpoint": false,
            "explode": false,
            "isRequired": true,
            "kind": "Method",
            "decorators": [],
            "skipUrlEncoding": false
           }
          ],
          "responses": [
           {
            "$id": "886",
            "statusCodes": [
             200
            ],
            "bodyType": {
             "$ref": "244"
            },
            "headers": [],
            "isErrorResponse": false,
            "contentTypes": [
             "application/json"
            ]
           }
          ],
          "httpMethod": "POST",
          "uri": "{firstTestTypeSpecUrl}",
          "path": "/literal",
          "requestMediaTypes": [
           "application/json"
          ],
          "bufferResponse": true,
          "generateProtocolMethod": true,
          "generateConvenienceMethod": true,
          "crossLanguageDefinitionId": "FirstTestTypeSpec.Hello.Demo2.createLiteral",
          "decorators": []
         },
         "parameters": [
          {
           "$id": "887",
           "name": "body",
           "nameInRequest": "body",
           "type": {
            "$ref": "244"
           },
           "location": "Body",
           "isApiVersion": false,
           "isContentType": false,
           "isEndpoint": false,
           "explode": false,
           "isRequired": true,
           "kind": "Method",
           "decorators": [],
           "skipUrlEncoding": false
          },
          {
           "$id": "888",
           "name": "contentType",
           "nameInRequest": "contentType",
           "doc": "Body parameter's content type. Known values are application/json",
           "type": {
            "$ref": "208"
           },
           "location": "Header",
           "isApiVersion": false,
           "isContentType": false,
           "isEndpoint": false,
           "explode": false,
           "isRequired": true,
           "kind": "Constant",
           "decorators": [],
           "skipUrlEncoding": false
          },
          {
           "$id": "889",
           "name": "accept",
           "nameInRequest": "accept",
           "type": {
            "$ref": "210"
           },
           "location": "Header",
           "isApiVersion": false,
           "isContentType": false,
           "isEndpoint": false,
           "explode": false,
           "isRequired": true,
           "kind": "Constant",
           "decorators": [],
           "skipUrlEncoding": false
          }
         ],
         "response": {
          "$id": "890",
          "type": {
           "$ref": "244"
          }
         },
         "isOverride": false,
         "generateConvenient": true,
         "generateProtocol": true,
         "crossLanguageDefinitionId": "FirstTestTypeSpec.Hello.Demo2.createLiteral"
        },
        {
         "$id": "891",
         "kind": "basic",
         "name": "helloLiteral",
         "accessibility": "public",
         "apiVersions": [
          "2022-05-15-preview"
         ],
         "doc": "Send literal parameters",
         "operation": {
          "$id": "892",
          "name": "helloLiteral",
          "resourceName": "Demo2",
          "doc": "Send literal parameters",
          "accessibility": "public",
          "parameters": [
           {
            "$id": "893",
            "name": "p1",
            "nameInRequest": "p1",
            "type": {
             "$ref": "212"
            },
            "location": "Header",
            "isApiVersion": false,
            "isContentType": false,
            "isEndpoint": false,
            "explode": false,
            "isRequired": true,
            "kind": "Constant",
            "decorators": [],
            "skipUrlEncoding": false
           },
           {
            "$id": "894",
            "name": "p2",
            "nameInRequest": "p2",
            "type": {
             "$ref": "214"
            },
            "location": "Path",
            "isApiVersion": false,
            "isContentType": false,
            "isEndpoint": false,
            "explode": false,
            "isRequired": true,
            "kind": "Constant",
            "decorators": [],
            "skipUrlEncoding": false
           },
           {
            "$id": "895",
            "name": "p3",
            "nameInRequest": "p3",
            "type": {
             "$ref": "216"
            },
            "location": "Query",
            "isApiVersion": false,
            "isContentType": false,
            "isEndpoint": false,
            "explode": false,
            "isRequired": true,
            "kind": "Constant",
            "decorators": [],
            "skipUrlEncoding": false
           },
           {
            "$id": "896",
            "name": "accept",
            "nameInRequest": "Accept",
            "type": {
             "$ref": "218"
            },
            "location": "Header",
            "isApiVersion": false,
            "isContentType": false,
            "isEndpoint": false,
            "explode": false,
            "isRequired": true,
            "kind": "Constant",
            "decorators": [],
            "skipUrlEncoding": false
           }
          ],
          "responses": [
           {
            "$id": "897",
            "statusCodes": [
             200
            ],
            "bodyType": {
             "$ref": "244"
            },
            "headers": [],
            "isErrorResponse": false,
            "contentTypes": [
             "application/json"
            ]
           }
          ],
          "httpMethod": "GET",
          "uri": "{firstTestTypeSpecUrl}",
          "path": "/helloLiteral/{p2}",
          "bufferResponse": true,
          "generateProtocolMethod": true,
          "generateConvenienceMethod": true,
          "crossLanguageDefinitionId": "FirstTestTypeSpec.Hello.Demo2.helloLiteral",
          "decorators": []
         },
         "parameters": [
          {
           "$id": "898",
           "name": "p1",
           "nameInRequest": "p1",
           "type": {
            "$ref": "220"
           },
           "location": "Header",
           "isApiVersion": false,
           "isContentType": false,
           "isEndpoint": false,
           "explode": false,
           "isRequired": true,
           "kind": "Constant",
           "decorators": [],
           "skipUrlEncoding": false
          },
          {
           "$id": "899",
           "name": "p2",
           "nameInRequest": "p2",
           "type": {
            "$ref": "222"
           },
           "location": "Path",
           "isApiVersion": false,
           "isContentType": false,
           "isEndpoint": false,
           "explode": false,
           "isRequired": true,
           "kind": "Constant",
           "decorators": [],
           "skipUrlEncoding": false
          },
          {
           "$id": "900",
           "name": "p3",
           "nameInRequest": "p3",
           "type": {
            "$ref": "224"
           },
           "location": "Query",
           "isApiVersion": false,
           "isContentType": false,
           "isEndpoint": false,
           "explode": false,
           "isRequired": true,
           "kind": "Constant",
           "decorators": [],
           "skipUrlEncoding": false
          },
          {
           "$id": "901",
           "name": "accept",
           "nameInRequest": "accept",
           "type": {
            "$ref": "218"
           },
           "location": "Header",
           "isApiVersion": false,
           "isContentType": false,
           "isEndpoint": false,
           "explode": false,
           "isRequired": true,
           "kind": "Constant",
           "decorators": [],
           "skipUrlEncoding": false
          }
         ],
         "response": {
          "$id": "902",
          "type": {
           "$ref": "244"
          }
         },
         "isOverride": false,
         "generateConvenient": true,
         "generateProtocol": true,
         "crossLanguageDefinitionId": "FirstTestTypeSpec.Hello.Demo2.helloLiteral"
        }
       ],
       "parameters": [
        {
         "$id": "903",
         "name": "firstTestTypeSpecUrl",
         "nameInRequest": "firstTestTypeSpecUrl",
         "type": {
          "$id": "904",
          "kind": "url",
          "name": "url",
          "crossLanguageDefinitionId": "TypeSpec.url"
         },
         "location": "Uri",
         "isApiVersion": false,
         "isContentType": false,
         "isRequired": true,
         "isEndpoint": true,
         "skipUrlEncoding": false,
         "explode": false,
         "kind": "Client",
         "serverUrlTemplate": "{firstTestTypeSpecUrl}"
        }
       ],
       "decorators": [],
       "crossLanguageDefinitionId": "FirstTestTypeSpec.Hello.Demo2",
       "apiVersions": [
        "2022-05-15-preview"
       ],
       "parent": {
        "$ref": "814"
       }
      }
     ]
    },
    {
     "$id": "905",
     "kind": "client",
     "name": "EnumTest",
     "namespace": "FirstTestTypeSpec.EnumTest",
     "methods": [
      {
       "$id": "906",
       "kind": "basic",
       "name": "createUnknownValue",
       "accessibility": "public",
       "apiVersions": [
        "2022-05-15-preview"
       ],
       "doc": "get extensible enum",
       "operation": {
        "$id": "907",
        "name": "createUnknownValue",
        "resourceName": "EnumTest",
        "doc": "get extensible enum",
        "accessibility": "public",
        "parameters": [
         {
          "$id": "908",
          "name": "contentType",
          "nameInRequest": "Content-Type",
          "doc": "Body parameter's content type. Known values are text/plain",
          "type": {
           "$ref": "226"
          },
          "location": "Header",
          "isApiVersion": false,
          "isContentType": true,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Constant",
          "decorators": [],
          "skipUrlEncoding": false
         },
         {
          "$id": "909",
          "name": "input",
          "nameInRequest": "input",
          "type": {
           "$ref": "70"
          },
          "location": "Body",
          "isApiVersion": false,
          "isContentType": false,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Method",
          "decorators": [],
          "skipUrlEncoding": false
         }
        ],
        "responses": [
         {
          "$id": "910",
          "statusCodes": [
           204
          ],
          "headers": [],
          "isErrorResponse": false
         }
        ],
        "httpMethod": "PUT",
        "uri": "{firstTestTypeSpecUrl}",
        "path": "/unknown-value",
        "requestMediaTypes": [
         "text/plain"
        ],
        "bufferResponse": true,
        "generateProtocolMethod": true,
        "generateConvenienceMethod": false,
        "crossLanguageDefinitionId": "FirstTestTypeSpec.EnumTest.createUnknownValue",
        "decorators": []
       },
       "parameters": [
        {
         "$id": "911",
         "name": "input",
         "nameInRequest": "input",
         "type": {
          "$ref": "70"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "912",
         "name": "contentType",
         "nameInRequest": "contentType",
         "doc": "Body parameter's content type. Known values are text/plain",
         "type": {
          "$ref": "226"
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "response": {
        "$id": "913"
       },
       "isOverride": false,
       "generateConvenient": false,
       "generateProtocol": true,
       "crossLanguageDefinitionId": "FirstTestTypeSpec.EnumTest.createUnknownValue"
      }
     ],
     "parameters": [
      {
       "$id": "914",
       "name": "firstTestTypeSpecUrl",
       "nameInRequest": "firstTestTypeSpecUrl",
       "type": {
        "$id": "915",
        "kind": "url",
        "name": "url",
        "crossLanguageDefinitionId": "TypeSpec.url"
       },
       "location": "Uri",
       "isApiVersion": false,
       "isContentType": false,
       "isRequired": true,
       "isEndpoint": true,
       "skipUrlEncoding": false,
       "explode": false,
       "kind": "Client",
       "serverUrlTemplate": "{firstTestTypeSpecUrl}"
      }
     ],
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.EnumTest",
     "apiVersions": [
      "2022-05-15-preview"
     ],
     "parent": {
      "$ref": "550"
     }
    },
    {
     "$id": "916",
     "kind": "client",
     "name": "ProtocolAndConvenient",
     "namespace": "FirstTestTypeSpec.ProtocolAndConvenient",
     "methods": [
      {
       "$id": "917",
       "kind": "basic",
       "name": "internalProtocol",
       "accessibility": "public",
       "apiVersions": [
        "2022-05-15-preview"
       ],
       "doc": "When set protocol false and convenient true, then the protocol method should be internal",
       "operation": {
        "$id": "918",
        "name": "internalProtocol",
        "resourceName": "ProtocolAndConvenient",
        "doc": "When set protocol false and convenient true, then the protocol method should be internal",
        "accessibility": "public",
        "parameters": [
         {
          "$id": "919",
          "name": "contentType",
          "nameInRequest": "Content-Type",
          "doc": "Body parameter's content type. Known values are application/json",
          "type": {
           "$ref": "228"
          },
          "location": "Header",
          "isApiVersion": false,
          "isContentType": true,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Constant",
          "decorators": [],
          "skipUrlEncoding": false
         },
         {
          "$id": "920",
          "name": "accept",
          "nameInRequest": "Accept",
          "type": {
           "$ref": "230"
          },
          "location": "Header",
          "isApiVersion": false,
          "isContentType": false,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Constant",
          "decorators": [],
          "skipUrlEncoding": false
         },
         {
          "$id": "921",
          "name": "body",
          "nameInRequest": "body",
          "type": {
           "$ref": "244"
          },
          "location": "Body",
          "isApiVersion": false,
          "isContentType": false,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Method",
          "decorators": [],
          "skipUrlEncoding": false
         }
        ],
        "responses": [
         {
          "$id": "922",
          "statusCodes": [
           200
          ],
          "bodyType": {
           "$ref": "244"
          },
          "headers": [],
          "isErrorResponse": false,
          "contentTypes": [
           "application/json"
          ]
         }
        ],
        "httpMethod": "POST",
        "uri": "{firstTestTypeSpecUrl}",
        "path": "/internalProtocol",
        "requestMediaTypes": [
         "application/json"
        ],
        "bufferResponse": true,
        "generateProtocolMethod": false,
        "generateConvenienceMethod": true,
        "crossLanguageDefinitionId": "FirstTestTypeSpec.ProtocolAndConvenient.internalProtocol",
        "decorators": []
       },
       "parameters": [
        {
         "$id": "923",
         "name": "body",
         "nameInRequest": "body",
         "type": {
          "$ref": "244"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "924",
         "name": "contentType",
         "nameInRequest": "contentType",
         "doc": "Body parameter's content type. Known values are application/json",
         "type": {
          "$ref": "228"
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "925",
         "name": "accept",
         "nameInRequest": "accept",
         "type": {
          "$ref": "230"
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "response": {
        "$id": "926",
        "type": {
         "$ref": "244"
        }
       },
       "isOverride": false,
       "generateConvenient": true,
       "generateProtocol": false,
       "crossLanguageDefinitionId": "FirstTestTypeSpec.ProtocolAndConvenient.internalProtocol"
      },
      {
       "$id": "927",
       "kind": "basic",
       "name": "stillConvenient",
       "accessibility": "public",
       "apiVersions": [
        "2022-05-15-preview"
       ],
       "doc": "When set protocol false and convenient true, the convenient method should be generated even it has the same signature as protocol one",
       "operation": {
        "$id": "928",
        "name": "stillConvenient",
        "resourceName": "ProtocolAndConvenient",
        "doc": "When set protocol false and convenient true, the convenient method should be generated even it has the same signature as protocol one",
        "accessibility": "public",
        "parameters": [],
        "responses": [
         {
          "$id": "929",
          "statusCodes": [
           204
          ],
          "headers": [],
          "isErrorResponse": false
         }
        ],
        "httpMethod": "GET",
        "uri": "{firstTestTypeSpecUrl}",
        "path": "/stillConvenient",
        "bufferResponse": true,
        "generateProtocolMethod": false,
        "generateConvenienceMethod": true,
        "crossLanguageDefinitionId": "FirstTestTypeSpec.ProtocolAndConvenient.stillConvenient",
        "decorators": []
       },
       "parameters": [],
       "response": {
        "$id": "930"
       },
       "isOverride": false,
       "generateConvenient": true,
       "generateProtocol": false,
       "crossLanguageDefinitionId": "FirstTestTypeSpec.ProtocolAndConvenient.stillConvenient"
      }
     ],
     "parameters": [
      {
       "$id": "931",
       "name": "firstTestTypeSpecUrl",
       "nameInRequest": "firstTestTypeSpecUrl",
       "type": {
        "$id": "932",
        "kind": "url",
        "name": "url",
        "crossLanguageDefinitionId": "TypeSpec.url"
       },
       "location": "Uri",
       "isApiVersion": false,
       "isContentType": false,
       "isRequired": true,
       "isEndpoint": true,
       "skipUrlEncoding": false,
       "explode": false,
       "kind": "Client",
       "serverUrlTemplate": "{firstTestTypeSpecUrl}"
      }
     ],
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.ProtocolAndConvenient",
     "apiVersions": [
      "2022-05-15-preview"
     ],
     "parent": {
      "$ref": "550"
     }
    },
    {
     "$id": "933",
     "kind": "client",
     "name": "Entity",
     "namespace": "FirstTestTypeSpec",
     "methods": [
      {
       "$id": "934",
       "kind": "basic",
       "name": "doSomething",
       "accessibility": "public",
       "apiVersions": [
        "2022-05-15-preview"
       ],
       "doc": "doSomething for entity",
       "operation": {
        "$id": "935",
        "name": "doSomething",
        "resourceName": "Entity",
        "doc": "doSomething for entity",
        "accessibility": "public",
        "parameters": [
         {
          "$id": "936",
          "name": "p2",
          "nameInRequest": "p2",
          "type": {
           "$id": "937",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "location": "Path",
          "isApiVersion": false,
          "isContentType": false,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Method",
          "decorators": [],
          "skipUrlEncoding": false
         },
         {
          "$id": "938",
          "name": "accept",
          "nameInRequest": "Accept",
          "type": {
           "$ref": "232"
          },
          "location": "Header",
          "isApiVersion": false,
          "isContentType": false,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Constant",
          "decorators": [],
          "skipUrlEncoding": false
         }
        ],
        "responses": [
         {
          "$id": "939",
          "statusCodes": [
           200
          ],
          "bodyType": {
           "$ref": "244"
          },
          "headers": [],
          "isErrorResponse": false,
          "contentTypes": [
           "application/json"
          ]
         }
        ],
        "httpMethod": "GET",
        "uri": "{firstTestTypeSpecUrl}",
        "path": "/entity/doSomething/{p2}",
        "bufferResponse": true,
        "generateProtocolMethod": true,
        "generateConvenienceMethod": true,
        "crossLanguageDefinitionId": "FirstTestTypeSpec.Entity.doSomething",
        "decorators": []
       },
       "parameters": [
        {
         "$id": "940",
         "name": "p2",
         "nameInRequest": "p2",
         "type": {
          "$id": "941",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "942",
         "name": "accept",
         "nameInRequest": "accept",
         "type": {
          "$ref": "232"
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "response": {
        "$id": "943",
        "type": {
         "$ref": "244"
        }
       },
       "isOverride": false,
       "generateConvenient": true,
       "generateProtocol": true,
       "crossLanguageDefinitionId": "FirstTestTypeSpec.Entity.doSomething"
      }
     ],
     "parameters": [
      {
       "$id": "944",
       "name": "firstTestTypeSpecUrl",
       "nameInRequest": "firstTestTypeSpecUrl",
       "type": {
        "$id": "945",
        "kind": "url",
        "name": "url",
        "crossLanguageDefinitionId": "TypeSpec.url"
       },
       "location": "Uri",
       "isApiVersion": false,
       "isContentType": false,
       "isRequired": true,
       "isEndpoint": true,
       "skipUrlEncoding": false,
       "explode": false,
       "kind": "Client",
       "serverUrlTemplate": "{firstTestTypeSpecUrl}"
      }
     ],
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Entity",
     "apiVersions": [
      "2022-05-15-preview"
     ],
     "parent": {
      "$ref": "550"
     }
    },
    {
     "$id": "946",
     "kind": "client",
     "name": "Glossary",
     "namespace": "FirstTestTypeSpec",
     "methods": [
      {
       "$id": "947",
       "kind": "basic",
       "name": "doSomething",
       "accessibility": "public",
       "apiVersions": [
        "2022-05-15-preview"
       ],
       "doc": "doSomething for glossary",
       "operation": {
        "$id": "948",
        "name": "doSomething",
        "resourceName": "Glossary",
        "doc": "doSomething for glossary",
        "accessibility": "public",
        "parameters": [
         {
          "$id": "949",
          "name": "id",
          "nameInRequest": "id",
          "type": {
           "$id": "950",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "location": "Path",
          "isApiVersion": false,
          "isContentType": false,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Method",
          "decorators": [],
          "skipUrlEncoding": false
         },
         {
          "$id": "951",
          "name": "h1",
          "nameInRequest": "h1",
          "type": {
           "$id": "952",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "location": "Header",
          "isApiVersion": false,
          "isContentType": false,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Method",
          "decorators": [],
          "skipUrlEncoding": false
         },
         {
          "$id": "953",
          "name": "accept",
          "nameInRequest": "Accept",
          "type": {
           "$ref": "234"
          },
          "location": "Header",
          "isApiVersion": false,
          "isContentType": false,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Constant",
          "decorators": [],
          "skipUrlEncoding": false
         }
        ],
        "responses": [
         {
          "$id": "954",
          "statusCodes": [
           200
          ],
          "bodyType": {
           "$ref": "244"
          },
          "headers": [],
          "isErrorResponse": false,
          "contentTypes": [
           "application/json"
          ]
         }
        ],
        "httpMethod": "GET",
        "uri": "{firstTestTypeSpecUrl}",
        "path": "/glossary/doSomething/{id}",
        "bufferResponse": true,
        "generateProtocolMethod": true,
        "generateConvenienceMethod": true,
        "crossLanguageDefinitionId": "FirstTestTypeSpec.Glossary.doSomething",
        "decorators": []
       },
       "parameters": [
        {
         "$id": "955",
         "name": "id",
         "nameInRequest": "id",
         "type": {
          "$id": "956",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "957",
         "name": "h1",
         "nameInRequest": "h1",
         "type": {
          "$id": "958",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "959",
         "name": "accept",
         "nameInRequest": "accept",
         "type": {
          "$ref": "234"
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "response": {
        "$id": "960",
        "type": {
         "$ref": "244"
        }
       },
       "isOverride": false,
       "generateConvenient": true,
       "generateProtocol": true,
       "crossLanguageDefinitionId": "FirstTestTypeSpec.Glossary.doSomething"
      }
     ],
     "parameters": [
      {
       "$id": "961",
       "name": "firstTestTypeSpecUrl",
       "nameInRequest": "firstTestTypeSpecUrl",
       "type": {
        "$id": "962",
        "kind": "url",
        "name": "url",
        "crossLanguageDefinitionId": "TypeSpec.url"
       },
       "location": "Uri",
       "isApiVersion": false,
       "isContentType": false,
       "isRequired": true,
       "isEndpoint": true,
       "skipUrlEncoding": false,
       "explode": false,
       "kind": "Client",
       "serverUrlTemplate": "{firstTestTypeSpecUrl}"
      }
     ],
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.Glossary",
     "apiVersions": [
      "2022-05-15-preview"
     ],
     "parent": {
      "$ref": "550"
     }
    },
    {
     "$id": "963",
     "kind": "client",
     "name": "VersioningOp",
     "namespace": "FirstTestTypeSpec",
     "methods": [
      {
       "$id": "964",
       "kind": "lro",
       "name": "export",
       "accessibility": "public",
       "apiVersions": [
        "2022-05-15-preview"
       ],
       "doc": "Long-running resource action operation template.",
       "operation": {
        "$id": "965",
        "name": "export",
        "resourceName": "VersioningOp",
        "doc": "Long-running resource action operation template.",
        "accessibility": "public",
        "parameters": [
         {
          "$id": "966",
          "name": "apiVersion",
          "nameInRequest": "api-version",
          "doc": "The API version to use for this operation.",
          "type": {
           "$id": "967",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "location": "Query",
          "isApiVersion": true,
          "isContentType": false,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Client",
          "defaultValue": {
           "$id": "968",
           "type": {
            "$id": "969",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string"
           },
           "value": "2022-05-15-preview"
          },
          "decorators": [],
          "skipUrlEncoding": false
         },
         {
          "$id": "970",
          "name": "name",
          "nameInRequest": "name",
          "type": {
           "$id": "971",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "location": "Path",
          "isApiVersion": false,
          "isContentType": false,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Method",
          "decorators": [],
          "skipUrlEncoding": false
         },
         {
          "$id": "972",
          "name": "projectFileVersion",
          "nameInRequest": "projectFileVersion",
          "type": {
           "$id": "973",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "location": "Query",
          "isApiVersion": false,
          "isContentType": false,
          "isEndpoint": false,
          "explode": false,
          "isRequired": false,
          "kind": "Method",
          "decorators": [],
          "skipUrlEncoding": false
         },
         {
          "$id": "974",
          "name": "accept",
          "nameInRequest": "Accept",
          "type": {
           "$ref": "236"
          },
          "location": "Header",
          "isApiVersion": false,
          "isContentType": false,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Constant",
          "decorators": [],
          "skipUrlEncoding": false
         }
        ],
        "responses": [
         {
          "$id": "975",
          "statusCodes": [
           202
          ],
          "bodyType": {
           "$ref": "505"
          },
          "headers": [
           {
            "$id": "976",
            "name": "operationLocation",
            "nameInResponse": "Operation-Location",
            "doc": "The location for monitoring the operation state.",
            "type": {
             "$id": "977",
             "kind": "url",
             "name": "ResourceLocation",
             "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
             "baseType": {
              "$id": "978",
              "kind": "url",
              "name": "url",
              "crossLanguageDefinitionId": "TypeSpec.url",
              "decorators": []
             },
             "decorators": []
            }
           }
          ],
          "isErrorResponse": false,
          "contentTypes": [
           "application/json"
          ]
         }
        ],
        "httpMethod": "POST",
        "uri": "{firstTestTypeSpecUrl}",
        "path": "/lro/resources/{name}:export",
        "bufferResponse": true,
        "generateProtocolMethod": true,
        "generateConvenienceMethod": false,
        "crossLanguageDefinitionId": "FirstTestTypeSpec.VersioningOp.export",
        "decorators": []
       },
       "parameters": [
        {
         "$id": "979",
         "name": "name",
         "nameInRequest": "name",
         "type": {
          "$id": "980",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "981",
         "name": "projectFileVersion",
         "nameInRequest": "projectFileVersion",
         "type": {
          "$id": "982",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": false,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "983",
         "name": "accept",
         "nameInRequest": "accept",
         "type": {
          "$ref": "238"
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "response": {
        "$id": "984",
        "type": {
         "$ref": "542"
        },
        "resultSegments": [
         "result"
        ]
       },
       "isOverride": false,
       "generateConvenient": false,
       "generateProtocol": true,
       "crossLanguageDefinitionId": "FirstTestTypeSpec.VersioningOp.export",
       "lroMetadata": {
        "$id": "985",
        "finalStateVia": 3,
        "finalResponse": {
         "$id": "986",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "505"
         }
        },
        "resultPath": "result"
       }
      },
      {
       "$id": "987",
       "kind": "lro",
       "name": "exportW",
       "accessibility": "public",
       "apiVersions": [
        "2022-05-15-preview"
       ],
       "doc": "Long-running resource action operation template.",
       "operation": {
        "$id": "988",
        "name": "exportW",
        "resourceName": "VersioningOp",
        "doc": "Long-running resource action operation template.",
        "accessibility": "public",
        "parameters": [
         {
          "$id": "989",
          "name": "apiVersion",
          "nameInRequest": "api-version",
          "doc": "The API version to use for this operation.",
          "type": {
           "$id": "990",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "location": "Query",
          "isApiVersion": true,
          "isContentType": false,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Client",
          "defaultValue": {
           "$id": "991",
           "type": {
            "$id": "992",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string"
           },
           "value": "2022-05-15-preview"
          },
          "decorators": [],
          "skipUrlEncoding": false
         },
         {
          "$id": "993",
          "name": "name",
          "nameInRequest": "name",
          "type": {
           "$id": "994",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "location": "Path",
          "isApiVersion": false,
          "isContentType": false,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Method",
          "decorators": [],
          "skipUrlEncoding": false
         },
         {
          "$id": "995",
          "name": "projectFileVersion",
          "nameInRequest": "projectFileVersion",
          "type": {
           "$id": "996",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "location": "Query",
          "isApiVersion": false,
          "isContentType": false,
          "isEndpoint": false,
          "explode": false,
          "isRequired": false,
          "kind": "Method",
          "decorators": [],
          "skipUrlEncoding": false
         },
         {
          "$id": "997",
          "name": "accept",
          "nameInRequest": "Accept",
          "type": {
           "$ref": "240"
          },
          "location": "Header",
          "isApiVersion": false,
          "isContentType": false,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Constant",
          "decorators": [],
          "skipUrlEncoding": false
         }
        ],
        "responses": [
         {
          "$id": "998",
          "statusCodes": [
           202
          ],
          "bodyType": {
           "$ref": "505"
          },
          "headers": [
           {
            "$id": "999",
            "name": "operationLocation",
            "nameInResponse": "Operation-Location",
            "doc": "The location for monitoring the operation state.",
            "type": {
             "$id": "1000",
             "kind": "url",
             "name": "ResourceLocation",
             "crossLanguageDefinitionId": "TypeSpec.Rest.ResourceLocation",
             "baseType": {
              "$id": "1001",
              "kind": "url",
              "name": "url",
              "crossLanguageDefinitionId": "TypeSpec.url",
              "decorators": []
             },
             "decorators": []
            }
           }
          ],
          "isErrorResponse": false,
          "contentTypes": [
           "application/json"
          ]
         }
        ],
        "httpMethod": "POST",
        "uri": "{firstTestTypeSpecUrl}",
        "path": "/lro/resources/{name}:exportW",
        "bufferResponse": true,
        "generateProtocolMethod": true,
        "generateConvenienceMethod": false,
        "crossLanguageDefinitionId": "FirstTestTypeSpec.VersioningOp.exportW",
        "decorators": []
       },
       "parameters": [
        {
         "$id": "1002",
         "name": "name",
         "nameInRequest": "name",
         "type": {
          "$id": "1003",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "1004",
         "name": "projectFileVersion",
         "nameInRequest": "projectFileVersion",
         "type": {
          "$id": "1005",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": false,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "1006",
         "name": "accept",
         "nameInRequest": "accept",
         "type": {
          "$ref": "242"
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "response": {
        "$id": "1007",
        "type": {
         "$ref": "542"
        },
        "resultSegments": [
         "result"
        ]
       },
       "isOverride": false,
       "generateConvenient": false,
       "generateProtocol": true,
       "crossLanguageDefinitionId": "FirstTestTypeSpec.VersioningOp.exportW",
       "lroMetadata": {
        "$id": "1008",
        "finalStateVia": 3,
        "finalResponse": {
         "$id": "1009",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "505"
         }
        },
        "resultPath": "result"
       }
      }
     ],
     "parameters": [
      {
       "$id": "1010",
       "name": "firstTestTypeSpecUrl",
       "nameInRequest": "firstTestTypeSpecUrl",
       "type": {
        "$id": "1011",
        "kind": "url",
        "name": "url",
        "crossLanguageDefinitionId": "TypeSpec.url"
       },
       "location": "Uri",
       "isApiVersion": false,
       "isContentType": false,
       "isRequired": true,
       "isEndpoint": true,
       "skipUrlEncoding": false,
       "explode": false,
       "kind": "Client",
       "serverUrlTemplate": "{firstTestTypeSpecUrl}"
      }
     ],
     "decorators": [],
     "crossLanguageDefinitionId": "FirstTestTypeSpec.VersioningOp",
     "apiVersions": [
      "2022-05-15-preview"
     ],
     "parent": {
      "$ref": "550"
     }
    }
   ]
  }
 ],
 "auth": {
  "$id": "1012",
  "oAuth2": {
   "$id": "1013",
   "scopes": [
    "https://api.example.com/.default"
   ]
  },
  "apiKey": {
   "$id": "1014",
   "name": "x-ms-api-key",
   "in": "header"
  }
 }
}
