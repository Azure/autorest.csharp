// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using FirstTestTypeSpec;
using FirstTestTypeSpec.Models;
using NUnit.Framework;

namespace FirstTestTypeSpec.Tests
{
    public partial class FirstTestTypeSpecClientTests : FirstTestTypeSpecTestBase
    {
        public FirstTestTypeSpecClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task TopAction_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            Response response = await client.TopActionAsync(DateTimeOffset.Parse("2022-05-10T14:57:31.2311892-04:00"), null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task TopAction_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            Response response = await client.TopActionAsync(DateTimeOffset.Parse("2022-05-10T14:57:31.2311892-04:00"), null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task TopAction2_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            Response response = await client.TopAction2Async(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task TopAction2_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            Response response = await client.TopAction2Async(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task PatchAction_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
                requiredUnion = "<requiredUnion>",
                requiredLiteralString = "accept",
                requiredLiteralInt = 123,
                requiredLiteralFloat = 1.23F,
                requiredLiteralBool = false,
                requiredBadDescription = "<requiredBadDescription>",
                requiredNullableList = new object[]
            {
1234
            },
            });
            Response response = await client.PatchActionAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task PatchAction_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
                requiredUnion = "<requiredUnion>",
                requiredLiteralString = "accept",
                requiredLiteralInt = 123,
                requiredLiteralFloat = 1.23F,
                requiredLiteralBool = false,
                optionalLiteralString = "reject",
                optionalLiteralInt = 456,
                optionalLiteralFloat = 4.56F,
                optionalLiteralBool = true,
                requiredBadDescription = "<requiredBadDescription>",
                optionalNullableList = new object[]
            {
1234
            },
                requiredNullableList = new object[]
            {
1234
            },
            });
            Response response = await client.PatchActionAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task AnonymousBody_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
                requiredUnion = "<requiredUnion>",
                requiredLiteralString = "accept",
                requiredLiteralInt = 123,
                requiredLiteralFloat = 1.23F,
                requiredLiteralBool = false,
                requiredBadDescription = "<requiredBadDescription>",
                requiredNullableList = new object[]
            {
1234
            },
            });
            Response response = await client.AnonymousBodyAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task AnonymousBody_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
                requiredUnion = "<requiredUnion>",
                requiredLiteralString = "accept",
                requiredLiteralInt = 123,
                requiredLiteralFloat = 1.23F,
                requiredLiteralBool = false,
                optionalLiteralString = "reject",
                optionalLiteralInt = 456,
                optionalLiteralFloat = 4.56F,
                optionalLiteralBool = true,
                requiredBadDescription = "<requiredBadDescription>",
                optionalNullableList = new object[]
            {
1234
            },
                requiredNullableList = new object[]
            {
1234
            },
            });
            Response response = await client.AnonymousBodyAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task FriendlyModel_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.FriendlyModelAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task FriendlyModel_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            Friend notFriend = new Friend("<name>");
            Response<Friend> response = await client.FriendlyModelAsync(notFriend);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task FriendlyModel_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.FriendlyModelAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task FriendlyModel_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            Friend notFriend = new Friend("<name>");
            Response<Friend> response = await client.FriendlyModelAsync(notFriend);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task AddTimeHeader_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            Response response = await client.AddTimeHeaderAsync();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task AddTimeHeader_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            Response response = await client.AddTimeHeaderAsync();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task StringFormat_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                sourceUrl = "http://localhost:3000",
                guid = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
            });
            Response response = await client.StringFormatAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task StringFormat_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            ModelWithFormat body = new ModelWithFormat(new Uri("http://localhost:3000"), Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));
            Response response = await client.StringFormatAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task StringFormat_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                sourceUrl = "http://localhost:3000",
                guid = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
            });
            Response response = await client.StringFormatAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task StringFormat_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            ModelWithFormat body = new ModelWithFormat(new Uri("http://localhost:3000"), Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));
            Response response = await client.StringFormatAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), body);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task ProjectedNameModel_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.ProjectedNameModelAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task ProjectedNameModel_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            ProjectedModel modelWithProjectedName = new ProjectedModel("<name>");
            Response<ProjectedModel> response = await client.ProjectedNameModelAsync(modelWithProjectedName);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task ProjectedNameModel_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.ProjectedNameModelAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task ProjectedNameModel_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            ProjectedModel modelWithProjectedName = new ProjectedModel("<name>");
            Response<ProjectedModel> response = await client.ProjectedNameModelAsync(modelWithProjectedName);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task ReturnsAnonymousModel_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            Response response = await client.ReturnsAnonymousModelAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task ReturnsAnonymousModel_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            Response response = await client.ReturnsAnonymousModelAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task HeadAsBoolean_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            Response<bool> response = await client.HeadAsBooleanAsync("<id>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task HeadAsBoolean_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            Response<bool> response = await client.HeadAsBooleanAsync("<id>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task StringBody_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            using RequestContent content = RequestContent.Create("<body>");
            Response response = await client.StringBodyAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task StringBody_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            Response response = await client.StringBodyAsync("<body>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task StringBody_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            using RequestContent content = RequestContent.Create("<body>");
            Response response = await client.StringBodyAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task StringBody_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            Response response = await client.StringBodyAsync("<body>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task BoolBody_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(true);
            Response response = await client.BoolBodyAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task BoolBody_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            Response response = await client.BoolBodyAsync(true);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task BoolBody_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(true);
            Response response = await client.BoolBodyAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task BoolBody_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            Response response = await client.BoolBodyAsync(true);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task DateTimeBody_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            using RequestContent content = RequestContent.Create("2022-05-10T14:57:31.2311892-04:00");
            Response response = await client.DateTimeBodyAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task DateTimeBody_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            Response response = await client.DateTimeBodyAsync(DateTimeOffset.Parse("2022-05-10T14:57:31.2311892-04:00"));
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task DateTimeBody_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            using RequestContent content = RequestContent.Create("2022-05-10T14:57:31.2311892-04:00");
            Response response = await client.DateTimeBodyAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task DateTimeBody_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            Response response = await client.DateTimeBodyAsync(DateTimeOffset.Parse("2022-05-10T14:57:31.2311892-04:00"));
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task ReturnString_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            Response response = await client.ReturnStringAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task ReturnString_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            Response<string> response = await client.ReturnStringAsync();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task ReturnString_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            Response response = await client.ReturnStringAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task ReturnString_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            Response<string> response = await client.ReturnStringAsync();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task ReturnUnknown_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            Response response = await client.ReturnUnknownAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task ReturnUnknown_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            Response<BinaryData> response = await client.ReturnUnknownAsync();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task ReturnUnknown_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            Response response = await client.ReturnUnknownAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task ReturnUnknown_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            Response<BinaryData> response = await client.ReturnUnknownAsync();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task SayHi_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            Response response = await client.SayHiAsync("<headParameter>", "<queryParameter>", null, null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task SayHi_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            Response response = await client.SayHiAsync("<headParameter>", "<queryParameter>", "<optionalQuery>", null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task HelloAgain_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                requiredString = "<requiredString>",
                requiredInt = 1234,
                requiredCollection = new object[]
            {
"1"
            },
                requiredDictionary = new
                {
                    key = "1",
                },
                requiredModel = new
                {
                    name = "<name>",
                    requiredUnion = "<requiredUnion>",
                    requiredLiteralString = "accept",
                    requiredLiteralInt = 123,
                    requiredLiteralFloat = 1.23F,
                    requiredLiteralBool = false,
                    requiredBadDescription = "<requiredBadDescription>",
                    requiredNullableList = new object[]
            {
1234
            },
                },
                requiredUnknown = new object(),
                requiredRecordUnknown = new
                {
                    key = new object(),
                },
                modelWithRequiredNullable = new
                {
                    requiredNullablePrimitive = 1234,
                    requiredExtensibleEnum = "1",
                    requiredFixedEnum = "1",
                },
            });
            Response response = await client.HelloAgainAsync("<p2>", "<p1>", content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task HelloAgain_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                requiredString = "<requiredString>",
                requiredInt = 1234,
                requiredCollection = new object[]
            {
"1"
            },
                requiredDictionary = new
                {
                    key = "1",
                },
                requiredModel = new
                {
                    name = "<name>",
                    requiredUnion = "<requiredUnion>",
                    requiredLiteralString = "accept",
                    requiredLiteralInt = 123,
                    requiredLiteralFloat = 1.23F,
                    requiredLiteralBool = false,
                    optionalLiteralString = "reject",
                    optionalLiteralInt = 456,
                    optionalLiteralFloat = 4.56F,
                    optionalLiteralBool = true,
                    requiredBadDescription = "<requiredBadDescription>",
                    optionalNullableList = new object[]
            {
1234
            },
                    requiredNullableList = new object[]
            {
1234
            },
                },
                intExtensibleEnum = 1,
                intExtensibleEnumCollection = new object[]
            {
1
            },
                floatExtensibleEnum = 1,
                floatExtensibleEnumCollection = new object[]
            {
1
            },
                floatFixedEnum = 1.1F,
                floatFixedEnumCollection = new object[]
            {
1.1F
            },
                intFixedEnum = 1,
                intFixedEnumCollection = new object[]
            {
1
            },
                stringFixedEnum = "1",
                requiredUnknown = new object(),
                optionalUnknown = new object(),
                requiredRecordUnknown = new
                {
                    key = new object(),
                },
                optionalRecordUnknown = new
                {
                    key = new object(),
                },
                modelWithRequiredNullable = new
                {
                    requiredNullablePrimitive = 1234,
                    requiredExtensibleEnum = "1",
                    requiredFixedEnum = "1",
                },
            });
            Response response = await client.HelloAgainAsync("<p2>", "<p1>", content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task NoContentType_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                requiredString = "<requiredString>",
                requiredInt = 1234,
                requiredCollection = new object[]
            {
"1"
            },
                requiredDictionary = new
                {
                    key = "1",
                },
                requiredModel = new
                {
                    name = "<name>",
                    requiredUnion = "<requiredUnion>",
                    requiredLiteralString = "accept",
                    requiredLiteralInt = 123,
                    requiredLiteralFloat = 1.23F,
                    requiredLiteralBool = false,
                    requiredBadDescription = "<requiredBadDescription>",
                    requiredNullableList = new object[]
            {
1234
            },
                },
                requiredUnknown = new object(),
                requiredRecordUnknown = new
                {
                    key = new object(),
                },
                modelWithRequiredNullable = new
                {
                    requiredNullablePrimitive = 1234,
                    requiredExtensibleEnum = "1",
                    requiredFixedEnum = "1",
                },
            });
            Response response = await client.NoContentTypeAsync("<p2>", "<p1>", content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task NoContentType_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                requiredString = "<requiredString>",
                requiredInt = 1234,
                requiredCollection = new object[]
            {
"1"
            },
                requiredDictionary = new
                {
                    key = "1",
                },
                requiredModel = new
                {
                    name = "<name>",
                    requiredUnion = "<requiredUnion>",
                    requiredLiteralString = "accept",
                    requiredLiteralInt = 123,
                    requiredLiteralFloat = 1.23F,
                    requiredLiteralBool = false,
                    optionalLiteralString = "reject",
                    optionalLiteralInt = 456,
                    optionalLiteralFloat = 4.56F,
                    optionalLiteralBool = true,
                    requiredBadDescription = "<requiredBadDescription>",
                    optionalNullableList = new object[]
            {
1234
            },
                    requiredNullableList = new object[]
            {
1234
            },
                },
                intExtensibleEnum = 1,
                intExtensibleEnumCollection = new object[]
            {
1
            },
                floatExtensibleEnum = 1,
                floatExtensibleEnumCollection = new object[]
            {
1
            },
                floatFixedEnum = 1.1F,
                floatFixedEnumCollection = new object[]
            {
1.1F
            },
                intFixedEnum = 1,
                intFixedEnumCollection = new object[]
            {
1
            },
                stringFixedEnum = "1",
                requiredUnknown = new object(),
                optionalUnknown = new object(),
                requiredRecordUnknown = new
                {
                    key = new object(),
                },
                optionalRecordUnknown = new
                {
                    key = new object(),
                },
                modelWithRequiredNullable = new
                {
                    requiredNullablePrimitive = 1234,
                    requiredExtensibleEnum = "1",
                    requiredFixedEnum = "1",
                },
            });
            Response response = await client.NoContentTypeAsync("<p2>", "<p1>", content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task HelloDemo2_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            Response response = await client.HelloDemo2Async(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task HelloDemo2_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            Response response = await client.HelloDemo2Async(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CreateLiteral_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
                requiredUnion = "<requiredUnion>",
                requiredLiteralString = "accept",
                requiredLiteralInt = 123,
                requiredLiteralFloat = 1.23F,
                requiredLiteralBool = false,
                requiredBadDescription = "<requiredBadDescription>",
                requiredNullableList = new object[]
            {
1234
            },
            });
            Response response = await client.CreateLiteralAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CreateLiteral_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
                requiredUnion = "<requiredUnion>",
                requiredLiteralString = "accept",
                requiredLiteralInt = 123,
                requiredLiteralFloat = 1.23F,
                requiredLiteralBool = false,
                optionalLiteralString = "reject",
                optionalLiteralInt = 456,
                optionalLiteralFloat = 4.56F,
                optionalLiteralBool = true,
                requiredBadDescription = "<requiredBadDescription>",
                optionalNullableList = new object[]
            {
1234
            },
                requiredNullableList = new object[]
            {
1234
            },
            });
            Response response = await client.CreateLiteralAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task HelloLiteral_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            Response response = await client.HelloLiteralAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task HelloLiteral_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            Response response = await client.HelloLiteralAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetUnknownValue_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            Response response = await client.GetUnknownValueAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetUnknownValue_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = null;
            FirstTestTypeSpecClient client = CreateFirstTestTypeSpecClient(endpoint, credential);

            Response response = await client.GetUnknownValueAsync(null);
        }
    }
}
