// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace System.ClientModel.Tests.Client.ModelReaderWriterTests.Models
{
    /// <summary> Model factory for models. </summary>
    public static partial class SystemClientModelTestsClientModelReaderWriterTestsModelFactory
    {
        /// <summary> Initializes a new instance of <see cref="Models.ModelWithPersistableOnly"/>. </summary>
        /// <param name="name"> The name. </param>
        /// <param name="xProperty"> The x property. </param>
        /// <param name="fields"> The fields property. </param>
        /// <param name="nullProperty"> The nullable property. </param>
        /// <param name="keyValuePairs"> The key value pairs property. </param>
        /// <returns> A new <see cref="Models.ModelWithPersistableOnly"/> instance for mocking. </returns>
        public static ModelWithPersistableOnly ModelWithPersistableOnly(string name = null, int xProperty = default, IEnumerable<string> fields = null, int? nullProperty = null, IDictionary<string, string> keyValuePairs = null)
        {
            fields ??= new List<string>();
            keyValuePairs ??= new Dictionary<string, string>();

            return new ModelWithPersistableOnly(name, xProperty, fields?.ToList(), nullProperty, keyValuePairs, serializedAdditionalRawData: null);
        }
    }
}
