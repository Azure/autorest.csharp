// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace System.ClientModel.Tests.Client.ModelReaderWriterTests.Models
{
    /// <summary> The ModelY in the discriminated set. </summary>
    public partial class ModelY : BaseModel
    {
        /// <summary> Initializes a new instance of <see cref="ModelY"/>. </summary>
        /// <param name="name"> The name property. </param>
        /// <param name="yProperty"> The YProperty property. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> or <paramref name="yProperty"/> is null. </exception>
        public ModelY(string name, string yProperty) : base(name)
        {
            Argument.AssertNotNull(name, nameof(name));
            Argument.AssertNotNull(yProperty, nameof(yProperty));

            Kind = "Y";
            YProperty = yProperty;
        }

        /// <summary> Initializes a new instance of <see cref="ModelY"/>. </summary>
        /// <param name="kind"> The kind. </param>
        /// <param name="name"> The name property. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="yProperty"> The YProperty property. </param>
        internal ModelY(string kind, string name, IDictionary<string, BinaryData> serializedAdditionalRawData, string yProperty) : base(kind, name, serializedAdditionalRawData)
        {
            YProperty = yProperty;
        }

        /// <summary> Initializes a new instance of <see cref="ModelY"/> for deserialization. </summary>
        internal ModelY()
        {
        }

        /// <summary> The YProperty property. </summary>
        public string YProperty { get; set; }
    }
}
