<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="SpreadModelAsync(Thing,CancellationToken)">
      <example>
This sample shows how to call SpreadModelAsync with required parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
SpreadTypeSpecClient client = new SpreadTypeSpecClient(endpoint);

Thing thing = new Thing("<name>", 1234);
Response response = await client.SpreadModelAsync(thing);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadModel(Thing,CancellationToken)">
      <example>
This sample shows how to call SpreadModel with required parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
SpreadTypeSpecClient client = new SpreadTypeSpecClient(endpoint);

Thing thing = new Thing("<name>", 1234);
Response response = client.SpreadModel(thing);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadModelAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call SpreadModelAsync with required request content.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
SpreadTypeSpecClient client = new SpreadTypeSpecClient(endpoint);

RequestContent content = RequestContent.Create(new Dictionary<string, object>()
{
    ["name"] = "<name>",
    ["age"] = 1234,
});
Response response = await client.SpreadModelAsync(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadModel(RequestContent,RequestContext)">
      <example>
This sample shows how to call SpreadModel with required request content.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
SpreadTypeSpecClient client = new SpreadTypeSpecClient(endpoint);

RequestContent content = RequestContent.Create(new Dictionary<string, object>()
{
    ["name"] = "<name>",
    ["age"] = 1234,
});
Response response = client.SpreadModel(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadAliasAsync(string,int,CancellationToken)">
      <example>
This sample shows how to call SpreadAliasAsync with required parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
SpreadTypeSpecClient client = new SpreadTypeSpecClient(endpoint);

Response response = await client.SpreadAliasAsync("<name>", 1234);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadAlias(string,int,CancellationToken)">
      <example>
This sample shows how to call SpreadAlias with required parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
SpreadTypeSpecClient client = new SpreadTypeSpecClient(endpoint);

Response response = client.SpreadAlias("<name>", 1234);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadAliasAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call SpreadAliasAsync with required request content.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
SpreadTypeSpecClient client = new SpreadTypeSpecClient(endpoint);

RequestContent content = RequestContent.Create(new Dictionary<string, object>()
{
    ["name"] = "<name>",
    ["age"] = 1234,
});
Response response = await client.SpreadAliasAsync(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadAlias(RequestContent,RequestContext)">
      <example>
This sample shows how to call SpreadAlias with required request content.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
SpreadTypeSpecClient client = new SpreadTypeSpecClient(endpoint);

RequestContent content = RequestContent.Create(new Dictionary<string, object>()
{
    ["name"] = "<name>",
    ["age"] = 1234,
});
Response response = client.SpreadAlias(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadMultiTargetAliasAsync(string,int,string,int,CancellationToken)">
      <example>
This sample shows how to call SpreadMultiTargetAliasAsync with required parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
SpreadTypeSpecClient client = new SpreadTypeSpecClient(endpoint);

Response response = await client.SpreadMultiTargetAliasAsync("<id>", 1234, "<name>", 1234);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadMultiTargetAlias(string,int,string,int,CancellationToken)">
      <example>
This sample shows how to call SpreadMultiTargetAlias with required parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
SpreadTypeSpecClient client = new SpreadTypeSpecClient(endpoint);

Response response = client.SpreadMultiTargetAlias("<id>", 1234, "<name>", 1234);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadMultiTargetAliasAsync(string,int,RequestContent,RequestContext)">
      <example>
This sample shows how to call SpreadMultiTargetAliasAsync with required parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
SpreadTypeSpecClient client = new SpreadTypeSpecClient(endpoint);

RequestContent content = RequestContent.Create(new Dictionary<string, object>()
{
    ["name"] = "<name>",
    ["age"] = 1234,
});
Response response = await client.SpreadMultiTargetAliasAsync("<id>", 1234, content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadMultiTargetAlias(string,int,RequestContent,RequestContext)">
      <example>
This sample shows how to call SpreadMultiTargetAlias with required parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
SpreadTypeSpecClient client = new SpreadTypeSpecClient(endpoint);

RequestContent content = RequestContent.Create(new Dictionary<string, object>()
{
    ["name"] = "<name>",
    ["age"] = 1234,
});
Response response = client.SpreadMultiTargetAlias("<id>", 1234, content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadAliasWithModelAsync(string,int,Thing,CancellationToken)">
      <example>
This sample shows how to call SpreadAliasWithModelAsync with required parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
SpreadTypeSpecClient client = new SpreadTypeSpecClient(endpoint);

Thing thing = new Thing("<name>", 1234);
Response response = await client.SpreadAliasWithModelAsync("<id>", 1234, thing);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadAliasWithModel(string,int,Thing,CancellationToken)">
      <example>
This sample shows how to call SpreadAliasWithModel with required parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
SpreadTypeSpecClient client = new SpreadTypeSpecClient(endpoint);

Thing thing = new Thing("<name>", 1234);
Response response = client.SpreadAliasWithModel("<id>", 1234, thing);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadAliasWithModelAsync(string,int,RequestContent,RequestContext)">
      <example>
This sample shows how to call SpreadAliasWithModelAsync with required parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
SpreadTypeSpecClient client = new SpreadTypeSpecClient(endpoint);

RequestContent content = RequestContent.Create(new Dictionary<string, object>()
{
    ["name"] = "<name>",
    ["age"] = 1234,
});
Response response = await client.SpreadAliasWithModelAsync("<id>", 1234, content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadAliasWithModel(string,int,RequestContent,RequestContext)">
      <example>
This sample shows how to call SpreadAliasWithModel with required parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
SpreadTypeSpecClient client = new SpreadTypeSpecClient(endpoint);

RequestContent content = RequestContent.Create(new Dictionary<string, object>()
{
    ["name"] = "<name>",
    ["age"] = 1234,
});
Response response = client.SpreadAliasWithModel("<id>", 1234, content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadAliasWithSpreadAliasAsync(string,int,string,int,CancellationToken)">
      <example>
This sample shows how to call SpreadAliasWithSpreadAliasAsync with required parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
SpreadTypeSpecClient client = new SpreadTypeSpecClient(endpoint);

Response response = await client.SpreadAliasWithSpreadAliasAsync("<id>", 1234, "<name>", 1234);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadAliasWithSpreadAlias(string,int,string,int,CancellationToken)">
      <example>
This sample shows how to call SpreadAliasWithSpreadAlias with required parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
SpreadTypeSpecClient client = new SpreadTypeSpecClient(endpoint);

Response response = client.SpreadAliasWithSpreadAlias("<id>", 1234, "<name>", 1234);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadAliasWithSpreadAliasAsync(string,int,RequestContent,RequestContext)">
      <example>
This sample shows how to call SpreadAliasWithSpreadAliasAsync with required parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
SpreadTypeSpecClient client = new SpreadTypeSpecClient(endpoint);

RequestContent content = RequestContent.Create(new Dictionary<string, object>()
{
    ["name"] = "<name>",
    ["age"] = 1234,
});
Response response = await client.SpreadAliasWithSpreadAliasAsync("<id>", 1234, content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadAliasWithSpreadAlias(string,int,RequestContent,RequestContext)">
      <example>
This sample shows how to call SpreadAliasWithSpreadAlias with required parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
SpreadTypeSpecClient client = new SpreadTypeSpecClient(endpoint);

RequestContent content = RequestContent.Create(new Dictionary<string, object>()
{
    ["name"] = "<name>",
    ["age"] = 1234,
});
Response response = client.SpreadAliasWithSpreadAlias("<id>", 1234, content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadAliasWithOptionalPropsAsync(string,int,string,IEnumerable{int},string,int?,IEnumerable{string},CancellationToken)">
      <example>
This sample shows how to call SpreadAliasWithOptionalPropsAsync with required parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
SpreadTypeSpecClient client = new SpreadTypeSpecClient(endpoint);

Response response = await client.SpreadAliasWithOptionalPropsAsync("<id>", 1234, "<name>", new int[]
{
1234
}, color: "<color>", age: 1234, elements: new string[]
{
"<elements>"
});
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadAliasWithOptionalProps(string,int,string,IEnumerable{int},string,int?,IEnumerable{string},CancellationToken)">
      <example>
This sample shows how to call SpreadAliasWithOptionalProps with required parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
SpreadTypeSpecClient client = new SpreadTypeSpecClient(endpoint);

Response response = client.SpreadAliasWithOptionalProps("<id>", 1234, "<name>", new int[]
{
1234
}, color: "<color>", age: 1234, elements: new string[]
{
"<elements>"
});
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadAliasWithOptionalPropsAsync(string,int,RequestContent,RequestContext)">
      <example>
This sample shows how to call SpreadAliasWithOptionalPropsAsync with required parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
SpreadTypeSpecClient client = new SpreadTypeSpecClient(endpoint);

RequestContent content = RequestContent.Create(new Dictionary<string, object>()
{
    ["name"] = "<name>",
    ["items"] = new object[]
{
1234
},
});
Response response = await client.SpreadAliasWithOptionalPropsAsync("<id>", 1234, content);
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call SpreadAliasWithOptionalPropsAsync with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
SpreadTypeSpecClient client = new SpreadTypeSpecClient(endpoint);

RequestContent content = RequestContent.Create(new Dictionary<string, object>()
{
    ["name"] = "<name>",
    ["color"] = "<color>",
    ["age"] = 1234,
    ["items"] = new object[]
{
1234
},
    ["elements"] = new object[]
{
"<elements>"
},
});
Response response = await client.SpreadAliasWithOptionalPropsAsync("<id>", 1234, content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadAliasWithOptionalProps(string,int,RequestContent,RequestContext)">
      <example>
This sample shows how to call SpreadAliasWithOptionalProps with required parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
SpreadTypeSpecClient client = new SpreadTypeSpecClient(endpoint);

RequestContent content = RequestContent.Create(new Dictionary<string, object>()
{
    ["name"] = "<name>",
    ["items"] = new object[]
{
1234
},
});
Response response = client.SpreadAliasWithOptionalProps("<id>", 1234, content);
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call SpreadAliasWithOptionalProps with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
SpreadTypeSpecClient client = new SpreadTypeSpecClient(endpoint);

RequestContent content = RequestContent.Create(new Dictionary<string, object>()
{
    ["name"] = "<name>",
    ["color"] = "<color>",
    ["age"] = 1234,
    ["items"] = new object[]
{
1234
},
    ["elements"] = new object[]
{
"<elements>"
},
});
Response response = client.SpreadAliasWithOptionalProps("<id>", 1234, content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadAliasWithCollectionsAsync(IEnumerable{string},IEnumerable{string},CancellationToken)">
      <example>
This sample shows how to call SpreadAliasWithCollectionsAsync with required parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
SpreadTypeSpecClient client = new SpreadTypeSpecClient(endpoint);

Response response = await client.SpreadAliasWithCollectionsAsync(new string[]
{
"<requiredStringList>"
}, optionalStringList: new string[]
{
"<optionalStringList>"
});
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadAliasWithCollections(IEnumerable{string},IEnumerable{string},CancellationToken)">
      <example>
This sample shows how to call SpreadAliasWithCollections with required parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
SpreadTypeSpecClient client = new SpreadTypeSpecClient(endpoint);

Response response = client.SpreadAliasWithCollections(new string[]
{
"<requiredStringList>"
}, optionalStringList: new string[]
{
"<optionalStringList>"
});
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadAliasWithCollectionsAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call SpreadAliasWithCollectionsAsync with required request content.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
SpreadTypeSpecClient client = new SpreadTypeSpecClient(endpoint);

RequestContent content = RequestContent.Create(new Dictionary<string, object>()
{
    ["requiredStringList"] = new object[]
{
"<requiredStringList>"
},
});
Response response = await client.SpreadAliasWithCollectionsAsync(content);
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call SpreadAliasWithCollectionsAsync with all request content.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
SpreadTypeSpecClient client = new SpreadTypeSpecClient(endpoint);

RequestContent content = RequestContent.Create(new Dictionary<string, object>()
{
    ["requiredStringList"] = new object[]
{
"<requiredStringList>"
},
    ["optionalStringList"] = new object[]
{
"<optionalStringList>"
},
});
Response response = await client.SpreadAliasWithCollectionsAsync(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SpreadAliasWithCollections(RequestContent,RequestContext)">
      <example>
This sample shows how to call SpreadAliasWithCollections with required request content.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
SpreadTypeSpecClient client = new SpreadTypeSpecClient(endpoint);

RequestContent content = RequestContent.Create(new Dictionary<string, object>()
{
    ["requiredStringList"] = new object[]
{
"<requiredStringList>"
},
});
Response response = client.SpreadAliasWithCollections(content);
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call SpreadAliasWithCollections with all request content.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
SpreadTypeSpecClient client = new SpreadTypeSpecClient(endpoint);

RequestContent content = RequestContent.Create(new Dictionary<string, object>()
{
    ["requiredStringList"] = new object[]
{
"<requiredStringList>"
},
    ["optionalStringList"] = new object[]
{
"<optionalStringList>"
},
});
Response response = client.SpreadAliasWithCollections(content);
Console.WriteLine(response.Status);
]]></code></example>
    </member>
  </members>
</doc>