import "@typespec/rest";
import "./decorators.mjs";
import "@azure-tools/typespec-client-generator-core";

using TypeSpec.Http;
using Azure.ClientGenerator.Core;

@service(
    {
        title: "Pet Store Service",
        version: "2021-03-25"
    }
)
@doc("This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.")
@server(
    "{petStoreUrl}",
    "Endpoint Service",
    {
        petStoreUrl: string,
    }
)
namespace PetStore;

// Model types
model Pet {
  name: string;
  tag?: string;

  @minValue(0)
  @maxValue(20)
  age: int32;
}

model Toy {
  id: int64;
  petId: int64;
  name: string;
}

@doc("Error")
@error
model Error {
  code: int32;
  message: string;
}

@doc("Not modified")
model NotModified<T> {
  @statusCode _: 304;
  @body body: T;
}

@friendlyName("{name}ListResults", T)
model ResponsePage<T> {
  items: T[];
  nextLink?: string;
}

model PetId {
  @path
  @doc("The id of pet.")
  petId: int32;
}

@doc("Extensible enum Values for pet kind")
enum PetKind {
    Dog: "dog",
    Cat: "cat"
}

@doc("Manage your pets. You can delete or get the Pet from pet store.")
@summary("Manage your pets.")
@route("/pets")
namespace Pets {
  @doc("Delete a pet.")
  @summary("delete.")
  @delete
  @convenientAPI(true)
  op delete(...PetId): Response<200> | Error;

  // @fancyDoc("List pets.")
  // op list(@query nextLink?: string): OkResponse<ResponsePage<Pet>> | Error;

  @doc("Returns a pet. Supports eTags.")
  @convenientAPI(true)
  op read(...PetId): Pet | (NotModifiedResponse & Pet) | Error;

  @convenientAPI(true)
  @post op create(@body pet: Pet): Pet | Error;

  @convenientAPI(true)
  @get op getPetByKind(@path kind: PetKind): Pet | Error;

  @convenientAPI(true)
  @get op GetFirstPet(@query start?: int32): Pet | Error;
}
