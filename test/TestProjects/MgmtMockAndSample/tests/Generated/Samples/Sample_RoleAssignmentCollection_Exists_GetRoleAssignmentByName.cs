// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.Resources;

namespace MgmtMockAndSample
{
    public partial class Sample_RoleAssignmentCollection_Exists_GetRoleAssignmentByName
    {
        // Get role assignment by name
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Exists()
        {
            // Generated from example definition: 
            // this example is just showing the usage of "RoleAssignments_Get" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this ArmResource created on azure
            // for more information of creating ArmResource, please refer to the document of ArmResource
            string scope = "scope";
            ResourceIdentifier resourceId = new ResourceIdentifier(string.Format("/{0}", scope));
            GenericResource resource = client.GetGenericResource(resourceId);

            // get the collection of this RoleAssignmentResource
            MgmtMockAndSample.RoleAssignmentCollection collection = resource.GetRoleAssignments();

            // invoke the operation
            string roleAssignmentName = "roleAssignmentName";
            bool result = await collection.ExistsAsync(roleAssignmentName);

            Console.WriteLine($"Succeeded: {result}");
        }
    }
}
