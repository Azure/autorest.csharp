<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetPaginationLedgerEntriesAsync(ListLedgerEntryInputBody,CancellationToken)">
<example>
This sample shows how to call GetPaginationLedgerEntriesAsync with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PaginationClient(endpoint, credential);

var bodyInput = new ListLedgerEntryInputBody("<requiredString>", 1234);
await foreach (var item in client.GetPaginationLedgerEntriesAsync(bodyInput))
{
}
]]></code>
</example>
    </member>
    <member name="GetPaginationLedgerEntries(ListLedgerEntryInputBody,CancellationToken)">
<example>
This sample shows how to call GetPaginationLedgerEntries with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PaginationClient(endpoint, credential);

var bodyInput = new ListLedgerEntryInputBody("<requiredString>", 1234);
foreach (var item in client.GetPaginationLedgerEntries(bodyInput))
{
}
]]></code>
</example>
    </member>
    <member name="GetPaginationLedgerEntriesAsync(RequestContent,RequestContext)">
<example>
This sample shows how to call GetPaginationLedgerEntriesAsync with required request content and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PaginationClient(endpoint, credential);

var data = new {
    requiredString = "<requiredString>",
    requiredInt = 1234,
};

await foreach (var item in client.GetPaginationLedgerEntriesAsync(RequestContent.Create(data), new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("contents").ToString());
    Console.WriteLine(result.GetProperty("collectionId").ToString());
    Console.WriteLine(result.GetProperty("transactionId").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetPaginationLedgerEntries(RequestContent,RequestContext)">
<example>
This sample shows how to call GetPaginationLedgerEntries with required request content and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PaginationClient(endpoint, credential);

var data = new {
    requiredString = "<requiredString>",
    requiredInt = 1234,
};

foreach (var item in client.GetPaginationLedgerEntries(RequestContent.Create(data), new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("contents").ToString());
    Console.WriteLine(result.GetProperty("collectionId").ToString());
    Console.WriteLine(result.GetProperty("transactionId").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetLedgerEntriesAsync(CancellationToken)">
<example>
This sample shows how to call GetLedgerEntriesAsync.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PaginationClient(endpoint, credential);

await foreach (var item in client.GetLedgerEntriesAsync())
{
}
]]></code>
</example>
    </member>
    <member name="GetLedgerEntries(CancellationToken)">
<example>
This sample shows how to call GetLedgerEntries.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PaginationClient(endpoint, credential);

foreach (var item in client.GetLedgerEntries())
{
}
]]></code>
</example>
    </member>
    <member name="GetLedgerEntriesAsync(RequestContext)">
<example>
This sample shows how to call GetLedgerEntriesAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PaginationClient(endpoint, credential);

await foreach (var item in client.GetLedgerEntriesAsync(new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("contents").ToString());
    Console.WriteLine(result.GetProperty("collectionId").ToString());
    Console.WriteLine(result.GetProperty("transactionId").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetLedgerEntries(RequestContext)">
<example>
This sample shows how to call GetLedgerEntries with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PaginationClient(endpoint, credential);

foreach (var item in client.GetLedgerEntries(new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("contents").ToString());
    Console.WriteLine(result.GetProperty("collectionId").ToString());
    Console.WriteLine(result.GetProperty("transactionId").ToString());
}
]]></code>
</example>
    </member>
  </members>
</doc>