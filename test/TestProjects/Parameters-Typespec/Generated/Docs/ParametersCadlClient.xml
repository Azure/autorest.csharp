<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="OperationAsync(Int32,Int32,RequestContext)">
<example>
This sample shows how to call OperationAsync with required parameters and parse the result.
<code><![CDATA[
var client = new ParametersCadlClient();

Response response = await client.OperationAsync(1234);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call OperationAsync with all parameters, and how to parse the result.
<code><![CDATA[
var client = new ParametersCadlClient();

Response response = await client.OperationAsync(1234, 1234);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>Result</c>:
<code>{
  id: string, # Required.
}
</code>

</remarks>
    </member>
    <member name="Operation(Int32,Int32,RequestContext)">
<example>
This sample shows how to call Operation with required parameters and parse the result.
<code><![CDATA[
var client = new ParametersCadlClient();

Response response = client.Operation(1234);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call Operation with all parameters, and how to parse the result.
<code><![CDATA[
var client = new ParametersCadlClient();

Response response = client.Operation(1234, 1234);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>Result</c>:
<code>{
  id: string, # Required.
}
</code>

</remarks>
    </member>
    <member name="Operation2Async(Int32,Int32,RequestContext)">
<example>
This sample shows how to call Operation2Async with required parameters and parse the result.
<code><![CDATA[
var client = new ParametersCadlClient();

Response response = await client.Operation2Async(1234);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call Operation2Async with all parameters, and how to parse the result.
<code><![CDATA[
var client = new ParametersCadlClient();

Response response = await client.Operation2Async(1234, 1234);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>Result</c>:
<code>{
  id: string, # Required.
}
</code>

</remarks>
    </member>
    <member name="Operation2(Int32,Int32,RequestContext)">
<example>
This sample shows how to call Operation2 with required parameters and parse the result.
<code><![CDATA[
var client = new ParametersCadlClient();

Response response = client.Operation2(1234);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call Operation2 with all parameters, and how to parse the result.
<code><![CDATA[
var client = new ParametersCadlClient();

Response response = client.Operation2(1234, 1234);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>Result</c>:
<code>{
  id: string, # Required.
}
</code>

</remarks>
    </member>
  </members>
</doc>