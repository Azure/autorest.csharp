// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace ConfidentLevelsInTsp.Models
{
    /// <summary> The dog with a union type. </summary>
    internal partial class PollutedDog : PollutedPet
    {
        /// <summary> Initializes a new instance of <see cref="PollutedDog"/>. </summary>
        /// <param name="name"> The name of the pet. </param>
        /// <param name="woof"> Woof. </param>
        /// <param name="color"> Color, could be specified by a string or by an array of int as RGB. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/>, <paramref name="woof"/> or <paramref name="color"/> is null. </exception>
        public PollutedDog(string name, string woof, object color) : base(name)
        {
            Argument.AssertNotNull(name, nameof(name));
            Argument.AssertNotNull(woof, nameof(woof));
            Argument.AssertNotNull(color, nameof(color));

            Kind = "dog";
            Woof = woof;
            Color = color;
        }

        /// <summary> Initializes a new instance of <see cref="PollutedDog"/>. </summary>
        /// <param name="kind"> Discriminator. </param>
        /// <param name="name"> The name of the pet. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="woof"> Woof. </param>
        /// <param name="color"> Color, could be specified by a string or by an array of int as RGB. </param>
        internal PollutedDog(string kind, string name, IDictionary<string, BinaryData> serializedAdditionalRawData, string woof, object color) : base(kind, name, serializedAdditionalRawData)
        {
            Woof = woof;
            Color = color;
        }

        /// <summary> Initializes a new instance of <see cref="PollutedDog"/> for deserialization. </summary>
        internal PollutedDog()
        {
        }

        /// <summary> Woof. </summary>
        public string Woof { get; set; }
        /// <summary> Color, could be specified by a string or by an array of int as RGB. </summary>
        public object Color { get; set; }
    }
}
