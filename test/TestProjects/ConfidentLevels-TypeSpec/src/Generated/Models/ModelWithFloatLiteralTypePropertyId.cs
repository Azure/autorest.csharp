// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;
using System.Globalization;

namespace ConfidentLevelsInTsp.Models
{
    /// <summary> The ModelWithFloatLiteralTypeProperty_id. </summary>
    internal readonly partial struct ModelWithFloatLiteralTypePropertyId : IEquatable<ModelWithFloatLiteralTypePropertyId>
    {
        private readonly float _value;

        /// <summary> Initializes a new instance of <see cref="ModelWithFloatLiteralTypePropertyId"/>. </summary>
        public ModelWithFloatLiteralTypePropertyId(float value)
        {
            _value = value;
        }

        private const float _3141592Value = 3.141592F;

        /// <summary> 3.141592. </summary>
        public static ModelWithFloatLiteralTypePropertyId _3141592 { get; } = new ModelWithFloatLiteralTypePropertyId(_3141592Value);

        internal float ToSerialSingle() => _value;

        /// <summary> Determines if two <see cref="ModelWithFloatLiteralTypePropertyId"/> values are the same. </summary>
        public static bool operator ==(ModelWithFloatLiteralTypePropertyId left, ModelWithFloatLiteralTypePropertyId right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ModelWithFloatLiteralTypePropertyId"/> values are not the same. </summary>
        public static bool operator !=(ModelWithFloatLiteralTypePropertyId left, ModelWithFloatLiteralTypePropertyId right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="ModelWithFloatLiteralTypePropertyId"/>. </summary>
        public static implicit operator ModelWithFloatLiteralTypePropertyId(float value) => new ModelWithFloatLiteralTypePropertyId(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ModelWithFloatLiteralTypePropertyId other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ModelWithFloatLiteralTypePropertyId other) => Equals(_value, other._value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value.GetHashCode();
        /// <inheritdoc />
        public override string ToString() => _value.ToString(CultureInfo.InvariantCulture);
    }
}
