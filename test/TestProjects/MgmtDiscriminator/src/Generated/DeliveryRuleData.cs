// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;
using MgmtDiscriminator.Models;

namespace MgmtDiscriminator
{
    /// <summary>
    /// A class representing the DeliveryRule data model.
    /// A rule that specifies a set of actions and conditions
    /// </summary>
    public partial class DeliveryRuleData : ResourceData
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="DeliveryRuleData"/>. </summary>
        public DeliveryRuleData()
        {
            AdditionalProperties = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of <see cref="DeliveryRuleData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="boolProperty"> A bool property to verify bicep generation. </param>
        /// <param name="location"> A location property to verify bicep generation. </param>
        /// <param name="locationWithCustomSerialization"> A location property to verify bicep generation. </param>
        /// <param name="dateTimeProperty"> A datetime property to verify bicep generation. </param>
        /// <param name="duration"> A duration property to verify bicep generation. </param>
        /// <param name="number"> A number property to verify bicep generation. </param>
        /// <param name="uri"> A number property to verify bicep generation. </param>
        /// <param name="shellProperty"> A shell property to verify bicep generation for empty objects. </param>
        /// <param name="sku"> The top level sku property. </param>
        /// <param name="unflattened"> The unflattened property. </param>
        /// <param name="properties"> The properties. </param>
        /// <param name="additionalProperties"> Additional Properties. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal DeliveryRuleData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, bool? boolProperty, AzureLocation? location, AzureLocation? locationWithCustomSerialization, DateTimeOffset? dateTimeProperty, TimeSpan? duration, int? number, Uri uri, Shell shellProperty, Sku1 sku, Unflattened unflattened, DeliveryRuleProperties properties, IDictionary<string, string> additionalProperties, IDictionary<string, BinaryData> serializedAdditionalRawData) : base(id, name, resourceType, systemData)
        {
            BoolProperty = boolProperty;
            Location = location;
            LocationWithCustomSerialization = locationWithCustomSerialization;
            DateTimeProperty = dateTimeProperty;
            Duration = duration;
            Number = number;
            Uri = uri;
            ShellProperty = shellProperty;
            Sku = sku;
            Unflattened = unflattened;
            Properties = properties;
            AdditionalProperties = additionalProperties;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> A bool property to verify bicep generation. </summary>
        [WirePath("boolProperty")]
        public bool? BoolProperty { get; set; }
        /// <summary> A location property to verify bicep generation. </summary>
        [WirePath("location")]
        public AzureLocation? Location { get; set; }
        /// <summary> A location property to verify bicep generation. </summary>
        [WirePath("locationWithCustomSerialization")]
        public AzureLocation? LocationWithCustomSerialization { get; set; }
        /// <summary> A datetime property to verify bicep generation. </summary>
        [WirePath("dateTimeProperty")]
        public DateTimeOffset? DateTimeProperty { get; set; }
        /// <summary> A duration property to verify bicep generation. </summary>
        [WirePath("duration")]
        public TimeSpan? Duration { get; set; }
        /// <summary> A number property to verify bicep generation. </summary>
        [WirePath("number")]
        public int? Number { get; set; }
        /// <summary> A number property to verify bicep generation. </summary>
        [WirePath("uri")]
        public Uri Uri { get; set; }
        /// <summary> A shell property to verify bicep generation for empty objects. </summary>
        [WirePath("shellProperty")]
        public Shell ShellProperty { get; set; }
        /// <summary> The top level sku property. </summary>
        internal Sku1 Sku { get; set; }
        /// <summary> The childmost sku property. </summary>
        [WirePath("sku.name1.nestedName")]
        public string NestedName
        {
            get => Sku is null ? default : Sku.NestedName;
            set
            {
                if (Sku is null)
                    Sku = new Sku1();
                Sku.NestedName = value;
            }
        }

        /// <summary> The unflattened property. </summary>
        [WirePath("unflattened")]
        public Unflattened Unflattened { get; set; }
        /// <summary> The properties. </summary>
        [WirePath("properties")]
        public DeliveryRuleProperties Properties { get; set; }
        /// <summary> Additional Properties. </summary>
        [WirePath("AdditionalProperties")]
        public IDictionary<string, string> AdditionalProperties { get; }
    }
}
