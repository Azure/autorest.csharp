// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using MixApiVersion;
using NUnit.Framework;

namespace MixApiVersion.Tests
{
    public partial class MixApiVersionClientTests : MixApiVersionTestBase
    {
        public MixApiVersionClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Only validating compilation of test scaffoldings")]
        public async Task Delete_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            MixApiVersionClient client = CreateMixApiVersionClient(endpoint);

            Response response = await client.DeleteAsync("<name>");
        }

        [Test]
        [Ignore("Only validating compilation of test scaffoldings")]
        public async Task Delete_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            MixApiVersionClient client = CreateMixApiVersionClient(endpoint);

            Response response = await client.DeleteAsync("<name>");
        }

        [Test]
        [Ignore("Only validating compilation of test scaffoldings")]
        public async Task Read_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            MixApiVersionClient client = CreateMixApiVersionClient(endpoint);

            Response response = await client.ReadAsync(1234, null);
        }

        [Test]
        [Ignore("Only validating compilation of test scaffoldings")]
        public async Task Read_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            MixApiVersionClient client = CreateMixApiVersionClient(endpoint);

            Response response = await client.ReadAsync(1234, null);
        }

        [Test]
        [Ignore("Only validating compilation of test scaffoldings")]
        public async Task Create_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            MixApiVersionClient client = CreateMixApiVersionClient(endpoint);

            RequestContent content = RequestContent.Create(new
            {
                age = 1234,
            });
            Response response = await client.CreateAsync(content);
        }

        [Test]
        [Ignore("Only validating compilation of test scaffoldings")]
        public async Task Create_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            MixApiVersionClient client = CreateMixApiVersionClient(endpoint);

            RequestContent content = RequestContent.Create(new
            {
                tag = "<tag>",
                age = 1234,
            });
            Response response = await client.CreateAsync(content);
        }

        [Test]
        [Ignore("Only validating compilation of test scaffoldings")]
        public async Task GetPets_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            MixApiVersionClient client = CreateMixApiVersionClient(endpoint);

            await foreach (BinaryData item in client.GetPetsAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of test scaffoldings")]
        public async Task GetPets_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            MixApiVersionClient client = CreateMixApiVersionClient(endpoint);

            await foreach (BinaryData item in client.GetPetsAsync(null))
            {
            }
        }
    }
}
