<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="OperationAsync(RequestContent,RequestContext)">
<example>
This sample shows how to call OperationAsync.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new SecurityDefinitionClient(endpoint, credential);

var data = new {};

Response response = await client.OperationAsync(RequestContent.Create(data));
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call OperationAsync with all request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new SecurityDefinitionClient(endpoint, credential);

var data = new {
    Code = "<Code>",
    Status = "<Status>",
};

Response response = await client.OperationAsync(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Operation(RequestContent,RequestContext)">
<example>
This sample shows how to call Operation.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new SecurityDefinitionClient(endpoint, credential);

var data = new {};

Response response = client.Operation(RequestContent.Create(data));
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call Operation with all request content.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new SecurityDefinitionClient(endpoint, credential);

var data = new {
    Code = "<Code>",
    Status = "<Status>",
};

Response response = client.Operation(RequestContent.Create(data), new RequestContext());
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
  </members>
</doc>