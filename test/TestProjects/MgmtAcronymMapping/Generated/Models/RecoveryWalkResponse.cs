// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace MgmtAcronymMapping.Models
{
    /// <summary>
    /// Response after calling a manual recovery walk
    /// Serialized Name: RecoveryWalkResponse
    /// </summary>
    public partial class RecoveryWalkResponse
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="RecoveryWalkResponse"/>. </summary>
        internal RecoveryWalkResponse()
        {
        }

        /// <summary> Initializes a new instance of <see cref="RecoveryWalkResponse"/>. </summary>
        /// <param name="walkPerformed">
        /// Whether the recovery walk was performed
        /// Serialized Name: RecoveryWalkResponse.walkPerformed
        /// </param>
        /// <param name="nextPlatformUpdateDomain">
        /// The next update domain that needs to be walked. Null means walk spanning all update domains has been completed
        /// Serialized Name: RecoveryWalkResponse.nextPlatformUpdateDomain
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal RecoveryWalkResponse(bool? walkPerformed, int? nextPlatformUpdateDomain, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            WalkPerformed = walkPerformed;
            NextPlatformUpdateDomain = nextPlatformUpdateDomain;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary>
        /// Whether the recovery walk was performed
        /// Serialized Name: RecoveryWalkResponse.walkPerformed
        /// </summary>
        public bool? WalkPerformed { get; }
        /// <summary>
        /// The next update domain that needs to be walked. Null means walk spanning all update domains has been completed
        /// Serialized Name: RecoveryWalkResponse.nextPlatformUpdateDomain
        /// </summary>
        public int? NextPlatformUpdateDomain { get; }
    }
}
