// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.TestFramework;

namespace MgmtMockTest.Tests.Mock
{
    /// <summary> Test for DeletedManagedHsmCollection. </summary>
    public partial class DeletedManagedHsmCollectionMockTests : MockTestBase
    {
        public DeletedManagedHsmCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Exists()
        {
            // Example: Retrieve a deleted managed HSM

            var subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000");
            var subscriptionResource = GetArmClient().GetSubscriptionResource(subscriptionResourceId);
            var collection = subscriptionResource.GetDeletedManagedHsms();
            await collection.ExistsAsync("westus", "hsm1");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Retrieve a deleted managed HSM

            var subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000");
            var subscriptionResource = GetArmClient().GetSubscriptionResource(subscriptionResourceId);
            var collection = subscriptionResource.GetDeletedManagedHsms();
            await collection.GetAsync("westus", "hsm1");
        }
    }
}
