// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
#region Usings

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using MgmtMockTest;
using MgmtMockTest.Models;
#endregion

#region Parameter decalarations
// Below parameters are extracted from swagger example files, please use your own values to execute the API lively.
ArmClient GetArmClient() => new ArmClient(new DefaultAzureCredential());
var subscriptionId = Environment.GetEnvironmentVariable("SUBSCRIPTION_ID") ?? "00000000-0000-0000-0000-000000000000";
var resourceGroupName = "hsm-group";  // Name of the resource group that contains the managed HSM pool.
var name = "hsm1";  // Name of the managed HSM Pool
#endregion

#region API invocation
// api-version: 2021-10-01
// x-ms-original-file: file:///C:/ZZ/projects/codegen/autorest.csharp/test/TestProjects/MgmtMockTest/src/examples/ManagedHsm_CreateOrUpdate.json
// Example: Create a new managed HSM Pool or update an existing managed HSM Pool

var resourceGroupResourceId = global::Azure.ResourceManager.Resources.ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
var resourceGroupResource = GetArmClient().GetResourceGroupResource(resourceGroupResourceId);
var collection = resourceGroupResource.GetManagedHsms();
var operation = collection.CreateOrUpdate(WaitUntil.Completed, name, new ManagedHsmData(new AzureLocation("westus"))
{
    Properties = new ManagedHsmProperties()
    {
        Settings = BinaryData.FromObjectAsJson(new
        {
            config1 = "value1",
            config2 = "8427",
            config3 = "false",
            config4 = new[] { "1", "2" },
            config5 = new
            {
                inner = "something"
            }
        }),
        ProtectedSettings = BinaryData.FromObjectAsJson(new
        {
            protected1 = "value2",
            protected2 = "10",
            protected3 = "false",
            protected4 = new[] { "1", "2", "3" },
            protected5 = new
            {
                protectedInner = "something else"
            }
        }),
        RawMessage = Convert.FromBase64String("PFX-or-PEM-blob"),
        TenantId = Guid.Parse("00000000-0000-0000-0000-000000000000"),
        InitialAdminObjectIds =
{
"00000000-0000-0000-0000-000000000000"
},
        EnableSoftDelete = true,
        SoftDeleteRetentionInDays = 90,
        EnablePurgeProtection = true,
        NetworkAcls = new MhsmNetworkRuleSet()
        {
            VirtualNetworkRules =
{
new WritableSubResource()
{
Id = new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/hsm-group/providers/Microsoft.Network/virtualNetworks/vnet1/subnets/default"),
}
},
        },
    },
    Sku = new ManagedHsmSku(ManagedHsmSkuFamily.B, ManagedHsmSkuName.StandardB1),
    Tags =
{
["Dept"] = "hsm",
["Environment"] = "dogfood",
},
});

Console.WriteLine($"Succeed on ResourceId: {operation.Value.Data.Id}");
Console.WriteLine($"Full Resource content: {JsonSerializer.Serialize(operation.Value.Data)}");
#endregion
