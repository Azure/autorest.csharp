// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.IO;
using System.Text.Json;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace LroBasicCadl.Samples
{
    public class Samples_LroBasicCadlClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CreateProject()
        {
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new LroBasicCadlClient(endpoint);

            var data = new { };

            var operation = client.CreateProject(WaitUntil.Completed, RequestContent.Create(data));

            Console.WriteLine(operation.GetRawResponse().Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_UpdateProject()
        {
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new LroBasicCadlClient(endpoint);

            var data = new { };

            var operation = client.UpdateProject(WaitUntil.Completed, "<id>", RequestContent.Create(data));

            BinaryData responseData = operation.Value;
            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CreateThing()
        {
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new LroBasicCadlClient(endpoint);

            var data = new
            {
                name = "<name>",
            };

            var operation = client.CreateThing(WaitUntil.Completed, RequestContent.Create(data));

            BinaryData responseData = operation.Value;
            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("name").ToString());
        }
    }
}
