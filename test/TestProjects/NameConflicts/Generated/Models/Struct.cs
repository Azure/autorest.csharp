// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace NameConflicts.Models
{
    /// <summary> The Struct. </summary>
    public partial class Struct : Class
    {
        /// <summary> Initializes a new instance of Struct. </summary>
        public Struct()
        {
        }

        /// <summary> Initializes a new instance of Struct. </summary>
        /// <param name="abstract"> The Abstract. </param>
        /// <param name="add"> The Add. </param>
        /// <param name="alias"> The Alias. </param>
        /// <param name="as"> The As. </param>
        /// <param name="ascending"> The Ascending. </param>
        /// <param name="async"> The Async. </param>
        /// <param name="await"> The Await. </param>
        /// <param name="base"> The Base. </param>
        /// <param name="bool"> The Bool. </param>
        /// <param name="break"> The Break. </param>
        /// <param name="by"> The By. </param>
        /// <param name="byte"> The Byte. </param>
        /// <param name="catch"> The Catch. </param>
        /// <param name="char"> The Char. </param>
        /// <param name="checked"> The Checked. </param>
        /// <param name="const"> The Const. </param>
        /// <param name="continue"> The Continue. </param>
        /// <param name="classValue"> The ClassValue. </param>
        /// <param name="decimal"> The Decimal. </param>
        /// <param name="default"> The Default. </param>
        /// <param name="delegate"> The Delegate. </param>
        /// <param name="descending"> The Descending. </param>
        /// <param name="do"> The Do. </param>
        /// <param name="double"> The Double. </param>
        /// <param name="dynamic"> The Dynamic. </param>
        /// <param name="else"> The Else. </param>
        /// <param name="enum"> The Enum. </param>
        /// <param name="event"> The Event. </param>
        /// <param name="explicit"> The Explicit. </param>
        /// <param name="extern"> The Extern. </param>
        /// <param name="false"> The False. </param>
        /// <param name="finally"> The Finally. </param>
        /// <param name="fixed"> The Fixed. </param>
        /// <param name="float"> The Float. </param>
        /// <param name="for"> The For. </param>
        /// <param name="foreach"> The Foreach. </param>
        /// <param name="from"> The From. </param>
        /// <param name="get"> The Get. </param>
        /// <param name="global"> The Global. </param>
        /// <param name="goto"> The Goto. </param>
        /// <param name="group"> The Group. </param>
        /// <param name="if"> The If. </param>
        /// <param name="implicit"> The Implicit. </param>
        /// <param name="in"> The In. </param>
        /// <param name="int"> The Int. </param>
        /// <param name="interface"> The Interface. </param>
        /// <param name="internal"> The Internal. </param>
        /// <param name="into"> The Into. </param>
        /// <param name="is"> The Is. </param>
        /// <param name="join"> The Join. </param>
        /// <param name="let"> The Let. </param>
        /// <param name="lock"> The Lock. </param>
        /// <param name="long"> The Long. </param>
        /// <param name="nameof"> The Nameof. </param>
        /// <param name="namespace"> The Namespace. </param>
        /// <param name="new"> The New. </param>
        /// <param name="nullProperty"> The NullProperty. </param>
        /// <param name="object"> The Object. </param>
        /// <param name="on"> The On. </param>
        /// <param name="operator"> The Operator. </param>
        /// <param name="orderby"> The Orderby. </param>
        /// <param name="out"> The Out. </param>
        /// <param name="override"> The Override. </param>
        /// <param name="params"> The Params. </param>
        /// <param name="partial"> The Partial. </param>
        /// <param name="private"> The Private. </param>
        /// <param name="protected"> The Protected. </param>
        /// <param name="public"> The Public. </param>
        /// <param name="readonly"> The Readonly. </param>
        /// <param name="ref"> The Ref. </param>
        /// <param name="remove"> The Remove. </param>
        /// <param name="return"> The Return. </param>
        /// <param name="sbyte"> The Sbyte. </param>
        /// <param name="sealed"> The Sealed. </param>
        /// <param name="select"> The Select. </param>
        /// <param name="set"> The Set. </param>
        /// <param name="short"> The Short. </param>
        /// <param name="sizeof"> The Sizeof. </param>
        /// <param name="stackalloc"> The Stackalloc. </param>
        /// <param name="static"> The Static. </param>
        /// <param name="string"> The String. </param>
        /// <param name="struct"> The Struct. </param>
        /// <param name="switch"> The Switch. </param>
        /// <param name="this"> The This. </param>
        /// <param name="throw"> The Throw. </param>
        /// <param name="true"> The True. </param>
        /// <param name="try"> The Try. </param>
        /// <param name="typeof"> The Typeof. </param>
        /// <param name="uint"> The Uint. </param>
        /// <param name="ulong"> The Ulong. </param>
        /// <param name="unchecked"> The Unchecked. </param>
        /// <param name="unmanaged"> The Unmanaged. </param>
        /// <param name="unsafe"> The Unsafe. </param>
        /// <param name="ushort"> The Ushort. </param>
        /// <param name="using"> The Using. </param>
        /// <param name="value"> The Value. </param>
        /// <param name="var"> The Var. </param>
        /// <param name="virtual"> The Virtual. </param>
        /// <param name="void"> The Void. </param>
        /// <param name="volatile"> The Volatile. </param>
        /// <param name="when"> The When. </param>
        /// <param name="where"> The Where. </param>
        /// <param name="while"> The While. </param>
        /// <param name="yield"> The Yield. </param>
        /// <param name="system"> The System. </param>
        /// <param name="toStringValue"> The ToStringValue. </param>
        /// <param name="equalsValue"> The EqualsValue. </param>
        /// <param name="getHashCodeValue"> The GetHashCodeValue. </param>
        /// <param name="one"> The One. </param>
        internal Struct(string @abstract, string @add, string @alias, string @as, string @ascending, string @async, string @await, string @base, string @bool, string @break, string @by, string @byte, string @catch, string @char, string @checked, string @const, string @continue, string classValue, string @decimal, string @default, string @delegate, string @descending, string @do, string @double, string @dynamic, string @else, string @enum, string @event, string @explicit, string @extern, string @false, string @finally, string @fixed, string @float, string @for, string @foreach, string @from, string @get, string @global, string @goto, string group, string @if, string @implicit, string @in, string @int, string @interface, string @internal, string @into, string @is, string @join, string @let, string @lock, string @long, string @nameof, string @namespace, string @new, string nullProperty, string @object, string @on, string @operator, string orderby, string @out, string @override, string @params, string @partial, string @private, string @protected, string @public, string @readonly, string @ref, string @remove, string @return, string @sbyte, string @sealed, string select, string @set, string @short, string @sizeof, string @stackalloc, string @static, string @string, string @struct, string @switch, string @this, string @throw, string @true, string @try, string @typeof, string @uint, string @ulong, string @unchecked, string @unmanaged, string @unsafe, string @ushort, string @using, string value, string @var, string @virtual, string @void, string @volatile, string @when, string @where, string @while, string @yield, SystemEnum? system, string toStringValue, string equalsValue, string getHashCodeValue, string one) : base(@abstract, @add, @alias, @as, @ascending, @async, @await, @base, @bool, @break, @by, @byte, @catch, @char, @checked, @const, @continue, classValue, @decimal, @default, @delegate, @descending, @do, @double, @dynamic, @else, @enum, @event, @explicit, @extern, @false, @finally, @fixed, @float, @for, @foreach, @from, @get, @global, @goto, group, @if, @implicit, @in, @int, @interface, @internal, @into, @is, @join, @let, @lock, @long, @nameof, @namespace, @new, nullProperty, @object, @on, @operator, orderby, @out, @override, @params, @partial, @private, @protected, @public, @readonly, @ref, @remove, @return, @sbyte, @sealed, select, @set, @short, @sizeof, @stackalloc, @static, @string, @struct, @switch, @this, @throw, @true, @try, @typeof, @uint, @ulong, @unchecked, @unmanaged, @unsafe, @ushort, @using, value, @var, @virtual, @void, @volatile, @when, @where, @while, @yield, system, toStringValue, equalsValue, getHashCodeValue)
        {
            One = one;
        }

        /// <summary> The One. </summary>
        public string One { get; set; }
    }
}
