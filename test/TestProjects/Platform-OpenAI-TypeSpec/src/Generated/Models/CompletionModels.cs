// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace OpenAI.Models
{
    /// <summary> Completion models. </summary>
    public readonly partial struct CompletionModels : IEquatable<CompletionModels>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="CompletionModels"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public CompletionModels(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string Babbage002Value = "babbage-002";
        private const string Davinci002Value = "davinci-002";
        private const string TextDavinci003Value = "text-davinci-003";
        private const string TextDavinci002Value = "text-davinci-002";
        private const string TextDavinci001Value = "text-davinci-001";
        private const string CodeDavinci002Value = "code-davinci-002";
        private const string TextCurie001Value = "text-curie-001";
        private const string TextBabbage001Value = "text-babbage-001";
        private const string TextAda001Value = "text-ada-001";

        /// <summary> babbage-002. </summary>
        public static CompletionModels Babbage002 { get; } = new CompletionModels(Babbage002Value);
        /// <summary> davinci-002. </summary>
        public static CompletionModels Davinci002 { get; } = new CompletionModels(Davinci002Value);
        /// <summary> text-davinci-003. </summary>
        public static CompletionModels TextDavinci003 { get; } = new CompletionModels(TextDavinci003Value);
        /// <summary> text-davinci-002. </summary>
        public static CompletionModels TextDavinci002 { get; } = new CompletionModels(TextDavinci002Value);
        /// <summary> text-davinci-001. </summary>
        public static CompletionModels TextDavinci001 { get; } = new CompletionModels(TextDavinci001Value);
        /// <summary> code-davinci-002. </summary>
        public static CompletionModels CodeDavinci002 { get; } = new CompletionModels(CodeDavinci002Value);
        /// <summary> text-curie-001. </summary>
        public static CompletionModels TextCurie001 { get; } = new CompletionModels(TextCurie001Value);
        /// <summary> text-babbage-001. </summary>
        public static CompletionModels TextBabbage001 { get; } = new CompletionModels(TextBabbage001Value);
        /// <summary> text-ada-001. </summary>
        public static CompletionModels TextAda001 { get; } = new CompletionModels(TextAda001Value);
        /// <summary> Determines if two <see cref="CompletionModels"/> values are the same. </summary>
        public static bool operator ==(CompletionModels left, CompletionModels right) => left.Equals(right);
        /// <summary> Determines if two <see cref="CompletionModels"/> values are not the same. </summary>
        public static bool operator !=(CompletionModels left, CompletionModels right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="CompletionModels"/>. </summary>
        public static implicit operator CompletionModels(string value) => new CompletionModels(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is CompletionModels other && Equals(other);
        /// <inheritdoc />
        public bool Equals(CompletionModels other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
