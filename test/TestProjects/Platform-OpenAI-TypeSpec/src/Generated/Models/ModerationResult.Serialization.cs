// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.ServiceModel.Rest.Core;
using System.Text.Json;

namespace OpenAI.Models
{
    public partial class ModerationResult
    {
        internal static ModerationResult DeserializeModerationResult(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            bool flagged = default;
            ModerationCategories categories = default;
            ModerationCategoryScores categoryScores = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("flagged"u8))
                {
                    flagged = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("categories"u8))
                {
                    categories = ModerationCategories.DeserializeModerationCategories(property.Value);
                    continue;
                }
                if (property.NameEquals("category_scores"u8))
                {
                    categoryScores = ModerationCategoryScores.DeserializeModerationCategoryScores(property.Value);
                    continue;
                }
            }
            return new ModerationResult(flagged, categories, categoryScores);
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="result"> The result to deserialize the model from. </param>
        internal static ModerationResult FromResponse(PipelineResponse result)
        {
            using var document = JsonDocument.Parse(result.Content);
            return DeserializeModerationResult(document.RootElement);
        }
    }
}
