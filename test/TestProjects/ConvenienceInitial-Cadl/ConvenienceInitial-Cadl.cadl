import "@cadl-lang/rest";
import "@cadl-lang/openapi";
import "@azure-tools/cadl-dpg";

@serviceTitle("Convenience method in CADL")
@serviceVersion("0.1.0")
@doc("CADL project to test convenience method.")
namespace ConvenienceInitialInCadl;

using Cadl.Http;
using Cadl.Rest;
using Azure.DPG;

@doc("A model.")
model Model {
    id: string;
}

@route("/initialProtocol")
@doc("Initial operation only has protocol method.")
@get
op initialProtocol(): Model;

@route("/initialConvenienceWithOptional")
@doc("Initial operation has protocol method with optional RequestContext and convenience method.")
@get
@convenienceAPI
op initialConvenienceWithOptional(): Model;

@route("/initialConvenienceWithRequired")
@doc("Initial operation has protocol method with required RequestContext and convenience method.")
@get
@convenienceAPI
op initialConvenienceWithRequired(): Model;

@route("/initialConvenienceShouldNotGenerate")
@doc("Initial operation has protocol method marked with convenience method, but the convenience method should not be generated.")
@get
@convenienceAPI
op initialConvenienceShouldNotGenerate(): Response<200>;

@route("/initialProtocolShouldNotGenerateConvenience")
@doc("Initial operation only has protocol method, but the convenience method should not be generated even it marks the convenience decorator.")
@get
op initialProtocolShouldNotGenerateConvenience(): Response<200>;