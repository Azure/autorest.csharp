// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.ResourceManager;

namespace SupersetFlattenInheritance
{
    /// <summary> A class to add extension methods to ArmClient. </summary>
    public static partial class ArmClientExtensions
    {
        #region CustomModel1
        /// <summary> Gets an object representing a CustomModel1 along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="CustomModel1" /> object. </returns>
        public static CustomModel1 GetCustomModel1(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new CustomModel1(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region CustomModel2
        /// <summary> Gets an object representing a CustomModel2 along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="CustomModel2" /> object. </returns>
        public static CustomModel2 GetCustomModel2(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new CustomModel2(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region SubResourceModel1
        /// <summary> Gets an object representing a SubResourceModel1 along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SubResourceModel1" /> object. </returns>
        public static SubResourceModel1 GetSubResourceModel1(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new SubResourceModel1(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region SubResourceModel2
        /// <summary> Gets an object representing a SubResourceModel2 along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SubResourceModel2" /> object. </returns>
        public static SubResourceModel2 GetSubResourceModel2(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new SubResourceModel2(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region WritableSubResourceModel1
        /// <summary> Gets an object representing a WritableSubResourceModel1 along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="WritableSubResourceModel1" /> object. </returns>
        public static WritableSubResourceModel1 GetWritableSubResourceModel1(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new WritableSubResourceModel1(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region WritableSubResourceModel2
        /// <summary> Gets an object representing a WritableSubResourceModel2 along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="WritableSubResourceModel2" /> object. </returns>
        public static WritableSubResourceModel2 GetWritableSubResourceModel2(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new WritableSubResourceModel2(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ResourceModel1
        /// <summary> Gets an object representing a ResourceModel1 along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ResourceModel1" /> object. </returns>
        public static ResourceModel1 GetResourceModel1(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ResourceModel1(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ResourceModel2
        /// <summary> Gets an object representing a ResourceModel2 along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ResourceModel2" /> object. </returns>
        public static ResourceModel2 GetResourceModel2(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ResourceModel2(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region TrackedResourceModel1
        /// <summary> Gets an object representing a TrackedResourceModel1 along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="TrackedResourceModel1" /> object. </returns>
        public static TrackedResourceModel1 GetTrackedResourceModel1(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new TrackedResourceModel1(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region TrackedResourceModel2
        /// <summary> Gets an object representing a TrackedResourceModel2 along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="TrackedResourceModel2" /> object. </returns>
        public static TrackedResourceModel2 GetTrackedResourceModel2(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new TrackedResourceModel2(clientOptions, credential, uri, pipeline, id));
        }
        #endregion
    }
}
