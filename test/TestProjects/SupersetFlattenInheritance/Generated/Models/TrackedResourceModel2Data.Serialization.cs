// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;
using Azure.ResourceManager;

namespace SupersetFlattenInheritance
{
    public partial class TrackedResourceModel2Data : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Location))
            {
                writer.WritePropertyName("location");
                writer.WriteStringValue(Location);
            }
            if (Optional.IsCollectionDefined(Tags))
            {
                writer.WritePropertyName("tags");
                writer.WriteStartObject();
                foreach (var item in Tags)
                {
                    writer.WritePropertyName(item.Key);
                    writer.WriteStringValue(item.Value);
                }
                writer.WriteEndObject();
            }
            if (Optional.IsDefined(Foo))
            {
                writer.WritePropertyName("foo");
                writer.WriteStringValue(Foo);
            }
            if (Optional.IsDefined(Bar))
            {
                writer.WritePropertyName("bar");
                writer.WriteStringValue(Bar);
            }
            writer.WritePropertyName("properties");
            writer.WriteStartObject();
            if (Optional.IsDefined(FooPropertiesFoo))
            {
                writer.WritePropertyName("foo");
                writer.WriteStringValue(FooPropertiesFoo);
            }
            writer.WriteEndObject();
            writer.WriteEndObject();
        }

        internal static TrackedResourceModel2Data DeserializeTrackedResourceModel2Data(JsonElement element)
        {
            Optional<string> location = default;
            Optional<IDictionary<string, string>> tags = default;
            Optional<string> foo = default;
            Optional<string> bar = default;
            ResourceIdentifier id = default;
            Optional<string> name = default;
            Optional<string> type = default;
            Optional<string> foo0 = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("location"))
                {
                    location = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("tags"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    Dictionary<string, string> dictionary = new Dictionary<string, string>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, property0.Value.GetString());
                    }
                    tags = dictionary;
                    continue;
                }
                if (property.NameEquals("foo"))
                {
                    foo = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("bar"))
                {
                    bar = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("id"))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("properties"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("name"))
                        {
                            name = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("type"))
                        {
                            type = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("foo"))
                        {
                            foo0 = property0.Value.GetString();
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new TrackedResourceModel2Data(id, location.Value, Optional.ToDictionary(tags), foo.Value, bar.Value, name.Value, type.Value, foo0.Value);
        }
    }
}
