import "@cadl-lang/rest";
import "@cadl-lang/openapi";
import "@azure-tools/cadl-dpg";

@serviceTitle("Hello world")
@serviceVersion("0.1.0")
@doc("This is a sample cadl project.")
@server("http://localhost:300","Endpoint Service")
@useAuth(OAuth2Auth<[AuthFlow]> | ApiKeyAuth<ApiKeyLocation.header, "x-ms-api-key">)
@Cadl.Rest.produces("application/json")
@Cadl.Rest.consumes("application/json")
namespace CadlFirstTest;

model AuthFlow {
    type: OAuth2FlowType.clientCredentials;
    tokenUrl: "https://api.example.com/oauth2/token";
    refreshUrl: "https://api.example.com/oauth2/refresh";
    scopes: [
        "https://api.example.com/.default"
    ]
}

using Cadl.Http;
using Azure.DPG;

@doc("Simple enum")
enum SimpleEnum {
    One: "1",
    Two: "2",
    Four: "4"
}

@doc("Extensible enum Values")
enum ExtensibleEnumValues {
    One: "1",
    Two: "2",
    Four: "4"
}

@doc("Extensible enum")
@knownValues(ExtensibleEnumValues)
model ExtensibleEnum is string {}

model Thing {
  @doc("name of the Thing")
  name: string;
}

@friendlyName("Friend")
model NotFriend {
  @doc("name of the NotFriend")
  name: string;
}

model RoundTripModel {
  @doc("Required string, illustrating a reference type property.")
  requiredString: string;

  @doc("Required int, illustrating a value type property.")
  requiredInt: int32;

  @doc("Required collection of enums")
  requiredCollection: SimpleEnum[];

  @doc("Required dictionary of enums")
  requiredDictionary: Record<ExtensibleEnum>;

  @doc("Required model")
  requiredModel: Thing;
}

enum DaysOfWeekExtensibleEnumValues {
  "Monday",
  "Tuesday",
  "Wednesday",
  "Thursday",
  "Friday",
  "Saturday",
  "Sunday",
}
@knownValues(DaysOfWeekExtensibleEnumValues)
model DaysOfWeekExtensibleEnum is string;

@doc("Hello world service")
@route("/hello")
namespace Hello.Demo {
    @doc("Return hi")
    @get
    op sayHi(@header headParameter: string, @query queryParameter: string, @query optionalQuery?: string): Thing;
}

namespace Hello.Demo2 {
    @route("/againHi")
    @doc("Return hi again")
    @get
    @convenienceAPI
    op helloAgain(@header p1: string, @body action: RoundTripModel, @Cadl.Http.header contentType: "text/plain", @path p2: string): Thing;

    @route("/noContentType")
    @doc("Return hi again")
    @get
    op noContentType(@header p1: string, @body action: RoundTripModel, @path p2: string): Thing;

    @route("/demoHi")
    @convenienceAPI
    @doc("Return hi in demo2")
    @get
    op helloDemo2(): Thing;
}

@route("/top")
@doc("top level method")
@get
@convenienceAPI
op topAction(@path @format("date") action: string): Thing;

@route("/top2")
@doc("top level method2")
@get
op topAction2(): Thing;


@route("/patch")
@doc("top level patch")
@patch
@convenienceAPI
op patchAction(@body body: Thing): Thing;

@route("/anonymousBody")
@doc("body parameter without body decorator")
@post
@convenienceAPI
op anonymousBody( ...Thing ): Thing;

@route("/friendlyName")
@doc("Model can have its friendly name")
@post
@convenienceAPI
op friendlyModel(...NotFriend): NotFriend;

namespace EnumTest {
    @get
    @route("/unknown-value")
    @doc("get extensible enum")
    op getUnknownValue(): DaysOfWeekExtensibleEnum;
}