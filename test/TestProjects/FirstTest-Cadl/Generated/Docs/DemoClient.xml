<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="SayHiAsync(String,String,String,RequestContext)">
<example>
This sample shows how to call SayHiAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new DemoClient(credential);

Response response = await client.SayHiAsync("<headParameter>", "<queryParameter>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call SayHiAsync with all parameters, and how to parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new DemoClient(credential);

Response response = await client.SayHiAsync("<headParameter>", "<queryParameter>", "<optionalQuery>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>Thing</c>:
<code>{
  name: string, # Required.
}
</code>

</remarks>
    </member>
    <member name="SayHi(String,String,String,RequestContext)">
<example>
This sample shows how to call SayHi with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new DemoClient(credential);

Response response = client.SayHi("<headParameter>", "<queryParameter>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call SayHi with all parameters, and how to parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var client = new DemoClient(credential);

Response response = client.SayHi("<headParameter>", "<queryParameter>", "<optionalQuery>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>Thing</c>:
<code>{
  name: string, # Required.
}
</code>

</remarks>
    </member>
  </members>
</doc>