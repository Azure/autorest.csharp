// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure;
using Azure.Core.Extensions;
using CadlFirstTest;

namespace Microsoft.Extensions.Azure
{
    /// <summary> Extension methods to add clients to client builder. </summary>
    public static partial class CadlFirstTestClientBuilderExtensions
    {
        /// <param name="builder"></param>
        /// <param name="endpoint"> The Uri to use. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        public static IAzureClientBuilder<CadlFirstTestClient, CadlFirstTestClientOptions> AddCadlFirstTestClient<TBuilder>(TBuilder builder, Uri endpoint, AzureKeyCredential credential)
        where TBuilder : IAzureClientFactoryBuilder
        {
            return builder.RegisterClientFactory<CadlFirstTestClient, CadlFirstTestClientOptions>((options) => new CadlFirstTestClient(endpoint, credential, options));
        }

        /// <param name="builder"></param>
        /// <param name="endpoint"> The Uri to use. </param>
        public static IAzureClientBuilder<CadlFirstTestClient, CadlFirstTestClientOptions> AddCadlFirstTestClient<TBuilder>(TBuilder builder, Uri endpoint)
        where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            return builder.RegisterClientFactory<CadlFirstTestClient, CadlFirstTestClientOptions>((options, cred) => new CadlFirstTestClient(endpoint, cred, options));
        }

        /// <param name="builder"></param>
        /// <param name="configuration"></param>
        public static IAzureClientBuilder<CadlFirstTestClient, CadlFirstTestClientOptions> AddCadlFirstTestClient<TBuilder, TConfiguration>(TBuilder builder, TConfiguration configuration)
        where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<CadlFirstTestClient, CadlFirstTestClientOptions>(configuration);
        }
    }
}
