import "../ConvenienceInitial-Cadl/main.cadl";

namespace ConvenienceInCadl;

using Cadl.Http;
using Cadl.Rest;
using Azure.DPG;

@@convenienceAPI(protocol)
@@doc(protocol, "Initial operation only has protocol method. In the updated version, we add the convenience method.")
@@convenienceAPI(protocolShouldNotGenerateConvenience)
@@doc(protocolShouldNotGenerateConvenience, "Initial operation only has protocol method, but the convenience method should not be generated even it marks the convenience decorator.")
@@convenienceAPI(protocolOptionalQuery)
@@doc(protocolOptionalQuery, "Initial operation only has protocol method with optional query parameter. In the updated version, we add the convenience method.")
@@convenienceAPI(protocolRequiredQuery)
@@doc(protocolRequiredQuery, "Initial operation only has protocol method with required query parameter. In the updated version, we add the convenience method.")
@@convenienceAPI(protocolOptionalModel)
@@doc(protocolOptionalModel, "Initial operation only has protocol method with optional model parameter. In the updated version, we add the convenience method.")
@@convenienceAPI(protocolRequiredModel)
@@doc(protocolRequiredModel, "Initial operation only has protocol method with required model parameter. In the updated version, we add the convenience method.")
@@convenienceAPI(protocolOptionalBeforeRequired)
@@doc(protocolOptionalBeforeRequired, "Initial operation has protocol method with optioanl parameter before required parameter. In the updated version, we add the convenience method.")

@route("/updateConvenience")
@doc("No initial operation methods. In the updated version, we add the protocol method and convenience method.")
@get
@convenienceAPI()
op updateConvenience(): Model;

@route("/convenienceOptionalBeforeRequired")
@doc("No initial operation methods. In the updated version, we add the protocol method and convenience method.")
@post
@convenienceAPI()
op convenienceOptionalBeforeRequired(@query optional?: int32, @body required: Model): Response<200>;
