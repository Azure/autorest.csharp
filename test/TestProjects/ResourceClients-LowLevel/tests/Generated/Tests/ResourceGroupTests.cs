// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Identity;
using NUnit.Framework;
using ResourceClients_LowLevel;

namespace ResourceClients_LowLevel.Tests
{
    public class ResourceGroupTests : ResourceClients_LowLevelTestBase
    {
        public ResourceGroupTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        public async Task GetGroup_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ResourceGroup client = CreateResourceServiceClient(credential, endpoint).GetResourceGroup("<GroupId>");

            Response response = await client.GetGroupAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        public async Task GetGroup_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ResourceGroup client = CreateResourceServiceClient(credential, endpoint).GetResourceGroup("<GroupId>");

            Response response = await client.GetGroupAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        public async Task GetItems_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ResourceGroup client = CreateResourceServiceClient(credential, endpoint).GetResourceGroup("<GroupId>");

            await foreach (BinaryData item in client.GetItemsAsync(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].ToString());
            }
        }

        [Test]
        public async Task GetItems_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ResourceGroup client = CreateResourceServiceClient(credential, endpoint).GetResourceGroup("<GroupId>");

            await foreach (BinaryData item in client.GetItemsAsync(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].ToString());
            }
        }
    }
}
