<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetGroupAsync(RequestContext)">
      <example>
This sample shows how to call GetGroupAsync and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ResourceGroup client = new ResourceGroup("<GroupId>", credential);

Response response = await client.GetGroupAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetGroupAsync with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ResourceGroup client = new ResourceGroup("<GroupId>", credential);

Response response = await client.GetGroupAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetGroup(RequestContext)">
      <example>
This sample shows how to call GetGroup and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ResourceGroup client = new ResourceGroup("<GroupId>", credential);

Response response = client.GetGroup(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetGroup with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ResourceGroup client = new ResourceGroup("<GroupId>", credential);

Response response = client.GetGroup(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetGroupsAsync(RequestContext)">
      <example>
This sample shows how to call GetGroupsAsync and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ResourceGroup client = new ResourceGroup(null, credential);

await foreach (BinaryData item in client.GetGroupsAsync(null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call GetGroupsAsync with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ResourceGroup client = new ResourceGroup(null, credential);

await foreach (BinaryData item in client.GetGroupsAsync(null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code></example>
    </member>
    <member name="GetGroups(RequestContext)">
      <example>
This sample shows how to call GetGroups and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ResourceGroup client = new ResourceGroup(null, credential);

foreach (BinaryData item in client.GetGroups(null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call GetGroups with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ResourceGroup client = new ResourceGroup(null, credential);

foreach (BinaryData item in client.GetGroups(null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code></example>
    </member>
  </members>
</doc>