<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetBatchDetectionResultAsync(String,RequestContext)">
<example>
This sample shows how to call GetBatchDetectionResultAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new ApiVersionInCadlClient(endpoint, credential);

Response response = await client.GetBatchDetectionResultAsync("<resultId>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("resultId").ToString());
]]></code>
</example>
<remarks>
For asynchronous inference, get multivariate anomaly detection result based on
resultId returned by the BatchDetectAnomaly api.

Below is the JSON schema for the response payload.

Response Body:

Schema for <c>DetectionResult</c>:
<code>{
  resultId: string, # Required.
}
</code>

</remarks>
    </member>
    <member name="GetBatchDetectionResult(String,RequestContext)">
<example>
This sample shows how to call GetBatchDetectionResult with required parameters and parse the result.
<code><![CDATA[
var credential = new AzureKeyCredential("<key>");
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new ApiVersionInCadlClient(endpoint, credential);

Response response = client.GetBatchDetectionResult("<resultId>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("resultId").ToString());
]]></code>
</example>
<remarks>
For asynchronous inference, get multivariate anomaly detection result based on
resultId returned by the BatchDetectAnomaly api.

Below is the JSON schema for the response payload.

Response Body:

Schema for <c>DetectionResult</c>:
<code>{
  resultId: string, # Required.
}
</code>

</remarks>
    </member>
  </members>
</doc>