// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.IO;
using System.Text.Json;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace ModelsInCadl.Samples
{
    public class Samples_ModelsInCadlClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_InputToRoundTrip()
        {
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ModelsInCadlClient(endpoint);

            var data = new
            {
                requiredString = "<requiredString>",
                requiredInt = 1234,
                requiredModel = new { },
                requiredIntCollection = new[] {
        1234
    },
                requiredStringCollection = new[] {
        "<String>"
    },
                requiredModelCollection = new[] {
        new {
            requiredModelRecord = new {
                key = new {
                    requiredCollection = new[] {},
                },
            },
        }
    },
                requiredModelRecord = new
                {
                    key = new
                    {
                        requiredCollection = new[] {
                new {
                    requiredModelRecord = new {},
                }
            },
                    },
                },
                requiredCollectionWithNullableFloatElement = new[] {
        123.45f
    },
                requiredCollectionWithNullableBooleanElement = new[] {
        true
    },
            };

            Response response = client.InputToRoundTrip(RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("requiredString").ToString());
            Console.WriteLine(result.GetProperty("requiredInt").ToString());
            Console.WriteLine(result.GetProperty("requiredModel").GetProperty("requiredPropertyOnBase").ToString());
            Console.WriteLine(result.GetProperty("requiredFixedStringEnum").ToString());
            Console.WriteLine(result.GetProperty("requiredFixedIntEnum").ToString());
            Console.WriteLine(result.GetProperty("requiredExtensibleEnum").ToString());
            Console.WriteLine(result.GetProperty("requiredIntRecord").GetProperty("<test>").ToString());
            Console.WriteLine(result.GetProperty("requiredStringRecord").GetProperty("<test>").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_InputToRoundTripPrimitive()
        {
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ModelsInCadlClient(endpoint);

            var data = new
            {
                requiredString = "<requiredString>",
                requiredInt = 1234,
                requiredModel = new { },
                requiredIntCollection = new[] {
        1234
    },
                requiredStringCollection = new[] {
        "<String>"
    },
                requiredModelCollection = new[] {
        new {
            requiredModelRecord = new {
                key = new {
                    requiredCollection = new[] {},
                },
            },
        }
    },
                requiredModelRecord = new
                {
                    key = new
                    {
                        requiredCollection = new[] {
                new {
                    requiredModelRecord = new {},
                }
            },
                    },
                },
                requiredCollectionWithNullableFloatElement = new[] {
        123.45f
    },
                requiredCollectionWithNullableBooleanElement = new[] {
        true
    },
            };

            Response response = client.InputToRoundTripPrimitive(RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("requiredString").ToString());
            Console.WriteLine(result.GetProperty("requiredInt").ToString());
            Console.WriteLine(result.GetProperty("requiredInt64").ToString());
            Console.WriteLine(result.GetProperty("requiredSafeInt").ToString());
            Console.WriteLine(result.GetProperty("requiredFloat").ToString());
            Console.WriteLine(result.GetProperty("required_Double").ToString());
            Console.WriteLine(result.GetProperty("requiredBoolean").ToString());
            Console.WriteLine(result.GetProperty("requiredDateTimeOffset").ToString());
            Console.WriteLine(result.GetProperty("requiredTimeSpan").ToString());
            Console.WriteLine(result.GetProperty("requiredCollectionWithNullableFloatElement")[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_InputToRoundTripOptional()
        {
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ModelsInCadlClient(endpoint);

            var data = new { };

            Response response = client.InputToRoundTripOptional(RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_InputToRoundTripReadOnly()
        {
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ModelsInCadlClient(endpoint);

            var data = new
            {
                requiredString = "<requiredString>",
                requiredInt = 1234,
                requiredModel = new { },
                requiredIntCollection = new[] {
        1234
    },
                requiredStringCollection = new[] {
        "<String>"
    },
                requiredModelCollection = new[] {
        new {
            requiredModelRecord = new {
                key = new {
                    requiredCollection = new[] {},
                },
            },
        }
    },
                requiredModelRecord = new
                {
                    key = new
                    {
                        requiredCollection = new[] {
                new {
                    requiredModelRecord = new {},
                }
            },
                    },
                },
                requiredCollectionWithNullableFloatElement = new[] {
        123.45f
    },
                requiredCollectionWithNullableBooleanElement = new[] {
        true
    },
            };

            Response response = client.InputToRoundTripReadOnly(RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("requiredReadonlyString").ToString());
            Console.WriteLine(result.GetProperty("requiredReadonlyInt").ToString());
            Console.WriteLine(result.GetProperty("requiredReadonlyFixedStringEnum").ToString());
            Console.WriteLine(result.GetProperty("requiredReadonlyExtensibleEnum").ToString());
            Console.WriteLine(result.GetProperty("optionalReadonlyFixedStringEnum").ToString());
            Console.WriteLine(result.GetProperty("optionalReadonlyExtensibleEnum").ToString());
            Console.WriteLine(result.GetProperty("requiredReadonlyStringList")[0].ToString());
            Console.WriteLine(result.GetProperty("requiredReadonlyIntList")[0].ToString());
            Console.WriteLine(result.GetProperty("requiredReadOnlyIntRecord").GetProperty("<test>").ToString());
            Console.WriteLine(result.GetProperty("requiredStringRecord").GetProperty("<test>").ToString());
            Console.WriteLine(result.GetProperty("optionalReadOnlyIntRecord").GetProperty("<test>").ToString());
            Console.WriteLine(result.GetProperty("optionalReadOnlyStringRecord").GetProperty("<test>").ToString());
            Console.WriteLine(result.GetProperty("requiredCollectionWithNullableIntElement")[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_RoundTripToOutput()
        {
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ModelsInCadlClient(endpoint);

            var data = new
            {
                requiredString = "<requiredString>",
                requiredInt = 1234,
                requiredModel = new
                {
                    requiredPropertyOnBase = 1234,
                },
                requiredFixedStringEnum = "1",
                requiredFixedIntEnum = "1",
                requiredExtensibleEnum = "1",
                requiredCollection = new[] {
        new {
            requiredModelRecord = new {
                key = new {
                    requiredCollection = new[] {},
                },
            },
        }
    },
                requiredIntRecord = new
                {
                    key = 1234,
                },
                requiredStringRecord = new
                {
                    key = "<String>",
                },
                requiredModelRecord = new
                {
                    key = new
                    {
                        requiredCollection = new[] {
                new {
                    requiredModelRecord = new {},
                }
            },
                    },
                },
            };

            Response response = client.RoundTripToOutput(RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("requiredString").ToString());
            Console.WriteLine(result.GetProperty("requiredInt").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_InputRecursive()
        {
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ModelsInCadlClient(endpoint);

            var data = new
            {
                message = "<message>",
            };

            Response response = client.InputRecursive(RequestContent.Create(data));
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_RoundTripRecursive()
        {
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ModelsInCadlClient(endpoint);

            var data = new
            {
                message = "<message>",
            };

            Response response = client.RoundTripRecursive(RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("message").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SelfReference()
        {
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ModelsInCadlClient(endpoint);

            Response response = client.SelfReference(new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("message").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_RoundTripToOutputWithNoUseBase()
        {
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ModelsInCadlClient(endpoint);

            var data = new
            {
                requiredCollection = new[] {
        new {
            requiredModelRecord = new {
                key = new {
                    requiredCollection = new[] {},
                },
            },
        }
    },
                baseModelProp = "<baseModelProp>",
            };

            Response response = client.RoundTripToOutputWithNoUseBase(RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("baseModelProp").ToString());
        }
    }
}
