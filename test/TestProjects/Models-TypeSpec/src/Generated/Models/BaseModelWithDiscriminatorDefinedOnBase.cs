// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace ModelsTypeSpec.Models
{
    /// <summary> A base model in the discriminated set inheriting from a base with the predefined discriminator property. </summary>
    public partial class BaseModelWithDiscriminatorDefinedOnBase : BaseModelWithARequiredProperty
    {
        /// <summary> Initializes a new instance of <see cref="BaseModelWithDiscriminatorDefinedOnBase"/>. </summary>
        /// <param name="kind"> Required kind. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="kind"/> is null. </exception>
        public BaseModelWithDiscriminatorDefinedOnBase(string kind) : base(kind)
        {
            Argument.AssertNotNull(kind, nameof(kind));
        }

        /// <summary> Initializes a new instance of <see cref="BaseModelWithDiscriminatorDefinedOnBase"/>. </summary>
        /// <param name="kind"> Required kind. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="optionalString"> Optional string. </param>
        internal BaseModelWithDiscriminatorDefinedOnBase(string kind, IDictionary<string, BinaryData> serializedAdditionalRawData, string optionalString) : base(kind, serializedAdditionalRawData)
        {
            OptionalString = optionalString;
        }

        /// <summary> Initializes a new instance of <see cref="BaseModelWithDiscriminatorDefinedOnBase"/> for deserialization. </summary>
        internal BaseModelWithDiscriminatorDefinedOnBase()
        {
        }

        /// <summary> Optional string. </summary>
        public string OptionalString { get; set; }
    }
}
