// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace ModelsTypeSpec.Models
{
    /// <summary> Single base model without any child model. </summary>
    public abstract partial class SingleBase
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        protected internal IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="SingleBase"/>. </summary>
        /// <param name="size"></param>
        protected SingleBase(int size)
        {
            Size = size;
            _serializedAdditionalRawData = new ChangeTrackingDictionary<string, BinaryData>();
        }

        /// <summary> Initializes a new instance of <see cref="SingleBase"/>. </summary>
        /// <param name="kind"> Discriminator. </param>
        /// <param name="size"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal SingleBase(string kind, int size, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Kind = kind;
            Size = size;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="SingleBase"/> for deserialization. </summary>
        internal SingleBase()
        {
        }

        /// <summary> Discriminator. </summary>
        internal string Kind { get; set; }
        /// <summary> Gets the size. </summary>
        public int Size { get; }
    }
}
