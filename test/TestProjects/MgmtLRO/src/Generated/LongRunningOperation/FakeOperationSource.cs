// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.ClientModel.Primitives;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.ResourceManager;

namespace MgmtLRO
{
    internal class FakeOperationSource : IOperationSource<FakeResource>
    {
        private readonly ArmClient _client;

        internal FakeOperationSource(ArmClient client)
        {
            _client = client;
        }

        FakeResource IOperationSource<FakeResource>.CreateResult(Response response, CancellationToken cancellationToken)
        {
            var data = ModelReaderWriter.Read<FakeData>(response.Content, ModelReaderWriterOptions.Json, MgmtLROContext.Default);
            return new FakeResource(_client, data);
        }

        async ValueTask<FakeResource> IOperationSource<FakeResource>.CreateResultAsync(Response response, CancellationToken cancellationToken)
        {
            var data = ModelReaderWriter.Read<FakeData>(response.Content, ModelReaderWriterOptions.Json, MgmtLROContext.Default);
            return await Task.FromResult(new FakeResource(_client, data)).ConfigureAwait(false);
        }
    }
}
