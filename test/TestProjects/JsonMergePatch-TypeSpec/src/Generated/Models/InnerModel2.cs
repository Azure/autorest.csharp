// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Runtime.CompilerServices;

namespace Payload.JsonMergePatch.Models
{
    /// <summary> It is the model used by Resource model. </summary>
    public partial class InnerModel2
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="InnerModel2"/>. </summary>
        public InnerModel2()
        {
        }

        /// <summary> Initializes a new instance of <see cref="InnerModel2"/>. </summary>
        /// <param name="property1"></param>
        /// <param name="property2"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal InnerModel2(int? property1, int? property2, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Property1 = property1;
            Property2 = property2;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        internal event PropertyChangedEventHandler PropertyChanged;
        private void NotifyPropertyChanged([CallerMemberName] string propertyName = "")
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }


        private int? _property1;
        private bool _property1changed = false;
        public int? Property1
        {
            get => _property1;
            set
            {
                _property1 = value;
                _property1changed = true;
                NotifyPropertyChanged();
                _changed = true;
            }
        }

        private int? _property2;
        private bool _property2changed = false;
        public int? Property2
        {
            get => _property2;
            set
            {
                _property2 = value;
                _property2changed = true;
                _changed = true;
            }
        }

        internal bool _changed = false;
    }
}
