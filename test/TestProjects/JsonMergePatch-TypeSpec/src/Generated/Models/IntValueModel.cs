// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.ComponentModel;
using Azure.Core;

namespace Payload.JsonMergePatch.Models
{
    /// <summary> It is the model used by Resource model. </summary>
    public partial class IntValueModel : BaseModel
    {
        /// <summary> Initializes a new instance of <see cref="IntValueModel"/>. </summary>
        /// <param name="requiredValue"></param>
        /// <param name="requiredIntValue"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="requiredValue"/> is null. </exception>
        public IntValueModel(BinaryData requiredValue, int requiredIntValue) : base(requiredValue)
        {
            Argument.AssertNotNull(requiredValue, nameof(requiredValue));

            Kind = "intValue";
            RequiredIntValue = requiredIntValue;
        }

        /// <summary> Initializes a new instance of <see cref="IntValueModel"/>. </summary>
        /// <param name="requiredValue"></param>
        /// <param name="optionalValue"></param>
        /// <param name="kind"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="requiredIntValue"></param>
        /// <param name="optionalIntValue"></param>
        internal IntValueModel(BinaryData requiredValue, BinaryData optionalValue, string kind, IDictionary<string, BinaryData> serializedAdditionalRawData, int requiredIntValue, int? optionalIntValue) : base(requiredValue, optionalValue, kind, serializedAdditionalRawData)
        {
            _requiredIntValue = requiredIntValue;
            _optionalIntValue = optionalIntValue;
        }

        /// <summary> Initializes a new instance of <see cref="IntValueModel"/> for deserialization. </summary>
        internal IntValueModel()
        {
        }

        private int _requiredIntValue;
        private bool _requiredIntValueChanged = false;
        public int RequiredIntValue 
        {
            get => _requiredIntValue;
            set // API change
            {
                _requiredIntValue = value;
                _requiredIntValueChanged = true;
            }
        }
        
        private int? _optionalIntValue;
        private bool _optionalIntValueChanged = false;
        public int? OptionalIntValue
        {
            get => _optionalIntValue;
            set
            {
                _optionalIntValue = value;
                _optionalIntValueChanged = true;
            }
        }

        private bool _changed = false;
        internal override bool Changed => _changed || base.Changed;
    }
}
