// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using Payload.JsonMergePatch;
using Payload.JsonMergePatch.Models;

namespace Payload.JsonMergePatch.Samples
{
    public partial class Samples_JsonMergePatchClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_JsonMergePatch_Patch_ShortVersion()
        {
            JsonMergePatchClient client = new JsonMergePatchClient();

            using RequestContent content = RequestContent.Create(new
            {
                requiredValue = "<requiredValue>",
            });
            Response response = client.Patch(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("requiredValue").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_JsonMergePatch_Patch_ShortVersion_Async()
        {
            JsonMergePatchClient client = new JsonMergePatchClient();

            using RequestContent content = RequestContent.Create(new
            {
                requiredValue = "<requiredValue>",
            });
            Response response = await client.PatchAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("requiredValue").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_JsonMergePatch_Patch_ShortVersion_Convenience()
        {
            JsonMergePatchClient client = new JsonMergePatchClient();

            PatchModel body = new PatchModel("<requiredValue>");
            Response<PatchModel> response = client.Patch(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_JsonMergePatch_Patch_ShortVersion_Convenience_Async()
        {
            JsonMergePatchClient client = new JsonMergePatchClient();

            PatchModel body = new PatchModel("<requiredValue>");
            Response<PatchModel> response = await client.PatchAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_JsonMergePatch_Patch_AllParameters()
        {
            JsonMergePatchClient client = new JsonMergePatchClient();

            using RequestContent content = RequestContent.Create(new
            {
                requiredValue = "<requiredValue>",
                optionalValue = "<optionalValue>",
            });
            Response response = client.Patch(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("requiredValue").ToString());
            Console.WriteLine(result.GetProperty("optionalValue").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_JsonMergePatch_Patch_AllParameters_Async()
        {
            JsonMergePatchClient client = new JsonMergePatchClient();

            using RequestContent content = RequestContent.Create(new
            {
                requiredValue = "<requiredValue>",
                optionalValue = "<optionalValue>",
            });
            Response response = await client.PatchAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("requiredValue").ToString());
            Console.WriteLine(result.GetProperty("optionalValue").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_JsonMergePatch_Patch_AllParameters_Convenience()
        {
            JsonMergePatchClient client = new JsonMergePatchClient();

            PatchModel body = new PatchModel("<requiredValue>")
            {
                OptionalValue = "<optionalValue>",
            };
            Response<PatchModel> response = client.Patch(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_JsonMergePatch_Patch_AllParameters_Convenience_Async()
        {
            JsonMergePatchClient client = new JsonMergePatchClient();

            PatchModel body = new PatchModel("<requiredValue>")
            {
                OptionalValue = "<optionalValue>",
            };
            Response<PatchModel> response = await client.PatchAsync(body);
        }
    }
}
