// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure;
using Azure.Core;

namespace ModelsInCadl
{
    public partial class ModelWithCustomizedProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("propertyToMakeInternal");
            writer.WriteNumberValue(PropertyToMakeInternal);
            writer.WritePropertyName("propertyToRename");
            writer.WriteNumberValue(PropertyToRename);
            writer.WritePropertyName("propertyToMakeFloat");
            writer.WriteNumberValue(PropertyToMakeFloat);
            writer.WritePropertyName("propertyToMakeInt");
            writer.WriteNumberValue(PropertyToMakeInt);
            writer.WritePropertyName("propertyToMakeDuration");
            writer.WriteStringValue(PropertyToMakeDuration);
            writer.WritePropertyName("propertyToMakeString");
            writer.WriteStringValue(PropertyToMakeString);
            writer.WritePropertyName("propertyToMakeJsonElement");
            writer.WriteStringValue(PropertyToMakeJsonElement);
            writer.WriteEndObject();
        }

        internal static ModelWithCustomizedProperties DeserializeModelWithCustomizedProperties(JsonElement element)
        {
            int propertyToMakeInternal = default;
            int propertyToRename = default;
            int propertyToMakeFloat = default;
            float propertyToMakeInt = default;
            string propertyToMakeDuration = default;
            string propertyToMakeString = default;
            string propertyToMakeJsonElement = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("propertyToMakeInternal"))
                {
                    propertyToMakeInternal = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("propertyToRename"))
                {
                    propertyToRename = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("propertyToMakeFloat"))
                {
                    propertyToMakeFloat = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("propertyToMakeInt"))
                {
                    propertyToMakeInt = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("propertyToMakeDuration"))
                {
                    propertyToMakeDuration = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("propertyToMakeString"))
                {
                    propertyToMakeString = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("propertyToMakeJsonElement"))
                {
                    propertyToMakeJsonElement = property.Value.GetString();
                    continue;
                }
            }
            return new ModelWithCustomizedProperties(propertyToMakeInternal, propertyToRename, propertyToMakeFloat, propertyToMakeInt, propertyToMakeDuration, propertyToMakeString, propertyToMakeJsonElement);
        }

        internal RequestContent ToRequestContent()
        {
            var content = new Utf8JsonRequestContent();
            content.JsonWriter.WriteObjectValue(this);
            return content;
        }

        internal static ModelWithCustomizedProperties FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeModelWithCustomizedProperties(document.RootElement);
        }
    }
}
