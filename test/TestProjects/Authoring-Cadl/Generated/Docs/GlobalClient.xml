<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetSupportedLanguagesAsync(Int32,Int32,Int32,RequestContext)">
<example>
This sample shows how to call GetSupportedLanguagesAsync and parse the result.
<code><![CDATA[
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new GlobalClient(endpoint);

await foreach (var data in client.GetSupportedLanguagesAsync())
{
    JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("languageName").ToString());
    Console.WriteLine(result.GetProperty("languageCode").ToString());
}
]]></code>
This sample shows how to call GetSupportedLanguagesAsync with all parameters, and how to parse the result.
<code><![CDATA[
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new GlobalClient(endpoint);

await foreach (var data in client.GetSupportedLanguagesAsync(1234, 1234, 1234))
{
    JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("languageName").ToString());
    Console.WriteLine(result.GetProperty("languageCode").ToString());
}
]]></code>
</example>
<remarks>
Below is the JSON schema for one item in the pageable response.

Response Body:

Schema for <c>Array</c>:
<code>{
  languageName: string, # Required.
  languageCode: string, # Required.
}
</code>

</remarks>
    </member>
    <member name="GetSupportedLanguages(Int32,Int32,Int32,RequestContext)">
<example>
This sample shows how to call GetSupportedLanguages and parse the result.
<code><![CDATA[
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new GlobalClient(endpoint);

foreach (var data in client.GetSupportedLanguages())
{
    JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("languageName").ToString());
    Console.WriteLine(result.GetProperty("languageCode").ToString());
}
]]></code>
This sample shows how to call GetSupportedLanguages with all parameters, and how to parse the result.
<code><![CDATA[
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new GlobalClient(endpoint);

foreach (var data in client.GetSupportedLanguages(1234, 1234, 1234))
{
    JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("languageName").ToString());
    Console.WriteLine(result.GetProperty("languageCode").ToString());
}
]]></code>
</example>
<remarks>
Below is the JSON schema for one item in the pageable response.

Response Body:

Schema for <c>Array</c>:
<code>{
  languageName: string, # Required.
  languageCode: string, # Required.
}
</code>

</remarks>
    </member>
    <member name="GetTrainingConfigVersionsAsync(Int32,Int32,Int32,RequestContext)">
<example>
This sample shows how to call GetTrainingConfigVersionsAsync and parse the result.
<code><![CDATA[
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new GlobalClient(endpoint);

await foreach (var data in client.GetTrainingConfigVersionsAsync())
{
    JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("trainingConfigVersionStr").ToString());
    Console.WriteLine(result.GetProperty("modelExpirationDate").ToString());
}
]]></code>
This sample shows how to call GetTrainingConfigVersionsAsync with all parameters, and how to parse the result.
<code><![CDATA[
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new GlobalClient(endpoint);

await foreach (var data in client.GetTrainingConfigVersionsAsync(1234, 1234, 1234))
{
    JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("trainingConfigVersionStr").ToString());
    Console.WriteLine(result.GetProperty("modelExpirationDate").ToString());
}
]]></code>
</example>
<remarks>
Below is the JSON schema for one item in the pageable response.

Response Body:

Schema for <c>Array</c>:
<code>{
  trainingConfigVersionStr: string, # Required.
  modelExpirationDate: string (date &amp; time), # Required.
}
</code>

</remarks>
    </member>
    <member name="GetTrainingConfigVersions(Int32,Int32,Int32,RequestContext)">
<example>
This sample shows how to call GetTrainingConfigVersions and parse the result.
<code><![CDATA[
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new GlobalClient(endpoint);

foreach (var data in client.GetTrainingConfigVersions())
{
    JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("trainingConfigVersionStr").ToString());
    Console.WriteLine(result.GetProperty("modelExpirationDate").ToString());
}
]]></code>
This sample shows how to call GetTrainingConfigVersions with all parameters, and how to parse the result.
<code><![CDATA[
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new GlobalClient(endpoint);

foreach (var data in client.GetTrainingConfigVersions(1234, 1234, 1234))
{
    JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("trainingConfigVersionStr").ToString());
    Console.WriteLine(result.GetProperty("modelExpirationDate").ToString());
}
]]></code>
</example>
<remarks>
Below is the JSON schema for one item in the pageable response.

Response Body:

Schema for <c>Array</c>:
<code>{
  trainingConfigVersionStr: string, # Required.
  modelExpirationDate: string (date &amp; time), # Required.
}
</code>

</remarks>
    </member>
  </members>
</doc>