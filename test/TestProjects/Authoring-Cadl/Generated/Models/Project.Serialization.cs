// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure;
using Azure.Core;

namespace Azure.Language.Authoring.Models
{
    public partial class Project
    {
        internal static Project DeserializeProject(JsonElement element)
        {
            string projectName = default;
            ProjectKind projectKind = default;
            string storageInputContainerName = default;
            Optional<IReadOnlyDictionary<string, string>> settings = default;
            Optional<bool?> multilingual = default;
            Optional<string> description = default;
            string language = default;
            DateTimeOffset createdDateTime = default;
            DateTimeOffset lastModifiedDateTime = default;
            DateTimeOffset lastTrainedDateTime = default;
            DateTimeOffset lastDeployedDateTime = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("projectName"))
                {
                    projectName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("projectKind"))
                {
                    projectKind = new ProjectKind(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("storageInputContainerName"))
                {
                    storageInputContainerName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("settings"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    Dictionary<string, string> dictionary = new Dictionary<string, string>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, property0.Value.GetString());
                    }
                    settings = dictionary;
                    continue;
                }
                if (property.NameEquals("multilingual"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        multilingual = null;
                        continue;
                    }
                    multilingual = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("description"))
                {
                    description = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("language"))
                {
                    language = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("createdDateTime"))
                {
                    createdDateTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("lastModifiedDateTime"))
                {
                    lastModifiedDateTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("lastTrainedDateTime"))
                {
                    lastTrainedDateTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("lastDeployedDateTime"))
                {
                    lastDeployedDateTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
            }
            return new Project(projectName, projectKind, storageInputContainerName, Optional.ToDictionary(settings), Optional.ToNullable(multilingual), description, language, createdDateTime, lastModifiedDateTime, lastTrainedDateTime, lastDeployedDateTime);
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static Project FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeProject(document.RootElement);
        }
    }
}
