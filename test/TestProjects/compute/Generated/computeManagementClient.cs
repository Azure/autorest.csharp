// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.Core.Pipeline;
using compute;

namespace compute
{
    /// <summary> compute service management client. </summary>
    public class computeManagementClient
    {
        private readonly ClientDiagnostics _clientDiagnostics;
        private readonly HttpPipeline _pipeline;
        private readonly Uri _endpoint;
        private readonly string _subscriptionId;

        /// <summary> Initializes a new instance of computeManagementClient for mocking. </summary>
        protected computeManagementClient()
        {
        }

        /// <summary> Initializes a new instance of computeManagementClient. </summary>
        /// <param name="subscriptionId"> Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. </param>
        /// <param name="tokenCredential"> The OAuth token for making client requests. </param>
        /// <param name="options"> The options for configuring the client. </param>
        public computeManagementClient(string subscriptionId, TokenCredential tokenCredential, computeManagementClientOptions options = null) : this(null, subscriptionId, tokenCredential, options)
        {
        }
        /// <summary> Initializes a new instance of computeManagementClient. </summary>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="subscriptionId"> Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. </param>
        /// <param name="tokenCredential"> The OAuth token for making client requests. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> is null. </exception>
        public computeManagementClient(Uri endpoint, string subscriptionId, TokenCredential tokenCredential, computeManagementClientOptions options = null)
        {
            endpoint ??= new Uri("https://management.azure.com");
            if (subscriptionId == null)
            {
                throw new ArgumentNullException(nameof(subscriptionId));
            }

            options ??= new computeManagementClientOptions();
            _clientDiagnostics = new ClientDiagnostics(options);
            _pipeline = ManagementPipelineBuilder.Build(tokenCredential, endpoint, options);
            _endpoint = endpoint;
            _subscriptionId = subscriptionId;
        }

        /// <summary> Returns an instance of Operations. </summary>
        public virtual compute.Operations Operations => new compute.Operations(_clientDiagnostics, _pipeline, _endpoint);

        /// <summary> Returns an instance of AvailabilitySetsOperations. </summary>
        public virtual compute.AvailabilitySetsOperations AvailabilitySets => new compute.AvailabilitySetsOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of ProximityPlacementGroupsOperations. </summary>
        public virtual compute.ProximityPlacementGroupsOperations ProximityPlacementGroups => new compute.ProximityPlacementGroupsOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of DedicatedHostGroupsOperations. </summary>
        public virtual compute.DedicatedHostGroupsOperations DedicatedHostGroups => new compute.DedicatedHostGroupsOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of DedicatedHostsOperations. </summary>
        public virtual compute.DedicatedHostsOperations DedicatedHosts => new compute.DedicatedHostsOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of SshPublicKeysOperations. </summary>
        public virtual compute.SshPublicKeysOperations SshPublicKeys => new compute.SshPublicKeysOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of VirtualMachineExtensionImagesOperations. </summary>
        public virtual compute.VirtualMachineExtensionImagesOperations VirtualMachineExtensionImages => new compute.VirtualMachineExtensionImagesOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of VirtualMachineExtensionsOperations. </summary>
        public virtual compute.VirtualMachineExtensionsOperations VirtualMachineExtensions => new compute.VirtualMachineExtensionsOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of VirtualMachineImagesOperations. </summary>
        public virtual compute.VirtualMachineImagesOperations VirtualMachineImages => new compute.VirtualMachineImagesOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of UsageOperations. </summary>
        public virtual compute.UsageOperations Usage => new compute.UsageOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of VirtualMachinesOperations. </summary>
        public virtual compute.VirtualMachinesOperations VirtualMachines => new compute.VirtualMachinesOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of VirtualMachineSizesOperations. </summary>
        public virtual compute.VirtualMachineSizesOperations VirtualMachineSizes => new compute.VirtualMachineSizesOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of ImagesOperations. </summary>
        public virtual compute.ImagesOperations Images => new compute.ImagesOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of VirtualMachineScaleSetsOperations. </summary>
        public virtual compute.VirtualMachineScaleSetsOperations VirtualMachineScaleSets => new compute.VirtualMachineScaleSetsOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of VirtualMachineScaleSetExtensionsOperations. </summary>
        public virtual compute.VirtualMachineScaleSetExtensionsOperations VirtualMachineScaleSetExtensions => new compute.VirtualMachineScaleSetExtensionsOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of VirtualMachineScaleSetRollingUpgradesOperations. </summary>
        public virtual compute.VirtualMachineScaleSetRollingUpgradesOperations VirtualMachineScaleSetRollingUpgrades => new compute.VirtualMachineScaleSetRollingUpgradesOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of VirtualMachineScaleSetVMExtensionsOperations. </summary>
        public virtual compute.VirtualMachineScaleSetVMExtensionsOperations VirtualMachineScaleSetVMExtensions => new compute.VirtualMachineScaleSetVMExtensionsOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of VirtualMachineScaleSetVMsOperations. </summary>
        public virtual compute.VirtualMachineScaleSetVMsOperations VirtualMachineScaleSetVMs => new compute.VirtualMachineScaleSetVMsOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of LogAnalyticsOperations. </summary>
        public virtual compute.LogAnalyticsOperations LogAnalytics => new compute.LogAnalyticsOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);
    }
}
