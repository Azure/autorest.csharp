// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace ModelReaderWriterValidationTypeSpec.Models
{
    /// <summary> The AvailabilitySetData. </summary>
    public partial class AvailabilitySetData : TrackedResourceData
    {
        /// <summary> Initializes a new instance of <see cref="AvailabilitySetData"/>. </summary>
        /// <param name="location"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="location"/> is null. </exception>
        public AvailabilitySetData(string location) : base(location)
        {
            Argument.AssertNotNull(location, nameof(location));
        }

        /// <summary> Initializes a new instance of <see cref="AvailabilitySetData"/>. </summary>
        /// <param name="id"></param>
        /// <param name="name"></param>
        /// <param name="resourceType"></param>
        /// <param name="location"></param>
        /// <param name="tags"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="sku"></param>
        /// <param name="properties"></param>
        internal AvailabilitySetData(string id, string name, string resourceType, string location, IDictionary<string, string> tags, IDictionary<string, BinaryData> serializedAdditionalRawData, ComputeSku sku, AvailabilitySetProperties properties) : base(id, name, resourceType, location, tags, serializedAdditionalRawData)
        {
            Sku = sku;
            Properties = properties;
        }

        /// <summary> Initializes a new instance of <see cref="AvailabilitySetData"/> for deserialization. </summary>
        internal AvailabilitySetData()
        {
        }

        /// <summary> Gets or sets the sku. </summary>
        public ComputeSku Sku { get; set; }
        /// <summary> Gets or sets the properties. </summary>
        public AvailabilitySetProperties Properties { get; set; }
    }
}
