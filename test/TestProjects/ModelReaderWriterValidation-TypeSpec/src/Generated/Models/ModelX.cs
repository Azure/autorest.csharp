// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace ModelReaderWriterValidationTypeSpec.Models
{
    /// <summary> The ModelX. </summary>
    public partial class ModelX : BaseModel
    {
        /// <summary> Initializes a new instance of <see cref="ModelX"/>. </summary>
        public ModelX()
        {
            Kind = "X";
            Fields = new ChangeTrackingList<string>();
            KeyValuePairs = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of <see cref="ModelX"/>. </summary>
        /// <param name="kind"></param>
        /// <param name="name"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="fields"></param>
        /// <param name="nullProperty"></param>
        /// <param name="keyValuePairs"></param>
        /// <param name="xProperty"></param>
        internal ModelX(string kind, string name, IDictionary<string, BinaryData> serializedAdditionalRawData, IList<string> fields, int? nullProperty, IDictionary<string, string> keyValuePairs, int xProperty) : base(kind, name, serializedAdditionalRawData)
        {
            Fields = fields;
            NullProperty = nullProperty;
            KeyValuePairs = keyValuePairs;
            XProperty = xProperty;
        }

        /// <summary> Gets the fields. </summary>
        public IList<string> Fields { get; }
        /// <summary> Gets or sets the null property. </summary>
        public int? NullProperty { get; set; }
        /// <summary> Gets the key value pairs. </summary>
        public IDictionary<string, string> KeyValuePairs { get; }
        /// <summary> Gets the x property. </summary>
        public int XProperty { get; }
    }
}
