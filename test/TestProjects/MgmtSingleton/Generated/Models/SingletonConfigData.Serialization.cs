// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;
using Azure.ResourceManager;

namespace MgmtSingleton
{
    public partial class SingletonConfigData : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(ConfigurationValue))
            {
                writer.WritePropertyName("configurationValue");
                writer.WriteStringValue(ConfigurationValue);
            }
            writer.WriteEndObject();
        }

        internal static SingletonConfigData DeserializeSingletonConfigData(JsonElement element)
        {
            Optional<string> configurationValue = default;
            ResourceIdentifier id = default;
            string name = default;
            ResourceType type = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("configurationValue"))
                {
                    configurationValue = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("id"))
                {
                    id = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = property.Value.GetString();
                    continue;
                }
            }
            return new SingletonConfigData(id, name, type, configurationValue.Value);
        }
    }
}
