<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="DeleteAsync(Int32,RequestContext)">
<example>
This sample shows how to call DeleteAsync with required parameters.
<code><![CDATA[
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PetStoreClient(endpoint);

Response response = await client.DeleteAsync(1234);
Console.WriteLine(response.Status);
]]></code>
</example>
<remarks>
Delete a pet.
</remarks>
    </member>
    <member name="Delete(Int32,RequestContext)">
<example>
This sample shows how to call Delete with required parameters.
<code><![CDATA[
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PetStoreClient(endpoint);

Response response = client.Delete(1234);
Console.WriteLine(response.Status);
]]></code>
</example>
<remarks>
Delete a pet.
</remarks>
    </member>
    <member name="ReadAsync(Int32,RequestContext)">
<example>
This sample shows how to call ReadAsync with required parameters and parse the result.
<code><![CDATA[
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PetStoreClient(endpoint);

Response response = await client.ReadAsync(1234);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("tag").ToString());
Console.WriteLine(result.GetProperty("age").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>Pet</c>:
<code>{
  name: string, # Required.
  tag: string, # Optional.
  age: number, # Required.
}
</code>

</remarks>
    </member>
    <member name="Read(Int32,RequestContext)">
<example>
This sample shows how to call Read with required parameters and parse the result.
<code><![CDATA[
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PetStoreClient(endpoint);

Response response = client.Read(1234);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("tag").ToString());
Console.WriteLine(result.GetProperty("age").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>Pet</c>:
<code>{
  name: string, # Required.
  tag: string, # Optional.
  age: number, # Required.
}
</code>

</remarks>
    </member>
    <member name="CreateAsync(RequestContent,RequestContext)">
<example>
This sample shows how to call CreateAsync with required request content, and how to parse the result.
<code><![CDATA[
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PetStoreClient(endpoint);

var data = new {
    name = "<name>",
    age = 1234,
};

Response response = await client.CreateAsync(RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("age").ToString());
]]></code>
This sample shows how to call CreateAsync with all request content, and how to parse the result.
<code><![CDATA[
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PetStoreClient(endpoint);

var data = new {
    name = "<name>",
    tag = "<tag>",
    age = 1234,
};

Response response = await client.CreateAsync(RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("tag").ToString());
Console.WriteLine(result.GetProperty("age").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the request and response payloads.

Request Body:

Schema for <c>Pet</c>:
<code>{
  name: string, # Required.
  tag: string, # Optional.
  age: number, # Required.
}
</code>

Response Body:

Schema for <c>Pet</c>:
<code>{
  name: string, # Required.
  tag: string, # Optional.
  age: number, # Required.
}
</code>

</remarks>
    </member>
    <member name="Create(RequestContent,RequestContext)">
<example>
This sample shows how to call Create with required request content, and how to parse the result.
<code><![CDATA[
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PetStoreClient(endpoint);

var data = new {
    name = "<name>",
    age = 1234,
};

Response response = client.Create(RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("age").ToString());
]]></code>
This sample shows how to call Create with all request content, and how to parse the result.
<code><![CDATA[
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PetStoreClient(endpoint);

var data = new {
    name = "<name>",
    tag = "<tag>",
    age = 1234,
};

Response response = client.Create(RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("tag").ToString());
Console.WriteLine(result.GetProperty("age").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the request and response payloads.

Request Body:

Schema for <c>Pet</c>:
<code>{
  name: string, # Required.
  tag: string, # Optional.
  age: number, # Required.
}
</code>

Response Body:

Schema for <c>Pet</c>:
<code>{
  name: string, # Required.
  tag: string, # Optional.
  age: number, # Required.
}
</code>

</remarks>
    </member>
    <member name="GetPetByKindAsync(String,RequestContext)">
<example>
This sample shows how to call GetPetByKindAsync with required parameters and parse the result.
<code><![CDATA[
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PetStoreClient(endpoint);

Response response = await client.GetPetByKindAsync("<kind>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("tag").ToString());
Console.WriteLine(result.GetProperty("age").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>Pet</c>:
<code>{
  name: string, # Required.
  tag: string, # Optional.
  age: number, # Required.
}
</code>

</remarks>
    </member>
    <member name="GetPetByKind(String,RequestContext)">
<example>
This sample shows how to call GetPetByKind with required parameters and parse the result.
<code><![CDATA[
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PetStoreClient(endpoint);

Response response = client.GetPetByKind("<kind>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("tag").ToString());
Console.WriteLine(result.GetProperty("age").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>Pet</c>:
<code>{
  name: string, # Required.
  tag: string, # Optional.
  age: number, # Required.
}
</code>

</remarks>
    </member>
    <member name="GetFirstPetAsync(Int32,RequestContext)">
<example>
This sample shows how to call GetFirstPetAsync and parse the result.
<code><![CDATA[
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PetStoreClient(endpoint);

Response response = await client.GetFirstPetAsync();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("age").ToString());
]]></code>
This sample shows how to call GetFirstPetAsync with all parameters, and how to parse the result.
<code><![CDATA[
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PetStoreClient(endpoint);

Response response = await client.GetFirstPetAsync(1234);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("tag").ToString());
Console.WriteLine(result.GetProperty("age").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>Pet</c>:
<code>{
  name: string, # Required.
  tag: string, # Optional.
  age: number, # Required.
}
</code>

</remarks>
    </member>
    <member name="GetFirstPet(Int32,RequestContext)">
<example>
This sample shows how to call GetFirstPet and parse the result.
<code><![CDATA[
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PetStoreClient(endpoint);

Response response = client.GetFirstPet();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("age").ToString());
]]></code>
This sample shows how to call GetFirstPet with all parameters, and how to parse the result.
<code><![CDATA[
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PetStoreClient(endpoint);

Response response = client.GetFirstPet(1234);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("tag").ToString());
Console.WriteLine(result.GetProperty("age").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>Pet</c>:
<code>{
  name: string, # Required.
  tag: string, # Optional.
  age: number, # Required.
}
</code>

</remarks>
    </member>
  </members>
</doc>