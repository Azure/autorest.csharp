// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Identity;
using ClientAndOperationGroup;
using NUnit.Framework;

namespace ClientAndOperationGroup.Samples
{
    public class Samples_Beta
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Two()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Beta client = new ClientAndOperationGroupClient(endpoint).GetBetaClient();

            Response response = client.Two(null);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Two_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Beta client = new ClientAndOperationGroupClient(endpoint).GetBetaClient();

            Response response = await client.TwoAsync(null);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Two_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Beta client = new ClientAndOperationGroupClient(endpoint).GetBetaClient();

            Response response = client.Two(null);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Two_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Beta client = new ClientAndOperationGroupClient(endpoint).GetBetaClient();

            Response response = await client.TwoAsync(null);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Three()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Beta client = new ClientAndOperationGroupClient(endpoint).GetBetaClient();

            Response response = client.Three(null);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Three_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Beta client = new ClientAndOperationGroupClient(endpoint).GetBetaClient();

            Response response = await client.ThreeAsync(null);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Three_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Beta client = new ClientAndOperationGroupClient(endpoint).GetBetaClient();

            Response response = client.Three(null);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Three_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Beta client = new ClientAndOperationGroupClient(endpoint).GetBetaClient();

            Response response = await client.ThreeAsync(null);
        }
    }
}
