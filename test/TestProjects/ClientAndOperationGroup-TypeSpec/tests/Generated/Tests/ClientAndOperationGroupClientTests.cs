// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Identity;
using ClientAndOperationGroup;
using NUnit.Framework;

namespace ClientAndOperationGroup.Tests
{
    public class ClientAndOperationGroupClientTests : ClientAndOperationGroupTestBase
    {
        public ClientAndOperationGroupClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        public async Task Zero_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ClientAndOperationGroupClient client = CreateClientAndOperationGroupClient(endpoint);

            Response response = await client.ZeroAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        public async Task Zero_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ClientAndOperationGroupClient client = CreateClientAndOperationGroupClient(endpoint);

            Response response = await client.ZeroAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        public async Task One_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ClientAndOperationGroupClient client = CreateClientAndOperationGroupClient(endpoint);

            Response response = await client.OneAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        public async Task One_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            ClientAndOperationGroupClient client = CreateClientAndOperationGroupClient(endpoint);

            Response response = await client.OneAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }
    }
}
