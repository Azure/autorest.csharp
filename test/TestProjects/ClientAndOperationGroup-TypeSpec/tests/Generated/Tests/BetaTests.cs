// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Identity;
using ClientAndOperationGroup;
using NUnit.Framework;

namespace ClientAndOperationGroup.Tests
{
    public class BetaTests : ClientAndOperationGroupTestBase
    {
        public BetaTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        public async Task Two_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Beta client = CreateClientAndOperationGroupClient(endpoint).GetBetaClient();

            Response response = await client.TwoAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        public async Task Two_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Beta client = CreateClientAndOperationGroupClient(endpoint).GetBetaClient();

            Response response = await client.TwoAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        public async Task Three_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Beta client = CreateClientAndOperationGroupClient(endpoint).GetBetaClient();

            Response response = await client.ThreeAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        public async Task Three_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Beta client = CreateClientAndOperationGroupClient(endpoint).GetBetaClient();

            Response response = await client.ThreeAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }
    }
}
