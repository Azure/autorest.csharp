// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Identity;
using ClientAndOperationGroup;
using NUnit.Framework;

namespace ClientAndOperationGroup.Tests
{
    public partial class GammaTests : ClientAndOperationGroupTestBase
    {
        public GammaTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Only validating compilation of test scaffoldings")]
        public async Task Four_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Gamma client = CreateClientAndOperationGroupClient(endpoint).GetGammaClient();

            Response response = await client.FourAsync(null);
        }

        [Test]
        [Ignore("Only validating compilation of test scaffoldings")]
        public async Task Four_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Gamma client = CreateClientAndOperationGroupClient(endpoint).GetGammaClient();

            Response response = await client.FourAsync(null);
        }

        [Test]
        [Ignore("Only validating compilation of test scaffoldings")]
        public async Task Five_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Gamma client = CreateClientAndOperationGroupClient(endpoint).GetGammaClient();

            Response response = await client.FiveAsync(null);
        }

        [Test]
        [Ignore("Only validating compilation of test scaffoldings")]
        public async Task Five_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            Gamma client = CreateClientAndOperationGroupClient(endpoint).GetGammaClient();

            Response response = await client.FiveAsync(null);
        }
    }
}
