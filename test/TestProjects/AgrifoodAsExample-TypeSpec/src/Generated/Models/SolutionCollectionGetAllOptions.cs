// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.AgFoodPlatform.Models
{
    /// <summary> The SolutionCollectionGetAllOptions. </summary>
    public partial class SolutionCollectionGetAllOptions
    {
        /// <summary> Initializes a new instance of <see cref="SolutionCollectionGetAllOptions"/>. </summary>
        public SolutionCollectionGetAllOptions()
        {
            SolutionIds = new ChangeTrackingList<string>();
            Ids = new ChangeTrackingList<string>();
            Names = new ChangeTrackingList<string>();
            PropertyFilters = new ChangeTrackingList<string>();
            Statuses = new ChangeTrackingList<string>();
        }

        /// <summary> Installed Solution ids. </summary>
        public IList<string> SolutionIds { get; }
        /// <summary> Ids of the resource. </summary>
        public IList<string> Ids { get; }
        /// <summary> Names of the resource. </summary>
        public IList<string> Names { get; }
        /// <summary>
        /// Filters on key-value pairs within the Properties object.
        /// eg. "{testKey} eq {testValue}".
        /// </summary>
        public IList<string> PropertyFilters { get; }
        /// <summary> Statuses of the resource. </summary>
        public IList<string> Statuses { get; }
        /// <summary> Minimum creation date of resource (inclusive). </summary>
        public DateTimeOffset? MinCreatedDateTime { get; set; }
        /// <summary> Maximum creation date of resource (inclusive). </summary>
        public DateTimeOffset? MaxCreatedDateTime { get; set; }
        /// <summary> Minimum last modified date of resource (inclusive). </summary>
        public DateTimeOffset? MinLastModifiedDateTime { get; set; }
        /// <summary> Maximum last modified date of resource (inclusive). </summary>
        public DateTimeOffset? MaxLastModifiedDateTime { get; set; }
        /// <summary>
        /// Maximum number of items needed (inclusive).
        /// Minimum = 10, Maximum = 1000, Default value = 50.
        /// </summary>
        public int? MaxPageSize { get; set; }
        /// <summary> Skip token for getting next set of results. </summary>
        public string SkipToken { get; set; }
    }
}
