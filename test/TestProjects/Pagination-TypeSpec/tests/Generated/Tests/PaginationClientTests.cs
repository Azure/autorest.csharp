// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using Pagination;
using Pagination.Models;

namespace Pagination.Tests
{
    public partial class PaginationClientTests : PaginationTestBase
    {
        public PaginationClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetPaginationLedgerEntries_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = CreatePaginationClient(endpoint, credential);

            RequestContent content = RequestContent.Create(new
            {
                requiredString = "<requiredString>",
                requiredInt = 1234,
            });
            await foreach (BinaryData item in client.GetPaginationLedgerEntriesAsync(content))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetPaginationLedgerEntries_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = CreatePaginationClient(endpoint, credential);

            ListLedgerEntryInputBody bodyInput = new ListLedgerEntryInputBody("<requiredString>", 1234);
            await foreach (LedgerEntry item in client.GetPaginationLedgerEntriesAsync(bodyInput))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetPaginationLedgerEntries_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = CreatePaginationClient(endpoint, credential);

            RequestContent content = RequestContent.Create(new
            {
                requiredString = "<requiredString>",
                requiredInt = 1234,
            });
            await foreach (BinaryData item in client.GetPaginationLedgerEntriesAsync(content))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetPaginationLedgerEntries_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = CreatePaginationClient(endpoint, credential);

            ListLedgerEntryInputBody bodyInput = new ListLedgerEntryInputBody("<requiredString>", 1234);
            await foreach (LedgerEntry item in client.GetPaginationLedgerEntriesAsync(bodyInput))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetMetricDimensionValues_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = CreatePaginationClient(endpoint, credential);

            await foreach (BinaryData item in client.GetMetricDimensionValuesAsync("<testRunId>", "<name>", "<metricNamespace>", null, null, null, null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetMetricDimensionValues_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = CreatePaginationClient(endpoint, credential);

            await foreach (DimensionValueListItem item in client.GetMetricDimensionValuesAsync("<testRunId>", "<name>", "<metricNamespace>"))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetMetricDimensionValues_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = CreatePaginationClient(endpoint, credential);

            await foreach (BinaryData item in client.GetMetricDimensionValuesAsync("<testRunId>", "<name>", "<metricNamespace>", "PT5S", "<metricName>", "<timespan>", null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetMetricDimensionValues_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = CreatePaginationClient(endpoint, credential);

            await foreach (DimensionValueListItem item in client.GetMetricDimensionValuesAsync("<testRunId>", "<name>", "<metricNamespace>", interval: Interval.PT5S, metricName: "<metricName>", timespan: "<timespan>"))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetLedgerEntries_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = CreatePaginationClient(endpoint, credential);

            await foreach (BinaryData item in client.GetLedgerEntriesAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetLedgerEntries_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = CreatePaginationClient(endpoint, credential);

            await foreach (LedgerEntry item in client.GetLedgerEntriesAsync())
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetLedgerEntries_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = CreatePaginationClient(endpoint, credential);

            await foreach (BinaryData item in client.GetLedgerEntriesAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetLedgerEntries_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = CreatePaginationClient(endpoint, credential);

            await foreach (LedgerEntry item in client.GetLedgerEntriesAsync())
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetTextBlocklists_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = CreatePaginationClient(endpoint, credential);

            await foreach (BinaryData item in client.GetTextBlocklistsAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetTextBlocklists_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = CreatePaginationClient(endpoint, credential);

            await foreach (TextBlocklist item in client.GetTextBlocklistsAsync())
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetTextBlocklists_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = CreatePaginationClient(endpoint, credential);

            await foreach (BinaryData item in client.GetTextBlocklistsAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetTextBlocklists_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = CreatePaginationClient(endpoint, credential);

            await foreach (TextBlocklist item in client.GetTextBlocklistsAsync())
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetTextBlocklistItems_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = CreatePaginationClient(endpoint, credential);

            await foreach (BinaryData item in client.GetTextBlocklistItemsAsync("<blocklistName>", null, null, null, null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetTextBlocklistItems_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = CreatePaginationClient(endpoint, credential);

            await foreach (TextBlockItem item in client.GetTextBlocklistItemsAsync("<blocklistName>"))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetTextBlocklistItems_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = CreatePaginationClient(endpoint, credential);

            await foreach (BinaryData item in client.GetTextBlocklistItemsAsync("<blocklistName>", 1234, 1234, 1234, null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetTextBlocklistItems_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = CreatePaginationClient(endpoint, credential);

            await foreach (TextBlockItem item in client.GetTextBlocklistItemsAsync("<blocklistName>", maxCount: 1234, skip: 1234, maxpagesize: 1234))
            {
            }
        }
    }
}
