// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace ModelsInCadl
{
    /// <summary> Model used both as input and output with primitive types. </summary>
    public partial class RoundTripPrimitiveModel : BaseModel
    {
        /// <summary> Initializes a new instance of RoundTripPrimitiveModel. </summary>
        /// <param name="requiredInt"></param>
        /// <param name="requiredInt64"></param>
        /// <param name="requiredSafeInt"></param>
        /// <param name="requiredFloat"></param>
        /// <param name="requiredDouble"></param>
        /// <param name="requiredBoolean"></param>
        /// <param name="requiredDateTimeOffset"></param>
        /// <param name="requiredTimeSpan"></param>
        public RoundTripPrimitiveModel(int requiredInt, long requiredInt64, long requiredSafeInt, float requiredFloat, double requiredDouble, bool requiredBoolean, DateTimeOffset requiredDateTimeOffset, TimeSpan requiredTimeSpan)
        {
            RequiredInt = requiredInt;
            RequiredInt64 = requiredInt64;
            RequiredSafeInt = requiredSafeInt;
            RequiredFloat = requiredFloat;
            RequiredDouble = requiredDouble;
            RequiredBoolean = requiredBoolean;
            RequiredDateTimeOffset = requiredDateTimeOffset;
            RequiredTimeSpan = requiredTimeSpan;
        }

        /// <summary> Initializes a new instance of RoundTripPrimitiveModel. </summary>
        /// <param name="requiredString"></param>
        /// <param name="requiredInt"></param>
        /// <param name="requiredInt64"></param>
        /// <param name="requiredSafeInt"></param>
        /// <param name="requiredFloat"></param>
        /// <param name="requiredDouble"></param>
        /// <param name="requiredBoolean"></param>
        /// <param name="requiredDateTimeOffset"></param>
        /// <param name="requiredTimeSpan"></param>
        internal RoundTripPrimitiveModel(string requiredString, int requiredInt, long requiredInt64, long requiredSafeInt, float requiredFloat, double requiredDouble, bool requiredBoolean, DateTimeOffset requiredDateTimeOffset, TimeSpan requiredTimeSpan)
        {
            RequiredString = requiredString;
            RequiredInt = requiredInt;
            RequiredInt64 = requiredInt64;
            RequiredSafeInt = requiredSafeInt;
            RequiredFloat = requiredFloat;
            RequiredDouble = requiredDouble;
            RequiredBoolean = requiredBoolean;
            RequiredDateTimeOffset = requiredDateTimeOffset;
            RequiredTimeSpan = requiredTimeSpan;
        }

        /// <summary> Gets the required string. </summary>
        public string RequiredString { get; }
        /// <summary> Gets or sets the required int. </summary>
        public int RequiredInt { get; set; }
        /// <summary> Gets or sets the required int 64. </summary>
        public long RequiredInt64 { get; set; }
        /// <summary> Gets or sets the required safe int. </summary>
        public long RequiredSafeInt { get; set; }
        /// <summary> Gets or sets the required float. </summary>
        public float RequiredFloat { get; set; }
        /// <summary> Gets or sets the required double. </summary>
        public double RequiredDouble { get; set; }
        /// <summary> Gets or sets the required boolean. </summary>
        public bool RequiredBoolean { get; set; }
        /// <summary> Gets or sets the required date time offset. </summary>
        public DateTimeOffset RequiredDateTimeOffset { get; set; }
        /// <summary> Gets or sets the required time span. </summary>
        public TimeSpan RequiredTimeSpan { get; set; }
    }
}
