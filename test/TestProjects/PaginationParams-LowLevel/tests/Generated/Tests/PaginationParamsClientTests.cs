// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using PaginationParams_LowLevel;

namespace PaginationParams_LowLevel.Tests
{
    public class PaginationParamsClientTests : PaginationParams_LowLevelTestBase
    {
        public PaginationParamsClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        public async Task GetPaginationParams_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            PaginationParamsClient client = CreatePaginationParamsClient(credential, endpoint);

            await foreach (BinaryData item in client.GetPaginationParamsAsync(null, null, null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].ToString());
            }
        }

        [Test]
        public async Task GetPaginationParams_AllParameters_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            PaginationParamsClient client = CreatePaginationParamsClient(credential, endpoint);

            await foreach (BinaryData item in client.GetPaginationParamsAsync(1234, 1234, 1234, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].GetProperty("id").ToString());
                Console.WriteLine(result[0].GetProperty("name").ToString());
                Console.WriteLine(result[0].GetProperty("type").ToString());
            }
        }

        [Test]
        public async Task Get2s_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            PaginationParamsClient client = CreatePaginationParamsClient(credential, endpoint);

            await foreach (BinaryData item in client.Get2sAsync(null, null, null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].ToString());
            }
        }

        [Test]
        public async Task Get2s_AllParameters_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            PaginationParamsClient client = CreatePaginationParamsClient(credential, endpoint);

            await foreach (BinaryData item in client.Get2sAsync(1234, 1234, 1234L, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].GetProperty("id").ToString());
                Console.WriteLine(result[0].GetProperty("name").ToString());
                Console.WriteLine(result[0].GetProperty("type").ToString());
            }
        }

        [Test]
        public async Task Get3s_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            PaginationParamsClient client = CreatePaginationParamsClient(credential, endpoint);

            await foreach (BinaryData item in client.Get3sAsync(null, null, null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].ToString());
            }
        }

        [Test]
        public async Task Get3s_AllParameters_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            PaginationParamsClient client = CreatePaginationParamsClient(credential, endpoint);

            await foreach (BinaryData item in client.Get3sAsync(1234, 1234, 1234, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].GetProperty("id").ToString());
                Console.WriteLine(result[0].GetProperty("name").ToString());
                Console.WriteLine(result[0].GetProperty("type").ToString());
            }
        }

        [Test]
        public async Task Get4s_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            PaginationParamsClient client = CreatePaginationParamsClient(credential, endpoint);

            await foreach (BinaryData item in client.Get4sAsync(null, null, null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].ToString());
            }
        }

        [Test]
        public async Task Get4s_AllParameters_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            PaginationParamsClient client = CreatePaginationParamsClient(credential, endpoint);

            await foreach (BinaryData item in client.Get4sAsync(1234, 1234, 123.45F, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].GetProperty("id").ToString());
                Console.WriteLine(result[0].GetProperty("name").ToString());
                Console.WriteLine(result[0].GetProperty("type").ToString());
            }
        }
    }
}
