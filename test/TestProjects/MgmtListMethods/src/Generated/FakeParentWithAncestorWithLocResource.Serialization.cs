// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ClientModel.Primitives;
using System.Text.Json;

namespace MgmtListMethods
{
    public partial class FakeParentWithAncestorWithLocResource : IJsonModel<FakeParentWithAncestorWithLocData>
    {
        private static FakeParentWithAncestorWithLocData s_dataDeserializationInstance;
        private static FakeParentWithAncestorWithLocData DataDeserializationInstance => s_dataDeserializationInstance ??= new();

        void IJsonModel<FakeParentWithAncestorWithLocData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options) => ((IJsonModel<FakeParentWithAncestorWithLocData>)Data).Write(writer, options);

        FakeParentWithAncestorWithLocData IJsonModel<FakeParentWithAncestorWithLocData>.Create(ref Utf8JsonReader reader, ModelReaderWriterOptions options) => ((IJsonModel<FakeParentWithAncestorWithLocData>)DataDeserializationInstance).Create(ref reader, options);

        BinaryData IPersistableModel<FakeParentWithAncestorWithLocData>.Write(ModelReaderWriterOptions options) => ModelReaderWriter.Write<FakeParentWithAncestorWithLocData>(Data, options, MgmtListMethodsContext.Default);

        FakeParentWithAncestorWithLocData IPersistableModel<FakeParentWithAncestorWithLocData>.Create(BinaryData data, ModelReaderWriterOptions options) => ModelReaderWriter.Read<FakeParentWithAncestorWithLocData>(data, options, MgmtListMethodsContext.Default);

        string IPersistableModel<FakeParentWithAncestorWithLocData>.GetFormatFromOptions(ModelReaderWriterOptions options) => ((IPersistableModel<FakeParentWithAncestorWithLocData>)DataDeserializationInstance).GetFormatFromOptions(options);
    }
}
