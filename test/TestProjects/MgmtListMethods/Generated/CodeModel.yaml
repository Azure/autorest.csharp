!CodeModel 
info: !Info 
  description: Management Operations
  title: ManagementOperations
schemas: !Schemas 
  numbers:
    - !NumberSchema &ref_3
      type: integer
      apiVersions:
        - !ApiVersion 
          version: '2020-06-01'
      precision: 32
      language: !Languages 
        default:
          name: FakePropertiesPlatformUpdateDomainCount
          description: Update Domain count.
      protocol: !Protocols {}
    - !NumberSchema &ref_4
      type: integer
      apiVersions:
        - !ApiVersion 
          version: '2020-06-01'
      precision: 32
      language: !Languages 
        default:
          name: FakePropertiesPlatformFaultDomainCount
          description: Fault Domain count.
      protocol: !Protocols {}
    - !NumberSchema &ref_6
      type: integer
      apiVersions:
        - !ApiVersion 
          version: '2020-06-01'
      precision: 32
      language: !Languages 
        default:
          name: SubFakePropertiesBar
          description: Fault Domain count.
      protocol: !Protocols {}
    - !NumberSchema &ref_8
      type: integer
      apiVersions:
        - !ApiVersion 
          version: '2020-06-01'
      precision: 32
      language: !Languages 
        default:
          name: BarPropertiesBar
          description: Fault Domain count.
      protocol: !Protocols {}
    - !NumberSchema &ref_10
      type: integer
      apiVersions:
        - !ApiVersion 
          version: '2020-06-01'
      precision: 32
      language: !Languages 
        default:
          name: TheExtensionPropertiesBar
          description: Fault Domain count.
      protocol: !Protocols {}
  strings:
    - !StringSchema &ref_0
      type: string
      language: !Languages 
        default:
          name: String
          description: simple string
      protocol: !Protocols {}
    - !StringSchema &ref_1
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-06-01'
      language: !Languages 
        default:
          name: String
          description: ''
      protocol: !Protocols {}
    - !StringSchema &ref_15
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-06-01'
      language: !Languages 
        default:
          name: ResourceId
          description: Resource Id
      protocol: !Protocols {}
    - !StringSchema &ref_16
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-06-01'
      language: !Languages 
        default:
          name: ResourceName
          description: Resource name
      protocol: !Protocols {}
    - !StringSchema &ref_17
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-06-01'
      language: !Languages 
        default:
          name: ResourceType
          description: Resource type
      protocol: !Protocols {}
    - !StringSchema &ref_18
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-06-01'
      language: !Languages 
        default:
          name: ResourceLocation
          description: Resource location
      protocol: !Protocols {}
    - !StringSchema &ref_30
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-06-01'
      language: !Languages 
        default:
          name: FakeListResultNextLink
          description: The URI to fetch the next page of Fakes. Call ListNext() with this URI to fetch the next page of Fakes.
      protocol: !Protocols {}
    - !StringSchema &ref_5
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-06-01'
      language: !Languages 
        default:
          name: SubFakePropertiesFoo
          description: Update Domain count.
      protocol: !Protocols {}
    - !StringSchema &ref_31
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-06-01'
      language: !Languages 
        default:
          name: SubFakeListResultNextLink
          description: The URI to fetch the next page of FakeBar. Call ListNext() with this URI to fetch the next page of FakeBars.
      protocol: !Protocols {}
    - !StringSchema &ref_68
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-06-01'
      pattern: ^[-\w\._]+$
      language: !Languages 
        default:
          name: String
          description: ''
      protocol: !Protocols {}
    - !StringSchema &ref_7
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-06-01'
      language: !Languages 
        default:
          name: BarPropertiesFoo
          description: Update Domain count.
      protocol: !Protocols {}
    - !StringSchema &ref_32
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-06-01'
      language: !Languages 
        default:
          name: BarsListResultNextLink
          description: The URI to fetch the next page of FakeBar. Call ListNext() with this URI to fetch the next page of FakeBars.
      protocol: !Protocols {}
    - !StringSchema &ref_9
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-06-01'
      language: !Languages 
        default:
          name: TheExtensionPropertiesFoo
          description: Update Domain count.
      protocol: !Protocols {}
    - !StringSchema &ref_33
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-06-01'
      language: !Languages 
        default:
          name: TheExtensionsListResultNextLink
          description: The URI to fetch the next page of FakeBar. Call ListNext() with this URI to fetch the next page of FakeBars.
      protocol: !Protocols {}
    - !StringSchema &ref_34
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-06-01'
      language: !Languages 
        default:
          name: UsageFoobar
          description: specifies foobar
      protocol: !Protocols {}
    - !StringSchema &ref_35
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-06-01'
      language: !Languages 
        default:
          name: UsagesListResultNextLink
          description: The URL for getting next page result
      protocol: !Protocols {}
    - !StringSchema &ref_37
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-06-01'
      language: !Languages 
        default:
          name: FeatureID
          description: specifies foobar
      protocol: !Protocols {}
    - !StringSchema &ref_38
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-06-01'
      language: !Languages 
        default:
          name: FeaturesListResultNextLink
          description: The URL for getting next page result
      protocol: !Protocols {}
  constants:
    - !ConstantSchema &ref_46
      type: constant
      value: !ConstantValue 
        value: '2020-06-01'
      valueType: *ref_0
      language: !Languages 
        default:
          name: ApiVersion20200601
          description: Api Version (2020-06-01)
      protocol: !Protocols {}
    - !ConstantSchema &ref_50
      type: constant
      value: !ConstantValue 
        value: application/json
      valueType: *ref_0
      language: !Languages 
        default:
          name: ApplicationJson
          description: Content Type 'application/json'
      protocol: !Protocols {}
    - !ConstantSchema &ref_51
      type: constant
      value: !ConstantValue 
        value: application/json
      valueType: *ref_0
      language: !Languages 
        default:
          name: Accept
          description: 'Accept: application/json'
      protocol: !Protocols {}
  dictionaries:
    - !DictionarySchema &ref_19
      type: dictionary
      elementType: *ref_1
      language: !Languages 
        default:
          name: ResourceTags
          description: Resource tags
      protocol: !Protocols {}
    - !DictionarySchema &ref_29
      type: dictionary
      elementType: *ref_1
      language: !Languages 
        default:
          name: UpdateResourceTags
          description: Resource tags
      protocol: !Protocols {}
  objects:
    - !ObjectSchema &ref_2
      type: object
      apiVersions:
        - !ApiVersion 
          version: '2020-06-01'
      children: !Relations 
        all:
          - !ObjectSchema &ref_11
            type: object
            apiVersions:
              - !ApiVersion 
                version: '2020-06-01'
            parents: !Relations 
              all:
                - *ref_2
              immediate:
                - *ref_2
            properties:
              - !Property 
                schema: !ObjectSchema &ref_20
                  type: object
                  apiVersions:
                    - !ApiVersion 
                      version: '2020-06-01'
                  properties:
                    - !Property 
                      schema: *ref_3
                      serializedName: platformUpdateDomainCount
                      language: !Languages 
                        default:
                          name: platformUpdateDomainCount
                          description: Update Domain count.
                      protocol: !Protocols {}
                    - !Property 
                      schema: *ref_4
                      serializedName: platformFaultDomainCount
                      language: !Languages 
                        default:
                          name: platformFaultDomainCount
                          description: Fault Domain count.
                      protocol: !Protocols {}
                  serializationFormats:
                    - json
                  usage:
                    - input
                    - output
                  language: !Languages 
                    default:
                      name: FakeProperties
                      description: The instance view of a resource.
                      namespace: ''
                  protocol: !Protocols {}
                serializedName: properties
                language: !Languages 
                  default:
                    name: properties
                    description: The instance view of a resource.
                protocol: !Protocols {}
            serializationFormats:
              - json
            usage:
              - input
              - output
            language: !Languages 
              default:
                name: Fake
                description: >-
                  Specifies information about the fake that the virtual machine should be assigned to. Virtual machines specified in the same fake are allocated to different nodes to maximize availability. For more information about fakes,
                  see [Manage the availability of virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-manage-availability?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json). <br><br> For more
                  information on Azure planned maintenance, see [Planned maintenance for virtual machines in
                  Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-planned-maintenance?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> Currently, a VM can only be added to fake at creation
                  time. An existing VM cannot be added to an fake.
                namespace: ''
            protocol: !Protocols {}
          - !ObjectSchema &ref_12
            type: object
            apiVersions:
              - !ApiVersion 
                version: '2020-06-01'
            parents: !Relations 
              all:
                - *ref_2
              immediate:
                - *ref_2
            properties:
              - !Property 
                schema: !ObjectSchema &ref_22
                  type: object
                  apiVersions:
                    - !ApiVersion 
                      version: '2020-06-01'
                  properties:
                    - !Property 
                      schema: *ref_5
                      serializedName: foo
                      language: !Languages 
                        default:
                          name: foo
                          description: Update Domain count.
                      protocol: !Protocols {}
                    - !Property 
                      schema: *ref_6
                      serializedName: bar
                      language: !Languages 
                        default:
                          name: bar
                          description: Fault Domain count.
                      protocol: !Protocols {}
                  serializationFormats:
                    - json
                  usage:
                    - input
                    - output
                  language: !Languages 
                    default:
                      name: SubFakeProperties
                      description: The instance view of a resource.
                      namespace: ''
                  protocol: !Protocols {}
                serializedName: properties
                language: !Languages 
                  default:
                    name: properties
                    description: The instance view of a resource.
                protocol: !Protocols {}
            serializationFormats:
              - json
            usage:
              - output
              - input
            language: !Languages 
              default:
                name: SubFake
                description: >-
                  Specifies information about the fake that the virtual machine should be assigned to. Virtual machines specified in the same fake are allocated to different nodes to maximize availability. For more information about fakes,
                  see [Manage the availability of virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-manage-availability?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json). <br><br> For more
                  information on Azure planned maintenance, see [Planned maintenance for virtual machines in
                  Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-planned-maintenance?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> Currently, a VM can only be added to fake at creation
                  time. An existing VM cannot be added to an fake.
                namespace: ''
            protocol: !Protocols {}
          - !ObjectSchema &ref_13
            type: object
            apiVersions:
              - !ApiVersion 
                version: '2020-06-01'
            parents: !Relations 
              all:
                - *ref_2
              immediate:
                - *ref_2
            properties:
              - !Property 
                schema: !ObjectSchema &ref_23
                  type: object
                  apiVersions:
                    - !ApiVersion 
                      version: '2020-06-01'
                  properties:
                    - !Property 
                      schema: *ref_7
                      serializedName: foo
                      language: !Languages 
                        default:
                          name: foo
                          description: Update Domain count.
                      protocol: !Protocols {}
                    - !Property 
                      schema: *ref_8
                      serializedName: bar
                      language: !Languages 
                        default:
                          name: bar
                          description: Fault Domain count.
                      protocol: !Protocols {}
                  serializationFormats:
                    - json
                  usage:
                    - input
                    - output
                  language: !Languages 
                    default:
                      name: BarProperties
                      description: The instance view of a resource.
                      namespace: ''
                  protocol: !Protocols {}
                serializedName: properties
                language: !Languages 
                  default:
                    name: properties
                    description: The instance view of a resource.
                protocol: !Protocols {}
            serializationFormats:
              - json
            usage:
              - input
              - output
            language: !Languages 
              default:
                name: Bar
                description: >-
                  Specifies information about the fake that the virtual machine should be assigned to. Virtual machines specified in the same fake are allocated to different nodes to maximize availability. For more information about fakes,
                  see [Manage the availability of virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-manage-availability?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json). <br><br> For more
                  information on Azure planned maintenance, see [Planned maintenance for virtual machines in
                  Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-planned-maintenance?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> Currently, a VM can only be added to fake at creation
                  time. An existing VM cannot be added to an fake.
                namespace: ''
            protocol: !Protocols {}
          - !ObjectSchema &ref_14
            type: object
            apiVersions:
              - !ApiVersion 
                version: '2020-06-01'
            parents: !Relations 
              all:
                - *ref_2
              immediate:
                - *ref_2
            properties:
              - !Property 
                schema: !ObjectSchema &ref_24
                  type: object
                  apiVersions:
                    - !ApiVersion 
                      version: '2020-06-01'
                  properties:
                    - !Property 
                      schema: *ref_9
                      serializedName: foo
                      language: !Languages 
                        default:
                          name: foo
                          description: Update Domain count.
                      protocol: !Protocols {}
                    - !Property 
                      schema: *ref_10
                      serializedName: bar
                      language: !Languages 
                        default:
                          name: bar
                          description: Fault Domain count.
                      protocol: !Protocols {}
                  serializationFormats:
                    - json
                  usage:
                    - input
                    - output
                  language: !Languages 
                    default:
                      name: TheExtensionProperties
                      description: The instance view of a resource.
                      namespace: ''
                  protocol: !Protocols {}
                serializedName: properties
                language: !Languages 
                  default:
                    name: properties
                    description: The instance view of a resource.
                protocol: !Protocols {}
            serializationFormats:
              - json
            usage:
              - input
              - output
            language: !Languages 
              default:
                name: TheExtension
                description: >-
                  Specifies information about the fake that the virtual machine should be assigned to. Virtual machines specified in the same fake are allocated to different nodes to maximize availability. For more information about fakes,
                  see [Manage the availability of virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-manage-availability?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json). <br><br> For more
                  information on Azure planned maintenance, see [Planned maintenance for virtual machines in
                  Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-planned-maintenance?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> Currently, a VM can only be added to fake at creation
                  time. An existing VM cannot be added to an fake.
                namespace: ''
            protocol: !Protocols {}
        immediate:
          - *ref_11
          - *ref_12
          - *ref_13
          - *ref_14
      properties:
        - !Property 
          schema: *ref_15
          readOnly: true
          required: false
          serializedName: id
          language: !Languages 
            default:
              name: id
              description: Resource Id
          protocol: !Protocols {}
        - !Property 
          schema: *ref_16
          readOnly: true
          required: false
          serializedName: name
          language: !Languages 
            default:
              name: name
              description: Resource name
          protocol: !Protocols {}
        - !Property 
          schema: *ref_17
          readOnly: true
          required: false
          serializedName: type
          language: !Languages 
            default:
              name: type
              description: Resource type
          protocol: !Protocols {}
        - !Property 
          schema: *ref_18
          required: true
          serializedName: location
          language: !Languages 
            default:
              name: location
              description: Resource location
          protocol: !Protocols {}
        - !Property 
          schema: *ref_19
          required: false
          serializedName: tags
          language: !Languages 
            default:
              name: tags
              description: Resource tags
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - input
        - output
      extensions:
        x-ms-azure-resource: true
      language: !Languages 
        default:
          name: Resource
          description: The Resource model definition.
          namespace: ''
      protocol: !Protocols {}
    - *ref_11
    - *ref_20
    - !ObjectSchema &ref_21
      type: object
      apiVersions:
        - !ApiVersion 
          version: '2020-06-01'
      children: !Relations 
        all:
          - !ObjectSchema &ref_25
            type: object
            apiVersions:
              - !ApiVersion 
                version: '2020-06-01'
            parents: !Relations 
              all:
                - *ref_21
              immediate:
                - *ref_21
            properties:
              - !Property 
                schema: *ref_20
                serializedName: properties
                language: !Languages 
                  default:
                    name: properties
                    description: The instance view of a resource.
                protocol: !Protocols {}
            serializationFormats:
              - json
            usage:
              - input
            language: !Languages 
              default:
                name: FakeUpdate
                description: Specifies information about the fake that the virtual machine should be assigned to. Only tags may be updated.
                namespace: ''
            protocol: !Protocols {}
          - !ObjectSchema &ref_26
            type: object
            apiVersions:
              - !ApiVersion 
                version: '2020-06-01'
            parents: !Relations 
              all:
                - *ref_21
              immediate:
                - *ref_21
            properties:
              - !Property 
                schema: *ref_22
                serializedName: properties
                language: !Languages 
                  default:
                    name: properties
                    description: The instance view of a resource.
                protocol: !Protocols {}
            serializationFormats:
              - json
            usage:
              - input
            language: !Languages 
              default:
                name: SubFakeUpdate
                description: Specifies information about the fake that the virtual machine should be assigned to. Only tags may be updated.
                namespace: ''
            protocol: !Protocols {}
          - !ObjectSchema &ref_27
            type: object
            apiVersions:
              - !ApiVersion 
                version: '2020-06-01'
            parents: !Relations 
              all:
                - *ref_21
              immediate:
                - *ref_21
            properties:
              - !Property 
                schema: *ref_23
                serializedName: properties
                language: !Languages 
                  default:
                    name: properties
                    description: The instance view of a resource.
                protocol: !Protocols {}
            serializationFormats:
              - json
            usage:
              - input
            language: !Languages 
              default:
                name: BarUpdate
                description: Specifies information about the fake that the virtual machine should be assigned to. Only tags may be updated.
                namespace: ''
            protocol: !Protocols {}
          - !ObjectSchema &ref_28
            type: object
            apiVersions:
              - !ApiVersion 
                version: '2020-06-01'
            parents: !Relations 
              all:
                - *ref_21
              immediate:
                - *ref_21
            properties:
              - !Property 
                schema: *ref_24
                serializedName: properties
                language: !Languages 
                  default:
                    name: properties
                    description: The instance view of a resource.
                protocol: !Protocols {}
            serializationFormats:
              - json
            usage:
              - input
            language: !Languages 
              default:
                name: TheExtensionUpdate
                description: Specifies information about the fake that the virtual machine should be assigned to. Only tags may be updated.
                namespace: ''
            protocol: !Protocols {}
        immediate:
          - *ref_25
          - *ref_26
          - *ref_27
          - *ref_28
      properties:
        - !Property 
          schema: *ref_29
          serializedName: tags
          language: !Languages 
            default:
              name: tags
              description: Resource tags
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - input
      language: !Languages 
        default:
          name: UpdateResource
          description: The Update Resource model definition.
          namespace: ''
      protocol: !Protocols {}
    - *ref_25
    - !ObjectSchema &ref_66
      type: object
      apiVersions:
        - !ApiVersion 
          version: '2020-06-01'
      properties:
        - !Property 
          schema: !ArraySchema &ref_40
            type: array
            apiVersions:
              - !ApiVersion 
                version: '2020-06-01'
            elementType: *ref_11
            language: !Languages 
              default:
                name: FakeListResultValue
                description: The list of fakes
            protocol: !Protocols {}
          required: true
          serializedName: value
          language: !Languages 
            default:
              name: value
              description: The list of fakes
          protocol: !Protocols {}
        - !Property 
          schema: *ref_30
          required: false
          serializedName: nextLink
          language: !Languages 
            default:
              name: nextLink
              description: The URI to fetch the next page of Fakes. Call ListNext() with this URI to fetch the next page of Fakes.
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - output
      language: !Languages 
        default:
          name: FakeListResult
          description: The List Availability Set operation response.
          namespace: ''
      protocol: !Protocols {}
    - *ref_12
    - *ref_22
    - *ref_26
    - !ObjectSchema &ref_83
      type: object
      apiVersions:
        - !ApiVersion 
          version: '2020-06-01'
      properties:
        - !Property 
          schema: !ArraySchema &ref_41
            type: array
            apiVersions:
              - !ApiVersion 
                version: '2020-06-01'
            elementType: *ref_12
            language: !Languages 
              default:
                name: SubFakeListResultValue
                description: The list of fakes child
            protocol: !Protocols {}
          required: true
          serializedName: value
          language: !Languages 
            default:
              name: value
              description: The list of fakes child
          protocol: !Protocols {}
        - !Property 
          schema: *ref_31
          required: false
          serializedName: nextLink
          language: !Languages 
            default:
              name: nextLink
              description: The URI to fetch the next page of FakeBar. Call ListNext() with this URI to fetch the next page of FakeBars.
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - output
      language: !Languages 
        default:
          name: SubFakeListResult
          description: The List Availability Set Child operation response.
          namespace: ''
      protocol: !Protocols {}
    - *ref_13
    - *ref_23
    - *ref_27
    - !ObjectSchema &ref_95
      type: object
      apiVersions:
        - !ApiVersion 
          version: '2020-06-01'
      properties:
        - !Property 
          schema: !ArraySchema &ref_42
            type: array
            apiVersions:
              - !ApiVersion 
                version: '2020-06-01'
            elementType: *ref_13
            language: !Languages 
              default:
                name: BarsListResultValue
                description: The list of fakes child
            protocol: !Protocols {}
          required: true
          serializedName: value
          language: !Languages 
            default:
              name: value
              description: The list of fakes child
          protocol: !Protocols {}
        - !Property 
          schema: *ref_32
          required: false
          serializedName: nextLink
          language: !Languages 
            default:
              name: nextLink
              description: The URI to fetch the next page of FakeBar. Call ListNext() with this URI to fetch the next page of FakeBars.
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - output
      language: !Languages 
        default:
          name: BarsListResult
          description: The List Availability Set Child operation response.
          namespace: ''
      protocol: !Protocols {}
    - *ref_14
    - *ref_24
    - *ref_28
    - !ObjectSchema &ref_107
      type: object
      apiVersions:
        - !ApiVersion 
          version: '2020-06-01'
      properties:
        - !Property 
          schema: !ArraySchema &ref_43
            type: array
            apiVersions:
              - !ApiVersion 
                version: '2020-06-01'
            elementType: *ref_14
            language: !Languages 
              default:
                name: TheExtensionsListResultValue
                description: The list of fakes child
            protocol: !Protocols {}
          required: true
          serializedName: value
          language: !Languages 
            default:
              name: value
              description: The list of fakes child
          protocol: !Protocols {}
        - !Property 
          schema: *ref_33
          required: false
          serializedName: nextLink
          language: !Languages 
            default:
              name: nextLink
              description: The URI to fetch the next page of FakeBar. Call ListNext() with this URI to fetch the next page of FakeBars.
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - output
      language: !Languages 
        default:
          name: TheExtensionsListResult
          description: The List Availability Set Child operation response.
          namespace: ''
      protocol: !Protocols {}
    - !ObjectSchema &ref_110
      type: object
      apiVersions:
        - !ApiVersion 
          version: '2020-06-01'
      properties:
        - !Property 
          schema: !ArraySchema &ref_44
            type: array
            apiVersions:
              - !ApiVersion 
                version: '2020-06-01'
            elementType: !ObjectSchema &ref_36
              type: object
              apiVersions:
                - !ApiVersion 
                  version: '2020-06-01'
              properties:
                - !Property 
                  schema: *ref_34
                  serializedName: foobar
                  language: !Languages 
                    default:
                      name: foobar
                      description: specifies foobar
                  protocol: !Protocols {}
              serializationFormats:
                - json
              usage:
                - output
              language: !Languages 
                default:
                  name: Usage
                  description: ''
                  namespace: ''
              protocol: !Protocols {}
            language: !Languages 
              default:
                name: UsagesListResultValue
                description: Usage
            protocol: !Protocols {}
          serializedName: value
          language: !Languages 
            default:
              name: value
              description: Usage
          protocol: !Protocols {}
        - !Property 
          schema: *ref_35
          serializedName: nextLink
          language: !Languages 
            default:
              name: nextLink
              description: The URL for getting next page result
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - output
      language: !Languages 
        default:
          name: UsagesListResult
          description: The result of list usages
          namespace: ''
      protocol: !Protocols {}
    - *ref_36
    - !ObjectSchema &ref_113
      type: object
      apiVersions:
        - !ApiVersion 
          version: '2020-06-01'
      properties:
        - !Property 
          schema: !ArraySchema &ref_45
            type: array
            apiVersions:
              - !ApiVersion 
                version: '2020-06-01'
            elementType: !ObjectSchema &ref_39
              type: object
              apiVersions:
                - !ApiVersion 
                  version: '2020-06-01'
              properties:
                - !Property 
                  schema: *ref_37
                  serializedName: featureID
                  language: !Languages 
                    default:
                      name: featureID
                      description: specifies foobar
                  protocol: !Protocols {}
              serializationFormats:
                - json
              usage:
                - output
              language: !Languages 
                default:
                  name: Feature
                  description: ''
                  namespace: ''
              protocol: !Protocols {}
            language: !Languages 
              default:
                name: FeaturesListResultValue
                description: Usage
            protocol: !Protocols {}
          serializedName: value
          language: !Languages 
            default:
              name: value
              description: Usage
          protocol: !Protocols {}
        - !Property 
          schema: *ref_38
          serializedName: nextLink
          language: !Languages 
            default:
              name: nextLink
              description: The URL for getting next page result
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - output
      language: !Languages 
        default:
          name: FeaturesListResult
          description: The result of list usages
          namespace: ''
      protocol: !Protocols {}
    - *ref_39
  arrays:
    - *ref_40
    - *ref_41
    - *ref_42
    - *ref_43
    - *ref_44
    - *ref_45
globalParameters:
  - !Parameter &ref_49
    schema: *ref_1
    implementation: Client
    required: true
    extensions:
      x-ms-priority: 0
    language: !Languages 
      default:
        name: SubscriptionId
        description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
        serializedName: subscriptionId
    protocol: !Protocols 
      http: !HttpParameter 
        in: path
  - !Parameter &ref_47
    schema: *ref_0
    clientDefaultValue: https://management.azure.com
    implementation: Client
    origin: modelerfour:synthesized/host
    required: true
    extensions:
      x-ms-skip-url-encoding: true
    language: !Languages 
      default:
        name: $host
        description: server parameter
        serializedName: $host
    protocol: !Protocols 
      http: !HttpParameter 
        in: uri
  - !Parameter &ref_48
    schema: *ref_46
    implementation: Client
    origin: modelerfour:synthesized/api-version
    required: true
    language: !Languages 
      default:
        name: apiVersion
        description: Api Version
        serializedName: api-version
    protocol: !Protocols 
      http: !HttpParameter 
        in: query
operationGroups:
  - !OperationGroup 
    $key: Fakes
    operations:
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-06-01'
        parameters:
          - *ref_47
          - !Parameter &ref_53
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_54
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: fakeName
                description: The name of the fake.
                serializedName: fakeName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_48
          - *ref_49
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_50
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_52
                schema: *ref_11
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: parameters
                    description: Parameters supplied to the Create Availability Set operation.
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_51
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_52
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Fake/fakes/{fakeName}
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters:
          - *ref_53
          - *ref_54
        responses:
          - !SchemaResponse 
            schema: *ref_11
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        language: !Languages 
          default:
            name: CreateOrUpdate
            description: Create or update an fake.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-06-01'
        parameters:
          - *ref_47
          - !Parameter &ref_56
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_57
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: fakeName
                description: The name of the fake.
                serializedName: fakeName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_48
          - *ref_49
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_50
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_55
                schema: *ref_25
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: parameters
                    description: Parameters supplied to the Update Availability Set operation.
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_51
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_55
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Fake/fakes/{fakeName}
                method: patch
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters:
          - *ref_56
          - *ref_57
        responses:
          - !SchemaResponse 
            schema: *ref_11
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        language: !Languages 
          default:
            name: Update
            description: Update an fake.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-06-01'
        parameters:
          - *ref_47
          - !Parameter &ref_58
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_59
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: fakeName
                description: The name of the fake.
                serializedName: fakeName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_48
          - *ref_49
        requests:
          - !Request 
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Fake/fakes/{fakeName}
                method: delete
                uri: '{$host}'
        signatureParameters:
          - *ref_58
          - *ref_59
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: No Content
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '204'
        language: !Languages 
          default:
            name: Delete
            description: Delete an fake.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-06-01'
        parameters:
          - *ref_47
          - !Parameter &ref_60
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_61
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: fakeName
                description: The name of the fake.
                serializedName: fakeName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_62
            schema: *ref_1
            implementation: Method
            language: !Languages 
              default:
                name: expand
                description: May be used to expand the participants.
                serializedName: $expand
            protocol: !Protocols 
              http: !HttpParameter 
                in: query
          - *ref_48
          - *ref_49
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_51
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Fake/fakes/{fakeName}
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_60
          - *ref_61
          - *ref_62
        responses:
          - !SchemaResponse 
            schema: *ref_11
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        language: !Languages 
          default:
            name: Get
            description: Retrieves information about an fake.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-06-01'
        parameters:
          - *ref_47
          - !Parameter &ref_63
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_64
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: requiredParam
                description: The expand expression to apply on the operation.
                serializedName: requiredParam
            protocol: !Protocols 
              http: !HttpParameter 
                in: query
          - !Parameter &ref_65
            schema: *ref_1
            implementation: Method
            language: !Languages 
              default:
                name: optionalParam
                description: The expand expression to apply on the operation.
                serializedName: optionalParam
            protocol: !Protocols 
              http: !HttpParameter 
                in: query
          - *ref_48
          - *ref_49
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_51
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Fake/fakes
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_63
          - *ref_64
          - *ref_65
        responses:
          - !SchemaResponse 
            schema: *ref_66
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        extensions:
          x-ms-pageable:
            nextLinkName: nextLink
        language: !Languages 
          default:
            name: List
            description: Lists all fakes in a resource group.
            paging:
              nextLinkName: nextLink
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-06-01'
        parameters:
          - *ref_47
          - *ref_48
          - *ref_49
          - !Parameter &ref_67
            schema: *ref_1
            implementation: Method
            language: !Languages 
              default:
                name: statusOnly
                description: statusOnly=true enables fetching run time status of all Virtual Machines in the subscription.
                serializedName: statusOnly
            protocol: !Protocols 
              http: !HttpParameter 
                in: query
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_51
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/providers/Microsoft.Fake/fakes
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_67
        responses:
          - !SchemaResponse 
            schema: *ref_66
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        extensions:
          x-ms-pageable:
            nextLinkName: nextLink
        language: !Languages 
          default:
            name: ListBySubscription
            description: Lists all of the virtual machines in the specified subscription. Use the nextLink property in the response to get the next page of virtual machines.
            paging:
              nextLinkName: nextLink
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-06-01'
        parameters:
          - *ref_47
          - !Parameter &ref_69
            schema: *ref_68
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: location
                description: The location for which virtual machines under the subscription are queried.
                serializedName: location
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_48
          - *ref_49
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_51
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/fakes
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_69
        responses:
          - !SchemaResponse 
            schema: *ref_66
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        language: !Languages 
          default:
            name: ListByLocation
            description: Lists all of the virtual machines in the specified subscription. Use the nextLink property in the response to get the next page of virtual machines.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-06-01'
        parameters:
          - *ref_47
          - !Parameter &ref_70
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_71
            schema: *ref_68
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: location
                description: The location for which virtual machines under the subscription are queried.
                serializedName: location
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_48
          - *ref_49
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_51
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/locations/{location}/fakes
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_70
          - *ref_71
        responses:
          - !SchemaResponse 
            schema: *ref_66
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        extensions:
          x-ms-pageable:
            nextLinkName: nextLink
        language: !Languages 
          default:
            name: ListByLocations
            description: Lists all of the virtual machines in the specified subscription. Use the nextLink property in the response to get the next page of virtual machines.
            paging:
              nextLinkName: nextLink
        protocol: !Protocols {}
    language: !Languages 
      default:
        name: Fakes
        description: ''
    protocol: !Protocols {}
  - !OperationGroup 
    $key: SubFakes
    operations:
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-06-01'
        parameters:
          - *ref_47
          - !Parameter &ref_72
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: subFakeName
                description: The name of the fake.
                serializedName: subFakeName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_48
          - *ref_49
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_51
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /providers/Microsoft.Fake/subFakes/{subFakeName}
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_72
        responses:
          - !SchemaResponse 
            schema: *ref_12
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        language: !Languages 
          default:
            name: Get
            description: Retrieves information about an fake.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-06-01'
        parameters:
          - *ref_47
          - !Parameter &ref_74
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: fakeName
                description: The ID that uniquely identifies a billing account.
                serializedName: fakeName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_75
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: subFakeName
                description: The name of the fake.
                serializedName: subFakeName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_48
          - *ref_49
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_50
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_73
                schema: *ref_12
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: body
                    description: The body parameter
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_51
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_73
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /providers/Microsoft.Fake/fakes/{fakeName}/subFakes/{subFakeName}
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters:
          - *ref_74
          - *ref_75
        responses:
          - !SchemaResponse 
            schema: *ref_12
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        language: !Languages 
          default:
            name: CreateOrUpdate
            description: Retrieves information about an fake.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-06-01'
        parameters:
          - *ref_47
          - !Parameter &ref_77
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: fakeName
                description: The ID that uniquely identifies a billing account.
                serializedName: fakeName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_78
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: subFakeName
                description: The name of the fake.
                serializedName: subFakeName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_48
          - *ref_49
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_50
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_76
                schema: *ref_26
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: body
                    description: The body parameter
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_51
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_76
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /providers/Microsoft.Fake/fakes/{fakeName}/subFakes/{subFakeName}
                method: patch
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters:
          - *ref_77
          - *ref_78
        responses:
          - !SchemaResponse 
            schema: *ref_12
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        language: !Languages 
          default:
            name: Update
            description: Retrieves information about an fake.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-06-01'
        parameters:
          - *ref_47
          - !Parameter &ref_79
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: fakeName
                description: The ID that uniquely identifies a billing account.
                serializedName: fakeName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_80
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: subFakeName
                description: The name of the fake.
                serializedName: subFakeName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_48
          - *ref_49
        requests:
          - !Request 
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /providers/Microsoft.Fake/fakes/{fakeName}/subFakes/{subFakeName}
                method: delete
                uri: '{$host}'
        signatureParameters:
          - *ref_79
          - *ref_80
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: No content
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '204'
        language: !Languages 
          default:
            name: Delete
            description: Retrieves information about an fake.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-06-01'
        parameters:
          - *ref_47
          - *ref_48
          - !Parameter &ref_81
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: fakeName
                description: The ID that uniquely identifies a billing account.
                serializedName: fakeName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_82
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: subFakeName
                description: The ID that uniquely identifies an agreement.
                serializedName: subFakeName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_51
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /providers/Microsoft.Fake/fakes/{fakeName}/subFakes/{subFakeName}
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_81
          - *ref_82
        responses:
          - !SchemaResponse 
            schema: *ref_83
            language: !Languages 
              default:
                name: ''
                description: OK. The request has succeeded.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        extensions:
          x-ms-pageable:
            nextLinkName: nextLink
        language: !Languages 
          default:
            name: List
            description: Gets an agreement by ID.
            paging:
              nextLinkName: nextLink
        protocol: !Protocols {}
    language: !Languages 
      default:
        name: SubFakes
        description: ''
    protocol: !Protocols {}
  - !OperationGroup 
    $key: Bars
    operations:
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-06-01'
        parameters:
          - *ref_47
          - !Parameter &ref_85
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_86
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: barName
                description: The name of the fake.
                serializedName: barName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_48
          - *ref_49
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_50
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_84
                schema: *ref_13
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: body
                    description: The body parameter
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_51
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_84
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Fake/bars/{barName}
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters:
          - *ref_85
          - *ref_86
        responses:
          - !SchemaResponse 
            schema: *ref_13
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        language: !Languages 
          default:
            name: CreateOrUpdate
            description: Retrieves information about an fake.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-06-01'
        parameters:
          - *ref_47
          - !Parameter &ref_88
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_89
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: barName
                description: The name of the fake.
                serializedName: barName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_48
          - *ref_49
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_50
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_87
                schema: *ref_27
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: body
                    description: The body parameter
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_51
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_87
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Fake/bars/{barName}
                method: patch
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters:
          - *ref_88
          - *ref_89
        responses:
          - !SchemaResponse 
            schema: *ref_13
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        language: !Languages 
          default:
            name: Update
            description: Retrieves information about an fake.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-06-01'
        parameters:
          - *ref_47
          - !Parameter &ref_90
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_91
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: barName
                description: The name of the fake.
                serializedName: barName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_48
          - *ref_49
        requests:
          - !Request 
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Fake/bars/{barName}
                method: delete
                uri: '{$host}'
        signatureParameters:
          - *ref_90
          - *ref_91
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: No content
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '204'
        language: !Languages 
          default:
            name: Delete
            description: Retrieves information about an fake.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-06-01'
        parameters:
          - *ref_47
          - !Parameter &ref_92
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_93
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: barName
                description: The name of the fake.
                serializedName: barName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_48
          - *ref_49
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_51
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Fake/bars/{barName}
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_92
          - *ref_93
        responses:
          - !SchemaResponse 
            schema: *ref_13
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        language: !Languages 
          default:
            name: Get
            description: Retrieves information about an fake.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-06-01'
        parameters:
          - *ref_47
          - !Parameter &ref_94
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_48
          - *ref_49
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_51
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Fake/bars
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_94
        responses:
          - !SchemaResponse 
            schema: *ref_95
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        extensions:
          x-ms-pageable:
            nextLinkName: nextLink
        language: !Languages 
          default:
            name: List
            description: Retrieves information about an fake.
            paging:
              nextLinkName: nextLink
        protocol: !Protocols {}
    language: !Languages 
      default:
        name: Bars
        description: ''
    protocol: !Protocols {}
  - !OperationGroup 
    $key: OneResources
    operations:
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-06-01'
        parameters:
          - *ref_47
          - !Parameter &ref_97
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_98
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceName
                description: The name of the fake.
                serializedName: resourceName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_48
          - *ref_49
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_50
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_96
                schema: *ref_14
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: body
                    description: The body parameter
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_51
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_96
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Fake/oneResources/{resourceName}
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters:
          - *ref_97
          - *ref_98
        responses:
          - !SchemaResponse 
            schema: *ref_14
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        language: !Languages 
          default:
            name: CreateOrUpdate
            description: Retrieves information about an fake.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-06-01'
        parameters:
          - *ref_47
          - !Parameter &ref_100
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_101
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceName
                description: The name of the fake.
                serializedName: resourceName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_48
          - *ref_49
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_50
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_99
                schema: *ref_28
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: body
                    description: The body parameter
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_51
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_99
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Fake/oneResources/{resourceName}
                method: patch
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters:
          - *ref_100
          - *ref_101
        responses:
          - !SchemaResponse 
            schema: *ref_14
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        language: !Languages 
          default:
            name: Update
            description: Retrieves information about an fake.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-06-01'
        parameters:
          - *ref_47
          - !Parameter &ref_102
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_103
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceName
                description: The name of the fake.
                serializedName: resourceName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_48
          - *ref_49
        requests:
          - !Request 
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Fake/oneResources/{resourceName}
                method: delete
                uri: '{$host}'
        signatureParameters:
          - *ref_102
          - *ref_103
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: No content
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '204'
        language: !Languages 
          default:
            name: Delete
            description: Retrieves information about an fake.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-06-01'
        parameters:
          - *ref_47
          - !Parameter &ref_104
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_105
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceName
                description: The name of the fake.
                serializedName: resourceName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_48
          - *ref_49
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_51
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Fake/oneResources/{resourceName}
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_104
          - *ref_105
        responses:
          - !SchemaResponse 
            schema: *ref_14
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        language: !Languages 
          default:
            name: Get
            description: Retrieves information about an fake.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-06-01'
        parameters:
          - *ref_47
          - !Parameter &ref_106
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_48
          - *ref_49
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_51
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Fake/oneResources
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_106
        responses:
          - !SchemaResponse 
            schema: *ref_107
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        extensions:
          x-ms-pageable:
            nextLinkName: nextLink
        language: !Languages 
          default:
            name: List
            description: Retrieves information about an fake.
            paging:
              nextLinkName: nextLink
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-06-01'
        parameters:
          - *ref_47
          - !Parameter &ref_108
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_109
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceName
                description: The name of the fake.
                serializedName: resourceName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_48
          - *ref_49
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_51
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Fake/oneResources/{resourceName}/usages
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_108
          - *ref_109
        responses:
          - !SchemaResponse 
            schema: *ref_110
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        extensions:
          x-ms-pageable:
            nextLinkName: nextLink
        language: !Languages 
          default:
            name: ListUsages
            description: Retrieves information about an fake.
            paging:
              nextLinkName: nextLink
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-06-01'
        parameters:
          - *ref_47
          - !Parameter &ref_111
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_112
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceName
                description: The name of the fake.
                serializedName: resourceName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_48
          - *ref_49
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_51
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Fake/oneResources/{resourceName}/features
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_111
          - *ref_112
        responses:
          - !SchemaResponse 
            schema: *ref_113
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        language: !Languages 
          default:
            name: ListFeatures
            description: Retrieves information about an fake.
        protocol: !Protocols {}
    language: !Languages 
      default:
        name: OneResources
        description: ''
    protocol: !Protocols {}
  - !OperationGroup 
    $key: SecondResources
    operations:
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-06-01'
        parameters:
          - *ref_47
          - !Parameter &ref_115
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_116
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: fakeName
                description: The name of the fake.
                serializedName: fakeName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_117
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceName
                description: The name of the fake.
                serializedName: resourceName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_48
          - *ref_49
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_50
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_114
                schema: *ref_14
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: body
                    description: The body parameter
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_51
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_114
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Fake/fakes/{fakeName}/secondResources/{resourceName}
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters:
          - *ref_115
          - *ref_116
          - *ref_117
        responses:
          - !SchemaResponse 
            schema: *ref_14
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        language: !Languages 
          default:
            name: CreateOrUpdate
            description: Retrieves information about an fake.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-06-01'
        parameters:
          - *ref_47
          - !Parameter &ref_119
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_120
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: fakeName
                description: The name of the fake.
                serializedName: fakeName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_121
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceName
                description: The name of the fake.
                serializedName: resourceName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_48
          - *ref_49
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_50
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_118
                schema: *ref_28
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: body
                    description: The body parameter
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_51
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_118
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Fake/fakes/{fakeName}/secondResources/{resourceName}
                method: patch
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters:
          - *ref_119
          - *ref_120
          - *ref_121
        responses:
          - !SchemaResponse 
            schema: *ref_14
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        language: !Languages 
          default:
            name: Update
            description: Retrieves information about an fake.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-06-01'
        parameters:
          - *ref_47
          - !Parameter &ref_122
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_123
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: fakeName
                description: The name of the fake.
                serializedName: fakeName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_124
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceName
                description: The name of the fake.
                serializedName: resourceName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_48
          - *ref_49
        requests:
          - !Request 
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Fake/fakes/{fakeName}/secondResources/{resourceName}
                method: delete
                uri: '{$host}'
        signatureParameters:
          - *ref_122
          - *ref_123
          - *ref_124
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: No content
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '204'
        language: !Languages 
          default:
            name: Delete
            description: Retrieves information about an fake.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-06-01'
        parameters:
          - *ref_47
          - !Parameter &ref_125
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_126
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: fakeName
                description: The name of the fake.
                serializedName: fakeName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_127
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceName
                description: The name of the fake.
                serializedName: resourceName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_48
          - *ref_49
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_51
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Fake/fakes/{fakeName}/secondResources/{resourceName}
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_125
          - *ref_126
          - *ref_127
        responses:
          - !SchemaResponse 
            schema: *ref_14
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        language: !Languages 
          default:
            name: Get
            description: Retrieves information about an fake.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-06-01'
        parameters:
          - *ref_47
          - !Parameter &ref_128
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_129
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: fakeName
                description: The name of the fake.
                serializedName: fakeName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_48
          - *ref_49
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_51
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Fake/fakes/{fakeName}/secondResources
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_128
          - *ref_129
        responses:
          - !SchemaResponse 
            schema: *ref_107
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        extensions:
          x-ms-pageable:
            nextLinkName: nextLink
        language: !Languages 
          default:
            name: List
            description: Retrieves information about an fake.
            paging:
              nextLinkName: nextLink
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-06-01'
        parameters:
          - *ref_47
          - !Parameter &ref_130
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_131
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: fakeName
                description: The name of the fake.
                serializedName: fakeName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_132
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceName
                description: The name of the fake.
                serializedName: resourceName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_48
          - *ref_49
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_51
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Fake/fakes/{fakeName}/secondResources/{resourceName}/usages
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_130
          - *ref_131
          - *ref_132
        responses:
          - !SchemaResponse 
            schema: *ref_110
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        extensions:
          x-ms-pageable:
            nextLinkName: nextLink
        language: !Languages 
          default:
            name: ListUsages
            description: Retrieves information about an fake.
            paging:
              nextLinkName: nextLink
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-06-01'
        parameters:
          - *ref_47
          - !Parameter &ref_133
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_134
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: fakeName
                description: The name of the fake.
                serializedName: fakeName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_135
            schema: *ref_1
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceName
                description: The name of the fake.
                serializedName: resourceName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_48
          - *ref_49
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_51
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Fake/fakes/{fakeName}/secondResources/{resourceName}/features
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_133
          - *ref_134
          - *ref_135
        responses:
          - !SchemaResponse 
            schema: *ref_113
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        language: !Languages 
          default:
            name: ListFeatures
            description: Retrieves information about an fake.
        protocol: !Protocols {}
    language: !Languages 
      default:
        name: SecondResources
        description: ''
    protocol: !Protocols {}
security: !Security 
  authenticationRequired: true
  schemes:
    - !AADTokenSecurityScheme 
      type: AADToken
      scopes:
        - https://management.azure.com/.default
language: !Languages 
  default:
    name: ManagementOperations
    description: ''
protocol: !Protocols 
  http: !HttpModel {}
