// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.ResourceManager.Resources;

namespace MgmtListMethods
{
    /// <summary> A class to add extension methods to Tenant. </summary>
    public static partial class TenantExtensions
    {
        private static TenantExtensionClient GetExtensionClient(Tenant tenant)
        {
            return tenant.GetCachedClient((client) =>
            {
                return new TenantExtensionClient(client, tenant.Id);
            }
            );
        }

        /// <summary> Gets a collection of TenantTestResources in the TenantTestResource. </summary>
        /// <param name="tenant"> The <see cref="Tenant" /> instance the method will execute against. </param>
        /// <returns> An object representing collection of TenantTestResources and their operations over a TenantTestResource. </returns>
        public static TenantTestCollection GetTenantTestResources(this Tenant tenant)
        {
            return GetExtensionClient(tenant).GetTenantTestResources();
        }

        /// <summary>
        /// Gets a billing account by its ID.
        /// Request Path: /providers/Microsoft.Tenant/tenantTests/{tenantTestName}
        /// Operation Id: TenantTests_Get
        /// </summary>
        /// <param name="tenant"> The <see cref="Tenant" /> instance the method will execute against. </param>
        /// <param name="tenantTestName"> The ID that uniquely identifies a billing account. </param>
        /// <param name="expand"> May be used to expand the soldTo, invoice sections and billing profiles. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="tenantTestName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="tenantTestName"/> is null. </exception>
        public static async Task<Response<TenantTestResource>> GetTenantTestResourceAsync(this Tenant tenant, string tenantTestName, string expand = null, CancellationToken cancellationToken = default)
        {
            return await tenant.GetTenantTestResources().GetAsync(tenantTestName, expand, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Gets a billing account by its ID.
        /// Request Path: /providers/Microsoft.Tenant/tenantTests/{tenantTestName}
        /// Operation Id: TenantTests_Get
        /// </summary>
        /// <param name="tenant"> The <see cref="Tenant" /> instance the method will execute against. </param>
        /// <param name="tenantTestName"> The ID that uniquely identifies a billing account. </param>
        /// <param name="expand"> May be used to expand the soldTo, invoice sections and billing profiles. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="tenantTestName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="tenantTestName"/> is null. </exception>
        public static Response<TenantTestResource> GetTenantTestResource(this Tenant tenant, string tenantTestName, string expand = null, CancellationToken cancellationToken = default)
        {
            return tenant.GetTenantTestResources().Get(tenantTestName, expand, cancellationToken);
        }
    }
}
