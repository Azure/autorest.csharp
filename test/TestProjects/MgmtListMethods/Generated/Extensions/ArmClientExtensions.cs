// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager;

namespace MgmtListMethods
{
    /// <summary> A class to add extension methods to ArmClient. </summary>
    public static partial class ArmClientExtensions
    {
        #region Fake
        /// <summary> Gets an object representing a Fake along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="Fake" /> object. </returns>
        public static Fake GetFake(this ArmClient armClient, ResourceIdentifier id)
        {
            Fake.ValidateResourceId(id);
            return new Fake(armClient, id);
        }
        #endregion

        #region FakeParentWithAncestorWithNonResChWithLoc
        /// <summary> Gets an object representing a FakeParentWithAncestorWithNonResChWithLoc along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="FakeParentWithAncestorWithNonResChWithLoc" /> object. </returns>
        public static FakeParentWithAncestorWithNonResChWithLoc GetFakeParentWithAncestorWithNonResChWithLoc(this ArmClient armClient, ResourceIdentifier id)
        {
            FakeParentWithAncestorWithNonResChWithLoc.ValidateResourceId(id);
            return new FakeParentWithAncestorWithNonResChWithLoc(armClient, id);
        }
        #endregion

        #region FakeParentWithAncestorWithNonResCh
        /// <summary> Gets an object representing a FakeParentWithAncestorWithNonResCh along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="FakeParentWithAncestorWithNonResCh" /> object. </returns>
        public static FakeParentWithAncestorWithNonResCh GetFakeParentWithAncestorWithNonResCh(this ArmClient armClient, ResourceIdentifier id)
        {
            FakeParentWithAncestorWithNonResCh.ValidateResourceId(id);
            return new FakeParentWithAncestorWithNonResCh(armClient, id);
        }
        #endregion

        #region FakeParentWithAncestorWithLoc
        /// <summary> Gets an object representing a FakeParentWithAncestorWithLoc along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="FakeParentWithAncestorWithLoc" /> object. </returns>
        public static FakeParentWithAncestorWithLoc GetFakeParentWithAncestorWithLoc(this ArmClient armClient, ResourceIdentifier id)
        {
            FakeParentWithAncestorWithLoc.ValidateResourceId(id);
            return new FakeParentWithAncestorWithLoc(armClient, id);
        }
        #endregion

        #region FakeParentWithAncestor
        /// <summary> Gets an object representing a FakeParentWithAncestor along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="FakeParentWithAncestor" /> object. </returns>
        public static FakeParentWithAncestor GetFakeParentWithAncestor(this ArmClient armClient, ResourceIdentifier id)
        {
            FakeParentWithAncestor.ValidateResourceId(id);
            return new FakeParentWithAncestor(armClient, id);
        }
        #endregion

        #region FakeParentWithNonResCh
        /// <summary> Gets an object representing a FakeParentWithNonResCh along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="FakeParentWithNonResCh" /> object. </returns>
        public static FakeParentWithNonResCh GetFakeParentWithNonResCh(this ArmClient armClient, ResourceIdentifier id)
        {
            FakeParentWithNonResCh.ValidateResourceId(id);
            return new FakeParentWithNonResCh(armClient, id);
        }
        #endregion

        #region FakeParent
        /// <summary> Gets an object representing a FakeParent along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="FakeParent" /> object. </returns>
        public static FakeParent GetFakeParent(this ArmClient armClient, ResourceIdentifier id)
        {
            FakeParent.ValidateResourceId(id);
            return new FakeParent(armClient, id);
        }
        #endregion

        #region ResGrpParentWithAncestorWithNonResChWithLoc
        /// <summary> Gets an object representing a ResGrpParentWithAncestorWithNonResChWithLoc along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ResGrpParentWithAncestorWithNonResChWithLoc" /> object. </returns>
        public static ResGrpParentWithAncestorWithNonResChWithLoc GetResGrpParentWithAncestorWithNonResChWithLoc(this ArmClient armClient, ResourceIdentifier id)
        {
            ResGrpParentWithAncestorWithNonResChWithLoc.ValidateResourceId(id);
            return new ResGrpParentWithAncestorWithNonResChWithLoc(armClient, id);
        }
        #endregion

        #region ResGrpParentWithAncestorWithNonResCh
        /// <summary> Gets an object representing a ResGrpParentWithAncestorWithNonResCh along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ResGrpParentWithAncestorWithNonResCh" /> object. </returns>
        public static ResGrpParentWithAncestorWithNonResCh GetResGrpParentWithAncestorWithNonResCh(this ArmClient armClient, ResourceIdentifier id)
        {
            ResGrpParentWithAncestorWithNonResCh.ValidateResourceId(id);
            return new ResGrpParentWithAncestorWithNonResCh(armClient, id);
        }
        #endregion

        #region ResGrpParentWithAncestorWithLoc
        /// <summary> Gets an object representing a ResGrpParentWithAncestorWithLoc along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ResGrpParentWithAncestorWithLoc" /> object. </returns>
        public static ResGrpParentWithAncestorWithLoc GetResGrpParentWithAncestorWithLoc(this ArmClient armClient, ResourceIdentifier id)
        {
            ResGrpParentWithAncestorWithLoc.ValidateResourceId(id);
            return new ResGrpParentWithAncestorWithLoc(armClient, id);
        }
        #endregion

        #region ResGrpParentWithAncestor
        /// <summary> Gets an object representing a ResGrpParentWithAncestor along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ResGrpParentWithAncestor" /> object. </returns>
        public static ResGrpParentWithAncestor GetResGrpParentWithAncestor(this ArmClient armClient, ResourceIdentifier id)
        {
            ResGrpParentWithAncestor.ValidateResourceId(id);
            return new ResGrpParentWithAncestor(armClient, id);
        }
        #endregion

        #region ResGrpParentWithNonResCh
        /// <summary> Gets an object representing a ResGrpParentWithNonResCh along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ResGrpParentWithNonResCh" /> object. </returns>
        public static ResGrpParentWithNonResCh GetResGrpParentWithNonResCh(this ArmClient armClient, ResourceIdentifier id)
        {
            ResGrpParentWithNonResCh.ValidateResourceId(id);
            return new ResGrpParentWithNonResCh(armClient, id);
        }
        #endregion

        #region ResGrpParent
        /// <summary> Gets an object representing a ResGrpParent along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ResGrpParent" /> object. </returns>
        public static ResGrpParent GetResGrpParent(this ArmClient armClient, ResourceIdentifier id)
        {
            ResGrpParent.ValidateResourceId(id);
            return new ResGrpParent(armClient, id);
        }
        #endregion

        #region SubParentWithNonResChWithLoc
        /// <summary> Gets an object representing a SubParentWithNonResChWithLoc along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SubParentWithNonResChWithLoc" /> object. </returns>
        public static SubParentWithNonResChWithLoc GetSubParentWithNonResChWithLoc(this ArmClient armClient, ResourceIdentifier id)
        {
            SubParentWithNonResChWithLoc.ValidateResourceId(id);
            return new SubParentWithNonResChWithLoc(armClient, id);
        }
        #endregion

        #region SubParentWithNonResCh
        /// <summary> Gets an object representing a SubParentWithNonResCh along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SubParentWithNonResCh" /> object. </returns>
        public static SubParentWithNonResCh GetSubParentWithNonResCh(this ArmClient armClient, ResourceIdentifier id)
        {
            SubParentWithNonResCh.ValidateResourceId(id);
            return new SubParentWithNonResCh(armClient, id);
        }
        #endregion

        #region SubParentWithLoc
        /// <summary> Gets an object representing a SubParentWithLoc along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SubParentWithLoc" /> object. </returns>
        public static SubParentWithLoc GetSubParentWithLoc(this ArmClient armClient, ResourceIdentifier id)
        {
            SubParentWithLoc.ValidateResourceId(id);
            return new SubParentWithLoc(armClient, id);
        }
        #endregion

        #region SubParent
        /// <summary> Gets an object representing a SubParent along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SubParent" /> object. </returns>
        public static SubParent GetSubParent(this ArmClient armClient, ResourceIdentifier id)
        {
            SubParent.ValidateResourceId(id);
            return new SubParent(armClient, id);
        }
        #endregion

        #region MgmtGrpParentWithNonResChWithLoc
        /// <summary> Gets an object representing a MgmtGrpParentWithNonResChWithLoc along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="MgmtGrpParentWithNonResChWithLoc" /> object. </returns>
        public static MgmtGrpParentWithNonResChWithLoc GetMgmtGrpParentWithNonResChWithLoc(this ArmClient armClient, ResourceIdentifier id)
        {
            MgmtGrpParentWithNonResChWithLoc.ValidateResourceId(id);
            return new MgmtGrpParentWithNonResChWithLoc(armClient, id);
        }
        #endregion

        #region MgmtGrpParentWithNonResCh
        /// <summary> Gets an object representing a MgmtGrpParentWithNonResCh along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="MgmtGrpParentWithNonResCh" /> object. </returns>
        public static MgmtGrpParentWithNonResCh GetMgmtGrpParentWithNonResCh(this ArmClient armClient, ResourceIdentifier id)
        {
            MgmtGrpParentWithNonResCh.ValidateResourceId(id);
            return new MgmtGrpParentWithNonResCh(armClient, id);
        }
        #endregion

        #region MgmtGrpParentWithLoc
        /// <summary> Gets an object representing a MgmtGrpParentWithLoc along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="MgmtGrpParentWithLoc" /> object. </returns>
        public static MgmtGrpParentWithLoc GetMgmtGrpParentWithLoc(this ArmClient armClient, ResourceIdentifier id)
        {
            MgmtGrpParentWithLoc.ValidateResourceId(id);
            return new MgmtGrpParentWithLoc(armClient, id);
        }
        #endregion

        #region MgmtGroupParent
        /// <summary> Gets an object representing a MgmtGroupParent along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="MgmtGroupParent" /> object. </returns>
        public static MgmtGroupParent GetMgmtGroupParent(this ArmClient armClient, ResourceIdentifier id)
        {
            MgmtGroupParent.ValidateResourceId(id);
            return new MgmtGroupParent(armClient, id);
        }
        #endregion

        #region TenantTest
        /// <summary> Gets an object representing a TenantTest along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="TenantTest" /> object. </returns>
        public static TenantTest GetTenantTest(this ArmClient armClient, ResourceIdentifier id)
        {
            TenantTest.ValidateResourceId(id);
            return new TenantTest(armClient, id);
        }
        #endregion

        #region TenantParentWithNonResChWithLoc
        /// <summary> Gets an object representing a TenantParentWithNonResChWithLoc along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="TenantParentWithNonResChWithLoc" /> object. </returns>
        public static TenantParentWithNonResChWithLoc GetTenantParentWithNonResChWithLoc(this ArmClient armClient, ResourceIdentifier id)
        {
            TenantParentWithNonResChWithLoc.ValidateResourceId(id);
            return new TenantParentWithNonResChWithLoc(armClient, id);
        }
        #endregion

        #region TenantParentWithNonResCh
        /// <summary> Gets an object representing a TenantParentWithNonResCh along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="TenantParentWithNonResCh" /> object. </returns>
        public static TenantParentWithNonResCh GetTenantParentWithNonResCh(this ArmClient armClient, ResourceIdentifier id)
        {
            TenantParentWithNonResCh.ValidateResourceId(id);
            return new TenantParentWithNonResCh(armClient, id);
        }
        #endregion

        #region TenantParentWithLoc
        /// <summary> Gets an object representing a TenantParentWithLoc along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="TenantParentWithLoc" /> object. </returns>
        public static TenantParentWithLoc GetTenantParentWithLoc(this ArmClient armClient, ResourceIdentifier id)
        {
            TenantParentWithLoc.ValidateResourceId(id);
            return new TenantParentWithLoc(armClient, id);
        }
        #endregion

        #region TenantParent
        /// <summary> Gets an object representing a TenantParent along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="TenantParent" /> object. </returns>
        public static TenantParent GetTenantParent(this ArmClient armClient, ResourceIdentifier id)
        {
            TenantParent.ValidateResourceId(id);
            return new TenantParent(armClient, id);
        }
        #endregion
    }
}
