// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;
using MgmtSignalR;
using MgmtSignalR.Models;

namespace MgmtSignalR.Tests.Mock
{
    /// <summary> Test for MgmtSignalRPrivateEndpointConnection. </summary>
    public partial class MgmtSignalRPrivateEndpointConnectionCollectionMockTests : MockTestBase
    {
        public MgmtSignalRPrivateEndpointConnectionCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: SignalRPrivateEndpointConnections_Update
            string privateEndpointConnectionName = "mySignalRService.1fa229cd-bf3f-47f0-8c49-afb36723997e";
            MgmtSignalR.MgmtSignalRPrivateEndpointConnectionData data = new MgmtSignalR.MgmtSignalRPrivateEndpointConnectionData()
            {
                ConnectionState = new MgmtSignalR.Models.MgmtSignalRPrivateLinkServiceConnectionState()
                {
                    Status = new MgmtSignalR.Models.PrivateLinkServiceConnectionStatus("Approved"),
                    Description = null,
                    ActionsRequired = "None",
                },
            };

            var signalRResourceId = MgmtSignalR.SignalRResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "mySignalRService");
            var collection = GetArmClient().GetSignalRResource(signalRResourceId).GetMgmtSignalRPrivateEndpointConnections();
            await collection.CreateOrUpdateAsync(WaitUntil.Completed, privateEndpointConnectionName, data);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: SignalRPrivateEndpointConnections_Get
            string privateEndpointConnectionName = "mySignalRService.1fa229cd-bf3f-47f0-8c49-afb36723997e";

            var signalRResourceId = MgmtSignalR.SignalRResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "mySignalRService");
            var collection = GetArmClient().GetSignalRResource(signalRResourceId).GetMgmtSignalRPrivateEndpointConnections();
            await collection.GetAsync(privateEndpointConnectionName);
        }
    }
}
