// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace MgmtSignalR.Models
{
    /// <summary> Settings used to provision or configure the resource. </summary>
    internal partial class SignalRCreateOrUpdateProperties
    {
        /// <summary> Initializes a new instance of SignalRCreateOrUpdateProperties. </summary>
        internal SignalRCreateOrUpdateProperties()
        {
            Features = new ChangeTrackingList<SignalRFeature>();
        }

        /// <summary>
        /// List of SignalR featureFlags. e.g. ServiceMode.
        /// 
        /// FeatureFlags that are not included in the parameters for the update operation will not be modified.
        /// And the response will only include featureFlags that are explicitly set. 
        /// When a featureFlag is not explicitly set, SignalR service will use its globally default value. 
        /// But keep in mind, the default value doesn&apos;t mean &quot;false&quot;. It varies in terms of different FeatureFlags.
        /// </summary>
        public IReadOnlyList<SignalRFeature> Features { get; }
        /// <summary> Cross-Origin Resource Sharing (CORS) settings. </summary>
        internal SignalRCorsSettings Cors { get; }
        /// <summary> Gets or sets the list of origins that should be allowed to make cross-origin calls (for example: http://example.com:12345). Use &quot;*&quot; to allow all. If omitted, allow all by default. </summary>
        public IList<string> CorsAllowedOrigins
        {
            get => Cors.AllowedOrigins;
        }

        /// <summary> Upstream settings when the Azure SignalR is in server-less mode. </summary>
        internal ServerlessUpstreamSettings Upstream { get; }
        /// <summary> Gets or sets the list of Upstream URL templates. Order matters, and the first matching template takes effects. </summary>
        public IList<UpstreamTemplate> UpstreamTemplates
        {
            get => Upstream.Templates;
        }

        /// <summary> Network ACLs. </summary>
        public SignalRNetworkACLs NetworkACLs { get; }
    }
}
