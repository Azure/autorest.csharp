<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="UpdateProjectAsync(WaitUntil,string,Project,CancellationToken)">
<example>
This sample shows how to call UpdateProjectAsync with required parameters.
<code><![CDATA[
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new LroBasicCadlClient(endpoint);

var resource = new Project()
{
    Description = "<Description>",
    Name = "<Name>",
};
var operation = await client.UpdateProjectAsync(WaitUntil.Completed, "<id>", resource);
]]></code>
</example>
    </member>
    <member name="UpdateProject(WaitUntil,string,Project,CancellationToken)">
<example>
This sample shows how to call UpdateProject with required parameters.
<code><![CDATA[
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new LroBasicCadlClient(endpoint);

var resource = new Project()
{
    Description = "<Description>",
    Name = "<Name>",
};
var operation = client.UpdateProject(WaitUntil.Completed, "<id>", resource);
]]></code>
</example>
    </member>
    <member name="UpdateProjectAsync(WaitUntil,string,RequestContent,RequestContext)">
<example>
This sample shows how to call UpdateProjectAsync with required parameters and parse the result.
<code><![CDATA[
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new LroBasicCadlClient(endpoint);

var data = new {};

var operation = await client.UpdateProjectAsync(WaitUntil.Completed, "<id>", RequestContent.Create(data));

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call UpdateProjectAsync with all parameters and request content, and how to parse the result.
<code><![CDATA[
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new LroBasicCadlClient(endpoint);

var data = new {
    description = "<description>",
    name = "<name>",
};

var operation = await client.UpdateProjectAsync(WaitUntil.Completed, "<id>", RequestContent.Create(data), new RequestContext());

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
    </member>
    <member name="UpdateProject(WaitUntil,string,RequestContent,RequestContext)">
<example>
This sample shows how to call UpdateProject with required parameters and parse the result.
<code><![CDATA[
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new LroBasicCadlClient(endpoint);

var data = new {};

var operation = client.UpdateProject(WaitUntil.Completed, "<id>", RequestContent.Create(data));

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call UpdateProject with all parameters and request content, and how to parse the result.
<code><![CDATA[
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new LroBasicCadlClient(endpoint);

var data = new {
    description = "<description>",
    name = "<name>",
};

var operation = client.UpdateProject(WaitUntil.Completed, "<id>", RequestContent.Create(data), new RequestContext());

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
    </member>
  </members>
</doc>