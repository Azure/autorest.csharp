<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="CreateProjectAsync(WaitUntil,Project,CancellationToken)">
      <example>
This sample shows how to call CreateProjectAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
LroBasicTypeSpecClient client = new LroBasicTypeSpecClient(endpoint);

Project resource = new Project();
Operation operation = await client.CreateProjectAsync(WaitUntil.Completed, resource);
]]></code>
This sample shows how to call CreateProjectAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
LroBasicTypeSpecClient client = new LroBasicTypeSpecClient(endpoint);

Project resource = new Project()
{
    Description = "<description>",
    Name = "<name>",
};
Operation operation = await client.CreateProjectAsync(WaitUntil.Completed, resource);
]]></code></example>
    </member>
    <member name="CreateProject(WaitUntil,Project,CancellationToken)">
      <example>
This sample shows how to call CreateProject.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
LroBasicTypeSpecClient client = new LroBasicTypeSpecClient(endpoint);

Project resource = new Project();
Operation operation = client.CreateProject(WaitUntil.Completed, resource);
]]></code>
This sample shows how to call CreateProject with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
LroBasicTypeSpecClient client = new LroBasicTypeSpecClient(endpoint);

Project resource = new Project()
{
    Description = "<description>",
    Name = "<name>",
};
Operation operation = client.CreateProject(WaitUntil.Completed, resource);
]]></code></example>
    </member>
    <member name="CreateProjectAsync(WaitUntil,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateProjectAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
LroBasicTypeSpecClient client = new LroBasicTypeSpecClient(endpoint);

RequestContent content = RequestContent.Create(new object());
Operation operation = await client.CreateProjectAsync(WaitUntil.Completed, content);
]]></code>
This sample shows how to call CreateProjectAsync with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
LroBasicTypeSpecClient client = new LroBasicTypeSpecClient(endpoint);

RequestContent content = RequestContent.Create(new
{
    description = "<description>",
    name = "<name>",
});
Operation operation = await client.CreateProjectAsync(WaitUntil.Completed, content);
]]></code></example>
    </member>
    <member name="CreateProject(WaitUntil,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateProject.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
LroBasicTypeSpecClient client = new LroBasicTypeSpecClient(endpoint);

RequestContent content = RequestContent.Create(new object());
Operation operation = client.CreateProject(WaitUntil.Completed, content);
]]></code>
This sample shows how to call CreateProject with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
LroBasicTypeSpecClient client = new LroBasicTypeSpecClient(endpoint);

RequestContent content = RequestContent.Create(new
{
    description = "<description>",
    name = "<name>",
});
Operation operation = client.CreateProject(WaitUntil.Completed, content);
]]></code></example>
    </member>
    <member name="UpdateProjectAsync(WaitUntil,string,Project,CancellationToken)">
      <example>
This sample shows how to call UpdateProjectAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
LroBasicTypeSpecClient client = new LroBasicTypeSpecClient(endpoint);

Project resource = new Project();
Operation<Project> operation = await client.UpdateProjectAsync(WaitUntil.Completed, "<id>", resource);
Project responseData = operation.Value;
]]></code>
This sample shows how to call UpdateProjectAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
LroBasicTypeSpecClient client = new LroBasicTypeSpecClient(endpoint);

Project resource = new Project()
{
    Description = "<description>",
    Name = "<name>",
};
Operation<Project> operation = await client.UpdateProjectAsync(WaitUntil.Completed, "<id>", resource);
Project responseData = operation.Value;
]]></code></example>
    </member>
    <member name="UpdateProject(WaitUntil,string,Project,CancellationToken)">
      <example>
This sample shows how to call UpdateProject.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
LroBasicTypeSpecClient client = new LroBasicTypeSpecClient(endpoint);

Project resource = new Project();
Operation<Project> operation = client.UpdateProject(WaitUntil.Completed, "<id>", resource);
Project responseData = operation.Value;
]]></code>
This sample shows how to call UpdateProject with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
LroBasicTypeSpecClient client = new LroBasicTypeSpecClient(endpoint);

Project resource = new Project()
{
    Description = "<description>",
    Name = "<name>",
};
Operation<Project> operation = client.UpdateProject(WaitUntil.Completed, "<id>", resource);
Project responseData = operation.Value;
]]></code></example>
    </member>
    <member name="UpdateProjectAsync(WaitUntil,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call UpdateProjectAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
LroBasicTypeSpecClient client = new LroBasicTypeSpecClient(endpoint);

RequestContent content = RequestContent.Create(new object());
Operation<BinaryData> operation = await client.UpdateProjectAsync(WaitUntil.Completed, "<id>", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call UpdateProjectAsync with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
LroBasicTypeSpecClient client = new LroBasicTypeSpecClient(endpoint);

RequestContent content = RequestContent.Create(new
{
    description = "<description>",
    name = "<name>",
});
Operation<BinaryData> operation = await client.UpdateProjectAsync(WaitUntil.Completed, "<id>", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="UpdateProject(WaitUntil,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call UpdateProject and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
LroBasicTypeSpecClient client = new LroBasicTypeSpecClient(endpoint);

RequestContent content = RequestContent.Create(new object());
Operation<BinaryData> operation = client.UpdateProject(WaitUntil.Completed, "<id>", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
]]></code>
This sample shows how to call UpdateProject with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
LroBasicTypeSpecClient client = new LroBasicTypeSpecClient(endpoint);

RequestContent content = RequestContent.Create(new
{
    description = "<description>",
    name = "<name>",
});
Operation<BinaryData> operation = client.UpdateProject(WaitUntil.Completed, "<id>", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="CreateThingAsync(WaitUntil,Thing,CancellationToken)">
      <example>
This sample shows how to call CreateThingAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
LroBasicTypeSpecClient client = new LroBasicTypeSpecClient(endpoint);

Thing thing = new Thing("<name>");
Operation<Thing> operation = await client.CreateThingAsync(WaitUntil.Completed, thing);
Thing responseData = operation.Value;
]]></code>
This sample shows how to call CreateThingAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
LroBasicTypeSpecClient client = new LroBasicTypeSpecClient(endpoint);

Thing thing = new Thing("<name>");
Operation<Thing> operation = await client.CreateThingAsync(WaitUntil.Completed, thing);
Thing responseData = operation.Value;
]]></code></example>
    </member>
    <member name="CreateThing(WaitUntil,Thing,CancellationToken)">
      <example>
This sample shows how to call CreateThing.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
LroBasicTypeSpecClient client = new LroBasicTypeSpecClient(endpoint);

Thing thing = new Thing("<name>");
Operation<Thing> operation = client.CreateThing(WaitUntil.Completed, thing);
Thing responseData = operation.Value;
]]></code>
This sample shows how to call CreateThing with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
LroBasicTypeSpecClient client = new LroBasicTypeSpecClient(endpoint);

Thing thing = new Thing("<name>");
Operation<Thing> operation = client.CreateThing(WaitUntil.Completed, thing);
Thing responseData = operation.Value;
]]></code></example>
    </member>
    <member name="CreateThingAsync(WaitUntil,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateThingAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
LroBasicTypeSpecClient client = new LroBasicTypeSpecClient(endpoint);

RequestContent content = RequestContent.Create(new
{
    name = "<name>",
});
Operation<BinaryData> operation = await client.CreateThingAsync(WaitUntil.Completed, content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call CreateThingAsync with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
LroBasicTypeSpecClient client = new LroBasicTypeSpecClient(endpoint);

RequestContent content = RequestContent.Create(new
{
    name = "<name>",
});
Operation<BinaryData> operation = await client.CreateThingAsync(WaitUntil.Completed, content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="CreateThing(WaitUntil,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateThing and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
LroBasicTypeSpecClient client = new LroBasicTypeSpecClient(endpoint);

RequestContent content = RequestContent.Create(new
{
    name = "<name>",
});
Operation<BinaryData> operation = client.CreateThing(WaitUntil.Completed, content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call CreateThing with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
LroBasicTypeSpecClient client = new LroBasicTypeSpecClient(endpoint);

RequestContent content = RequestContent.Create(new
{
    name = "<name>",
});
Operation<BinaryData> operation = client.CreateThing(WaitUntil.Completed, content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code></example>
    </member>
  </members>
</doc>