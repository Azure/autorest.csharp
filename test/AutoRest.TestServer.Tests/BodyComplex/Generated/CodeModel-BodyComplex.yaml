!CodeModel
schemas: !Schemas
  objects:
  - &o92 !ObjectSchema
    type: object
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    properties:
    - !Property
      schema: &o52 !NumberSchema
        type: integer
        precision: 32
        language: !Languages
          default: !Language
            name: typeForid
            description: Basic Id
          csharp: !CSharpLanguage
            uid: schema:11
            name: TypeForid
            description: Basic Id
            type: &o1 !CSharpType
              namespace: !CSharpNamespace
                base: System
              name: Int32
        protocol: !Protocols {}
      serializedName: id
      language: !Languages
        default: !Language
          name: id
          description: Basic Id
        csharp: !CSharpLanguage
          name: Id
          description: Basic Id
          isNullable: true
      protocol: !Protocols {}
    - !Property
      schema: &o69 !StringSchema
        type: string
        apiVersions:
        - !ApiVersion
          version: '2016-02-29'
        language: !Languages
          default: !Language
            name: basic-name
            description: Name property with a very long description that does not fit on a single line and a line break.
          csharp: !CSharpLanguage
            uid: schema:60
            name: BasicName
            description: Name property with a very long description that does not fit on a single line and a line break.
            type: &o0 !CSharpType
              namespace: !CSharpNamespace
                base: System
              name: String
        protocol: !Protocols {}
      serializedName: name
      language: !Languages
        default: !Language
          name: name
          description: Name property with a very long description that does not fit on a single line and a line break.
        csharp: !CSharpLanguage
          name: Name
          description: Name property with a very long description that does not fit on a single line and a line break.
          isNullable: true
      protocol: !Protocols {}
    - !Property
      schema: &o67 !SealedChoiceSchema
        choices:
        - !ChoiceValue
          value: cyan
          language: !Languages
            default: !Language
              name: cyan
              description: ''
            csharp: !CSharpLanguage
              name: Cyan
              description: ''
        - !ChoiceValue
          value: Magenta
          language: !Languages
            default: !Language
              name: Magenta
              description: ''
            csharp: !CSharpLanguage
              name: Magenta
              description: ''
        - !ChoiceValue
          value: YELLOW
          language: !Languages
            default: !Language
              name: YELLOW
              description: ''
            csharp: !CSharpLanguage
              name: YELLOW
              description: ''
        - !ChoiceValue
          value: blacK
          language: !Languages
            default: !Language
              name: blacK
              description: ''
            csharp: !CSharpLanguage
              name: BlacK
              description: ''
        type: sealed-choice
        apiVersions:
        - !ApiVersion
          version: '2016-02-29'
        choiceType: &o16 !StringSchema
          type: string
          language: !Languages
            default: !Language
              name: string
              description: simple string
            csharp: !CSharpLanguage
              uid: schema:59
              name: String
              description: simple string
              type: *o0
          protocol: !Protocols {}
        language: !Languages
          default: !Language
            name: CMYKColors
            description: MISSING·SCHEMA-DESCRIPTION-CHOICE
          csharp: !CSharpLanguage
            uid: schema:92
            name: CMYKColors
            description: MISSING·SCHEMA-DESCRIPTION-CHOICE
            type: !CSharpType
              namespace: !CSharpNamespace
                base: BodyComplex
                category: Models
                apiVersion: V20160229
              name: CMYKColors
        protocol: !Protocols {}
      serializedName: color
      language: !Languages
        default: !Language
          name: color
          description: MISSING·SCHEMA-DESCRIPTION-CHOICE
        csharp: !CSharpLanguage
          name: Color
          description: MISSING·SCHEMA-DESCRIPTION-CHOICE
          isNullable: true
      protocol: !Protocols {}
    language: !Languages
      default: !Language
        name: basic
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api20160229
      csharp: !CSharpLanguage
        uid: schema:26
        name: Basic
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        type: !CSharpType
          namespace: !CSharpNamespace
            base: BodyComplex
            category: Models
            apiVersion: V20160229
          name: Basic
    protocol: !Protocols {}
  - &o93 !ObjectSchema
    type: object
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    properties:
    - !Property
      schema: &o53 !NumberSchema
        type: integer
        precision: 32
        language: !Languages
          default: !Language
            name: typeForstatus
            description: MISSING·SCHEMA-DESCRIPTION-INTEGER
          csharp: !CSharpLanguage
            uid: schema:12
            name: TypeForstatus
            description: MISSING·SCHEMA-DESCRIPTION-INTEGER
            type: *o1
        protocol: !Protocols {}
      serializedName: status
      language: !Languages
        default: !Language
          name: status
          description: MISSING·SCHEMA-DESCRIPTION-INTEGER
        csharp: !CSharpLanguage
          name: Status
          description: MISSING·SCHEMA-DESCRIPTION-INTEGER
          isNullable: true
      protocol: !Protocols {}
    - !Property
      schema: &o70 !StringSchema
        type: string
        apiVersions:
        - !ApiVersion
          version: '2016-02-29'
        language: !Languages
          default: !Language
            name: Error-message
            description: MISSING·SCHEMA-DESCRIPTION-STRING
          csharp: !CSharpLanguage
            uid: schema:61
            name: ErrorMessage
            description: MISSING·SCHEMA-DESCRIPTION-STRING
            type: *o0
        protocol: !Protocols {}
      serializedName: message
      language: !Languages
        default: !Language
          name: message
          description: MISSING·SCHEMA-DESCRIPTION-STRING
        csharp: !CSharpLanguage
          name: Message
          description: MISSING·SCHEMA-DESCRIPTION-STRING
          isNullable: true
      protocol: !Protocols {}
    language: !Languages
      default: !Language
        name: Error
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api20160229
      csharp: !CSharpLanguage
        uid: schema:27
        name: Error
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        type: !CSharpType
          namespace: !CSharpNamespace
            base: BodyComplex
            category: Models
            apiVersion: V20160229
          name: Error
    protocol: !Protocols {}
  - &o95 !ObjectSchema
    type: object
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    properties:
    - !Property
      schema: &o54 !NumberSchema
        type: integer
        precision: 32
        language: !Languages
          default: !Language
            name: typeForfield1
            description: MISSING·SCHEMA-DESCRIPTION-INTEGER
          csharp: !CSharpLanguage
            uid: schema:13
            name: TypeForfield1
            description: MISSING·SCHEMA-DESCRIPTION-INTEGER
            type: *o1
        protocol: !Protocols {}
      serializedName: field1
      language: !Languages
        default: !Language
          name: field1
          description: MISSING·SCHEMA-DESCRIPTION-INTEGER
        csharp: !CSharpLanguage
          name: Field1
          description: MISSING·SCHEMA-DESCRIPTION-INTEGER
          isNullable: true
      protocol: !Protocols {}
    - !Property
      schema: &o55 !NumberSchema
        type: integer
        precision: 32
        language: !Languages
          default: !Language
            name: typeForfield2
            description: MISSING·SCHEMA-DESCRIPTION-INTEGER
          csharp: !CSharpLanguage
            uid: schema:14
            name: TypeForfield2
            description: MISSING·SCHEMA-DESCRIPTION-INTEGER
            type: *o1
        protocol: !Protocols {}
      serializedName: field2
      language: !Languages
        default: !Language
          name: field2
          description: MISSING·SCHEMA-DESCRIPTION-INTEGER
        csharp: !CSharpLanguage
          name: Field2
          description: MISSING·SCHEMA-DESCRIPTION-INTEGER
          isNullable: true
      protocol: !Protocols {}
    language: !Languages
      default: !Language
        name: int-wrapper
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api20160229
      csharp: !CSharpLanguage
        uid: schema:28
        name: IntWrapper
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        type: !CSharpType
          namespace: !CSharpNamespace
            base: BodyComplex
            category: Models
            apiVersion: V20160229
          name: IntWrapper
    protocol: !Protocols {}
  - &o96 !ObjectSchema
    type: object
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    properties:
    - !Property
      schema: &o56 !NumberSchema
        type: integer
        precision: 64
        language: !Languages
          default: !Language
            name: typeForfield1
            description: MISSING·SCHEMA-DESCRIPTION-INTEGER
          csharp: !CSharpLanguage
            uid: schema:15
            name: TypeForfield1
            description: MISSING·SCHEMA-DESCRIPTION-INTEGER
            type: *o1
        protocol: !Protocols {}
      serializedName: field1
      language: !Languages
        default: !Language
          name: field1
          description: MISSING·SCHEMA-DESCRIPTION-INTEGER
        csharp: !CSharpLanguage
          name: Field1
          description: MISSING·SCHEMA-DESCRIPTION-INTEGER
          isNullable: true
      protocol: !Protocols {}
    - !Property
      schema: &o57 !NumberSchema
        type: integer
        precision: 64
        language: !Languages
          default: !Language
            name: typeForfield2
            description: MISSING·SCHEMA-DESCRIPTION-INTEGER
          csharp: !CSharpLanguage
            uid: schema:16
            name: TypeForfield2
            description: MISSING·SCHEMA-DESCRIPTION-INTEGER
            type: *o1
        protocol: !Protocols {}
      serializedName: field2
      language: !Languages
        default: !Language
          name: field2
          description: MISSING·SCHEMA-DESCRIPTION-INTEGER
        csharp: !CSharpLanguage
          name: Field2
          description: MISSING·SCHEMA-DESCRIPTION-INTEGER
          isNullable: true
      protocol: !Protocols {}
    language: !Languages
      default: !Language
        name: long-wrapper
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api20160229
      csharp: !CSharpLanguage
        uid: schema:29
        name: LongWrapper
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        type: !CSharpType
          namespace: !CSharpNamespace
            base: BodyComplex
            category: Models
            apiVersion: V20160229
          name: LongWrapper
    protocol: !Protocols {}
  - &o97 !ObjectSchema
    type: object
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    properties:
    - !Property
      schema: &o58 !NumberSchema
        type: number
        precision: 32
        language: !Languages
          default: !Language
            name: typeForfield1
            description: MISSING·SCHEMA-DESCRIPTION-NUMBER
          csharp: !CSharpLanguage
            uid: schema:17
            name: TypeForfield1
            description: MISSING·SCHEMA-DESCRIPTION-NUMBER
            type: &o2 !CSharpType
              namespace: !CSharpNamespace
                base: System
              name: Double
        protocol: !Protocols {}
      serializedName: field1
      language: !Languages
        default: !Language
          name: field1
          description: MISSING·SCHEMA-DESCRIPTION-NUMBER
        csharp: !CSharpLanguage
          name: Field1
          description: MISSING·SCHEMA-DESCRIPTION-NUMBER
          isNullable: true
      protocol: !Protocols {}
    - !Property
      schema: &o59 !NumberSchema
        type: number
        precision: 32
        language: !Languages
          default: !Language
            name: typeForfield2
            description: MISSING·SCHEMA-DESCRIPTION-NUMBER
          csharp: !CSharpLanguage
            uid: schema:18
            name: TypeForfield2
            description: MISSING·SCHEMA-DESCRIPTION-NUMBER
            type: *o2
        protocol: !Protocols {}
      serializedName: field2
      language: !Languages
        default: !Language
          name: field2
          description: MISSING·SCHEMA-DESCRIPTION-NUMBER
        csharp: !CSharpLanguage
          name: Field2
          description: MISSING·SCHEMA-DESCRIPTION-NUMBER
          isNullable: true
      protocol: !Protocols {}
    language: !Languages
      default: !Language
        name: float-wrapper
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api20160229
      csharp: !CSharpLanguage
        uid: schema:30
        name: FloatWrapper
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        type: !CSharpType
          namespace: !CSharpNamespace
            base: BodyComplex
            category: Models
            apiVersion: V20160229
          name: FloatWrapper
    protocol: !Protocols {}
  - &o98 !ObjectSchema
    type: object
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    properties:
    - !Property
      schema: &o60 !NumberSchema
        type: number
        precision: 64
        language: !Languages
          default: !Language
            name: typeForfield1
            description: MISSING·SCHEMA-DESCRIPTION-NUMBER
          csharp: !CSharpLanguage
            uid: schema:19
            name: TypeForfield1
            description: MISSING·SCHEMA-DESCRIPTION-NUMBER
            type: *o2
        protocol: !Protocols {}
      serializedName: field1
      language: !Languages
        default: !Language
          name: field1
          description: MISSING·SCHEMA-DESCRIPTION-NUMBER
        csharp: !CSharpLanguage
          name: Field1
          description: MISSING·SCHEMA-DESCRIPTION-NUMBER
          isNullable: true
      protocol: !Protocols {}
    - !Property
      schema: &o61 !NumberSchema
        type: number
        precision: 64
        language: !Languages
          default: !Language
            name: typeForfield_56_zeros_after_the_dot_and_negative_zero_before_dot_and_this_is_a_long_field_name_on_purpose
            description: MISSING·SCHEMA-DESCRIPTION-NUMBER
          csharp: !CSharpLanguage
            uid: schema:20
            name: TypeForfield56ZerosAfterTheDotAndNegativeZeroBeforeDotAndThisIsALongFieldNameOnPurpose
            description: MISSING·SCHEMA-DESCRIPTION-NUMBER
            type: *o2
        protocol: !Protocols {}
      serializedName: field_56_zeros_after_the_dot_and_negative_zero_before_dot_and_this_is_a_long_field_name_on_purpose
      language: !Languages
        default: !Language
          name: field_56_zeros_after_the_dot_and_negative_zero_before_dot_and_this_is_a_long_field_name_on_purpose
          description: MISSING·SCHEMA-DESCRIPTION-NUMBER
        csharp: !CSharpLanguage
          name: Field56ZerosAfterTheDotAndNegativeZeroBeforeDotAndThisIsALongFieldNameOnPurpose
          description: MISSING·SCHEMA-DESCRIPTION-NUMBER
          isNullable: true
      protocol: !Protocols {}
    language: !Languages
      default: !Language
        name: double-wrapper
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api20160229
      csharp: !CSharpLanguage
        uid: schema:31
        name: DoubleWrapper
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        type: !CSharpType
          namespace: !CSharpNamespace
            base: BodyComplex
            category: Models
            apiVersion: V20160229
          name: DoubleWrapper
    protocol: !Protocols {}
  - &o99 !ObjectSchema
    type: object
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    properties:
    - !Property
      schema: &o37 !BooleanSchema
        type: boolean
        language: !Languages
          default: !Language
            name: typeForfield_true
            description: MISSING·SCHEMA-DESCRIPTION-BOOLEAN
          csharp: !CSharpLanguage
            uid: schema:7
            name: TypeForfieldTrue
            description: MISSING·SCHEMA-DESCRIPTION-BOOLEAN
            type: &o3 !CSharpType
              namespace: !CSharpNamespace
                base: System
              name: Boolean
        protocol: !Protocols {}
      serializedName: field_true
      language: !Languages
        default: !Language
          name: field_true
          description: MISSING·SCHEMA-DESCRIPTION-BOOLEAN
        csharp: !CSharpLanguage
          name: FieldTrue
          description: MISSING·SCHEMA-DESCRIPTION-BOOLEAN
          isNullable: true
      protocol: !Protocols {}
    - !Property
      schema: &o38 !BooleanSchema
        type: boolean
        language: !Languages
          default: !Language
            name: typeForfield_false
            description: MISSING·SCHEMA-DESCRIPTION-BOOLEAN
          csharp: !CSharpLanguage
            uid: schema:8
            name: TypeForfieldFalse
            description: MISSING·SCHEMA-DESCRIPTION-BOOLEAN
            type: *o3
        protocol: !Protocols {}
      serializedName: field_false
      language: !Languages
        default: !Language
          name: field_false
          description: MISSING·SCHEMA-DESCRIPTION-BOOLEAN
        csharp: !CSharpLanguage
          name: FieldFalse
          description: MISSING·SCHEMA-DESCRIPTION-BOOLEAN
          isNullable: true
      protocol: !Protocols {}
    language: !Languages
      default: !Language
        name: boolean-wrapper
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api20160229
      csharp: !CSharpLanguage
        uid: schema:32
        name: BooleanWrapper
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        type: !CSharpType
          namespace: !CSharpNamespace
            base: BodyComplex
            category: Models
            apiVersion: V20160229
          name: BooleanWrapper
    protocol: !Protocols {}
  - &o100 !ObjectSchema
    type: object
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    properties:
    - !Property
      schema: &o71 !StringSchema
        type: string
        apiVersions:
        - !ApiVersion
          version: '2016-02-29'
        language: !Languages
          default: !Language
            name: string-wrapper-field
            description: MISSING·SCHEMA-DESCRIPTION-STRING
          csharp: !CSharpLanguage
            uid: schema:62
            name: StringWrapperField
            description: MISSING·SCHEMA-DESCRIPTION-STRING
            type: *o0
        protocol: !Protocols {}
      serializedName: field
      language: !Languages
        default: !Language
          name: field
          description: MISSING·SCHEMA-DESCRIPTION-STRING
        csharp: !CSharpLanguage
          name: Field
          description: MISSING·SCHEMA-DESCRIPTION-STRING
          isNullable: true
      protocol: !Protocols {}
    - !Property
      schema: &o72 !StringSchema
        type: string
        apiVersions:
        - !ApiVersion
          version: '2016-02-29'
        language: !Languages
          default: !Language
            name: string-wrapper-empty
            description: MISSING·SCHEMA-DESCRIPTION-STRING
          csharp: !CSharpLanguage
            uid: schema:63
            name: StringWrapperEmpty
            description: MISSING·SCHEMA-DESCRIPTION-STRING
            type: *o0
        protocol: !Protocols {}
      serializedName: empty
      language: !Languages
        default: !Language
          name: empty
          description: MISSING·SCHEMA-DESCRIPTION-STRING
        csharp: !CSharpLanguage
          name: Empty
          description: MISSING·SCHEMA-DESCRIPTION-STRING
          isNullable: true
      protocol: !Protocols {}
    - !Property
      schema: &o73 !StringSchema
        type: string
        apiVersions:
        - !ApiVersion
          version: '2016-02-29'
        language: !Languages
          default: !Language
            name: string-wrapper-null
            description: MISSING·SCHEMA-DESCRIPTION-STRING
          csharp: !CSharpLanguage
            uid: schema:64
            name: StringWrapperNull
            description: MISSING·SCHEMA-DESCRIPTION-STRING
            type: *o0
        protocol: !Protocols {}
      language: !Languages
        default: !Language
          name: 
          description: MISSING·SCHEMA-DESCRIPTION-STRING
        csharp: !CSharpLanguage
          name: NullProperty
          description: MISSING·SCHEMA-DESCRIPTION-STRING
          isNullable: true
      protocol: !Protocols {}
    language: !Languages
      default: !Language
        name: string-wrapper
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api20160229
      csharp: !CSharpLanguage
        uid: schema:33
        name: StringWrapper
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        type: !CSharpType
          namespace: !CSharpNamespace
            base: BodyComplex
            category: Models
            apiVersion: V20160229
          name: StringWrapper
    protocol: !Protocols {}
  - &o101 !ObjectSchema
    type: object
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    properties:
    - !Property
      schema: &o44 !DateSchema
        type: date
        apiVersions:
        - !ApiVersion
          version: '2016-02-29'
        language: !Languages
          default: !Language
            name: date-wrapper-field
            description: MISSING·SCHEMA-DESCRIPTION-DATE
          csharp: !CSharpLanguage
            uid: schema:84
            name: DateWrapperField
            description: MISSING·SCHEMA-DESCRIPTION-DATE
            type: &o4 !CSharpType
              namespace: !CSharpNamespace
                base: System
              name: DateTime
        protocol: !Protocols {}
      serializedName: field
      language: !Languages
        default: !Language
          name: field
          description: MISSING·SCHEMA-DESCRIPTION-DATE
        csharp: !CSharpLanguage
          name: Field
          description: MISSING·SCHEMA-DESCRIPTION-DATE
          isNullable: true
      protocol: !Protocols {}
    - !Property
      schema: &o45 !DateSchema
        type: date
        apiVersions:
        - !ApiVersion
          version: '2016-02-29'
        language: !Languages
          default: !Language
            name: date-wrapper-leap
            description: MISSING·SCHEMA-DESCRIPTION-DATE
          csharp: !CSharpLanguage
            uid: schema:85
            name: DateWrapperLeap
            description: MISSING·SCHEMA-DESCRIPTION-DATE
            type: *o4
        protocol: !Protocols {}
      serializedName: leap
      language: !Languages
        default: !Language
          name: leap
          description: MISSING·SCHEMA-DESCRIPTION-DATE
        csharp: !CSharpLanguage
          name: Leap
          description: MISSING·SCHEMA-DESCRIPTION-DATE
          isNullable: true
      protocol: !Protocols {}
    language: !Languages
      default: !Language
        name: date-wrapper
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api20160229
      csharp: !CSharpLanguage
        uid: schema:34
        name: DateWrapper
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        type: !CSharpType
          namespace: !CSharpNamespace
            base: BodyComplex
            category: Models
            apiVersion: V20160229
          name: DateWrapper
    protocol: !Protocols {}
  - &o102 !ObjectSchema
    type: object
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    properties:
    - !Property
      schema: &o46 !DateTimeSchema
        type: date-time
        format: date-time
        apiVersions:
        - !ApiVersion
          version: '2016-02-29'
        language: !Languages
          default: !Language
            name: datetime-wrapper-field
            description: MISSING·SCHEMA-DESCRIPTION-DATETIME
          csharp: !CSharpLanguage
            uid: schema:86
            name: DatetimeWrapperField
            description: MISSING·SCHEMA-DESCRIPTION-DATETIME
            type: *o4
        protocol: !Protocols {}
      serializedName: field
      language: !Languages
        default: !Language
          name: field
          description: MISSING·SCHEMA-DESCRIPTION-DATETIME
        csharp: !CSharpLanguage
          name: Field
          description: MISSING·SCHEMA-DESCRIPTION-DATETIME
          isNullable: true
      protocol: !Protocols {}
    - !Property
      schema: &o47 !DateTimeSchema
        type: date-time
        format: date-time
        apiVersions:
        - !ApiVersion
          version: '2016-02-29'
        language: !Languages
          default: !Language
            name: datetime-wrapper-now
            description: MISSING·SCHEMA-DESCRIPTION-DATETIME
          csharp: !CSharpLanguage
            uid: schema:87
            name: DatetimeWrapperNow
            description: MISSING·SCHEMA-DESCRIPTION-DATETIME
            type: *o4
        protocol: !Protocols {}
      serializedName: now
      language: !Languages
        default: !Language
          name: now
          description: MISSING·SCHEMA-DESCRIPTION-DATETIME
        csharp: !CSharpLanguage
          name: Now
          description: MISSING·SCHEMA-DESCRIPTION-DATETIME
          isNullable: true
      protocol: !Protocols {}
    language: !Languages
      default: !Language
        name: datetime-wrapper
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api20160229
      csharp: !CSharpLanguage
        uid: schema:35
        name: DatetimeWrapper
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        type: !CSharpType
          namespace: !CSharpNamespace
            base: BodyComplex
            category: Models
            apiVersion: V20160229
          name: DatetimeWrapper
    protocol: !Protocols {}
  - &o103 !ObjectSchema
    type: object
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    properties:
    - !Property
      schema: &o48 !DateTimeSchema
        type: date-time
        format: date-time-rfc1123
        apiVersions:
        - !ApiVersion
          version: '2016-02-29'
        language: !Languages
          default: !Language
            name: datetimerfc1123-wrapper-field
            description: MISSING·SCHEMA-DESCRIPTION-DATETIME
          csharp: !CSharpLanguage
            uid: schema:88
            name: Datetimerfc1123WrapperField
            description: MISSING·SCHEMA-DESCRIPTION-DATETIME
            type: *o4
        protocol: !Protocols {}
      serializedName: field
      language: !Languages
        default: !Language
          name: field
          description: MISSING·SCHEMA-DESCRIPTION-DATETIME
        csharp: !CSharpLanguage
          name: Field
          description: MISSING·SCHEMA-DESCRIPTION-DATETIME
          isNullable: true
      protocol: !Protocols {}
    - !Property
      schema: &o49 !DateTimeSchema
        type: date-time
        format: date-time-rfc1123
        apiVersions:
        - !ApiVersion
          version: '2016-02-29'
        language: !Languages
          default: !Language
            name: datetimerfc1123-wrapper-now
            description: MISSING·SCHEMA-DESCRIPTION-DATETIME
          csharp: !CSharpLanguage
            uid: schema:89
            name: Datetimerfc1123WrapperNow
            description: MISSING·SCHEMA-DESCRIPTION-DATETIME
            type: *o4
        protocol: !Protocols {}
      serializedName: now
      language: !Languages
        default: !Language
          name: now
          description: MISSING·SCHEMA-DESCRIPTION-DATETIME
        csharp: !CSharpLanguage
          name: Now
          description: MISSING·SCHEMA-DESCRIPTION-DATETIME
          isNullable: true
      protocol: !Protocols {}
    language: !Languages
      default: !Language
        name: datetimerfc1123-wrapper
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api20160229
      csharp: !CSharpLanguage
        uid: schema:36
        name: Datetimerfc1123Wrapper
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        type: !CSharpType
          namespace: !CSharpNamespace
            base: BodyComplex
            category: Models
            apiVersion: V20160229
          name: Datetimerfc1123Wrapper
    protocol: !Protocols {}
  - &o104 !ObjectSchema
    type: object
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    properties:
    - !Property
      schema: &o51 !DurationSchema
        type: duration
        apiVersions:
        - !ApiVersion
          version: '2016-02-29'
        language: !Languages
          default: !Language
            name: duration-wrapper-field
            description: MISSING·SCHEMA-DESCRIPTION-DURATION
          csharp: !CSharpLanguage
            uid: schema:91
            name: DurationWrapperField
            description: MISSING·SCHEMA-DESCRIPTION-DURATION
            type: !CSharpType
              namespace: !CSharpNamespace
                base: System
              name: TimeSpan
        protocol: !Protocols {}
      serializedName: field
      language: !Languages
        default: !Language
          name: field
          description: MISSING·SCHEMA-DESCRIPTION-DURATION
        csharp: !CSharpLanguage
          name: Field
          description: MISSING·SCHEMA-DESCRIPTION-DURATION
          isNullable: true
      protocol: !Protocols {}
    language: !Languages
      default: !Language
        name: duration-wrapper
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api20160229
      csharp: !CSharpLanguage
        uid: schema:37
        name: DurationWrapper
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        type: !CSharpType
          namespace: !CSharpNamespace
            base: BodyComplex
            category: Models
            apiVersion: V20160229
          name: DurationWrapper
    protocol: !Protocols {}
  - &o105 !ObjectSchema
    type: object
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    properties:
    - !Property
      schema: &o41 !ByteArraySchema
        type: byte-array
        format: byte
        apiVersions:
        - !ApiVersion
          version: '2016-02-29'
        language: !Languages
          default: !Language
            name: byte-wrapper-field
            description: MISSING·SCHEMA-DESCRIPTION-BYTEARRAY
          csharp: !CSharpLanguage
            uid: schema:82
            name: ByteWrapperField
            description: MISSING·SCHEMA-DESCRIPTION-BYTEARRAY
            type: &o15 !CSharpType
              namespace: !CSharpNamespace
                base: System
              name: Byte[]
        protocol: !Protocols {}
      serializedName: field
      language: !Languages
        default: !Language
          name: field
          description: MISSING·SCHEMA-DESCRIPTION-BYTEARRAY
        csharp: !CSharpLanguage
          name: Field
          description: MISSING·SCHEMA-DESCRIPTION-BYTEARRAY
          isNullable: true
      protocol: !Protocols {}
    language: !Languages
      default: !Language
        name: byte-wrapper
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api20160229
      csharp: !CSharpLanguage
        uid: schema:38
        name: ByteWrapper
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        type: !CSharpType
          namespace: !CSharpNamespace
            base: BodyComplex
            category: Models
            apiVersion: V20160229
          name: ByteWrapper
    protocol: !Protocols {}
  - &o106 !ObjectSchema
    type: object
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    properties:
    - !Property
      schema: &o32 !ArraySchema
        type: array
        apiVersions:
        - !ApiVersion
          version: '2016-02-29'
        elementType: &o74 !StringSchema
          type: string
          apiVersions:
          - !ApiVersion
            version: '2016-02-29'
          language: !Languages
            default: !Language
              name: array-wrapper-arrayItem
              description: MISSING·SCHEMA-DESCRIPTION-STRING
            csharp: !CSharpLanguage
              uid: schema:65
              name: ArrayWrapperArrayItem
              description: MISSING·SCHEMA-DESCRIPTION-STRING
              type: *o0
          protocol: !Protocols {}
        language: !Languages
          default: !Language
            name: array-wrapper-array
            description: MISSING·SCHEMA-DESCRIPTION-ARRAYSCHEMA
          csharp: !CSharpLanguage
            uid: schema:0
            name: ArrayWrapperArray
            description: MISSING·SCHEMA-DESCRIPTION-ARRAYSCHEMA
            type: !CSharpType
              namespace: !CSharpNamespace
                base: System.Collections.Generic
              name: ICollection
              subType1: *o0
            isLazy: true
            concreteType: !CSharpType
              namespace: !CSharpNamespace
                base: System.Collections.Generic
              name: List
              subType1: *o0
            inputType: !CSharpType
              namespace: !CSharpNamespace
                base: System.Collections.Generic
              name: IEnumerable
              subType1: *o0
        protocol: !Protocols {}
      serializedName: array
      language: !Languages
        default: !Language
          name: array
          description: MISSING·SCHEMA-DESCRIPTION-ARRAYSCHEMA
        csharp: !CSharpLanguage
          name: Array
          description: MISSING·SCHEMA-DESCRIPTION-ARRAYSCHEMA
          isNullable: true
      protocol: !Protocols {}
    language: !Languages
      default: !Language
        name: array-wrapper
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api20160229
      csharp: !CSharpLanguage
        uid: schema:39
        name: ArrayWrapper
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        type: !CSharpType
          namespace: !CSharpNamespace
            base: BodyComplex
            category: Models
            apiVersion: V20160229
          name: ArrayWrapper
    protocol: !Protocols {}
  - &o107 !ObjectSchema
    type: object
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    properties:
    - !Property
      schema: &o31 !DictionarySchema
        type: dictionary
        elementType: &o75 !StringSchema
          type: string
          apiVersions:
          - !ApiVersion
            version: '2016-02-29'
          language: !Languages
            default: !Language
              name: string
              description: MISSING·SCHEMA-DESCRIPTION-STRING
            csharp: !CSharpLanguage
              uid: schema:66
              name: String
              description: MISSING·SCHEMA-DESCRIPTION-STRING
              type: *o0
          protocol: !Protocols {}
        language: !Languages
          default: !Language
            name: Dictionary of string
            description: Dictionary of <components·schemas·dictionary_wrapper·properties·defaultprogram·additionalproperties>
          csharp: !CSharpLanguage
            uid: schema:5
            name: DictionaryOfString
            description: Dictionary of <components·schemas·dictionary_wrapper·properties·defaultprogram·additionalproperties>
            type: !CSharpType
              namespace: !CSharpNamespace
                base: System.Collections.Generic
              name: IDictionary
              subType1: !CSharpType
                namespace: !CSharpNamespace
                  base: System
                name: String
              subType2: *o0
            isLazy: true
            concreteType: !CSharpType
              namespace: !CSharpNamespace
                base: System.Collections.Generic
              name: Dictionary
              subType1: !CSharpType
                namespace: !CSharpNamespace
                  base: System
                name: String
              subType2: *o0
            inputType: !CSharpType
              namespace: !CSharpNamespace
                base: System.Collections.Generic
              name: IDictionary
              subType1: !CSharpType
                namespace: !CSharpNamespace
                  base: System
                name: String
              subType2: *o0
        protocol: !Protocols {}
      serializedName: defaultProgram
      language: !Languages
        default: !Language
          name: defaultProgram
          description: Dictionary of <components·schemas·dictionary_wrapper·properties·defaultprogram·additionalproperties>
        csharp: !CSharpLanguage
          name: DefaultProgram
          description: Dictionary of <components·schemas·dictionary_wrapper·properties·defaultprogram·additionalproperties>
          isNullable: true
      protocol: !Protocols {}
    language: !Languages
      default: !Language
        name: dictionary-wrapper
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api20160229
      csharp: !CSharpLanguage
        uid: schema:40
        name: DictionaryWrapper
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        type: !CSharpType
          namespace: !CSharpNamespace
            base: BodyComplex
            category: Models
            apiVersion: V20160229
          name: DictionaryWrapper
    protocol: !Protocols {}
  - &o5 !ObjectSchema
    type: object
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    children: !Relations
      all:
      - &o8 !ObjectSchema
        type: object
        apiVersions:
        - !ApiVersion
          version: '2016-02-29'
        parents: !Relations
          all:
          - *o5
          immediate:
          - *o5
        properties:
        - !Property
          schema: &o78 !StringSchema
            type: string
            apiVersions:
            - !ApiVersion
              version: '2016-02-29'
            language: !Languages
              default: !Language
                name: dog-food
                description: MISSING·SCHEMA-DESCRIPTION-STRING
              csharp: !CSharpLanguage
                uid: schema:69
                name: DogFood
                description: MISSING·SCHEMA-DESCRIPTION-STRING
                type: *o0
            protocol: !Protocols {}
          serializedName: food
          language: !Languages
            default: !Language
              name: food
              description: MISSING·SCHEMA-DESCRIPTION-STRING
            csharp: !CSharpLanguage
              name: Food
              description: MISSING·SCHEMA-DESCRIPTION-STRING
              isNullable: true
          protocol: !Protocols {}
        language: !Languages
          default: !Language
            name: dog
            description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
            namespace: Api20160229
          csharp: !CSharpLanguage
            uid: schema:43
            name: Dog
            description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
            type: &o9 !CSharpType
              namespace: !CSharpNamespace
                base: BodyComplex
                category: Models
                apiVersion: V20160229
              name: Dog
        protocol: !Protocols {}
      - &o6 !ObjectSchema
        type: object
        apiVersions:
        - !ApiVersion
          version: '2016-02-29'
        children: !Relations
          all:
          - &o7 !ObjectSchema
            type: object
            apiVersions:
            - !ApiVersion
              version: '2016-02-29'
            parents: !Relations
              all:
              - *o6
              - *o5
              immediate:
              - *o6
            properties:
            - !Property
              schema: &o79 !StringSchema
                type: string
                apiVersions:
                - !ApiVersion
                  version: '2016-02-29'
                language: !Languages
                  default: !Language
                    name: siamese-breed
                    description: MISSING·SCHEMA-DESCRIPTION-STRING
                  csharp: !CSharpLanguage
                    uid: schema:70
                    name: SiameseBreed
                    description: MISSING·SCHEMA-DESCRIPTION-STRING
                    type: *o0
                protocol: !Protocols {}
              serializedName: breed
              language: !Languages
                default: !Language
                  name: breed
                  description: MISSING·SCHEMA-DESCRIPTION-STRING
                csharp: !CSharpLanguage
                  name: Breed
                  description: MISSING·SCHEMA-DESCRIPTION-STRING
                  isNullable: true
              protocol: !Protocols {}
            language: !Languages
              default: !Language
                name: siamese
                description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
                namespace: Api20160229
              csharp: !CSharpLanguage
                uid: schema:44
                name: Siamese
                description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
                type: !CSharpType
                  namespace: !CSharpNamespace
                    base: BodyComplex
                    category: Models
                    apiVersion: V20160229
                  name: Siamese
            protocol: !Protocols {}
          immediate:
          - *o7
        parents: !Relations
          all:
          - *o5
          immediate:
          - *o5
        properties:
        - !Property
          schema: &o77 !StringSchema
            type: string
            apiVersions:
            - !ApiVersion
              version: '2016-02-29'
            language: !Languages
              default: !Language
                name: cat-color
                description: MISSING·SCHEMA-DESCRIPTION-STRING
              csharp: !CSharpLanguage
                uid: schema:68
                name: CatColor
                description: MISSING·SCHEMA-DESCRIPTION-STRING
                type: *o0
            protocol: !Protocols {}
          serializedName: color
          language: !Languages
            default: !Language
              name: color
              description: MISSING·SCHEMA-DESCRIPTION-STRING
            csharp: !CSharpLanguage
              name: Color
              description: MISSING·SCHEMA-DESCRIPTION-STRING
              isNullable: true
          protocol: !Protocols {}
        - !Property
          schema: &o33 !ArraySchema
            type: array
            apiVersions:
            - !ApiVersion
              version: '2016-02-29'
            elementType: *o8
            language: !Languages
              default: !Language
                name: cat-hates
                description: MISSING·SCHEMA-DESCRIPTION-ARRAYSCHEMA
              csharp: !CSharpLanguage
                uid: schema:1
                name: CatHates
                description: MISSING·SCHEMA-DESCRIPTION-ARRAYSCHEMA
                type: !CSharpType
                  namespace: !CSharpNamespace
                    base: System.Collections.Generic
                  name: ICollection
                  subType1: *o9
                isLazy: true
                concreteType: !CSharpType
                  namespace: !CSharpNamespace
                    base: System.Collections.Generic
                  name: List
                  subType1: *o9
                inputType: !CSharpType
                  namespace: !CSharpNamespace
                    base: System.Collections.Generic
                  name: IEnumerable
                  subType1: *o9
            protocol: !Protocols {}
          serializedName: hates
          language: !Languages
            default: !Language
              name: hates
              description: MISSING·SCHEMA-DESCRIPTION-ARRAYSCHEMA
            csharp: !CSharpLanguage
              name: Hates
              description: MISSING·SCHEMA-DESCRIPTION-ARRAYSCHEMA
              isNullable: true
          protocol: !Protocols {}
        language: !Languages
          default: !Language
            name: cat
            description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
            namespace: Api20160229
          csharp: !CSharpLanguage
            uid: schema:42
            name: Cat
            description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
            type: !CSharpType
              namespace: !CSharpNamespace
                base: BodyComplex
                category: Models
                apiVersion: V20160229
              name: Cat
        protocol: !Protocols {}
      - *o7
      immediate:
      - *o8
      - *o6
    properties:
    - !Property
      schema: &o62 !NumberSchema
        type: integer
        precision: 32
        language: !Languages
          default: !Language
            name: typeForid
            description: MISSING·SCHEMA-DESCRIPTION-INTEGER
          csharp: !CSharpLanguage
            uid: schema:21
            name: TypeForid
            description: MISSING·SCHEMA-DESCRIPTION-INTEGER
            type: *o1
        protocol: !Protocols {}
      serializedName: id
      language: !Languages
        default: !Language
          name: id
          description: MISSING·SCHEMA-DESCRIPTION-INTEGER
        csharp: !CSharpLanguage
          name: Id
          description: MISSING·SCHEMA-DESCRIPTION-INTEGER
          isNullable: true
      protocol: !Protocols {}
    - !Property
      schema: &o76 !StringSchema
        type: string
        apiVersions:
        - !ApiVersion
          version: '2016-02-29'
        language: !Languages
          default: !Language
            name: pet-name
            description: MISSING·SCHEMA-DESCRIPTION-STRING
          csharp: !CSharpLanguage
            uid: schema:67
            name: PetName
            description: MISSING·SCHEMA-DESCRIPTION-STRING
            type: *o0
        protocol: !Protocols {}
      serializedName: name
      language: !Languages
        default: !Language
          name: name
          description: MISSING·SCHEMA-DESCRIPTION-STRING
        csharp: !CSharpLanguage
          name: Name
          description: MISSING·SCHEMA-DESCRIPTION-STRING
          isNullable: true
      protocol: !Protocols {}
    language: !Languages
      default: !Language
        name: pet
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api20160229
      csharp: !CSharpLanguage
        uid: schema:41
        name: Pet
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        type: !CSharpType
          namespace: !CSharpNamespace
            base: BodyComplex
            category: Models
            apiVersion: V20160229
          name: Pet
    protocol: !Protocols {}
  - *o6
  - *o8
  - *o7
  - &o11 !ObjectSchema
    type: object
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    children: !Relations
      all:
      - &o10 !ObjectSchema
        type: object
        apiVersions:
        - !ApiVersion
          version: '2016-02-29'
        children: !Relations
          all:
          - &o13 !ObjectSchema
            type: object
            apiVersions:
            - !ApiVersion
              version: '2016-02-29'
            discriminatorValue: smart_salmon
            parents: !Relations
              all:
              - *o10
              - &o12 !DictionarySchema
                type: dictionary
                elementType: !AnySchema
                  type: any
                  language: !Languages
                    default: !Language
                      name: any
                      description: <Any object>
                    csharp: !CSharpLanguage {}
                  protocol: !Protocols {}
                language: !Languages
                  default: !Language
                    name: smart_salmon
                    description: Dictionary of <any>
                  csharp: !CSharpLanguage
                    uid: schema:6
                    name: SmartSalmon
                    description: Dictionary of <any>
                    type: !CSharpType
                      namespace: !CSharpNamespace
                        base: System.Collections.Generic
                      name: IDictionary
                      subType1: !CSharpType
                        namespace: !CSharpNamespace
                          base: System
                        name: String
                    isLazy: true
                    concreteType: !CSharpType
                      namespace: !CSharpNamespace
                        base: System.Collections.Generic
                      name: Dictionary
                      subType1: !CSharpType
                        namespace: !CSharpNamespace
                          base: System
                        name: String
                    inputType: !CSharpType
                      namespace: !CSharpNamespace
                        base: System.Collections.Generic
                      name: IDictionary
                      subType1: !CSharpType
                        namespace: !CSharpNamespace
                          base: System
                        name: String
                protocol: !Protocols {}
              - *o11
              - *o12
              immediate:
              - *o10
              - *o12
            properties:
            - !Property
              schema: &o89 !StringSchema
                type: string
                apiVersions:
                - !ApiVersion
                  version: '2016-02-29'
                language: !Languages
                  default: !Language
                    name: smart_salmon-college_degree
                    description: MISSING·SCHEMA-DESCRIPTION-STRING
                  csharp: !CSharpLanguage
                    uid: schema:80
                    name: SmartSalmonCollegeDegree
                    description: MISSING·SCHEMA-DESCRIPTION-STRING
                    type: *o0
                protocol: !Protocols {}
              serializedName: college_degree
              language: !Languages
                default: !Language
                  name: college_degree
                  description: MISSING·SCHEMA-DESCRIPTION-STRING
                csharp: !CSharpLanguage
                  name: CollegeDegree
                  description: MISSING·SCHEMA-DESCRIPTION-STRING
                  isNullable: true
              protocol: !Protocols {}
            language: !Languages
              default: !Language
                name: smart_salmon
                description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
                namespace: Api20160229
              csharp: !CSharpLanguage
                uid: schema:53
                name: SmartSalmon
                description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
                type: !CSharpType
                  namespace: !CSharpNamespace
                    base: BodyComplex
                    category: Models
                    apiVersion: V20160229
                  name: SmartSalmon
            protocol: !Protocols {}
          immediate:
          - *o13
        discriminator: !Discriminator
          all: !DictionaryOfComplexSchema
            smart_salmon: *o13
          immediate: !DictionaryOfComplexSchema
            smart_salmon: *o13
          property: &o20 !Property
            schema: &o80 !StringSchema
              type: string
              apiVersions:
              - !ApiVersion
                version: '2016-02-29'
              language: !Languages
                default: !Language
                  name: Fish-fishtype
                  description: MISSING·SCHEMA-DESCRIPTION-STRING
                csharp: !CSharpLanguage
                  uid: schema:71
                  name: FishFishtype
                  description: MISSING·SCHEMA-DESCRIPTION-STRING
                  type: *o0
              protocol: !Protocols {}
            isDiscriminator: true
            required: true
            serializedName: fishtype
            language: !Languages
              default: !Language
                name: fishtype
                description: MISSING·SCHEMA-DESCRIPTION-STRING
              csharp: !CSharpLanguage
                name: Fishtype
                description: MISSING·SCHEMA-DESCRIPTION-STRING
                isNullable: false
            protocol: !Protocols {}
        discriminatorValue: salmon
        parents: !Relations
          all:
          - *o11
          immediate:
          - *o11
        properties:
        - !Property
          schema: &o85 !StringSchema
            type: string
            apiVersions:
            - !ApiVersion
              version: '2016-02-29'
            language: !Languages
              default: !Language
                name: salmon-location
                description: MISSING·SCHEMA-DESCRIPTION-STRING
              csharp: !CSharpLanguage
                uid: schema:76
                name: SalmonLocation
                description: MISSING·SCHEMA-DESCRIPTION-STRING
                type: *o0
            protocol: !Protocols {}
          serializedName: location
          language: !Languages
            default: !Language
              name: location
              description: MISSING·SCHEMA-DESCRIPTION-STRING
            csharp: !CSharpLanguage
              name: Location
              description: MISSING·SCHEMA-DESCRIPTION-STRING
              isNullable: true
          protocol: !Protocols {}
        - !Property
          schema: &o40 !BooleanSchema
            type: boolean
            language: !Languages
              default: !Language
                name: typeForiswild
                description: MISSING·SCHEMA-DESCRIPTION-BOOLEAN
              csharp: !CSharpLanguage
                uid: schema:10
                name: TypeForiswild
                description: MISSING·SCHEMA-DESCRIPTION-BOOLEAN
                type: *o3
            protocol: !Protocols {}
          serializedName: iswild
          language: !Languages
            default: !Language
              name: iswild
              description: MISSING·SCHEMA-DESCRIPTION-BOOLEAN
            csharp: !CSharpLanguage
              name: Iswild
              description: MISSING·SCHEMA-DESCRIPTION-BOOLEAN
              isNullable: true
          protocol: !Protocols {}
        language: !Languages
          default: !Language
            name: salmon
            description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
            namespace: Api20160229
          csharp: !CSharpLanguage
            uid: schema:49
            name: Salmon
            description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
            type: !CSharpType
              namespace: !CSharpNamespace
                base: BodyComplex
                category: Models
                apiVersion: V20160229
              name: Salmon
        protocol: !Protocols {}
      - *o13
      - &o14 !ObjectSchema
        type: object
        apiVersions:
        - !ApiVersion
          version: '2016-02-29'
        children: !Relations
          all:
          - &o17 !ObjectSchema
            type: object
            apiVersions:
            - !ApiVersion
              version: '2016-02-29'
            discriminatorValue: sawshark
            parents: !Relations
              all:
              - *o14
              - *o11
              immediate:
              - *o14
            properties:
            - !Property
              schema: &o42 !ByteArraySchema
                type: byte-array
                format: byte
                apiVersions:
                - !ApiVersion
                  version: '2016-02-29'
                language: !Languages
                  default: !Language
                    name: sawshark-picture
                    description: MISSING·SCHEMA-DESCRIPTION-BYTEARRAY
                  csharp: !CSharpLanguage
                    uid: schema:83
                    name: SawsharkPicture
                    description: MISSING·SCHEMA-DESCRIPTION-BYTEARRAY
                    type: *o15
                protocol: !Protocols {}
              serializedName: picture
              language: !Languages
                default: !Language
                  name: picture
                  description: MISSING·SCHEMA-DESCRIPTION-BYTEARRAY
                csharp: !CSharpLanguage
                  name: Picture
                  description: MISSING·SCHEMA-DESCRIPTION-BYTEARRAY
                  isNullable: true
              protocol: !Protocols {}
            language: !Languages
              default: !Language
                name: sawshark
                description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
                namespace: Api20160229
              csharp: !CSharpLanguage
                uid: schema:55
                name: Sawshark
                description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
                type: !CSharpType
                  namespace: !CSharpNamespace
                    base: BodyComplex
                    category: Models
                    apiVersion: V20160229
                  name: Sawshark
            protocol: !Protocols {}
          - &o18 !ObjectSchema
            type: object
            apiVersions:
            - !ApiVersion
              version: '2016-02-29'
            discriminatorValue: goblin
            parents: !Relations
              all:
              - *o14
              - *o11
              immediate:
              - *o14
            properties:
            - !Property
              schema: &o66 !NumberSchema
                type: integer
                precision: 32
                language: !Languages
                  default: !Language
                    name: typeForjawsize
                    description: MISSING·SCHEMA-DESCRIPTION-INTEGER
                  csharp: !CSharpLanguage
                    uid: schema:25
                    name: TypeForjawsize
                    description: MISSING·SCHEMA-DESCRIPTION-INTEGER
                    type: *o1
                protocol: !Protocols {}
              serializedName: jawsize
              language: !Languages
                default: !Language
                  name: jawsize
                  description: MISSING·SCHEMA-DESCRIPTION-INTEGER
                csharp: !CSharpLanguage
                  name: Jawsize
                  description: MISSING·SCHEMA-DESCRIPTION-INTEGER
                  isNullable: true
              protocol: !Protocols {}
            - !Property
              schema: &o68 !SealedChoiceSchema
                choices:
                - !ChoiceValue
                  value: pink
                  language: !Languages
                    default: !Language
                      name: pink
                      description: ''
                    csharp: !CSharpLanguage
                      name: Pink
                      description: ''
                - !ChoiceValue
                  value: gray
                  language: !Languages
                    default: !Language
                      name: gray
                      description: ''
                    csharp: !CSharpLanguage
                      name: Gray
                      description: ''
                - !ChoiceValue
                  value: brown
                  language: !Languages
                    default: !Language
                      name: brown
                      description: ''
                    csharp: !CSharpLanguage
                      name: Brown
                      description: ''
                type: sealed-choice
                apiVersions:
                - !ApiVersion
                  version: '2016-02-29'
                choiceType: *o16
                defaultValue: gray
                language: !Languages
                  default: !Language
                    name: GoblinSharkColor
                    description: Colors possible
                  csharp: !CSharpLanguage
                    uid: schema:93
                    name: GoblinSharkColor
                    description: Colors possible
                    type: !CSharpType
                      namespace: !CSharpNamespace
                        base: BodyComplex
                        category: Models
                        apiVersion: V20160229
                      name: GoblinSharkColor
                protocol: !Protocols {}
              serializedName: color
              language: !Languages
                default: !Language
                  name: color
                  description: Colors possible
                csharp: !CSharpLanguage
                  name: Color
                  description: Colors possible
                  isNullable: true
              protocol: !Protocols {}
            extensions: !DictionaryOfAny
              x-ms-discriminator-value: goblin
            language: !Languages
              default: !Language
                name: goblinshark
                description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
                namespace: Api20160229
              csharp: !CSharpLanguage
                uid: schema:56
                name: Goblinshark
                description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
                type: !CSharpType
                  namespace: !CSharpNamespace
                    base: BodyComplex
                    category: Models
                    apiVersion: V20160229
                  name: Goblinshark
            protocol: !Protocols {}
          - &o19 !ObjectSchema
            type: object
            apiVersions:
            - !ApiVersion
              version: '2016-02-29'
            discriminatorValue: cookiecuttershark
            parents: !Relations
              all:
              - *o14
              - *o11
              immediate:
              - *o14
            language: !Languages
              default: !Language
                name: cookiecuttershark
                description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
                namespace: Api20160229
              csharp: !CSharpLanguage
                uid: schema:57
                name: Cookiecuttershark
                description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
                type: !CSharpType
                  namespace: !CSharpNamespace
                    base: BodyComplex
                    category: Models
                    apiVersion: V20160229
                  name: Cookiecuttershark
            protocol: !Protocols {}
          immediate:
          - *o17
          - *o18
          - *o19
        discriminator: !Discriminator
          all: !DictionaryOfComplexSchema
            cookiecuttershark: *o19
            goblin: *o18
            sawshark: *o17
          immediate: !DictionaryOfComplexSchema
            cookiecuttershark: *o19
            goblin: *o18
            sawshark: *o17
          property: *o20
        discriminatorValue: shark
        parents: !Relations
          all:
          - *o11
          immediate:
          - *o11
        properties:
        - !Property
          schema: &o65 !NumberSchema
            type: integer
            precision: 32
            language: !Languages
              default: !Language
                name: typeForage
                description: MISSING·SCHEMA-DESCRIPTION-INTEGER
              csharp: !CSharpLanguage
                uid: schema:24
                name: TypeForage
                description: MISSING·SCHEMA-DESCRIPTION-INTEGER
                type: *o1
            protocol: !Protocols {}
          required: false
          serializedName: age
          language: !Languages
            default: !Language
              name: age
              description: MISSING·SCHEMA-DESCRIPTION-INTEGER
            csharp: !CSharpLanguage
              name: Age
              description: MISSING·SCHEMA-DESCRIPTION-INTEGER
              isNullable: true
          protocol: !Protocols {}
        - !Property
          schema: &o50 !DateTimeSchema
            type: date-time
            format: date-time
            apiVersions:
            - !ApiVersion
              version: '2016-02-29'
            language: !Languages
              default: !Language
                name: shark-birthday
                description: MISSING·SCHEMA-DESCRIPTION-DATETIME
              csharp: !CSharpLanguage
                uid: schema:90
                name: SharkBirthday
                description: MISSING·SCHEMA-DESCRIPTION-DATETIME
                type: *o4
            protocol: !Protocols {}
          required: true
          serializedName: birthday
          language: !Languages
            default: !Language
              name: birthday
              description: MISSING·SCHEMA-DESCRIPTION-DATETIME
            csharp: !CSharpLanguage
              name: Birthday
              description: MISSING·SCHEMA-DESCRIPTION-DATETIME
              isNullable: false
          protocol: !Protocols {}
        language: !Languages
          default: !Language
            name: shark
            description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
            namespace: Api20160229
          csharp: !CSharpLanguage
            uid: schema:54
            name: Shark
            description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
            type: !CSharpType
              namespace: !CSharpNamespace
                base: BodyComplex
                category: Models
                apiVersion: V20160229
              name: Shark
            hasRequired: true
        protocol: !Protocols {}
      - *o17
      - *o18
      - *o19
      immediate:
      - *o10
      - *o14
    discriminator: !Discriminator
      all: !DictionaryOfComplexSchema
        cookiecuttershark: *o19
        goblin: *o18
        salmon: *o10
        sawshark: *o17
        shark: *o14
        smart_salmon: *o13
      immediate: !DictionaryOfComplexSchema
        salmon: *o10
        shark: *o14
      property: *o20
    properties:
    - *o20
    - !Property
      schema: &o81 !StringSchema
        type: string
        apiVersions:
        - !ApiVersion
          version: '2016-02-29'
        language: !Languages
          default: !Language
            name: Fish-species
            description: MISSING·SCHEMA-DESCRIPTION-STRING
          csharp: !CSharpLanguage
            uid: schema:72
            name: FishSpecies
            description: MISSING·SCHEMA-DESCRIPTION-STRING
            type: *o0
        protocol: !Protocols {}
      required: false
      serializedName: species
      language: !Languages
        default: !Language
          name: species
          description: MISSING·SCHEMA-DESCRIPTION-STRING
        csharp: !CSharpLanguage
          name: Species
          description: MISSING·SCHEMA-DESCRIPTION-STRING
          isNullable: true
      protocol: !Protocols {}
    - !Property
      schema: &o63 !NumberSchema
        type: number
        precision: 32
        language: !Languages
          default: !Language
            name: typeForlength
            description: MISSING·SCHEMA-DESCRIPTION-NUMBER
          csharp: !CSharpLanguage
            uid: schema:22
            name: TypeForlength
            description: MISSING·SCHEMA-DESCRIPTION-NUMBER
            type: *o2
        protocol: !Protocols {}
      required: true
      serializedName: length
      language: !Languages
        default: !Language
          name: length
          description: MISSING·SCHEMA-DESCRIPTION-NUMBER
        csharp: !CSharpLanguage
          name: Length
          description: MISSING·SCHEMA-DESCRIPTION-NUMBER
          isNullable: false
      protocol: !Protocols {}
    - !Property
      schema: &o34 !ArraySchema
        type: array
        apiVersions:
        - !ApiVersion
          version: '2016-02-29'
        elementType: *o11
        language: !Languages
          default: !Language
            name: Fish-siblings
            description: MISSING·SCHEMA-DESCRIPTION-ARRAYSCHEMA
          csharp: !CSharpLanguage
            uid: schema:2
            name: FishSiblings
            description: MISSING·SCHEMA-DESCRIPTION-ARRAYSCHEMA
            type: !CSharpType
              namespace: !CSharpNamespace
                base: System.Collections.Generic
              name: ICollection
              subType1: &o21 !CSharpType
                namespace: !CSharpNamespace
                  base: BodyComplex
                  category: Models
                  apiVersion: V20160229
                name: Fish
            isLazy: true
            concreteType: !CSharpType
              namespace: !CSharpNamespace
                base: System.Collections.Generic
              name: List
              subType1: *o21
            inputType: !CSharpType
              namespace: !CSharpNamespace
                base: System.Collections.Generic
              name: IEnumerable
              subType1: *o21
        protocol: !Protocols {}
      required: false
      serializedName: siblings
      language: !Languages
        default: !Language
          name: siblings
          description: MISSING·SCHEMA-DESCRIPTION-ARRAYSCHEMA
        csharp: !CSharpLanguage
          name: Siblings
          description: MISSING·SCHEMA-DESCRIPTION-ARRAYSCHEMA
          isNullable: true
      protocol: !Protocols {}
    language: !Languages
      default: !Language
        name: Fish
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api20160229
      csharp: !CSharpLanguage
        uid: schema:45
        name: Fish
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        type: *o21
        hasRequired: true
    protocol: !Protocols {}
  - &o22 !ObjectSchema
    type: object
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    children: !Relations
      all:
      - &o23 !ObjectSchema
        type: object
        apiVersions:
        - !ApiVersion
          version: '2016-02-29'
        discriminatorValue: DotSalmon
        parents: !Relations
          all:
          - *o22
          immediate:
          - *o22
        properties:
        - !Property
          schema: &o84 !StringSchema
            type: string
            apiVersions:
            - !ApiVersion
              version: '2016-02-29'
            language: !Languages
              default: !Language
                name: DotSalmon-location
                description: MISSING·SCHEMA-DESCRIPTION-STRING
              csharp: !CSharpLanguage
                uid: schema:75
                name: DotSalmonLocation
                description: MISSING·SCHEMA-DESCRIPTION-STRING
                type: *o0
            protocol: !Protocols {}
          serializedName: location
          language: !Languages
            default: !Language
              name: location
              description: MISSING·SCHEMA-DESCRIPTION-STRING
            csharp: !CSharpLanguage
              name: Location
              description: MISSING·SCHEMA-DESCRIPTION-STRING
              isNullable: true
          protocol: !Protocols {}
        - !Property
          schema: &o39 !BooleanSchema
            type: boolean
            language: !Languages
              default: !Language
                name: typeForiswild
                description: MISSING·SCHEMA-DESCRIPTION-BOOLEAN
              csharp: !CSharpLanguage
                uid: schema:9
                name: TypeForiswild
                description: MISSING·SCHEMA-DESCRIPTION-BOOLEAN
                type: *o3
            protocol: !Protocols {}
          serializedName: iswild
          language: !Languages
            default: !Language
              name: iswild
              description: MISSING·SCHEMA-DESCRIPTION-BOOLEAN
            csharp: !CSharpLanguage
              name: Iswild
              description: MISSING·SCHEMA-DESCRIPTION-BOOLEAN
              isNullable: true
          protocol: !Protocols {}
        language: !Languages
          default: !Language
            name: DotSalmon
            description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
            namespace: Api20160229
          csharp: !CSharpLanguage
            uid: schema:48
            name: DotSalmon
            description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
            type: &o25 !CSharpType
              namespace: !CSharpNamespace
                base: BodyComplex
                category: Models
                apiVersion: V20160229
              name: DotSalmon
        protocol: !Protocols {}
      immediate:
      - *o23
    discriminator: !Discriminator
      all: !DictionaryOfComplexSchema
        DotSalmon: *o23
      immediate: !DictionaryOfComplexSchema
        DotSalmon: *o23
      property: &o24 !Property
        schema: &o82 !StringSchema
          type: string
          apiVersions:
          - !ApiVersion
            version: '2016-02-29'
          language: !Languages
            default: !Language
              name: DotFish-fish.type
              description: MISSING·SCHEMA-DESCRIPTION-STRING
            csharp: !CSharpLanguage
              uid: schema:73
              name: DotFishFishType
              description: MISSING·SCHEMA-DESCRIPTION-STRING
              type: *o0
          protocol: !Protocols {}
        isDiscriminator: true
        required: true
        serializedName: fish.type
        language: !Languages
          default: !Language
            name: fish.type
            description: MISSING·SCHEMA-DESCRIPTION-STRING
          csharp: !CSharpLanguage
            name: FishType
            description: MISSING·SCHEMA-DESCRIPTION-STRING
            isNullable: false
        protocol: !Protocols {}
    properties:
    - *o24
    - !Property
      schema: &o83 !StringSchema
        type: string
        apiVersions:
        - !ApiVersion
          version: '2016-02-29'
        language: !Languages
          default: !Language
            name: DotFish-species
            description: MISSING·SCHEMA-DESCRIPTION-STRING
          csharp: !CSharpLanguage
            uid: schema:74
            name: DotFishSpecies
            description: MISSING·SCHEMA-DESCRIPTION-STRING
            type: *o0
        protocol: !Protocols {}
      required: false
      serializedName: species
      language: !Languages
        default: !Language
          name: species
          description: MISSING·SCHEMA-DESCRIPTION-STRING
        csharp: !CSharpLanguage
          name: Species
          description: MISSING·SCHEMA-DESCRIPTION-STRING
          isNullable: true
      protocol: !Protocols {}
    language: !Languages
      default: !Language
        name: DotFish
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api20160229
      csharp: !CSharpLanguage
        uid: schema:46
        name: DotFish
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        type: &o26 !CSharpType
          namespace: !CSharpNamespace
            base: BodyComplex
            category: Models
            apiVersion: V20160229
          name: DotFish
        hasRequired: true
    protocol: !Protocols {}
  - &o108 !ObjectSchema
    type: object
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    properties:
    - !Property
      schema: *o23
      serializedName: sampleSalmon
      language: !Languages
        default: !Language
          name: sampleSalmon
          description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        csharp: !CSharpLanguage
          name: SampleSalmon
          description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
          isNullable: true
      protocol: !Protocols {}
    - !Property
      schema: &o35 !ArraySchema
        type: array
        apiVersions:
        - !ApiVersion
          version: '2016-02-29'
        elementType: *o23
        language: !Languages
          default: !Language
            name: DotFishMarket-salmons
            description: MISSING·SCHEMA-DESCRIPTION-ARRAYSCHEMA
          csharp: !CSharpLanguage
            uid: schema:3
            name: DotFishMarketSalmons
            description: MISSING·SCHEMA-DESCRIPTION-ARRAYSCHEMA
            type: !CSharpType
              namespace: !CSharpNamespace
                base: System.Collections.Generic
              name: ICollection
              subType1: *o25
            isLazy: true
            concreteType: !CSharpType
              namespace: !CSharpNamespace
                base: System.Collections.Generic
              name: List
              subType1: *o25
            inputType: !CSharpType
              namespace: !CSharpNamespace
                base: System.Collections.Generic
              name: IEnumerable
              subType1: *o25
        protocol: !Protocols {}
      serializedName: salmons
      language: !Languages
        default: !Language
          name: salmons
          description: MISSING·SCHEMA-DESCRIPTION-ARRAYSCHEMA
        csharp: !CSharpLanguage
          name: Salmons
          description: MISSING·SCHEMA-DESCRIPTION-ARRAYSCHEMA
          isNullable: true
      protocol: !Protocols {}
    - !Property
      schema: *o22
      serializedName: sampleFish
      language: !Languages
        default: !Language
          name: sampleFish
          description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        csharp: !CSharpLanguage
          name: SampleFish
          description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
          isNullable: true
      protocol: !Protocols {}
    - !Property
      schema: &o36 !ArraySchema
        type: array
        apiVersions:
        - !ApiVersion
          version: '2016-02-29'
        elementType: *o22
        language: !Languages
          default: !Language
            name: DotFishMarket-fishes
            description: MISSING·SCHEMA-DESCRIPTION-ARRAYSCHEMA
          csharp: !CSharpLanguage
            uid: schema:4
            name: DotFishMarketFishes
            description: MISSING·SCHEMA-DESCRIPTION-ARRAYSCHEMA
            type: !CSharpType
              namespace: !CSharpNamespace
                base: System.Collections.Generic
              name: ICollection
              subType1: *o26
            isLazy: true
            concreteType: !CSharpType
              namespace: !CSharpNamespace
                base: System.Collections.Generic
              name: List
              subType1: *o26
            inputType: !CSharpType
              namespace: !CSharpNamespace
                base: System.Collections.Generic
              name: IEnumerable
              subType1: *o26
        protocol: !Protocols {}
      serializedName: fishes
      language: !Languages
        default: !Language
          name: fishes
          description: MISSING·SCHEMA-DESCRIPTION-ARRAYSCHEMA
        csharp: !CSharpLanguage
          name: Fishes
          description: MISSING·SCHEMA-DESCRIPTION-ARRAYSCHEMA
          isNullable: true
      protocol: !Protocols {}
    language: !Languages
      default: !Language
        name: DotFishMarket
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api20160229
      csharp: !CSharpLanguage
        uid: schema:47
        name: DotFishMarket
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        type: !CSharpType
          namespace: !CSharpNamespace
            base: BodyComplex
            category: Models
            apiVersion: V20160229
          name: DotFishMarket
    protocol: !Protocols {}
  - *o23
  - *o10
  - &o109 !ObjectSchema
    type: object
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    properties:
    - !Property
      schema: &o86 !StringSchema
        type: string
        apiVersions:
        - !ApiVersion
          version: '2016-02-29'
        language: !Languages
          default: !Language
            name: readonly-obj-id
            description: MISSING·SCHEMA-DESCRIPTION-STRING
          csharp: !CSharpLanguage
            uid: schema:77
            name: ReadonlyObjId
            description: MISSING·SCHEMA-DESCRIPTION-STRING
            type: *o0
        protocol: !Protocols {}
      readOnly: true
      serializedName: id
      language: !Languages
        default: !Language
          name: id
          description: MISSING·SCHEMA-DESCRIPTION-STRING
        csharp: !CSharpLanguage
          name: Id
          description: MISSING·SCHEMA-DESCRIPTION-STRING
          isNullable: true
      protocol: !Protocols {}
    - !Property
      schema: &o64 !NumberSchema
        type: integer
        precision: 32
        language: !Languages
          default: !Language
            name: typeForsize
            description: MISSING·SCHEMA-DESCRIPTION-INTEGER
          csharp: !CSharpLanguage
            uid: schema:23
            name: TypeForsize
            description: MISSING·SCHEMA-DESCRIPTION-INTEGER
            type: *o1
        protocol: !Protocols {}
      serializedName: size
      language: !Languages
        default: !Language
          name: size
          description: MISSING·SCHEMA-DESCRIPTION-INTEGER
        csharp: !CSharpLanguage
          name: Size
          description: MISSING·SCHEMA-DESCRIPTION-INTEGER
          isNullable: true
      protocol: !Protocols {}
    language: !Languages
      default: !Language
        name: readonly-obj
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api20160229
      csharp: !CSharpLanguage
        uid: schema:50
        name: ReadonlyObj
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        type: !CSharpType
          namespace: !CSharpNamespace
            base: BodyComplex
            category: Models
            apiVersion: V20160229
          name: ReadonlyObj
    protocol: !Protocols {}
  - &o27 !ObjectSchema
    type: object
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    children: !Relations
      all:
      - &o28 !ObjectSchema
        type: object
        apiVersions:
        - !ApiVersion
          version: '2016-02-29'
        discriminatorValue: Kind1
        parents: !Relations
          all:
          - *o27
          immediate:
          - *o27
        properties:
        - !Property
          schema: &o90 !StringSchema
            type: string
            apiVersions:
            - !ApiVersion
              version: '2016-02-29'
            language: !Languages
              default: !Language
                name: MyDerivedType-propD1
                description: MISSING·SCHEMA-DESCRIPTION-STRING
              csharp: !CSharpLanguage
                uid: schema:81
                name: MyDerivedTypePropD1
                description: MISSING·SCHEMA-DESCRIPTION-STRING
                type: *o0
            protocol: !Protocols {}
          serializedName: propD1
          language: !Languages
            default: !Language
              name: propD1
              description: MISSING·SCHEMA-DESCRIPTION-STRING
            csharp: !CSharpLanguage
              name: PropD1
              description: MISSING·SCHEMA-DESCRIPTION-STRING
              isNullable: true
          protocol: !Protocols {}
        extensions: !DictionaryOfAny
          x-ms-discriminator-value: Kind1
        language: !Languages
          default: !Language
            name: MyDerivedType
            description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
            namespace: Api20160229
          csharp: !CSharpLanguage
            uid: schema:58
            name: MyDerivedType
            description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
            type: !CSharpType
              namespace: !CSharpNamespace
                base: BodyComplex
                category: Models
                apiVersion: V20160229
              name: MyDerivedType
        protocol: !Protocols {}
      immediate:
      - *o28
    discriminator: !Discriminator
      all: !DictionaryOfComplexSchema
        Kind1: *o28
      immediate: !DictionaryOfComplexSchema
        Kind1: *o28
      property: &o29 !Property
        schema: &o43 !ConstantSchema
          type: constant
          apiVersions:
          - !ApiVersion
            version: '2016-02-29'
          value: !ConstantValue
            value: Kind1
            language: !Languages
              default: !Language
                name: ''
                description: ''
          valueType: *o16
          language: !Languages
            default: !Language
              name: MyKind
              description: MISSING·SCHEMA-DESCRIPTION-CHOICE
            csharp: !CSharpLanguage
              uid: schema:95
              name: MyKind
              description: MISSING·SCHEMA-DESCRIPTION-CHOICE
              type: !CSharpType
                namespace: !CSharpNamespace
                  base: BodyComplex
                  category: Models
                  apiVersion: V20160229
                name: MyKind
          protocol: !Protocols {}
        isDiscriminator: true
        required: true
        serializedName: kind
        language: !Languages
          default: !Language
            name: kind
            description: MISSING·SCHEMA-DESCRIPTION-CHOICE
          csharp: !CSharpLanguage
            name: Kind
            description: MISSING·SCHEMA-DESCRIPTION-CHOICE
            isNullable: false
        protocol: !Protocols {}
    properties:
    - *o29
    - !Property
      schema: &o87 !StringSchema
        type: string
        apiVersions:
        - !ApiVersion
          version: '2016-02-29'
        language: !Languages
          default: !Language
            name: MyBaseType-propB1
            description: MISSING·SCHEMA-DESCRIPTION-STRING
          csharp: !CSharpLanguage
            uid: schema:78
            name: MyBaseTypePropB1
            description: MISSING·SCHEMA-DESCRIPTION-STRING
            type: *o0
        protocol: !Protocols {}
      required: false
      serializedName: propB1
      language: !Languages
        default: !Language
          name: propB1
          description: MISSING·SCHEMA-DESCRIPTION-STRING
        csharp: !CSharpLanguage
          name: PropB1
          description: MISSING·SCHEMA-DESCRIPTION-STRING
          isNullable: true
      protocol: !Protocols {}
    - !Property
      schema: &o30 !ObjectSchema
        type: object
        apiVersions:
        - !ApiVersion
          version: '2016-02-29'
        properties:
        - !Property
          schema: &o88 !StringSchema
            type: string
            apiVersions:
            - !ApiVersion
              version: '2016-02-29'
            language: !Languages
              default: !Language
                name: MyBaseHelperType-propBH1
                description: MISSING·SCHEMA-DESCRIPTION-STRING
              csharp: !CSharpLanguage
                uid: schema:79
                name: MyBaseHelperTypePropBH1
                description: MISSING·SCHEMA-DESCRIPTION-STRING
                type: *o0
            protocol: !Protocols {}
          serializedName: propBH1
          language: !Languages
            default: !Language
              name: propBH1
              description: MISSING·SCHEMA-DESCRIPTION-STRING
            csharp: !CSharpLanguage
              name: PropBH1
              description: MISSING·SCHEMA-DESCRIPTION-STRING
              isNullable: true
          protocol: !Protocols {}
        language: !Languages
          default: !Language
            name: MyBaseHelperType
            description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
            namespace: Api20160229
          csharp: !CSharpLanguage
            uid: schema:52
            name: MyBaseHelperType
            description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
            type: !CSharpType
              namespace: !CSharpNamespace
                base: BodyComplex
                category: Models
                apiVersion: V20160229
              name: MyBaseHelperType
        protocol: !Protocols {}
      required: false
      serializedName: helper
      language: !Languages
        default: !Language
          name: helper
          description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        csharp: !CSharpLanguage
          name: Helper
          description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
          isNullable: true
      protocol: !Protocols {}
    language: !Languages
      default: !Language
        name: MyBaseType
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api20160229
      csharp: !CSharpLanguage
        uid: schema:51
        name: MyBaseType
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        type: !CSharpType
          namespace: !CSharpNamespace
            base: BodyComplex
            category: Models
            apiVersion: V20160229
          name: MyBaseType
        hasRequired: true
    protocol: !Protocols {}
  - *o30
  - *o13
  - *o14
  - *o17
  - *o18
  - *o19
  - *o28
  dictionaries:
  - *o31
  - *o12
  arrays:
  - *o32
  - *o33
  - *o34
  - *o35
  - *o36
  booleans:
  - *o37
  - *o38
  - *o39
  - *o40
  byteArrays:
  - *o41
  - *o42
  constants:
  - &o94 !ConstantSchema
    type: constant
    value: !ConstantValue
      value: 2016-02-29
      language: !Languages
        default: !Language
          name: ''
          description: ''
    valueType: *o16
    language: !Languages
      default: !Language
        name: ApiVersion-2016-02-29
        description: Api Version (2016-02-29)
      csharp: !CSharpLanguage
        uid: schema:94
        name: ApiVersion20160229
        description: Api Version (2016-02-29)
        type: !CSharpType
          namespace: !CSharpNamespace
            base: BodyComplex
            category: Models
          name: ApiVersion20160229
    protocol: !Protocols {}
  - *o43
  dates:
  - *o44
  - *o45
  dateTimes:
  - *o46
  - *o47
  - *o48
  - *o49
  - *o50
  durations:
  - *o51
  numbers:
  - *o52
  - *o53
  - *o54
  - *o55
  - *o56
  - *o57
  - *o58
  - *o59
  - *o60
  - *o61
  - *o62
  - *o63
  - *o64
  - *o65
  - *o66
  sealedChoices:
  - *o67
  - *o68
  strings:
  - *o16
  - *o69
  - *o70
  - *o71
  - *o72
  - *o73
  - *o74
  - *o75
  - *o76
  - *o77
  - *o78
  - *o79
  - *o80
  - *o81
  - *o82
  - *o83
  - *o84
  - *o85
  - *o86
  - *o87
  - *o88
  - *o89
  - *o90
globalParameters:
- &o91 !Parameter
  schema: *o16
  clientDefaultValue: http://localhost:3000
  implementation: Client
  required: true
  language: !Languages
    default: !Language
      name: $host
      description: server parameter
    csharp: !CSharpLanguage
      name: host
      description: server parameter
      isNullable: false
  protocol: !Protocols
    http: !HttpParameter
      in: uri
info: !Info
  description: Test Infrastructure for AutoRest
  title: BodyComplex
operationGroups:
- !OperationGroup
  $key: basic
  operations:
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpRequest
          path: /complex/basic/valid
          method: get
          uri: '{$host}'
    responses:
    - !SchemaResponse
      schema: *o92
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !Languages
      default: !Language
        name: getValid
        description: "Get complex type {id: 2, name: 'abc', color: 'YELLOW'}"
      csharp: !CSharpLanguage
        name: GetValid
        description: "Get complex type {id: 2, name: 'abc', color: 'YELLOW'}"
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      - !Parameter
        schema: *o94
        implementation: Client
        required: true
        language: !Languages
          default: !Language
            name: ApiVersion
            description: Api Version
          csharp: !CSharpLanguage
            name: apiVersion
            description: Api Version
            isNullable: false
        protocol: !Protocols
          http: !HttpParameter
            in: query
      - !Parameter
        schema: *o92
        implementation: Method
        required: true
        extensions: !DictionaryOfAny
          x-ms-requestBody-name: complexBody
        language: !Languages
          default: !Language
            name: complexBody
            description: "Please put {id: 2, name: 'abc', color: 'Magenta'}"
          csharp: !CSharpLanguage
            name: complexBody
            description: "Please put {id: 2, name: 'abc', color: 'Magenta'}"
            isNullable: false
        protocol: !Protocols
          http: !HttpParameter
            in: body
            style: json
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpWithBodyRequest
          path: /complex/basic/valid
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    responses:
    - !Response
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: binary
          mediaTypes: []
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions: !DictionaryOfAny
      x-ms-requestBody-index: 0
    language: !Languages
      default: !Language
        name: putValid
        description: "Please put {id: 2, name: 'abc', color: 'Magenta'}"
      csharp: !CSharpLanguage
        name: PutValid
        description: "Please put {id: 2, name: 'abc', color: 'Magenta'}"
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpRequest
          path: /complex/basic/invalid
          method: get
          uri: '{$host}'
    responses:
    - !SchemaResponse
      schema: *o92
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !Languages
      default: !Language
        name: getInvalid
        description: Get a basic complex type that is invalid for the local strong type
      csharp: !CSharpLanguage
        name: GetInvalid
        description: Get a basic complex type that is invalid for the local strong type
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpRequest
          path: /complex/basic/empty
          method: get
          uri: '{$host}'
    responses:
    - !SchemaResponse
      schema: *o92
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !Languages
      default: !Language
        name: getEmpty
        description: Get a basic complex type that is empty
      csharp: !CSharpLanguage
        name: GetEmpty
        description: Get a basic complex type that is empty
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpRequest
          path: /complex/basic/null
          method: get
          uri: '{$host}'
    responses:
    - !SchemaResponse
      schema: *o92
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !Languages
      default: !Language
        name: getNull
        description: Get a basic complex type whose properties are null
      csharp: !CSharpLanguage
        name: GetNull
        description: Get a basic complex type whose properties are null
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpRequest
          path: /complex/basic/notprovided
          method: get
          uri: '{$host}'
    responses:
    - !SchemaResponse
      schema: *o92
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !Languages
      default: !Language
        name: getNotProvided
        description: Get a basic complex type while the server doesn't provide a response payload
      csharp: !CSharpLanguage
        name: GetNotProvided
        description: Get a basic complex type while the server doesn't provide a response payload
    protocol: !Protocols {}
  language: !Languages
    default: !Language
      name: basic
      description: ''
    csharp: !CSharpLanguage
      name: BasicOperations
      type: !CSharpType
        namespace: !CSharpNamespace
          base: BodyComplex
          category: Operations
          apiVersion: V20160229
        name: BasicOperations
  protocol: !Protocols {}
- !OperationGroup
  $key: primitive
  operations:
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpRequest
          path: /complex/primitive/integer
          method: get
          uri: '{$host}'
    responses:
    - !SchemaResponse
      schema: *o95
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !Languages
      default: !Language
        name: getInt
        description: Get complex types with integer properties
      csharp: !CSharpLanguage
        name: GetInt
        description: Get complex types with integer properties
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      - !Parameter
        schema: *o95
        implementation: Method
        required: true
        extensions: !DictionaryOfAny
          x-ms-requestBody-name: complexBody
        language: !Languages
          default: !Language
            name: complexBody
            description: Please put -1 and 2
          csharp: !CSharpLanguage
            name: complexBody
            description: Please put -1 and 2
            isNullable: false
        protocol: !Protocols
          http: !HttpParameter
            in: body
            style: json
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpWithBodyRequest
          path: /complex/primitive/integer
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    responses:
    - !Response
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: binary
          mediaTypes: []
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions: !DictionaryOfAny
      x-ms-requestBody-index: 0
    language: !Languages
      default: !Language
        name: putInt
        description: Put complex types with integer properties
      csharp: !CSharpLanguage
        name: PutInt
        description: Put complex types with integer properties
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpRequest
          path: /complex/primitive/long
          method: get
          uri: '{$host}'
    responses:
    - !SchemaResponse
      schema: *o96
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !Languages
      default: !Language
        name: getLong
        description: Get complex types with long properties
      csharp: !CSharpLanguage
        name: GetLong
        description: Get complex types with long properties
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      - !Parameter
        schema: *o96
        implementation: Method
        required: true
        extensions: !DictionaryOfAny
          x-ms-requestBody-name: complexBody
        language: !Languages
          default: !Language
            name: complexBody
            description: Please put 1099511627775 and -999511627788
          csharp: !CSharpLanguage
            name: complexBody
            description: Please put 1099511627775 and -999511627788
            isNullable: false
        protocol: !Protocols
          http: !HttpParameter
            in: body
            style: json
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpWithBodyRequest
          path: /complex/primitive/long
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    responses:
    - !Response
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: binary
          mediaTypes: []
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions: !DictionaryOfAny
      x-ms-requestBody-index: 0
    language: !Languages
      default: !Language
        name: putLong
        description: Put complex types with long properties
      csharp: !CSharpLanguage
        name: PutLong
        description: Put complex types with long properties
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpRequest
          path: /complex/primitive/float
          method: get
          uri: '{$host}'
    responses:
    - !SchemaResponse
      schema: *o97
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !Languages
      default: !Language
        name: getFloat
        description: Get complex types with float properties
      csharp: !CSharpLanguage
        name: GetFloat
        description: Get complex types with float properties
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      - !Parameter
        schema: *o97
        implementation: Method
        required: true
        extensions: !DictionaryOfAny
          x-ms-requestBody-name: complexBody
        language: !Languages
          default: !Language
            name: complexBody
            description: Please put 1.05 and -0.003
          csharp: !CSharpLanguage
            name: complexBody
            description: Please put 1.05 and -0.003
            isNullable: false
        protocol: !Protocols
          http: !HttpParameter
            in: body
            style: json
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpWithBodyRequest
          path: /complex/primitive/float
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    responses:
    - !Response
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: binary
          mediaTypes: []
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions: !DictionaryOfAny
      x-ms-requestBody-index: 0
    language: !Languages
      default: !Language
        name: putFloat
        description: Put complex types with float properties
      csharp: !CSharpLanguage
        name: PutFloat
        description: Put complex types with float properties
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpRequest
          path: /complex/primitive/double
          method: get
          uri: '{$host}'
    responses:
    - !SchemaResponse
      schema: *o98
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !Languages
      default: !Language
        name: getDouble
        description: Get complex types with double properties
      csharp: !CSharpLanguage
        name: GetDouble
        description: Get complex types with double properties
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      - !Parameter
        schema: *o98
        implementation: Method
        required: true
        extensions: !DictionaryOfAny
          x-ms-requestBody-name: complexBody
        language: !Languages
          default: !Language
            name: complexBody
            description: Please put 3e-100 and -0.000000000000000000000000000000000000000000000000000000005
          csharp: !CSharpLanguage
            name: complexBody
            description: Please put 3e-100 and -0.000000000000000000000000000000000000000000000000000000005
            isNullable: false
        protocol: !Protocols
          http: !HttpParameter
            in: body
            style: json
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpWithBodyRequest
          path: /complex/primitive/double
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    responses:
    - !Response
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: binary
          mediaTypes: []
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions: !DictionaryOfAny
      x-ms-requestBody-index: 0
    language: !Languages
      default: !Language
        name: putDouble
        description: Put complex types with double properties
      csharp: !CSharpLanguage
        name: PutDouble
        description: Put complex types with double properties
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpRequest
          path: /complex/primitive/bool
          method: get
          uri: '{$host}'
    responses:
    - !SchemaResponse
      schema: *o99
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !Languages
      default: !Language
        name: getBool
        description: Get complex types with bool properties
      csharp: !CSharpLanguage
        name: GetBool
        description: Get complex types with bool properties
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      - !Parameter
        schema: *o99
        implementation: Method
        required: true
        extensions: !DictionaryOfAny
          x-ms-requestBody-name: complexBody
        language: !Languages
          default: !Language
            name: complexBody
            description: Please put true and false
          csharp: !CSharpLanguage
            name: complexBody
            description: Please put true and false
            isNullable: false
        protocol: !Protocols
          http: !HttpParameter
            in: body
            style: json
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpWithBodyRequest
          path: /complex/primitive/bool
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    responses:
    - !Response
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: binary
          mediaTypes: []
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions: !DictionaryOfAny
      x-ms-requestBody-index: 0
    language: !Languages
      default: !Language
        name: putBool
        description: Put complex types with bool properties
      csharp: !CSharpLanguage
        name: PutBool
        description: Put complex types with bool properties
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpRequest
          path: /complex/primitive/string
          method: get
          uri: '{$host}'
    responses:
    - !SchemaResponse
      schema: *o100
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !Languages
      default: !Language
        name: getString
        description: Get complex types with string properties
      csharp: !CSharpLanguage
        name: GetString
        description: Get complex types with string properties
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      - !Parameter
        schema: *o100
        implementation: Method
        required: true
        extensions: !DictionaryOfAny
          x-ms-requestBody-name: complexBody
        language: !Languages
          default: !Language
            name: complexBody
            description: Please put 'goodrequest', '', and null
          csharp: !CSharpLanguage
            name: complexBody
            description: Please put 'goodrequest', '', and null
            isNullable: false
        protocol: !Protocols
          http: !HttpParameter
            in: body
            style: json
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpWithBodyRequest
          path: /complex/primitive/string
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    responses:
    - !Response
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: binary
          mediaTypes: []
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions: !DictionaryOfAny
      x-ms-requestBody-index: 0
    language: !Languages
      default: !Language
        name: putString
        description: Put complex types with string properties
      csharp: !CSharpLanguage
        name: PutString
        description: Put complex types with string properties
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpRequest
          path: /complex/primitive/date
          method: get
          uri: '{$host}'
    responses:
    - !SchemaResponse
      schema: *o101
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !Languages
      default: !Language
        name: getDate
        description: Get complex types with date properties
      csharp: !CSharpLanguage
        name: GetDate
        description: Get complex types with date properties
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      - !Parameter
        schema: *o101
        implementation: Method
        required: true
        extensions: !DictionaryOfAny
          x-ms-requestBody-name: complexBody
        language: !Languages
          default: !Language
            name: complexBody
            description: Please put '0001-01-01' and '2016-02-29'
          csharp: !CSharpLanguage
            name: complexBody
            description: Please put '0001-01-01' and '2016-02-29'
            isNullable: false
        protocol: !Protocols
          http: !HttpParameter
            in: body
            style: json
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpWithBodyRequest
          path: /complex/primitive/date
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    responses:
    - !Response
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: binary
          mediaTypes: []
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions: !DictionaryOfAny
      x-ms-requestBody-index: 0
    language: !Languages
      default: !Language
        name: putDate
        description: Put complex types with date properties
      csharp: !CSharpLanguage
        name: PutDate
        description: Put complex types with date properties
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpRequest
          path: /complex/primitive/datetime
          method: get
          uri: '{$host}'
    responses:
    - !SchemaResponse
      schema: *o102
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !Languages
      default: !Language
        name: getDateTime
        description: Get complex types with datetime properties
      csharp: !CSharpLanguage
        name: GetDateTime
        description: Get complex types with datetime properties
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      - !Parameter
        schema: *o102
        implementation: Method
        required: true
        extensions: !DictionaryOfAny
          x-ms-requestBody-name: complexBody
        language: !Languages
          default: !Language
            name: complexBody
            description: Please put '0001-01-01T12:00:00-04:00' and '2015-05-18T11:38:00-08:00'
          csharp: !CSharpLanguage
            name: complexBody
            description: Please put '0001-01-01T12:00:00-04:00' and '2015-05-18T11:38:00-08:00'
            isNullable: false
        protocol: !Protocols
          http: !HttpParameter
            in: body
            style: json
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpWithBodyRequest
          path: /complex/primitive/datetime
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    responses:
    - !Response
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: binary
          mediaTypes: []
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions: !DictionaryOfAny
      x-ms-requestBody-index: 0
    language: !Languages
      default: !Language
        name: putDateTime
        description: Put complex types with datetime properties
      csharp: !CSharpLanguage
        name: PutDateTime
        description: Put complex types with datetime properties
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpRequest
          path: /complex/primitive/datetimerfc1123
          method: get
          uri: '{$host}'
    responses:
    - !SchemaResponse
      schema: *o103
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !Languages
      default: !Language
        name: getDateTimeRfc1123
        description: Get complex types with datetimeRfc1123 properties
      csharp: !CSharpLanguage
        name: GetDateTimeRfc1123
        description: Get complex types with datetimeRfc1123 properties
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      - !Parameter
        schema: *o103
        implementation: Method
        required: true
        extensions: !DictionaryOfAny
          x-ms-requestBody-name: complexBody
        language: !Languages
          default: !Language
            name: complexBody
            description: Please put 'Mon, 01 Jan 0001 12:00:00 GMT' and 'Mon, 18 May 2015 11:38:00 GMT'
          csharp: !CSharpLanguage
            name: complexBody
            description: Please put 'Mon, 01 Jan 0001 12:00:00 GMT' and 'Mon, 18 May 2015 11:38:00 GMT'
            isNullable: false
        protocol: !Protocols
          http: !HttpParameter
            in: body
            style: json
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpWithBodyRequest
          path: /complex/primitive/datetimerfc1123
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    responses:
    - !Response
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: binary
          mediaTypes: []
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions: !DictionaryOfAny
      x-ms-requestBody-index: 0
    language: !Languages
      default: !Language
        name: putDateTimeRfc1123
        description: Put complex types with datetimeRfc1123 properties
      csharp: !CSharpLanguage
        name: PutDateTimeRfc1123
        description: Put complex types with datetimeRfc1123 properties
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpRequest
          path: /complex/primitive/duration
          method: get
          uri: '{$host}'
    responses:
    - !SchemaResponse
      schema: *o104
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !Languages
      default: !Language
        name: getDuration
        description: Get complex types with duration properties
      csharp: !CSharpLanguage
        name: GetDuration
        description: Get complex types with duration properties
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      - !Parameter
        schema: *o104
        implementation: Method
        required: true
        extensions: !DictionaryOfAny
          x-ms-requestBody-name: complexBody
        language: !Languages
          default: !Language
            name: complexBody
            description: Please put 'P123DT22H14M12.011S'
          csharp: !CSharpLanguage
            name: complexBody
            description: Please put 'P123DT22H14M12.011S'
            isNullable: false
        protocol: !Protocols
          http: !HttpParameter
            in: body
            style: json
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpWithBodyRequest
          path: /complex/primitive/duration
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    responses:
    - !Response
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: binary
          mediaTypes: []
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions: !DictionaryOfAny
      x-ms-requestBody-index: 0
    language: !Languages
      default: !Language
        name: putDuration
        description: Put complex types with duration properties
      csharp: !CSharpLanguage
        name: PutDuration
        description: Put complex types with duration properties
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpRequest
          path: /complex/primitive/byte
          method: get
          uri: '{$host}'
    responses:
    - !SchemaResponse
      schema: *o105
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !Languages
      default: !Language
        name: getByte
        description: Get complex types with byte properties
      csharp: !CSharpLanguage
        name: GetByte
        description: Get complex types with byte properties
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      - !Parameter
        schema: *o105
        implementation: Method
        required: true
        extensions: !DictionaryOfAny
          x-ms-requestBody-name: complexBody
        language: !Languages
          default: !Language
            name: complexBody
            description: Please put non-ascii byte string hex(FF FE FD FC 00 FA F9 F8 F7 F6)
          csharp: !CSharpLanguage
            name: complexBody
            description: Please put non-ascii byte string hex(FF FE FD FC 00 FA F9 F8 F7 F6)
            isNullable: false
        protocol: !Protocols
          http: !HttpParameter
            in: body
            style: json
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpWithBodyRequest
          path: /complex/primitive/byte
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    responses:
    - !Response
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: binary
          mediaTypes: []
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions: !DictionaryOfAny
      x-ms-requestBody-index: 0
    language: !Languages
      default: !Language
        name: putByte
        description: Put complex types with byte properties
      csharp: !CSharpLanguage
        name: PutByte
        description: Put complex types with byte properties
    protocol: !Protocols {}
  language: !Languages
    default: !Language
      name: primitive
      description: ''
    csharp: !CSharpLanguage
      name: PrimitiveOperations
      type: !CSharpType
        namespace: !CSharpNamespace
          base: BodyComplex
          category: Operations
          apiVersion: V20160229
        name: PrimitiveOperations
  protocol: !Protocols {}
- !OperationGroup
  $key: array
  operations:
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpRequest
          path: /complex/array/valid
          method: get
          uri: '{$host}'
    responses:
    - !SchemaResponse
      schema: *o106
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !Languages
      default: !Language
        name: getValid
        description: Get complex types with array property
      csharp: !CSharpLanguage
        name: GetValid
        description: Get complex types with array property
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      - !Parameter
        schema: *o106
        implementation: Method
        required: true
        extensions: !DictionaryOfAny
          x-ms-requestBody-name: complexBody
        language: !Languages
          default: !Language
            name: complexBody
            description: 'Please put an array with 4 items: "1, 2, 3, 4", "", null, "&S#$(*Y", "The quick brown fox jumps over the lazy dog"'
          csharp: !CSharpLanguage
            name: complexBody
            description: 'Please put an array with 4 items: "1, 2, 3, 4", "", null, "&S#$(*Y", "The quick brown fox jumps over the lazy dog"'
            isNullable: false
        protocol: !Protocols
          http: !HttpParameter
            in: body
            style: json
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpWithBodyRequest
          path: /complex/array/valid
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    responses:
    - !Response
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: binary
          mediaTypes: []
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions: !DictionaryOfAny
      x-ms-requestBody-index: 0
    language: !Languages
      default: !Language
        name: putValid
        description: Put complex types with array property
      csharp: !CSharpLanguage
        name: PutValid
        description: Put complex types with array property
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpRequest
          path: /complex/array/empty
          method: get
          uri: '{$host}'
    responses:
    - !SchemaResponse
      schema: *o106
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !Languages
      default: !Language
        name: getEmpty
        description: Get complex types with array property which is empty
      csharp: !CSharpLanguage
        name: GetEmpty
        description: Get complex types with array property which is empty
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      - !Parameter
        schema: *o106
        implementation: Method
        required: true
        extensions: !DictionaryOfAny
          x-ms-requestBody-name: complexBody
        language: !Languages
          default: !Language
            name: complexBody
            description: 'Please put an array with 4 items: "1, 2, 3, 4", "", null, "&S#$(*Y", "The quick brown fox jumps over the lazy dog"'
          csharp: !CSharpLanguage
            name: complexBody
            description: 'Please put an array with 4 items: "1, 2, 3, 4", "", null, "&S#$(*Y", "The quick brown fox jumps over the lazy dog"'
            isNullable: false
        protocol: !Protocols
          http: !HttpParameter
            in: body
            style: json
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpWithBodyRequest
          path: /complex/array/empty
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    responses:
    - !Response
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: binary
          mediaTypes: []
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions: !DictionaryOfAny
      x-ms-requestBody-index: 0
    language: !Languages
      default: !Language
        name: putEmpty
        description: Put complex types with array property which is empty
      csharp: !CSharpLanguage
        name: PutEmpty
        description: Put complex types with array property which is empty
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpRequest
          path: /complex/array/notprovided
          method: get
          uri: '{$host}'
    responses:
    - !SchemaResponse
      schema: *o106
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !Languages
      default: !Language
        name: getNotProvided
        description: Get complex types with array property while server doesn't provide a response payload
      csharp: !CSharpLanguage
        name: GetNotProvided
        description: Get complex types with array property while server doesn't provide a response payload
    protocol: !Protocols {}
  language: !Languages
    default: !Language
      name: array
      description: ''
    csharp: !CSharpLanguage
      name: ArrayOperations
      type: !CSharpType
        namespace: !CSharpNamespace
          base: BodyComplex
          category: Operations
          apiVersion: V20160229
        name: ArrayOperations
  protocol: !Protocols {}
- !OperationGroup
  $key: dictionary
  operations:
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpRequest
          path: /complex/dictionary/typed/valid
          method: get
          uri: '{$host}'
    responses:
    - !SchemaResponse
      schema: *o107
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !Languages
      default: !Language
        name: getValid
        description: Get complex types with dictionary property
      csharp: !CSharpLanguage
        name: GetValid
        description: Get complex types with dictionary property
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      - !Parameter
        schema: *o107
        implementation: Method
        required: true
        extensions: !DictionaryOfAny
          x-ms-requestBody-name: complexBody
        language: !Languages
          default: !Language
            name: complexBody
            description: 'Please put a dictionary with 5 key-value pairs: "txt":"notepad", "bmp":"mspaint", "xls":"excel", "exe":"", "":null'
          csharp: !CSharpLanguage
            name: complexBody
            description: 'Please put a dictionary with 5 key-value pairs: "txt":"notepad", "bmp":"mspaint", "xls":"excel", "exe":"", "":null'
            isNullable: false
        protocol: !Protocols
          http: !HttpParameter
            in: body
            style: json
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpWithBodyRequest
          path: /complex/dictionary/typed/valid
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    responses:
    - !Response
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: binary
          mediaTypes: []
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions: !DictionaryOfAny
      x-ms-requestBody-index: 0
    language: !Languages
      default: !Language
        name: putValid
        description: Put complex types with dictionary property
      csharp: !CSharpLanguage
        name: PutValid
        description: Put complex types with dictionary property
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpRequest
          path: /complex/dictionary/typed/empty
          method: get
          uri: '{$host}'
    responses:
    - !SchemaResponse
      schema: *o107
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !Languages
      default: !Language
        name: getEmpty
        description: Get complex types with dictionary property which is empty
      csharp: !CSharpLanguage
        name: GetEmpty
        description: Get complex types with dictionary property which is empty
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      - !Parameter
        schema: *o107
        implementation: Method
        required: true
        extensions: !DictionaryOfAny
          x-ms-requestBody-name: complexBody
        language: !Languages
          default: !Language
            name: complexBody
            description: 'Please put a dictionary with 5 key-value pairs: "txt":"notepad", "bmp":"mspaint", "xls":"excel", "exe":"", "":null'
          csharp: !CSharpLanguage
            name: complexBody
            description: 'Please put a dictionary with 5 key-value pairs: "txt":"notepad", "bmp":"mspaint", "xls":"excel", "exe":"", "":null'
            isNullable: false
        protocol: !Protocols
          http: !HttpParameter
            in: body
            style: json
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpWithBodyRequest
          path: /complex/dictionary/typed/empty
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    responses:
    - !Response
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: binary
          mediaTypes: []
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions: !DictionaryOfAny
      x-ms-requestBody-index: 0
    language: !Languages
      default: !Language
        name: putEmpty
        description: Put complex types with dictionary property which is empty
      csharp: !CSharpLanguage
        name: PutEmpty
        description: Put complex types with dictionary property which is empty
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpRequest
          path: /complex/dictionary/typed/null
          method: get
          uri: '{$host}'
    responses:
    - !SchemaResponse
      schema: *o107
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !Languages
      default: !Language
        name: getNull
        description: Get complex types with dictionary property which is null
      csharp: !CSharpLanguage
        name: GetNull
        description: Get complex types with dictionary property which is null
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpRequest
          path: /complex/dictionary/typed/notprovided
          method: get
          uri: '{$host}'
    responses:
    - !SchemaResponse
      schema: *o107
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !Languages
      default: !Language
        name: getNotProvided
        description: Get complex types with dictionary property while server doesn't provide a response payload
      csharp: !CSharpLanguage
        name: GetNotProvided
        description: Get complex types with dictionary property while server doesn't provide a response payload
    protocol: !Protocols {}
  language: !Languages
    default: !Language
      name: dictionary
      description: ''
    csharp: !CSharpLanguage
      name: DictionaryOperations
      type: !CSharpType
        namespace: !CSharpNamespace
          base: BodyComplex
          category: Operations
          apiVersion: V20160229
        name: DictionaryOperations
  protocol: !Protocols {}
- !OperationGroup
  $key: inheritance
  operations:
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpRequest
          path: /complex/inheritance/valid
          method: get
          uri: '{$host}'
    responses:
    - !SchemaResponse
      schema: *o7
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !Languages
      default: !Language
        name: getValid
        description: Get complex types that extend others
      csharp: !CSharpLanguage
        name: GetValid
        description: Get complex types that extend others
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      - !Parameter
        schema: *o7
        implementation: Method
        required: true
        extensions: !DictionaryOfAny
          x-ms-requestBody-name: complexBody
        language: !Languages
          default: !Language
            name: complexBody
            description: Please put a siamese with id=2, name="Siameee", color=green, breed=persion, which hates 2 dogs, the 1st one named "Potato" with id=1 and food="tomato", and the 2nd one named "Tomato" with id=-1 and food="french fries".
          csharp: !CSharpLanguage
            name: complexBody
            description: Please put a siamese with id=2, name="Siameee", color=green, breed=persion, which hates 2 dogs, the 1st one named "Potato" with id=1 and food="tomato", and the 2nd one named "Tomato" with id=-1 and food="french fries".
            isNullable: false
        protocol: !Protocols
          http: !HttpParameter
            in: body
            style: json
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpWithBodyRequest
          path: /complex/inheritance/valid
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    responses:
    - !Response
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: binary
          mediaTypes: []
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions: !DictionaryOfAny
      x-ms-requestBody-index: 0
    language: !Languages
      default: !Language
        name: putValid
        description: Put complex types that extend others
      csharp: !CSharpLanguage
        name: PutValid
        description: Put complex types that extend others
    protocol: !Protocols {}
  language: !Languages
    default: !Language
      name: inheritance
      description: ''
    csharp: !CSharpLanguage
      name: InheritanceOperations
      type: !CSharpType
        namespace: !CSharpNamespace
          base: BodyComplex
          category: Operations
          apiVersion: V20160229
        name: InheritanceOperations
  protocol: !Protocols {}
- !OperationGroup
  $key: polymorphism
  operations:
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpRequest
          path: /complex/polymorphism/valid
          method: get
          uri: '{$host}'
    responses:
    - !SchemaResponse
      schema: *o11
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !Languages
      default: !Language
        name: getValid
        description: Get complex types that are polymorphic
      csharp: !CSharpLanguage
        name: GetValid
        description: Get complex types that are polymorphic
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      - !Parameter
        schema: *o11
        implementation: Method
        required: true
        extensions: !DictionaryOfAny
          x-ms-requestBody-name: complexBody
        language: !Languages
          default: !Language
            name: complexBody
            description: >-
              Please put a salmon that looks like this:

              {
                      'fishtype':'Salmon',
                      'location':'alaska',
                      'iswild':true,
                      'species':'king',
                      'length':1.0,
                      'siblings':[
                        {
                          'fishtype':'Shark',
                          'age':6,
                          'birthday': '2012-01-05T01:00:00Z',
                          'length':20.0,
                          'species':'predator',
                        },
                        {
                          'fishtype':'Sawshark',
                          'age':105,
                          'birthday': '1900-01-05T01:00:00Z',
                          'length':10.0,
                          'picture': new Buffer([255, 255, 255, 255, 254]).toString('base64'),
                          'species':'dangerous',
                        },
                        {
                          'fishtype': 'goblin',
                          'age': 1,
                          'birthday': '2015-08-08T00:00:00Z',
                          'length': 30.0,
                          'species': 'scary',
                          'jawsize': 5
                        }
                      ]
                    };
          csharp: !CSharpLanguage
            name: complexBody
            description: >-
              Please put a salmon that looks like this:

              {
                      'fishtype':'Salmon',
                      'location':'alaska',
                      'iswild':true,
                      'species':'king',
                      'length':1.0,
                      'siblings':[
                        {
                          'fishtype':'Shark',
                          'age':6,
                          'birthday': '2012-01-05T01:00:00Z',
                          'length':20.0,
                          'species':'predator',
                        },
                        {
                          'fishtype':'Sawshark',
                          'age':105,
                          'birthday': '1900-01-05T01:00:00Z',
                          'length':10.0,
                          'picture': new Buffer([255, 255, 255, 255, 254]).toString('base64'),
                          'species':'dangerous',
                        },
                        {
                          'fishtype': 'goblin',
                          'age': 1,
                          'birthday': '2015-08-08T00:00:00Z',
                          'length': 30.0,
                          'species': 'scary',
                          'jawsize': 5
                        }
                      ]
                    };
            isNullable: false
        protocol: !Protocols
          http: !HttpParameter
            in: body
            style: json
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpWithBodyRequest
          path: /complex/polymorphism/valid
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    responses:
    - !Response
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: binary
          mediaTypes: []
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions: !DictionaryOfAny
      x-ms-requestBody-index: 0
    language: !Languages
      default: !Language
        name: putValid
        description: Put complex types that are polymorphic
      csharp: !CSharpLanguage
        name: PutValid
        description: Put complex types that are polymorphic
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpRequest
          path: /complex/polymorphism/dotsyntax
          method: get
          uri: '{$host}'
    responses:
    - !SchemaResponse
      schema: *o22
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !Languages
      default: !Language
        name: getDotSyntax
        description: Get complex types that are polymorphic, JSON key contains a dot
      csharp: !CSharpLanguage
        name: GetDotSyntax
        description: Get complex types that are polymorphic, JSON key contains a dot
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpRequest
          path: /complex/polymorphism/composedWithDiscriminator
          method: get
          uri: '{$host}'
    responses:
    - !SchemaResponse
      schema: *o108
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !Languages
      default: !Language
        name: getComposedWithDiscriminator
        description: Get complex object composing a polymorphic scalar property and array property with polymorphic element type, with discriminator specified. Deserialization must NOT fail and use the discriminator type specified on the wire.
      csharp: !CSharpLanguage
        name: GetComposedWithDiscriminator
        description: Get complex object composing a polymorphic scalar property and array property with polymorphic element type, with discriminator specified. Deserialization must NOT fail and use the discriminator type specified on the wire.
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpRequest
          path: /complex/polymorphism/composedWithoutDiscriminator
          method: get
          uri: '{$host}'
    responses:
    - !SchemaResponse
      schema: *o108
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !Languages
      default: !Language
        name: getComposedWithoutDiscriminator
        description: Get complex object composing a polymorphic scalar property and array property with polymorphic element type, without discriminator specified on wire. Deserialization must NOT fail and use the explicit type of the property.
      csharp: !CSharpLanguage
        name: GetComposedWithoutDiscriminator
        description: Get complex object composing a polymorphic scalar property and array property with polymorphic element type, without discriminator specified on wire. Deserialization must NOT fail and use the explicit type of the property.
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpRequest
          path: /complex/polymorphism/complicated
          method: get
          uri: '{$host}'
    responses:
    - !SchemaResponse
      schema: *o10
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !Languages
      default: !Language
        name: getComplicated
        description: Get complex types that are polymorphic, but not at the root of the hierarchy; also have additional properties
      csharp: !CSharpLanguage
        name: GetComplicated
        description: Get complex types that are polymorphic, but not at the root of the hierarchy; also have additional properties
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      - !Parameter
        schema: *o10
        implementation: Method
        required: true
        extensions: !DictionaryOfAny
          x-ms-requestBody-name: complexBody
        language: !Languages
          default: !Language
            name: complexBody
            description: ''
          csharp: !CSharpLanguage
            name: complexBody
            description: ''
            isNullable: false
        protocol: !Protocols
          http: !HttpParameter
            in: body
            style: json
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpWithBodyRequest
          path: /complex/polymorphism/complicated
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    responses:
    - !Response
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: binary
          mediaTypes: []
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions: !DictionaryOfAny
      x-ms-requestBody-index: 0
    language: !Languages
      default: !Language
        name: putComplicated
        description: Put complex types that are polymorphic, but not at the root of the hierarchy; also have additional properties
      csharp: !CSharpLanguage
        name: PutComplicated
        description: Put complex types that are polymorphic, but not at the root of the hierarchy; also have additional properties
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      - !Parameter
        schema: *o10
        implementation: Method
        required: true
        extensions: !DictionaryOfAny
          x-ms-requestBody-name: complexBody
        language: !Languages
          default: !Language
            name: complexBody
            description: ''
          csharp: !CSharpLanguage
            name: complexBody
            description: ''
            isNullable: false
        protocol: !Protocols
          http: !HttpParameter
            in: body
            style: json
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpWithBodyRequest
          path: /complex/polymorphism/missingdiscriminator
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    responses:
    - !SchemaResponse
      schema: *o10
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions: !DictionaryOfAny
      x-ms-requestBody-index: 0
    language: !Languages
      default: !Language
        name: putMissingDiscriminator
        description: Put complex types that are polymorphic, omitting the discriminator
      csharp: !CSharpLanguage
        name: PutMissingDiscriminator
        description: Put complex types that are polymorphic, omitting the discriminator
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      - !Parameter
        schema: *o11
        implementation: Method
        required: true
        extensions: !DictionaryOfAny
          x-ms-requestBody-name: complexBody
        language: !Languages
          default: !Language
            name: complexBody
            description: >-
              Please put a salmon that looks like this:

              {
                      'fishtype':'Salmon',
                      'location':'alaska',
                      'iswild':true,
                      'species':'king',
                      'length':1.0,
                      'siblings':[
                        {
                          'fishtype':'Shark',
                          'age':6,
                          'birthday': '2012-01-05T01:00:00Z',
                          'length':20.0,
                          'species':'predator',
                        },
                        {
                          'fishtype':'Sawshark',
                          'age':105,
                          'birthday': '1900-01-05T01:00:00Z',
                          'length':10.0,
                          'picture': new Buffer([255, 255, 255, 255, 254]).toString('base64'),
                          'species':'dangerous',
                        },
                        {
                          'fishtype': 'goblin',
                          'age': 1,
                          'birthday': '2015-08-08T00:00:00Z',
                          'length': 30.0,
                          'species': 'scary',
                          'jawsize': 5
                        }
                      ]
                    };
          csharp: !CSharpLanguage
            name: complexBody
            description: >-
              Please put a salmon that looks like this:

              {
                      'fishtype':'Salmon',
                      'location':'alaska',
                      'iswild':true,
                      'species':'king',
                      'length':1.0,
                      'siblings':[
                        {
                          'fishtype':'Shark',
                          'age':6,
                          'birthday': '2012-01-05T01:00:00Z',
                          'length':20.0,
                          'species':'predator',
                        },
                        {
                          'fishtype':'Sawshark',
                          'age':105,
                          'birthday': '1900-01-05T01:00:00Z',
                          'length':10.0,
                          'picture': new Buffer([255, 255, 255, 255, 254]).toString('base64'),
                          'species':'dangerous',
                        },
                        {
                          'fishtype': 'goblin',
                          'age': 1,
                          'birthday': '2015-08-08T00:00:00Z',
                          'length': 30.0,
                          'species': 'scary',
                          'jawsize': 5
                        }
                      ]
                    };
            isNullable: false
        protocol: !Protocols
          http: !HttpParameter
            in: body
            style: json
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpWithBodyRequest
          path: /complex/polymorphism/missingrequired/invalid
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    responses:
    - !Response
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: binary
          mediaTypes: []
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions: !DictionaryOfAny
      x-ms-requestBody-index: 0
    language: !Languages
      default: !Language
        name: putValidMissingRequired
        description: Put complex types that are polymorphic, attempting to omit required 'birthday' field - the request should not be allowed from the client
      csharp: !CSharpLanguage
        name: PutValidMissingRequired
        description: Put complex types that are polymorphic, attempting to omit required 'birthday' field - the request should not be allowed from the client
    protocol: !Protocols {}
  language: !Languages
    default: !Language
      name: polymorphism
      description: ''
    csharp: !CSharpLanguage
      name: PolymorphismOperations
      type: !CSharpType
        namespace: !CSharpNamespace
          base: BodyComplex
          category: Operations
          apiVersion: V20160229
        name: PolymorphismOperations
  protocol: !Protocols {}
- !OperationGroup
  $key: polymorphicrecursive
  operations:
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpRequest
          path: /complex/polymorphicrecursive/valid
          method: get
          uri: '{$host}'
    responses:
    - !SchemaResponse
      schema: *o11
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !Languages
      default: !Language
        name: getValid
        description: Get complex types that are polymorphic and have recursive references
      csharp: !CSharpLanguage
        name: GetValid
        description: Get complex types that are polymorphic and have recursive references
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      - !Parameter
        schema: *o11
        implementation: Method
        required: true
        extensions: !DictionaryOfAny
          x-ms-requestBody-name: complexBody
        language: !Languages
          default: !Language
            name: complexBody
            description: >-
              Please put a salmon that looks like this:

              {
                      'fishtype':'Salmon',
                      'location':'alaska',
                      'iswild':true,
                      'species':'king',
                      'length':1.0,
                      'siblings':[
                        {
                          'fishtype':'Shark',
                          'age':6,
                          'birthday': '2012-01-05T01:00:00Z',
                          'length':20.0,
                          'species':'predator',
                        },
                        {
                          'fishtype':'Sawshark',
                          'age':105,
                          'birthday': '1900-01-05T01:00:00Z',
                          'length':10.0,
                          'picture': new Buffer([255, 255, 255, 255, 254]).toString('base64'),
                          'species':'dangerous',
                        },
                        {
                          'fishtype': 'goblin',
                          'age': 1,
                          'birthday': '2015-08-08T00:00:00Z',
                          'length': 30.0,
                          'species': 'scary',
                          'jawsize': 5
                        }
                      ]
                    };
          csharp: !CSharpLanguage
            name: complexBody
            description: >-
              Please put a salmon that looks like this:

              {
                      'fishtype':'Salmon',
                      'location':'alaska',
                      'iswild':true,
                      'species':'king',
                      'length':1.0,
                      'siblings':[
                        {
                          'fishtype':'Shark',
                          'age':6,
                          'birthday': '2012-01-05T01:00:00Z',
                          'length':20.0,
                          'species':'predator',
                        },
                        {
                          'fishtype':'Sawshark',
                          'age':105,
                          'birthday': '1900-01-05T01:00:00Z',
                          'length':10.0,
                          'picture': new Buffer([255, 255, 255, 255, 254]).toString('base64'),
                          'species':'dangerous',
                        },
                        {
                          'fishtype': 'goblin',
                          'age': 1,
                          'birthday': '2015-08-08T00:00:00Z',
                          'length': 30.0,
                          'species': 'scary',
                          'jawsize': 5
                        }
                      ]
                    };
            isNullable: false
        protocol: !Protocols
          http: !HttpParameter
            in: body
            style: json
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpWithBodyRequest
          path: /complex/polymorphicrecursive/valid
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    responses:
    - !Response
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: binary
          mediaTypes: []
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions: !DictionaryOfAny
      x-ms-requestBody-index: 0
    language: !Languages
      default: !Language
        name: putValid
        description: Put complex types that are polymorphic and have recursive references
      csharp: !CSharpLanguage
        name: PutValid
        description: Put complex types that are polymorphic and have recursive references
    protocol: !Protocols {}
  language: !Languages
    default: !Language
      name: polymorphicrecursive
      description: ''
    csharp: !CSharpLanguage
      name: PolymorphicrecursiveOperations
      type: !CSharpType
        namespace: !CSharpNamespace
          base: BodyComplex
          category: Operations
          apiVersion: V20160229
        name: PolymorphicrecursiveOperations
  protocol: !Protocols {}
- !OperationGroup
  $key: readonlyproperty
  operations:
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpRequest
          path: /complex/readonlyproperty/valid
          method: get
          uri: '{$host}'
    responses:
    - !SchemaResponse
      schema: *o109
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !Languages
      default: !Language
        name: getValid
        description: Get complex types that have readonly properties
      csharp: !CSharpLanguage
        name: GetValid
        description: Get complex types that have readonly properties
    protocol: !Protocols {}
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      - !Parameter
        schema: *o109
        implementation: Method
        required: true
        extensions: !DictionaryOfAny
          x-ms-requestBody-name: complexBody
        language: !Languages
          default: !Language
            name: complexBody
            description: ''
          csharp: !CSharpLanguage
            name: complexBody
            description: ''
            isNullable: false
        protocol: !Protocols
          http: !HttpParameter
            in: body
            style: json
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpWithBodyRequest
          path: /complex/readonlyproperty/valid
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    responses:
    - !Response
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: binary
          mediaTypes: []
          statusCodes:
          - 200
    exceptions:
    - !SchemaResponse
      schema: *o93
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions: !DictionaryOfAny
      x-ms-requestBody-index: 0
    language: !Languages
      default: !Language
        name: putValid
        description: Put complex types that have readonly properties
      csharp: !CSharpLanguage
        name: PutValid
        description: Put complex types that have readonly properties
    protocol: !Protocols {}
  language: !Languages
    default: !Language
      name: readonlyproperty
      description: ''
    csharp: !CSharpLanguage
      name: ReadonlypropertyOperations
      type: !CSharpType
        namespace: !CSharpNamespace
          base: BodyComplex
          category: Operations
          apiVersion: V20160229
        name: ReadonlypropertyOperations
  protocol: !Protocols {}
- !OperationGroup
  $key: flattencomplex
  operations:
  - !Operation
    apiVersions:
    - !ApiVersion
      version: '2016-02-29'
    request: !Request
      parameters:
      - *o91
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpRequest
          path: /complex/flatten/valid
          method: get
          uri: '{$host}'
    responses:
    - !SchemaResponse
      schema: *o27
      language: !Languages
        default: !Language
          name: ''
          description: ''
      protocol: !Protocols
        http: !HttpResponse
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - 200
    language: !Languages
      default: !Language
        name: getValid
        description: MISSING·OPERATION-DESCRIPTION
      csharp: !CSharpLanguage
        name: GetValid
        description: MISSING·OPERATION-DESCRIPTION
    protocol: !Protocols {}
  language: !Languages
    default: !Language
      name: flattencomplex
      description: ''
    csharp: !CSharpLanguage
      name: FlattencomplexOperations
      type: !CSharpType
        namespace: !CSharpNamespace
          base: BodyComplex
          category: Operations
          apiVersion: V20160229
        name: FlattencomplexOperations
  protocol: !Protocols {}
language: !Languages
  default: !Language
    name: ''
    description: ''
protocol: !Protocols
  http: !HttpModel {}
