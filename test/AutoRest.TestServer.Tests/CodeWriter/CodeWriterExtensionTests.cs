// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.

using System;
using AutoRest.CSharp.Generation.Writers;
using NUnit.Framework;

namespace AutoRest.Shared.Tests.CodeWriterTests
{
    public class CodeWriterExtensionTests
    {
        private const string DefaultOutput = "// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n// <auto-generated/>\r\n\r\n#nullable disable\r\n\r\n";

        [TestCase("foo", true, "foo\r\n")]
        [TestCase("foo", false, "")]
        public void TestAppendIf(string input, bool condition, string expected)
        {
            FormattableString formattableString = $"{input}";
            var writer = new CodeWriter();
            writer.AppendIf(formattableString, condition);
            ValidateOutput(expected, writer.ToString());
        }

        private void ValidateOutput(string expected, string actual)
        {
            if (expected == string.Empty) //the default only gets created if something is added to the writer
            {
                Assert.AreEqual(expected, actual);
            }
            else
            {
                Assert.AreEqual(string.Concat(DefaultOutput, expected), actual);
            }
        }
    }
}
