// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace SimplePost.Samples
{
    public partial class Samples_SimplePostClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SimplePost_Create_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            SimplePostClient client = new SimplePostClient(endpoint);

            using RequestContent content = RequestContent.Create("<content>");
            Response response = client.Create(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SimplePost_Create_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            SimplePostClient client = new SimplePostClient(endpoint);

            using RequestContent content = RequestContent.Create("<content>");
            Response response = await client.CreateAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SimplePost_Create_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            SimplePostClient client = new SimplePostClient(endpoint);

            Response<string> response = client.Create("<content>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SimplePost_Create_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            SimplePostClient client = new SimplePostClient(endpoint);

            Response<string> response = await client.CreateAsync("<content>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SimplePost_Create_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            SimplePostClient client = new SimplePostClient(endpoint);

            using RequestContent content = RequestContent.Create("<content>");
            Response response = client.Create(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SimplePost_Create_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            SimplePostClient client = new SimplePostClient(endpoint);

            using RequestContent content = RequestContent.Create("<content>");
            Response response = await client.CreateAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SimplePost_Create_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            SimplePostClient client = new SimplePostClient(endpoint);

            Response<string> response = client.Create("<content>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SimplePost_Create_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            SimplePostClient client = new SimplePostClient(endpoint);

            Response<string> response = await client.CreateAsync("<content>");
        }
    }
}
