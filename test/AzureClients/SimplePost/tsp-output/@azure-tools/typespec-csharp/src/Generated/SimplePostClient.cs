// <auto-generated/>

#nullable disable

using System;
using System.ClientModel.Primitives;

namespace SimplePost
{
    // Data plane generated client.
    /// <summary> The SimplePost service client. </summary>
    public partial class SimplePostClient
    {
        private readonly ClientPipeline _pipeline;
        private readonly Uri _endpoint;

        /// <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        public virtual ClientPipeline Pipeline => _pipeline;

        /// <summary> Initializes a new instance of SimplePostClient for mocking. </summary>
        protected SimplePostClient()
        {
        }

        /// <summary> Initializes a new instance of SimplePostClient. </summary>
        /// <param name="endpoint"> Service host. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="endpoint"/> is null. </exception>
        public SimplePostClient(Uri endpoint) : this(endpoint, new SimplePostClientOptions())
        {
        }

        /// <summary> Initializes a new instance of SimplePostClient. </summary>
        /// <param name="endpoint"> Service host. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="endpoint"/> is null. </exception>
        public SimplePostClient(Uri endpoint, SimplePostClientOptions options)
        {
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new SimplePostClientOptions();

            _pipeline = ClientPipeline.Create(options, Array.Empty<PipelinePolicy>(), Array.Empty<PipelinePolicy>(), Array.Empty<PipelinePolicy>());
            _endpoint = endpoint;
        }
    }
}
