// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace OpenAI.Models
{
    /// <summary> Represents the url or the content of an image generated by the OpenAI API. </summary>
    public partial class Image
    {
        /// <summary> Initializes a new instance of Image. </summary>
        internal Image()
        {
        }

        /// <summary> Initializes a new instance of Image. </summary>
        /// <param name="url"> The URL of the generated image, if `response_format` is `url` (default). </param>
        /// <param name="b64Json"> The base64-encoded JSON of the generated image, if `response_format` is `b64_json`. </param>
        internal Image(Uri url, BinaryData b64Json)
        {
            Url = url;
            B64Json = b64Json;
        }

        /// <summary> The URL of the generated image, if `response_format` is `url` (default). </summary>
        public Uri Url { get; }
        /// <summary>
        /// The base64-encoded JSON of the generated image, if `response_format` is `b64_json`.
        /// <para>
        /// To assign an object to this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formated json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public BinaryData B64Json { get; }
    }
}
