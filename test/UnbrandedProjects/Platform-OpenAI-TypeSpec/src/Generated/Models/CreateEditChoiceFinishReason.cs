// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace OpenAI.Models
{
    /// <summary> Enum for finish_reason in CreateEditChoice. </summary>
    public readonly partial struct CreateEditChoiceFinishReason : IEquatable<CreateEditChoiceFinishReason>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="CreateEditChoiceFinishReason"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public CreateEditChoiceFinishReason(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string StopValue = "stop";
        private const string LengthValue = "length";

        /// <summary> stop. </summary>
        public static CreateEditChoiceFinishReason Stop { get; } = new CreateEditChoiceFinishReason(StopValue);
        /// <summary> length. </summary>
        public static CreateEditChoiceFinishReason Length { get; } = new CreateEditChoiceFinishReason(LengthValue);
        /// <summary> Determines if two <see cref="CreateEditChoiceFinishReason"/> values are the same. </summary>
        public static bool operator ==(CreateEditChoiceFinishReason left, CreateEditChoiceFinishReason right) => left.Equals(right);
        /// <summary> Determines if two <see cref="CreateEditChoiceFinishReason"/> values are not the same. </summary>
        public static bool operator !=(CreateEditChoiceFinishReason left, CreateEditChoiceFinishReason right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="CreateEditChoiceFinishReason"/>. </summary>
        public static implicit operator CreateEditChoiceFinishReason(string value) => new CreateEditChoiceFinishReason(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is CreateEditChoiceFinishReason other && Equals(other);
        /// <inheritdoc />
        public bool Equals(CreateEditChoiceFinishReason other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
