// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace OpenAI.Models
{
    /// <summary> The CreateChatCompletionResponseChoice. </summary>
    public partial class CreateChatCompletionResponseChoice
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        internal IDictionary<string, BinaryData> SerializedAdditionalRawData { get; set; }
        /// <summary> Initializes a new instance of <see cref="CreateChatCompletionResponseChoice"/>. </summary>
        /// <param name="index"></param>
        /// <param name="message"></param>
        /// <param name="finishReason"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="message"/> is null. </exception>
        internal CreateChatCompletionResponseChoice(long index, ChatCompletionResponseMessage message, CreateChatCompletionResponseChoiceFinishReason finishReason)
        {
            Argument.AssertNotNull(message, nameof(message));

            Index = index;
            Message = message;
            FinishReason = finishReason;
        }

        /// <summary> Initializes a new instance of <see cref="CreateChatCompletionResponseChoice"/>. </summary>
        /// <param name="index"></param>
        /// <param name="message"></param>
        /// <param name="finishReason"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal CreateChatCompletionResponseChoice(long index, ChatCompletionResponseMessage message, CreateChatCompletionResponseChoiceFinishReason finishReason, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Index = index;
            Message = message;
            FinishReason = finishReason;
            SerializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="CreateChatCompletionResponseChoice"/> for deserialization. </summary>
        internal CreateChatCompletionResponseChoice()
        {
        }

        /// <summary> Gets the index. </summary>
        public long Index { get; }
        /// <summary> Gets the message. </summary>
        public ChatCompletionResponseMessage Message { get; }
        /// <summary> Gets the finish reason. </summary>
        public CreateChatCompletionResponseChoiceFinishReason FinishReason { get; }
    }
}
