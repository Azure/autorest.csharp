// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net.ClientModel.Internal;

namespace OpenAI.Models
{
    /// <summary> Usage statistics for the completion request. </summary>
    public partial class CompletionUsage
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="CompletionUsage"/>. </summary>
        /// <param name="promptTokens"> Number of tokens in the prompt. </param>
        /// <param name="completionTokens"> Number of tokens in the generated completion. </param>
        /// <param name="totalTokens"> Total number of tokens used in the request (prompt + completion). </param>
        internal CompletionUsage(long promptTokens, long completionTokens, long totalTokens)
        {
            PromptTokens = promptTokens;
            CompletionTokens = completionTokens;
            TotalTokens = totalTokens;
            _serializedAdditionalRawData = new OptionalDictionary<string, BinaryData>();
        }

        /// <summary> Initializes a new instance of <see cref="CompletionUsage"/>. </summary>
        /// <param name="promptTokens"> Number of tokens in the prompt. </param>
        /// <param name="completionTokens"> Number of tokens in the generated completion. </param>
        /// <param name="totalTokens"> Total number of tokens used in the request (prompt + completion). </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal CompletionUsage(long promptTokens, long completionTokens, long totalTokens, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            PromptTokens = promptTokens;
            CompletionTokens = completionTokens;
            TotalTokens = totalTokens;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="CompletionUsage"/> for deserialization. </summary>
        internal CompletionUsage()
        {
        }

        /// <summary> Number of tokens in the prompt. </summary>
        public long PromptTokens { get; }
        /// <summary> Number of tokens in the generated completion. </summary>
        public long CompletionTokens { get; }
        /// <summary> Total number of tokens used in the request (prompt + completion). </summary>
        public long TotalTokens { get; }
    }
}
