<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="CreateTranscriptionAsync(CreateTranscriptionRequest,CancellationToken)">
      <example>
This sample shows how to call CreateTranscriptionAsync.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

CreateTranscriptionRequest audio = new CreateTranscriptionRequest(BinaryData.FromObjectAsJson(new object()), new CreateTranscriptionRequestModel("<model>"));
Result<CreateTranscriptionResponse> result = await client.CreateTranscriptionAsync(audio);
]]></code>
This sample shows how to call CreateTranscriptionAsync with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

CreateTranscriptionRequest audio = new CreateTranscriptionRequest(BinaryData.FromObjectAsJson(new object()), new CreateTranscriptionRequestModel("<model>"))
{
    Prompt = "<prompt>",
    ResponseFormat = CreateTranscriptionRequestResponseFormat.Json,
    Temperature = 123.45,
    Language = "<language>",
};
Result<CreateTranscriptionResponse> result = await client.CreateTranscriptionAsync(audio);
]]></code></example>
    </member>
    <member name="CreateTranscription(CreateTranscriptionRequest,CancellationToken)">
      <example>
This sample shows how to call CreateTranscription.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

CreateTranscriptionRequest audio = new CreateTranscriptionRequest(BinaryData.FromObjectAsJson(new object()), new CreateTranscriptionRequestModel("<model>"));
Result<CreateTranscriptionResponse> result = client.CreateTranscription(audio);
]]></code>
This sample shows how to call CreateTranscription with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

CreateTranscriptionRequest audio = new CreateTranscriptionRequest(BinaryData.FromObjectAsJson(new object()), new CreateTranscriptionRequestModel("<model>"))
{
    Prompt = "<prompt>",
    ResponseFormat = CreateTranscriptionRequestResponseFormat.Json,
    Temperature = 123.45,
    Language = "<language>",
};
Result<CreateTranscriptionResponse> result = client.CreateTranscription(audio);
]]></code></example>
    </member>
    <member name="CreateTranscriptionAsync(RequestBody,RequestOptions)">
      <example>
This sample shows how to call CreateTranscriptionAsync and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    file = new object(),
    model = "<model>",
}).ToStream());
Result result = await client.CreateTranscriptionAsync(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("text").ToString());
]]></code>
This sample shows how to call CreateTranscriptionAsync with all request content and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    file = new object(),
    model = "<model>",
    prompt = "<prompt>",
    response_format = "json",
    temperature = 123.45,
    language = "<language>",
}).ToStream());
Result result = await client.CreateTranscriptionAsync(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("text").ToString());
]]></code></example>
    </member>
    <member name="CreateTranscription(RequestBody,RequestOptions)">
      <example>
This sample shows how to call CreateTranscription and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    file = new object(),
    model = "<model>",
}).ToStream());
Result result = client.CreateTranscription(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("text").ToString());
]]></code>
This sample shows how to call CreateTranscription with all request content and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    file = new object(),
    model = "<model>",
    prompt = "<prompt>",
    response_format = "json",
    temperature = 123.45,
    language = "<language>",
}).ToStream());
Result result = client.CreateTranscription(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("text").ToString());
]]></code></example>
    </member>
    <member name="CreateTranslationAsync(CreateTranslationRequest,CancellationToken)">
      <example>
This sample shows how to call CreateTranslationAsync.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

CreateTranslationRequest audio = new CreateTranslationRequest(BinaryData.FromObjectAsJson(new object()), new CreateTranslationRequestModel("<model>"));
Result<CreateTranslationResponse> result = await client.CreateTranslationAsync(audio);
]]></code>
This sample shows how to call CreateTranslationAsync with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

CreateTranslationRequest audio = new CreateTranslationRequest(BinaryData.FromObjectAsJson(new object()), new CreateTranslationRequestModel("<model>"))
{
    Prompt = "<prompt>",
    ResponseFormat = CreateTranslationRequestResponseFormat.Json,
    Temperature = 123.45,
};
Result<CreateTranslationResponse> result = await client.CreateTranslationAsync(audio);
]]></code></example>
    </member>
    <member name="CreateTranslation(CreateTranslationRequest,CancellationToken)">
      <example>
This sample shows how to call CreateTranslation.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

CreateTranslationRequest audio = new CreateTranslationRequest(BinaryData.FromObjectAsJson(new object()), new CreateTranslationRequestModel("<model>"));
Result<CreateTranslationResponse> result = client.CreateTranslation(audio);
]]></code>
This sample shows how to call CreateTranslation with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

CreateTranslationRequest audio = new CreateTranslationRequest(BinaryData.FromObjectAsJson(new object()), new CreateTranslationRequestModel("<model>"))
{
    Prompt = "<prompt>",
    ResponseFormat = CreateTranslationRequestResponseFormat.Json,
    Temperature = 123.45,
};
Result<CreateTranslationResponse> result = client.CreateTranslation(audio);
]]></code></example>
    </member>
    <member name="CreateTranslationAsync(RequestBody,RequestOptions)">
      <example>
This sample shows how to call CreateTranslationAsync and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    file = new object(),
    model = "<model>",
}).ToStream());
Result result = await client.CreateTranslationAsync(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("text").ToString());
]]></code>
This sample shows how to call CreateTranslationAsync with all request content and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    file = new object(),
    model = "<model>",
    prompt = "<prompt>",
    response_format = "json",
    temperature = 123.45,
}).ToStream());
Result result = await client.CreateTranslationAsync(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("text").ToString());
]]></code></example>
    </member>
    <member name="CreateTranslation(RequestBody,RequestOptions)">
      <example>
This sample shows how to call CreateTranslation and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    file = new object(),
    model = "<model>",
}).ToStream());
Result result = client.CreateTranslation(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("text").ToString());
]]></code>
This sample shows how to call CreateTranslation with all request content and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    file = new object(),
    model = "<model>",
    prompt = "<prompt>",
    response_format = "json",
    temperature = 123.45,
}).ToStream());
Result result = client.CreateTranslation(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("text").ToString());
]]></code></example>
    </member>
    <member name="CreateChatCompletionAsync(CreateChatCompletionRequestModel,IEnumerable{ChatCompletionRequestMessage},IEnumerable{ChatCompletionFunctions},BinaryData,double?,double?,long?,long?,BinaryData,double?,double?,IDictionary{string,long},string,bool?,CancellationToken)">
      <example>
This sample shows how to call CreateChatCompletionAsync.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<CreateChatCompletionResponse> result = await client.CreateChatCompletionAsync(new CreateChatCompletionRequestModel("<model>"), new ChatCompletionRequestMessage[]
{
    new ChatCompletionRequestMessage(ChatCompletionRequestMessageRole.System, "<content>")
});
]]></code>
This sample shows how to call CreateChatCompletionAsync with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<CreateChatCompletionResponse> result = await client.CreateChatCompletionAsync(new CreateChatCompletionRequestModel("<model>"), new ChatCompletionRequestMessage[]
{
    new ChatCompletionRequestMessage(ChatCompletionRequestMessageRole.System, "<content>")
    {
        Name = "<name>",
        FunctionCall = new CreateChatCompletionFunctionCall("<name>", "<arguments>"),
    }
}, functions: new ChatCompletionFunctions[]
{
    new ChatCompletionFunctions("<name>", new Dictionary<string, BinaryData>
    {
        ["key"] = BinaryData.FromObjectAsJson(new object())
    })
    {
        Description = "<description>",
    }
}, functionCall: BinaryData.FromObjectAsJson("none"), temperature: 123.45, topP: 123.45, n: 1234L, maxTokens: 1234L, stop: BinaryData.FromObjectAsJson("<stop>"), presencePenalty: 123.45, frequencyPenalty: 123.45, logitBias: new Dictionary<string, long>
{
    ["key"] = 1234L
}, user: "<user>", stream: true);
]]></code></example>
    </member>
    <member name="CreateChatCompletion(CreateChatCompletionRequestModel,IEnumerable{ChatCompletionRequestMessage},IEnumerable{ChatCompletionFunctions},BinaryData,double?,double?,long?,long?,BinaryData,double?,double?,IDictionary{string,long},string,bool?,CancellationToken)">
      <example>
This sample shows how to call CreateChatCompletion.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<CreateChatCompletionResponse> result = client.CreateChatCompletion(new CreateChatCompletionRequestModel("<model>"), new ChatCompletionRequestMessage[]
{
    new ChatCompletionRequestMessage(ChatCompletionRequestMessageRole.System, "<content>")
});
]]></code>
This sample shows how to call CreateChatCompletion with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<CreateChatCompletionResponse> result = client.CreateChatCompletion(new CreateChatCompletionRequestModel("<model>"), new ChatCompletionRequestMessage[]
{
    new ChatCompletionRequestMessage(ChatCompletionRequestMessageRole.System, "<content>")
    {
        Name = "<name>",
        FunctionCall = new CreateChatCompletionFunctionCall("<name>", "<arguments>"),
    }
}, functions: new ChatCompletionFunctions[]
{
    new ChatCompletionFunctions("<name>", new Dictionary<string, BinaryData>
    {
        ["key"] = BinaryData.FromObjectAsJson(new object())
    })
    {
        Description = "<description>",
    }
}, functionCall: BinaryData.FromObjectAsJson("none"), temperature: 123.45, topP: 123.45, n: 1234L, maxTokens: 1234L, stop: BinaryData.FromObjectAsJson("<stop>"), presencePenalty: 123.45, frequencyPenalty: 123.45, logitBias: new Dictionary<string, long>
{
    ["key"] = 1234L
}, user: "<user>", stream: true);
]]></code></example>
    </member>
    <member name="CreateChatCompletionAsync(RequestBody,RequestOptions)">
      <example>
This sample shows how to call CreateChatCompletionAsync and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    model = "<model>",
    messages = new object[]
    {
        new
        {
            role = "system",
            content = "<content>",
        }
    },
}).ToStream());
Result result = await client.CreateChatCompletionAsync(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("created").ToString());
Console.WriteLine(element.GetProperty("model").ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("index").ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("message").GetProperty("role").ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("message").GetProperty("content").ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("finish_reason").ToString());
]]></code>
This sample shows how to call CreateChatCompletionAsync with all request content and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    model = "<model>",
    messages = new object[]
    {
        new
        {
            role = "system",
            content = "<content>",
            name = "<name>",
            function_call = new
            {
                name = "<name>",
                arguments = "<arguments>",
            },
        }
    },
    functions = new object[]
    {
        new
        {
            name = "<name>",
            description = "<description>",
            parameters = new
            {
                key = new object(),
            },
        }
    },
    function_call = "none",
    temperature = 123.45,
    top_p = 123.45,
    n = 1234L,
    max_tokens = 1234L,
    stop = "<stop>",
    presence_penalty = 123.45,
    frequency_penalty = 123.45,
    logit_bias = new
    {
        key = 1234L,
    },
    user = "<user>",
    stream = true,
}).ToStream());
Result result = await client.CreateChatCompletionAsync(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("created").ToString());
Console.WriteLine(element.GetProperty("model").ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("index").ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("message").GetProperty("role").ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("message").GetProperty("content").ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("message").GetProperty("function_call").GetProperty("name").ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("message").GetProperty("function_call").GetProperty("arguments").ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("finish_reason").ToString());
Console.WriteLine(element.GetProperty("usage").GetProperty("prompt_tokens").ToString());
Console.WriteLine(element.GetProperty("usage").GetProperty("completion_tokens").ToString());
Console.WriteLine(element.GetProperty("usage").GetProperty("total_tokens").ToString());
]]></code></example>
    </member>
    <member name="CreateChatCompletion(RequestBody,RequestOptions)">
      <example>
This sample shows how to call CreateChatCompletion and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    model = "<model>",
    messages = new object[]
    {
        new
        {
            role = "system",
            content = "<content>",
        }
    },
}).ToStream());
Result result = client.CreateChatCompletion(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("created").ToString());
Console.WriteLine(element.GetProperty("model").ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("index").ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("message").GetProperty("role").ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("message").GetProperty("content").ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("finish_reason").ToString());
]]></code>
This sample shows how to call CreateChatCompletion with all request content and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    model = "<model>",
    messages = new object[]
    {
        new
        {
            role = "system",
            content = "<content>",
            name = "<name>",
            function_call = new
            {
                name = "<name>",
                arguments = "<arguments>",
            },
        }
    },
    functions = new object[]
    {
        new
        {
            name = "<name>",
            description = "<description>",
            parameters = new
            {
                key = new object(),
            },
        }
    },
    function_call = "none",
    temperature = 123.45,
    top_p = 123.45,
    n = 1234L,
    max_tokens = 1234L,
    stop = "<stop>",
    presence_penalty = 123.45,
    frequency_penalty = 123.45,
    logit_bias = new
    {
        key = 1234L,
    },
    user = "<user>",
    stream = true,
}).ToStream());
Result result = client.CreateChatCompletion(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("created").ToString());
Console.WriteLine(element.GetProperty("model").ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("index").ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("message").GetProperty("role").ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("message").GetProperty("content").ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("message").GetProperty("function_call").GetProperty("name").ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("message").GetProperty("function_call").GetProperty("arguments").ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("finish_reason").ToString());
Console.WriteLine(element.GetProperty("usage").GetProperty("prompt_tokens").ToString());
Console.WriteLine(element.GetProperty("usage").GetProperty("completion_tokens").ToString());
Console.WriteLine(element.GetProperty("usage").GetProperty("total_tokens").ToString());
]]></code></example>
    </member>
    <member name="CreateFineTuningJobAsync(CreateFineTuningJobRequest,CancellationToken)">
      <example>
This sample shows how to call CreateFineTuningJobAsync.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

CreateFineTuningJobRequest job = new CreateFineTuningJobRequest("<training_file>", new CreateFineTuningJobRequestModel("<model>"));
Result<FineTuningJob> result = await client.CreateFineTuningJobAsync(job);
]]></code>
This sample shows how to call CreateFineTuningJobAsync with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

CreateFineTuningJobRequest job = new CreateFineTuningJobRequest("<training_file>", new CreateFineTuningJobRequestModel("<model>"))
{
    ValidationFile = "<validation_file>",
    Hyperparameters = new CreateFineTuningJobHyperparameters
    {
        NEpochs = BinaryData.FromObjectAsJson("auto"),
    },
    Suffix = "<suffix>",
};
Result<FineTuningJob> result = await client.CreateFineTuningJobAsync(job);
]]></code></example>
    </member>
    <member name="CreateFineTuningJob(CreateFineTuningJobRequest,CancellationToken)">
      <example>
This sample shows how to call CreateFineTuningJob.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

CreateFineTuningJobRequest job = new CreateFineTuningJobRequest("<training_file>", new CreateFineTuningJobRequestModel("<model>"));
Result<FineTuningJob> result = client.CreateFineTuningJob(job);
]]></code>
This sample shows how to call CreateFineTuningJob with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

CreateFineTuningJobRequest job = new CreateFineTuningJobRequest("<training_file>", new CreateFineTuningJobRequestModel("<model>"))
{
    ValidationFile = "<validation_file>",
    Hyperparameters = new CreateFineTuningJobHyperparameters
    {
        NEpochs = BinaryData.FromObjectAsJson("auto"),
    },
    Suffix = "<suffix>",
};
Result<FineTuningJob> result = client.CreateFineTuningJob(job);
]]></code></example>
    </member>
    <member name="CreateFineTuningJobAsync(RequestBody,RequestOptions)">
      <example>
This sample shows how to call CreateFineTuningJobAsync and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    training_file = "<training_file>",
    model = "<model>",
}).ToStream());
Result result = await client.CreateFineTuningJobAsync(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("created_at").ToString());
Console.WriteLine(element.GetProperty("finished_at").ToString());
Console.WriteLine(element.GetProperty("model").ToString());
Console.WriteLine(element.GetProperty("fine_tuned_model").ToString());
Console.WriteLine(element.GetProperty("organization_id").ToString());
Console.WriteLine(element.GetProperty("status").ToString());
Console.WriteLine(element.GetProperty("hyperparameters").ToString());
Console.WriteLine(element.GetProperty("training_file").ToString());
Console.WriteLine(element.GetProperty("validation_file").ToString());
Console.WriteLine(element.GetProperty("result_files")[0].ToString());
Console.WriteLine(element.GetProperty("trained_tokens").ToString());
Console.WriteLine(element.GetProperty("error").ToString());
]]></code>
This sample shows how to call CreateFineTuningJobAsync with all request content and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    training_file = "<training_file>",
    validation_file = "<validation_file>",
    model = "<model>",
    hyperparameters = new
    {
        n_epochs = "auto",
    },
    suffix = "<suffix>",
}).ToStream());
Result result = await client.CreateFineTuningJobAsync(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("created_at").ToString());
Console.WriteLine(element.GetProperty("finished_at").ToString());
Console.WriteLine(element.GetProperty("model").ToString());
Console.WriteLine(element.GetProperty("fine_tuned_model").ToString());
Console.WriteLine(element.GetProperty("organization_id").ToString());
Console.WriteLine(element.GetProperty("status").ToString());
Console.WriteLine(element.GetProperty("hyperparameters").GetProperty("n_epochs").ToString());
Console.WriteLine(element.GetProperty("training_file").ToString());
Console.WriteLine(element.GetProperty("validation_file").ToString());
Console.WriteLine(element.GetProperty("result_files")[0].ToString());
Console.WriteLine(element.GetProperty("trained_tokens").ToString());
Console.WriteLine(element.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(element.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(element.GetProperty("error").GetProperty("param").ToString());
]]></code></example>
    </member>
    <member name="CreateFineTuningJob(RequestBody,RequestOptions)">
      <example>
This sample shows how to call CreateFineTuningJob and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    training_file = "<training_file>",
    model = "<model>",
}).ToStream());
Result result = client.CreateFineTuningJob(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("created_at").ToString());
Console.WriteLine(element.GetProperty("finished_at").ToString());
Console.WriteLine(element.GetProperty("model").ToString());
Console.WriteLine(element.GetProperty("fine_tuned_model").ToString());
Console.WriteLine(element.GetProperty("organization_id").ToString());
Console.WriteLine(element.GetProperty("status").ToString());
Console.WriteLine(element.GetProperty("hyperparameters").ToString());
Console.WriteLine(element.GetProperty("training_file").ToString());
Console.WriteLine(element.GetProperty("validation_file").ToString());
Console.WriteLine(element.GetProperty("result_files")[0].ToString());
Console.WriteLine(element.GetProperty("trained_tokens").ToString());
Console.WriteLine(element.GetProperty("error").ToString());
]]></code>
This sample shows how to call CreateFineTuningJob with all request content and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    training_file = "<training_file>",
    validation_file = "<validation_file>",
    model = "<model>",
    hyperparameters = new
    {
        n_epochs = "auto",
    },
    suffix = "<suffix>",
}).ToStream());
Result result = client.CreateFineTuningJob(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("created_at").ToString());
Console.WriteLine(element.GetProperty("finished_at").ToString());
Console.WriteLine(element.GetProperty("model").ToString());
Console.WriteLine(element.GetProperty("fine_tuned_model").ToString());
Console.WriteLine(element.GetProperty("organization_id").ToString());
Console.WriteLine(element.GetProperty("status").ToString());
Console.WriteLine(element.GetProperty("hyperparameters").GetProperty("n_epochs").ToString());
Console.WriteLine(element.GetProperty("training_file").ToString());
Console.WriteLine(element.GetProperty("validation_file").ToString());
Console.WriteLine(element.GetProperty("result_files")[0].ToString());
Console.WriteLine(element.GetProperty("trained_tokens").ToString());
Console.WriteLine(element.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(element.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(element.GetProperty("error").GetProperty("param").ToString());
]]></code></example>
    </member>
    <member name="GetPaginatedFineTuningJobsAsync(string,long?,CancellationToken)">
      <example>
This sample shows how to call GetPaginatedFineTuningJobsAsync.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<ListPaginatedFineTuningJobsResponse> result = await client.GetPaginatedFineTuningJobsAsync();
]]></code>
This sample shows how to call GetPaginatedFineTuningJobsAsync with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<ListPaginatedFineTuningJobsResponse> result = await client.GetPaginatedFineTuningJobsAsync(after: "<after>", limit: 1234L);
]]></code></example>
    </member>
    <member name="GetPaginatedFineTuningJobs(string,long?,CancellationToken)">
      <example>
This sample shows how to call GetPaginatedFineTuningJobs.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<ListPaginatedFineTuningJobsResponse> result = client.GetPaginatedFineTuningJobs();
]]></code>
This sample shows how to call GetPaginatedFineTuningJobs with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<ListPaginatedFineTuningJobsResponse> result = client.GetPaginatedFineTuningJobs(after: "<after>", limit: 1234L);
]]></code></example>
    </member>
    <member name="GetPaginatedFineTuningJobsAsync(string,long?,RequestOptions)">
      <example>
This sample shows how to call GetPaginatedFineTuningJobsAsync and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = await client.GetPaginatedFineTuningJobsAsync(null, null, null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("created_at").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("finished_at").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("model").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("fine_tuned_model").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("organization_id").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("status").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("hyperparameters").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("training_file").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("validation_file").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("result_files")[0].ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("trained_tokens").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("error").ToString());
Console.WriteLine(element.GetProperty("has_more").ToString());
]]></code>
This sample shows how to call GetPaginatedFineTuningJobsAsync with all parameters and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = await client.GetPaginatedFineTuningJobsAsync("<after>", 1234L, null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("created_at").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("finished_at").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("model").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("fine_tuned_model").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("organization_id").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("status").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("hyperparameters").GetProperty("n_epochs").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("training_file").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("validation_file").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("result_files")[0].ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("trained_tokens").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("error").GetProperty("param").ToString());
Console.WriteLine(element.GetProperty("has_more").ToString());
]]></code></example>
    </member>
    <member name="GetPaginatedFineTuningJobs(string,long?,RequestOptions)">
      <example>
This sample shows how to call GetPaginatedFineTuningJobs and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = client.GetPaginatedFineTuningJobs(null, null, null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("created_at").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("finished_at").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("model").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("fine_tuned_model").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("organization_id").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("status").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("hyperparameters").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("training_file").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("validation_file").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("result_files")[0].ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("trained_tokens").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("error").ToString());
Console.WriteLine(element.GetProperty("has_more").ToString());
]]></code>
This sample shows how to call GetPaginatedFineTuningJobs with all parameters and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = client.GetPaginatedFineTuningJobs("<after>", 1234L, null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("created_at").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("finished_at").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("model").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("fine_tuned_model").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("organization_id").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("status").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("hyperparameters").GetProperty("n_epochs").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("training_file").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("validation_file").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("result_files")[0].ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("trained_tokens").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("error").GetProperty("param").ToString());
Console.WriteLine(element.GetProperty("has_more").ToString());
]]></code></example>
    </member>
    <member name="RetrieveFineTuningJobAsync(string,CancellationToken)">
      <example>
This sample shows how to call RetrieveFineTuningJobAsync.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<FineTuningJob> result = await client.RetrieveFineTuningJobAsync("<fine_tuning_job_id>");
]]></code>
This sample shows how to call RetrieveFineTuningJobAsync with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<FineTuningJob> result = await client.RetrieveFineTuningJobAsync("<fine_tuning_job_id>");
]]></code></example>
    </member>
    <member name="RetrieveFineTuningJob(string,CancellationToken)">
      <example>
This sample shows how to call RetrieveFineTuningJob.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<FineTuningJob> result = client.RetrieveFineTuningJob("<fine_tuning_job_id>");
]]></code>
This sample shows how to call RetrieveFineTuningJob with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<FineTuningJob> result = client.RetrieveFineTuningJob("<fine_tuning_job_id>");
]]></code></example>
    </member>
    <member name="RetrieveFineTuningJobAsync(string,RequestOptions)">
      <example>
This sample shows how to call RetrieveFineTuningJobAsync and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = await client.RetrieveFineTuningJobAsync("<fine_tuning_job_id>", null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("created_at").ToString());
Console.WriteLine(element.GetProperty("finished_at").ToString());
Console.WriteLine(element.GetProperty("model").ToString());
Console.WriteLine(element.GetProperty("fine_tuned_model").ToString());
Console.WriteLine(element.GetProperty("organization_id").ToString());
Console.WriteLine(element.GetProperty("status").ToString());
Console.WriteLine(element.GetProperty("hyperparameters").ToString());
Console.WriteLine(element.GetProperty("training_file").ToString());
Console.WriteLine(element.GetProperty("validation_file").ToString());
Console.WriteLine(element.GetProperty("result_files")[0].ToString());
Console.WriteLine(element.GetProperty("trained_tokens").ToString());
Console.WriteLine(element.GetProperty("error").ToString());
]]></code>
This sample shows how to call RetrieveFineTuningJobAsync with all parameters and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = await client.RetrieveFineTuningJobAsync("<fine_tuning_job_id>", null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("created_at").ToString());
Console.WriteLine(element.GetProperty("finished_at").ToString());
Console.WriteLine(element.GetProperty("model").ToString());
Console.WriteLine(element.GetProperty("fine_tuned_model").ToString());
Console.WriteLine(element.GetProperty("organization_id").ToString());
Console.WriteLine(element.GetProperty("status").ToString());
Console.WriteLine(element.GetProperty("hyperparameters").GetProperty("n_epochs").ToString());
Console.WriteLine(element.GetProperty("training_file").ToString());
Console.WriteLine(element.GetProperty("validation_file").ToString());
Console.WriteLine(element.GetProperty("result_files")[0].ToString());
Console.WriteLine(element.GetProperty("trained_tokens").ToString());
Console.WriteLine(element.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(element.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(element.GetProperty("error").GetProperty("param").ToString());
]]></code></example>
    </member>
    <member name="RetrieveFineTuningJob(string,RequestOptions)">
      <example>
This sample shows how to call RetrieveFineTuningJob and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = client.RetrieveFineTuningJob("<fine_tuning_job_id>", null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("created_at").ToString());
Console.WriteLine(element.GetProperty("finished_at").ToString());
Console.WriteLine(element.GetProperty("model").ToString());
Console.WriteLine(element.GetProperty("fine_tuned_model").ToString());
Console.WriteLine(element.GetProperty("organization_id").ToString());
Console.WriteLine(element.GetProperty("status").ToString());
Console.WriteLine(element.GetProperty("hyperparameters").ToString());
Console.WriteLine(element.GetProperty("training_file").ToString());
Console.WriteLine(element.GetProperty("validation_file").ToString());
Console.WriteLine(element.GetProperty("result_files")[0].ToString());
Console.WriteLine(element.GetProperty("trained_tokens").ToString());
Console.WriteLine(element.GetProperty("error").ToString());
]]></code>
This sample shows how to call RetrieveFineTuningJob with all parameters and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = client.RetrieveFineTuningJob("<fine_tuning_job_id>", null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("created_at").ToString());
Console.WriteLine(element.GetProperty("finished_at").ToString());
Console.WriteLine(element.GetProperty("model").ToString());
Console.WriteLine(element.GetProperty("fine_tuned_model").ToString());
Console.WriteLine(element.GetProperty("organization_id").ToString());
Console.WriteLine(element.GetProperty("status").ToString());
Console.WriteLine(element.GetProperty("hyperparameters").GetProperty("n_epochs").ToString());
Console.WriteLine(element.GetProperty("training_file").ToString());
Console.WriteLine(element.GetProperty("validation_file").ToString());
Console.WriteLine(element.GetProperty("result_files")[0].ToString());
Console.WriteLine(element.GetProperty("trained_tokens").ToString());
Console.WriteLine(element.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(element.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(element.GetProperty("error").GetProperty("param").ToString());
]]></code></example>
    </member>
    <member name="GetFineTuningEventsAsync(string,string,int?,CancellationToken)">
      <example>
This sample shows how to call GetFineTuningEventsAsync.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<ListFineTuningJobEventsResponse> result = await client.GetFineTuningEventsAsync("<fine_tuning_job_id>");
]]></code>
This sample shows how to call GetFineTuningEventsAsync with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<ListFineTuningJobEventsResponse> result = await client.GetFineTuningEventsAsync("<fine_tuning_job_id>", after: "<after>", limit: 1234);
]]></code></example>
    </member>
    <member name="GetFineTuningEvents(string,string,int?,CancellationToken)">
      <example>
This sample shows how to call GetFineTuningEvents.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<ListFineTuningJobEventsResponse> result = client.GetFineTuningEvents("<fine_tuning_job_id>");
]]></code>
This sample shows how to call GetFineTuningEvents with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<ListFineTuningJobEventsResponse> result = client.GetFineTuningEvents("<fine_tuning_job_id>", after: "<after>", limit: 1234);
]]></code></example>
    </member>
    <member name="GetFineTuningEventsAsync(string,string,int?,RequestOptions)">
      <example>
This sample shows how to call GetFineTuningEventsAsync and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = await client.GetFineTuningEventsAsync("<fine_tuning_job_id>", null, null, null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("created_at").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("level").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("message").ToString());
]]></code>
This sample shows how to call GetFineTuningEventsAsync with all parameters and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = await client.GetFineTuningEventsAsync("<fine_tuning_job_id>", "<after>", 1234, null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("created_at").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("level").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("message").ToString());
]]></code></example>
    </member>
    <member name="GetFineTuningEvents(string,string,int?,RequestOptions)">
      <example>
This sample shows how to call GetFineTuningEvents and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = client.GetFineTuningEvents("<fine_tuning_job_id>", null, null, null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("created_at").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("level").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("message").ToString());
]]></code>
This sample shows how to call GetFineTuningEvents with all parameters and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = client.GetFineTuningEvents("<fine_tuning_job_id>", "<after>", 1234, null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("created_at").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("level").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("message").ToString());
]]></code></example>
    </member>
    <member name="CancelFineTuningJobAsync(string,CancellationToken)">
      <example>
This sample shows how to call CancelFineTuningJobAsync.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<FineTuningJob> result = await client.CancelFineTuningJobAsync("<fine_tuning_job_id>");
]]></code>
This sample shows how to call CancelFineTuningJobAsync with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<FineTuningJob> result = await client.CancelFineTuningJobAsync("<fine_tuning_job_id>");
]]></code></example>
    </member>
    <member name="CancelFineTuningJob(string,CancellationToken)">
      <example>
This sample shows how to call CancelFineTuningJob.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<FineTuningJob> result = client.CancelFineTuningJob("<fine_tuning_job_id>");
]]></code>
This sample shows how to call CancelFineTuningJob with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<FineTuningJob> result = client.CancelFineTuningJob("<fine_tuning_job_id>");
]]></code></example>
    </member>
    <member name="CancelFineTuningJobAsync(string,RequestOptions)">
      <example>
This sample shows how to call CancelFineTuningJobAsync and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = await client.CancelFineTuningJobAsync("<fine_tuning_job_id>", null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("created_at").ToString());
Console.WriteLine(element.GetProperty("finished_at").ToString());
Console.WriteLine(element.GetProperty("model").ToString());
Console.WriteLine(element.GetProperty("fine_tuned_model").ToString());
Console.WriteLine(element.GetProperty("organization_id").ToString());
Console.WriteLine(element.GetProperty("status").ToString());
Console.WriteLine(element.GetProperty("hyperparameters").ToString());
Console.WriteLine(element.GetProperty("training_file").ToString());
Console.WriteLine(element.GetProperty("validation_file").ToString());
Console.WriteLine(element.GetProperty("result_files")[0].ToString());
Console.WriteLine(element.GetProperty("trained_tokens").ToString());
Console.WriteLine(element.GetProperty("error").ToString());
]]></code>
This sample shows how to call CancelFineTuningJobAsync with all parameters and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = await client.CancelFineTuningJobAsync("<fine_tuning_job_id>", null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("created_at").ToString());
Console.WriteLine(element.GetProperty("finished_at").ToString());
Console.WriteLine(element.GetProperty("model").ToString());
Console.WriteLine(element.GetProperty("fine_tuned_model").ToString());
Console.WriteLine(element.GetProperty("organization_id").ToString());
Console.WriteLine(element.GetProperty("status").ToString());
Console.WriteLine(element.GetProperty("hyperparameters").GetProperty("n_epochs").ToString());
Console.WriteLine(element.GetProperty("training_file").ToString());
Console.WriteLine(element.GetProperty("validation_file").ToString());
Console.WriteLine(element.GetProperty("result_files")[0].ToString());
Console.WriteLine(element.GetProperty("trained_tokens").ToString());
Console.WriteLine(element.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(element.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(element.GetProperty("error").GetProperty("param").ToString());
]]></code></example>
    </member>
    <member name="CancelFineTuningJob(string,RequestOptions)">
      <example>
This sample shows how to call CancelFineTuningJob and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = client.CancelFineTuningJob("<fine_tuning_job_id>", null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("created_at").ToString());
Console.WriteLine(element.GetProperty("finished_at").ToString());
Console.WriteLine(element.GetProperty("model").ToString());
Console.WriteLine(element.GetProperty("fine_tuned_model").ToString());
Console.WriteLine(element.GetProperty("organization_id").ToString());
Console.WriteLine(element.GetProperty("status").ToString());
Console.WriteLine(element.GetProperty("hyperparameters").ToString());
Console.WriteLine(element.GetProperty("training_file").ToString());
Console.WriteLine(element.GetProperty("validation_file").ToString());
Console.WriteLine(element.GetProperty("result_files")[0].ToString());
Console.WriteLine(element.GetProperty("trained_tokens").ToString());
Console.WriteLine(element.GetProperty("error").ToString());
]]></code>
This sample shows how to call CancelFineTuningJob with all parameters and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = client.CancelFineTuningJob("<fine_tuning_job_id>", null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("created_at").ToString());
Console.WriteLine(element.GetProperty("finished_at").ToString());
Console.WriteLine(element.GetProperty("model").ToString());
Console.WriteLine(element.GetProperty("fine_tuned_model").ToString());
Console.WriteLine(element.GetProperty("organization_id").ToString());
Console.WriteLine(element.GetProperty("status").ToString());
Console.WriteLine(element.GetProperty("hyperparameters").GetProperty("n_epochs").ToString());
Console.WriteLine(element.GetProperty("training_file").ToString());
Console.WriteLine(element.GetProperty("validation_file").ToString());
Console.WriteLine(element.GetProperty("result_files")[0].ToString());
Console.WriteLine(element.GetProperty("trained_tokens").ToString());
Console.WriteLine(element.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(element.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(element.GetProperty("error").GetProperty("param").ToString());
]]></code></example>
    </member>
    <member name="CreateCompletionAsync(CreateCompletionRequestModel,BinaryData,string,double?,double?,long?,long?,BinaryData,double?,double?,IDictionary{string,long},string,bool?,long?,bool?,long?,CancellationToken)">
      <example>
This sample shows how to call CreateCompletionAsync.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<CreateCompletionResponse> result = await client.CreateCompletionAsync(new CreateCompletionRequestModel("<model>"), BinaryData.FromObjectAsJson("<prompt>"));
]]></code>
This sample shows how to call CreateCompletionAsync with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<CreateCompletionResponse> result = await client.CreateCompletionAsync(new CreateCompletionRequestModel("<model>"), BinaryData.FromObjectAsJson("<prompt>"), suffix: "<suffix>", temperature: 123.45, topP: 123.45, n: 1234L, maxTokens: 1234L, stop: BinaryData.FromObjectAsJson("<stop>"), presencePenalty: 123.45, frequencyPenalty: 123.45, logitBias: new Dictionary<string, long>
{
    ["key"] = 1234L
}, user: "<user>", stream: true, logprobs: 1234L, echo: true, bestOf: 1234L);
]]></code></example>
    </member>
    <member name="CreateCompletion(CreateCompletionRequestModel,BinaryData,string,double?,double?,long?,long?,BinaryData,double?,double?,IDictionary{string,long},string,bool?,long?,bool?,long?,CancellationToken)">
      <example>
This sample shows how to call CreateCompletion.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<CreateCompletionResponse> result = client.CreateCompletion(new CreateCompletionRequestModel("<model>"), BinaryData.FromObjectAsJson("<prompt>"));
]]></code>
This sample shows how to call CreateCompletion with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<CreateCompletionResponse> result = client.CreateCompletion(new CreateCompletionRequestModel("<model>"), BinaryData.FromObjectAsJson("<prompt>"), suffix: "<suffix>", temperature: 123.45, topP: 123.45, n: 1234L, maxTokens: 1234L, stop: BinaryData.FromObjectAsJson("<stop>"), presencePenalty: 123.45, frequencyPenalty: 123.45, logitBias: new Dictionary<string, long>
{
    ["key"] = 1234L
}, user: "<user>", stream: true, logprobs: 1234L, echo: true, bestOf: 1234L);
]]></code></example>
    </member>
    <member name="CreateCompletionAsync(RequestBody,RequestOptions)">
      <example>
This sample shows how to call CreateCompletionAsync and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    model = "<model>",
    prompt = "<prompt>",
}).ToStream());
Result result = await client.CreateCompletionAsync(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("created").ToString());
Console.WriteLine(element.GetProperty("model").ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("index").ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("text").ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("logprobs").GetProperty("tokens")[0].ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("logprobs").GetProperty("token_logprobs")[0].ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("logprobs").GetProperty("top_logprobs")[0].GetProperty("<key>").ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("logprobs").GetProperty("text_offset")[0].ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("finish_reason").ToString());
]]></code>
This sample shows how to call CreateCompletionAsync with all request content and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    model = "<model>",
    prompt = "<prompt>",
    suffix = "<suffix>",
    temperature = 123.45,
    top_p = 123.45,
    n = 1234L,
    max_tokens = 1234L,
    stop = "<stop>",
    presence_penalty = 123.45,
    frequency_penalty = 123.45,
    logit_bias = new
    {
        key = 1234L,
    },
    user = "<user>",
    stream = true,
    logprobs = 1234L,
    echo = true,
    best_of = 1234L,
}).ToStream());
Result result = await client.CreateCompletionAsync(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("created").ToString());
Console.WriteLine(element.GetProperty("model").ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("index").ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("text").ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("logprobs").GetProperty("tokens")[0].ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("logprobs").GetProperty("token_logprobs")[0].ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("logprobs").GetProperty("top_logprobs")[0].GetProperty("<key>").ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("logprobs").GetProperty("text_offset")[0].ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("finish_reason").ToString());
Console.WriteLine(element.GetProperty("usage").GetProperty("prompt_tokens").ToString());
Console.WriteLine(element.GetProperty("usage").GetProperty("completion_tokens").ToString());
Console.WriteLine(element.GetProperty("usage").GetProperty("total_tokens").ToString());
]]></code></example>
    </member>
    <member name="CreateCompletion(RequestBody,RequestOptions)">
      <example>
This sample shows how to call CreateCompletion and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    model = "<model>",
    prompt = "<prompt>",
}).ToStream());
Result result = client.CreateCompletion(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("created").ToString());
Console.WriteLine(element.GetProperty("model").ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("index").ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("text").ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("logprobs").GetProperty("tokens")[0].ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("logprobs").GetProperty("token_logprobs")[0].ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("logprobs").GetProperty("top_logprobs")[0].GetProperty("<key>").ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("logprobs").GetProperty("text_offset")[0].ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("finish_reason").ToString());
]]></code>
This sample shows how to call CreateCompletion with all request content and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    model = "<model>",
    prompt = "<prompt>",
    suffix = "<suffix>",
    temperature = 123.45,
    top_p = 123.45,
    n = 1234L,
    max_tokens = 1234L,
    stop = "<stop>",
    presence_penalty = 123.45,
    frequency_penalty = 123.45,
    logit_bias = new
    {
        key = 1234L,
    },
    user = "<user>",
    stream = true,
    logprobs = 1234L,
    echo = true,
    best_of = 1234L,
}).ToStream());
Result result = client.CreateCompletion(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("created").ToString());
Console.WriteLine(element.GetProperty("model").ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("index").ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("text").ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("logprobs").GetProperty("tokens")[0].ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("logprobs").GetProperty("token_logprobs")[0].ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("logprobs").GetProperty("top_logprobs")[0].GetProperty("<key>").ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("logprobs").GetProperty("text_offset")[0].ToString());
Console.WriteLine(element.GetProperty("choices")[0].GetProperty("finish_reason").ToString());
Console.WriteLine(element.GetProperty("usage").GetProperty("prompt_tokens").ToString());
Console.WriteLine(element.GetProperty("usage").GetProperty("completion_tokens").ToString());
Console.WriteLine(element.GetProperty("usage").GetProperty("total_tokens").ToString());
]]></code></example>
    </member>
    <member name="CreateEmbeddingAsync(CreateEmbeddingRequest,CancellationToken)">
      <example>
This sample shows how to call CreateEmbeddingAsync.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

CreateEmbeddingRequest embedding = new CreateEmbeddingRequest(new CreateEmbeddingRequestModel("<model>"), BinaryData.FromObjectAsJson("<input>"));
Result<CreateEmbeddingResponse> result = await client.CreateEmbeddingAsync(embedding);
]]></code>
This sample shows how to call CreateEmbeddingAsync with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

CreateEmbeddingRequest embedding = new CreateEmbeddingRequest(new CreateEmbeddingRequestModel("<model>"), BinaryData.FromObjectAsJson("<input>"))
{
    User = "<user>",
};
Result<CreateEmbeddingResponse> result = await client.CreateEmbeddingAsync(embedding);
]]></code></example>
    </member>
    <member name="CreateEmbedding(CreateEmbeddingRequest,CancellationToken)">
      <example>
This sample shows how to call CreateEmbedding.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

CreateEmbeddingRequest embedding = new CreateEmbeddingRequest(new CreateEmbeddingRequestModel("<model>"), BinaryData.FromObjectAsJson("<input>"));
Result<CreateEmbeddingResponse> result = client.CreateEmbedding(embedding);
]]></code>
This sample shows how to call CreateEmbedding with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

CreateEmbeddingRequest embedding = new CreateEmbeddingRequest(new CreateEmbeddingRequestModel("<model>"), BinaryData.FromObjectAsJson("<input>"))
{
    User = "<user>",
};
Result<CreateEmbeddingResponse> result = client.CreateEmbedding(embedding);
]]></code></example>
    </member>
    <member name="CreateEmbeddingAsync(RequestBody,RequestOptions)">
      <example>
This sample shows how to call CreateEmbeddingAsync and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    model = "<model>",
    input = "<input>",
}).ToStream());
Result result = await client.CreateEmbeddingAsync(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("model").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("index").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("embedding")[0].ToString());
Console.WriteLine(element.GetProperty("usage").GetProperty("prompt_tokens").ToString());
Console.WriteLine(element.GetProperty("usage").GetProperty("total_tokens").ToString());
]]></code>
This sample shows how to call CreateEmbeddingAsync with all request content and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    model = "<model>",
    input = "<input>",
    user = "<user>",
}).ToStream());
Result result = await client.CreateEmbeddingAsync(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("model").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("index").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("embedding")[0].ToString());
Console.WriteLine(element.GetProperty("usage").GetProperty("prompt_tokens").ToString());
Console.WriteLine(element.GetProperty("usage").GetProperty("total_tokens").ToString());
]]></code></example>
    </member>
    <member name="CreateEmbedding(RequestBody,RequestOptions)">
      <example>
This sample shows how to call CreateEmbedding and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    model = "<model>",
    input = "<input>",
}).ToStream());
Result result = client.CreateEmbedding(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("model").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("index").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("embedding")[0].ToString());
Console.WriteLine(element.GetProperty("usage").GetProperty("prompt_tokens").ToString());
Console.WriteLine(element.GetProperty("usage").GetProperty("total_tokens").ToString());
]]></code>
This sample shows how to call CreateEmbedding with all request content and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    model = "<model>",
    input = "<input>",
    user = "<user>",
}).ToStream());
Result result = client.CreateEmbedding(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("model").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("index").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("embedding")[0].ToString());
Console.WriteLine(element.GetProperty("usage").GetProperty("prompt_tokens").ToString());
Console.WriteLine(element.GetProperty("usage").GetProperty("total_tokens").ToString());
]]></code></example>
    </member>
    <member name="GetFilesAsync(CancellationToken)">
      <example>
This sample shows how to call GetFilesAsync.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<ListFilesResponse> result = await client.GetFilesAsync();
]]></code>
This sample shows how to call GetFilesAsync with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<ListFilesResponse> result = await client.GetFilesAsync();
]]></code></example>
    </member>
    <member name="GetFiles(CancellationToken)">
      <example>
This sample shows how to call GetFiles.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<ListFilesResponse> result = client.GetFiles();
]]></code>
This sample shows how to call GetFiles with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<ListFilesResponse> result = client.GetFiles();
]]></code></example>
    </member>
    <member name="GetFilesAsync(RequestOptions)">
      <example>
This sample shows how to call GetFilesAsync and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = await client.GetFilesAsync(null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("bytes").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("createdAt").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("filename").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("purpose").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("status").ToString());
]]></code>
This sample shows how to call GetFilesAsync with all parameters and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = await client.GetFilesAsync(null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("bytes").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("createdAt").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("filename").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("purpose").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("status").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("status_details").ToString());
]]></code></example>
    </member>
    <member name="GetFiles(RequestOptions)">
      <example>
This sample shows how to call GetFiles and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = client.GetFiles(null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("bytes").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("createdAt").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("filename").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("purpose").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("status").ToString());
]]></code>
This sample shows how to call GetFiles with all parameters and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = client.GetFiles(null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("bytes").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("createdAt").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("filename").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("purpose").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("status").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("status_details").ToString());
]]></code></example>
    </member>
    <member name="CreateFileAsync(CreateFileRequest,CancellationToken)">
      <example>
This sample shows how to call CreateFileAsync.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

CreateFileRequest file = new CreateFileRequest(BinaryData.FromObjectAsJson(new object()), "<purpose>");
Result<OpenAIFile> result = await client.CreateFileAsync(file);
]]></code>
This sample shows how to call CreateFileAsync with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

CreateFileRequest file = new CreateFileRequest(BinaryData.FromObjectAsJson(new object()), "<purpose>");
Result<OpenAIFile> result = await client.CreateFileAsync(file);
]]></code></example>
    </member>
    <member name="CreateFile(CreateFileRequest,CancellationToken)">
      <example>
This sample shows how to call CreateFile.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

CreateFileRequest file = new CreateFileRequest(BinaryData.FromObjectAsJson(new object()), "<purpose>");
Result<OpenAIFile> result = client.CreateFile(file);
]]></code>
This sample shows how to call CreateFile with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

CreateFileRequest file = new CreateFileRequest(BinaryData.FromObjectAsJson(new object()), "<purpose>");
Result<OpenAIFile> result = client.CreateFile(file);
]]></code></example>
    </member>
    <member name="CreateFileAsync(RequestBody,RequestOptions)">
      <example>
This sample shows how to call CreateFileAsync and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    file = new object(),
    purpose = "<purpose>",
}).ToStream());
Result result = await client.CreateFileAsync(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("bytes").ToString());
Console.WriteLine(element.GetProperty("createdAt").ToString());
Console.WriteLine(element.GetProperty("filename").ToString());
Console.WriteLine(element.GetProperty("purpose").ToString());
Console.WriteLine(element.GetProperty("status").ToString());
]]></code>
This sample shows how to call CreateFileAsync with all request content and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    file = new object(),
    purpose = "<purpose>",
}).ToStream());
Result result = await client.CreateFileAsync(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("bytes").ToString());
Console.WriteLine(element.GetProperty("createdAt").ToString());
Console.WriteLine(element.GetProperty("filename").ToString());
Console.WriteLine(element.GetProperty("purpose").ToString());
Console.WriteLine(element.GetProperty("status").ToString());
Console.WriteLine(element.GetProperty("status_details").ToString());
]]></code></example>
    </member>
    <member name="CreateFile(RequestBody,RequestOptions)">
      <example>
This sample shows how to call CreateFile and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    file = new object(),
    purpose = "<purpose>",
}).ToStream());
Result result = client.CreateFile(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("bytes").ToString());
Console.WriteLine(element.GetProperty("createdAt").ToString());
Console.WriteLine(element.GetProperty("filename").ToString());
Console.WriteLine(element.GetProperty("purpose").ToString());
Console.WriteLine(element.GetProperty("status").ToString());
]]></code>
This sample shows how to call CreateFile with all request content and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    file = new object(),
    purpose = "<purpose>",
}).ToStream());
Result result = client.CreateFile(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("bytes").ToString());
Console.WriteLine(element.GetProperty("createdAt").ToString());
Console.WriteLine(element.GetProperty("filename").ToString());
Console.WriteLine(element.GetProperty("purpose").ToString());
Console.WriteLine(element.GetProperty("status").ToString());
Console.WriteLine(element.GetProperty("status_details").ToString());
]]></code></example>
    </member>
    <member name="RetrieveFileAsync(string,CancellationToken)">
      <example>
This sample shows how to call RetrieveFileAsync.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<OpenAIFile> result = await client.RetrieveFileAsync("<file_id>");
]]></code>
This sample shows how to call RetrieveFileAsync with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<OpenAIFile> result = await client.RetrieveFileAsync("<file_id>");
]]></code></example>
    </member>
    <member name="RetrieveFile(string,CancellationToken)">
      <example>
This sample shows how to call RetrieveFile.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<OpenAIFile> result = client.RetrieveFile("<file_id>");
]]></code>
This sample shows how to call RetrieveFile with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<OpenAIFile> result = client.RetrieveFile("<file_id>");
]]></code></example>
    </member>
    <member name="RetrieveFileAsync(string,RequestOptions)">
      <example>
This sample shows how to call RetrieveFileAsync and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = await client.RetrieveFileAsync("<file_id>", null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("bytes").ToString());
Console.WriteLine(element.GetProperty("createdAt").ToString());
Console.WriteLine(element.GetProperty("filename").ToString());
Console.WriteLine(element.GetProperty("purpose").ToString());
Console.WriteLine(element.GetProperty("status").ToString());
]]></code>
This sample shows how to call RetrieveFileAsync with all parameters and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = await client.RetrieveFileAsync("<file_id>", null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("bytes").ToString());
Console.WriteLine(element.GetProperty("createdAt").ToString());
Console.WriteLine(element.GetProperty("filename").ToString());
Console.WriteLine(element.GetProperty("purpose").ToString());
Console.WriteLine(element.GetProperty("status").ToString());
Console.WriteLine(element.GetProperty("status_details").ToString());
]]></code></example>
    </member>
    <member name="RetrieveFile(string,RequestOptions)">
      <example>
This sample shows how to call RetrieveFile and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = client.RetrieveFile("<file_id>", null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("bytes").ToString());
Console.WriteLine(element.GetProperty("createdAt").ToString());
Console.WriteLine(element.GetProperty("filename").ToString());
Console.WriteLine(element.GetProperty("purpose").ToString());
Console.WriteLine(element.GetProperty("status").ToString());
]]></code>
This sample shows how to call RetrieveFile with all parameters and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = client.RetrieveFile("<file_id>", null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("bytes").ToString());
Console.WriteLine(element.GetProperty("createdAt").ToString());
Console.WriteLine(element.GetProperty("filename").ToString());
Console.WriteLine(element.GetProperty("purpose").ToString());
Console.WriteLine(element.GetProperty("status").ToString());
Console.WriteLine(element.GetProperty("status_details").ToString());
]]></code></example>
    </member>
    <member name="DeleteFileAsync(string,CancellationToken)">
      <example>
This sample shows how to call DeleteFileAsync.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<DeleteFileResponse> result = await client.DeleteFileAsync("<file_id>");
]]></code>
This sample shows how to call DeleteFileAsync with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<DeleteFileResponse> result = await client.DeleteFileAsync("<file_id>");
]]></code></example>
    </member>
    <member name="DeleteFile(string,CancellationToken)">
      <example>
This sample shows how to call DeleteFile.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<DeleteFileResponse> result = client.DeleteFile("<file_id>");
]]></code>
This sample shows how to call DeleteFile with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<DeleteFileResponse> result = client.DeleteFile("<file_id>");
]]></code></example>
    </member>
    <member name="DeleteFileAsync(string,RequestOptions)">
      <example>
This sample shows how to call DeleteFileAsync and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = await client.DeleteFileAsync("<file_id>", null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("deleted").ToString());
]]></code>
This sample shows how to call DeleteFileAsync with all parameters and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = await client.DeleteFileAsync("<file_id>", null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("deleted").ToString());
]]></code></example>
    </member>
    <member name="DeleteFile(string,RequestOptions)">
      <example>
This sample shows how to call DeleteFile and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = client.DeleteFile("<file_id>", null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("deleted").ToString());
]]></code>
This sample shows how to call DeleteFile with all parameters and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = client.DeleteFile("<file_id>", null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("deleted").ToString());
]]></code></example>
    </member>
    <member name="DownloadFileAsync(string,CancellationToken)">
      <example>
This sample shows how to call DownloadFileAsync.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<string> result = await client.DownloadFileAsync("<file_id>");
]]></code>
This sample shows how to call DownloadFileAsync with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<string> result = await client.DownloadFileAsync("<file_id>");
]]></code></example>
    </member>
    <member name="DownloadFile(string,CancellationToken)">
      <example>
This sample shows how to call DownloadFile.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<string> result = client.DownloadFile("<file_id>");
]]></code>
This sample shows how to call DownloadFile with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<string> result = client.DownloadFile("<file_id>");
]]></code></example>
    </member>
    <member name="DownloadFileAsync(string,RequestOptions)">
      <example>
This sample shows how to call DownloadFileAsync and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = await client.DownloadFileAsync("<file_id>", null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.ToString());
]]></code>
This sample shows how to call DownloadFileAsync with all parameters and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = await client.DownloadFileAsync("<file_id>", null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.ToString());
]]></code></example>
    </member>
    <member name="DownloadFile(string,RequestOptions)">
      <example>
This sample shows how to call DownloadFile and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = client.DownloadFile("<file_id>", null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.ToString());
]]></code>
This sample shows how to call DownloadFile with all parameters and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = client.DownloadFile("<file_id>", null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.ToString());
]]></code></example>
    </member>
    <member name="GetModelsAsync(CancellationToken)">
      <example>
This sample shows how to call GetModelsAsync.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<ListModelsResponse> result = await client.GetModelsAsync();
]]></code>
This sample shows how to call GetModelsAsync with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<ListModelsResponse> result = await client.GetModelsAsync();
]]></code></example>
    </member>
    <member name="GetModels(CancellationToken)">
      <example>
This sample shows how to call GetModels.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<ListModelsResponse> result = client.GetModels();
]]></code>
This sample shows how to call GetModels with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<ListModelsResponse> result = client.GetModels();
]]></code></example>
    </member>
    <member name="GetModelsAsync(RequestOptions)">
      <example>
This sample shows how to call GetModelsAsync and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = await client.GetModelsAsync(null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("created").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("owned_by").ToString());
]]></code>
This sample shows how to call GetModelsAsync with all parameters and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = await client.GetModelsAsync(null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("created").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("owned_by").ToString());
]]></code></example>
    </member>
    <member name="GetModels(RequestOptions)">
      <example>
This sample shows how to call GetModels and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = client.GetModels(null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("created").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("owned_by").ToString());
]]></code>
This sample shows how to call GetModels with all parameters and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = client.GetModels(null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("created").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("owned_by").ToString());
]]></code></example>
    </member>
    <member name="RetrieveAsync(string,CancellationToken)">
      <example>
This sample shows how to call RetrieveAsync.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<Model> result = await client.RetrieveAsync("<model>");
]]></code>
This sample shows how to call RetrieveAsync with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<Model> result = await client.RetrieveAsync("<model>");
]]></code></example>
    </member>
    <member name="Retrieve(string,CancellationToken)">
      <example>
This sample shows how to call Retrieve.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<Model> result = client.Retrieve("<model>");
]]></code>
This sample shows how to call Retrieve with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<Model> result = client.Retrieve("<model>");
]]></code></example>
    </member>
    <member name="RetrieveAsync(string,RequestOptions)">
      <example>
This sample shows how to call RetrieveAsync and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = await client.RetrieveAsync("<model>", null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("created").ToString());
Console.WriteLine(element.GetProperty("owned_by").ToString());
]]></code>
This sample shows how to call RetrieveAsync with all parameters and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = await client.RetrieveAsync("<model>", null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("created").ToString());
Console.WriteLine(element.GetProperty("owned_by").ToString());
]]></code></example>
    </member>
    <member name="Retrieve(string,RequestOptions)">
      <example>
This sample shows how to call Retrieve and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = client.Retrieve("<model>", null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("created").ToString());
Console.WriteLine(element.GetProperty("owned_by").ToString());
]]></code>
This sample shows how to call Retrieve with all parameters and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = client.Retrieve("<model>", null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("created").ToString());
Console.WriteLine(element.GetProperty("owned_by").ToString());
]]></code></example>
    </member>
    <member name="DeleteAsync(string,CancellationToken)">
      <example>
This sample shows how to call DeleteAsync.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<DeleteModelResponse> result = await client.DeleteAsync("<model>");
]]></code>
This sample shows how to call DeleteAsync with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<DeleteModelResponse> result = await client.DeleteAsync("<model>");
]]></code></example>
    </member>
    <member name="Delete(string,CancellationToken)">
      <example>
This sample shows how to call Delete.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<DeleteModelResponse> result = client.Delete("<model>");
]]></code>
This sample shows how to call Delete with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result<DeleteModelResponse> result = client.Delete("<model>");
]]></code></example>
    </member>
    <member name="DeleteAsync(string,RequestOptions)">
      <example>
This sample shows how to call DeleteAsync and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = await client.DeleteAsync("<model>", null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("deleted").ToString());
]]></code>
This sample shows how to call DeleteAsync with all parameters and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = await client.DeleteAsync("<model>", null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("deleted").ToString());
]]></code></example>
    </member>
    <member name="Delete(string,RequestOptions)">
      <example>
This sample shows how to call Delete and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = client.Delete("<model>", null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("deleted").ToString());
]]></code>
This sample shows how to call Delete with all parameters and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

Result result = client.Delete("<model>", null);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("object").ToString());
Console.WriteLine(element.GetProperty("deleted").ToString());
]]></code></example>
    </member>
    <member name="CreateImageAsync(CreateImageRequest,CancellationToken)">
      <example>
This sample shows how to call CreateImageAsync.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

CreateImageRequest image = new CreateImageRequest("<prompt>");
Result<ImagesResponse> result = await client.CreateImageAsync(image);
]]></code>
This sample shows how to call CreateImageAsync with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

CreateImageRequest image = new CreateImageRequest("<prompt>")
{
    N = 1234L,
    Size = CreateImageRequestSize._256x256,
    ResponseFormat = CreateImageRequestResponseFormat.Url,
    User = "<user>",
};
Result<ImagesResponse> result = await client.CreateImageAsync(image);
]]></code></example>
    </member>
    <member name="CreateImage(CreateImageRequest,CancellationToken)">
      <example>
This sample shows how to call CreateImage.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

CreateImageRequest image = new CreateImageRequest("<prompt>");
Result<ImagesResponse> result = client.CreateImage(image);
]]></code>
This sample shows how to call CreateImage with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

CreateImageRequest image = new CreateImageRequest("<prompt>")
{
    N = 1234L,
    Size = CreateImageRequestSize._256x256,
    ResponseFormat = CreateImageRequestResponseFormat.Url,
    User = "<user>",
};
Result<ImagesResponse> result = client.CreateImage(image);
]]></code></example>
    </member>
    <member name="CreateImageAsync(RequestBody,RequestOptions)">
      <example>
This sample shows how to call CreateImageAsync and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    prompt = "<prompt>",
}).ToStream());
Result result = await client.CreateImageAsync(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("created").ToString());
Console.WriteLine(element.GetProperty("data")[0].ToString());
]]></code>
This sample shows how to call CreateImageAsync with all request content and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    prompt = "<prompt>",
    n = 1234L,
    size = "256x256",
    response_format = "url",
    user = "<user>",
}).ToStream());
Result result = await client.CreateImageAsync(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("created").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("url").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("b64_json").ToString());
]]></code></example>
    </member>
    <member name="CreateImage(RequestBody,RequestOptions)">
      <example>
This sample shows how to call CreateImage and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    prompt = "<prompt>",
}).ToStream());
Result result = client.CreateImage(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("created").ToString());
Console.WriteLine(element.GetProperty("data")[0].ToString());
]]></code>
This sample shows how to call CreateImage with all request content and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    prompt = "<prompt>",
    n = 1234L,
    size = "256x256",
    response_format = "url",
    user = "<user>",
}).ToStream());
Result result = client.CreateImage(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("created").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("url").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("b64_json").ToString());
]]></code></example>
    </member>
    <member name="CreateImageEditAsync(CreateImageEditRequest,CancellationToken)">
      <example>
This sample shows how to call CreateImageEditAsync.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

CreateImageEditRequest image = new CreateImageEditRequest("<prompt>", BinaryData.FromObjectAsJson(new object()));
Result<ImagesResponse> result = await client.CreateImageEditAsync(image);
]]></code>
This sample shows how to call CreateImageEditAsync with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

CreateImageEditRequest image = new CreateImageEditRequest("<prompt>", BinaryData.FromObjectAsJson(new object()))
{
    Mask = BinaryData.FromObjectAsJson(new object()),
    N = 1234L,
    Size = CreateImageEditRequestSize._256x256,
    ResponseFormat = CreateImageEditRequestResponseFormat.Url,
    User = "<user>",
};
Result<ImagesResponse> result = await client.CreateImageEditAsync(image);
]]></code></example>
    </member>
    <member name="CreateImageEdit(CreateImageEditRequest,CancellationToken)">
      <example>
This sample shows how to call CreateImageEdit.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

CreateImageEditRequest image = new CreateImageEditRequest("<prompt>", BinaryData.FromObjectAsJson(new object()));
Result<ImagesResponse> result = client.CreateImageEdit(image);
]]></code>
This sample shows how to call CreateImageEdit with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

CreateImageEditRequest image = new CreateImageEditRequest("<prompt>", BinaryData.FromObjectAsJson(new object()))
{
    Mask = BinaryData.FromObjectAsJson(new object()),
    N = 1234L,
    Size = CreateImageEditRequestSize._256x256,
    ResponseFormat = CreateImageEditRequestResponseFormat.Url,
    User = "<user>",
};
Result<ImagesResponse> result = client.CreateImageEdit(image);
]]></code></example>
    </member>
    <member name="CreateImageEditAsync(RequestBody,RequestOptions)">
      <example>
This sample shows how to call CreateImageEditAsync and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    prompt = "<prompt>",
    image = new object(),
}).ToStream());
Result result = await client.CreateImageEditAsync(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("created").ToString());
Console.WriteLine(element.GetProperty("data")[0].ToString());
]]></code>
This sample shows how to call CreateImageEditAsync with all request content and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    prompt = "<prompt>",
    image = new object(),
    mask = new object(),
    n = 1234L,
    size = "256x256",
    response_format = "url",
    user = "<user>",
}).ToStream());
Result result = await client.CreateImageEditAsync(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("created").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("url").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("b64_json").ToString());
]]></code></example>
    </member>
    <member name="CreateImageEdit(RequestBody,RequestOptions)">
      <example>
This sample shows how to call CreateImageEdit and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    prompt = "<prompt>",
    image = new object(),
}).ToStream());
Result result = client.CreateImageEdit(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("created").ToString());
Console.WriteLine(element.GetProperty("data")[0].ToString());
]]></code>
This sample shows how to call CreateImageEdit with all request content and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    prompt = "<prompt>",
    image = new object(),
    mask = new object(),
    n = 1234L,
    size = "256x256",
    response_format = "url",
    user = "<user>",
}).ToStream());
Result result = client.CreateImageEdit(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("created").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("url").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("b64_json").ToString());
]]></code></example>
    </member>
    <member name="CreateImageVariationAsync(CreateImageVariationRequest,CancellationToken)">
      <example>
This sample shows how to call CreateImageVariationAsync.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

CreateImageVariationRequest image = new CreateImageVariationRequest(BinaryData.FromObjectAsJson(new object()));
Result<ImagesResponse> result = await client.CreateImageVariationAsync(image);
]]></code>
This sample shows how to call CreateImageVariationAsync with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

CreateImageVariationRequest image = new CreateImageVariationRequest(BinaryData.FromObjectAsJson(new object()))
{
    N = 1234L,
    Size = CreateImageVariationRequestSize._256x256,
    ResponseFormat = CreateImageVariationRequestResponseFormat.Url,
    User = "<user>",
};
Result<ImagesResponse> result = await client.CreateImageVariationAsync(image);
]]></code></example>
    </member>
    <member name="CreateImageVariation(CreateImageVariationRequest,CancellationToken)">
      <example>
This sample shows how to call CreateImageVariation.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

CreateImageVariationRequest image = new CreateImageVariationRequest(BinaryData.FromObjectAsJson(new object()));
Result<ImagesResponse> result = client.CreateImageVariation(image);
]]></code>
This sample shows how to call CreateImageVariation with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

CreateImageVariationRequest image = new CreateImageVariationRequest(BinaryData.FromObjectAsJson(new object()))
{
    N = 1234L,
    Size = CreateImageVariationRequestSize._256x256,
    ResponseFormat = CreateImageVariationRequestResponseFormat.Url,
    User = "<user>",
};
Result<ImagesResponse> result = client.CreateImageVariation(image);
]]></code></example>
    </member>
    <member name="CreateImageVariationAsync(RequestBody,RequestOptions)">
      <example>
This sample shows how to call CreateImageVariationAsync and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    image = new object(),
}).ToStream());
Result result = await client.CreateImageVariationAsync(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("created").ToString());
Console.WriteLine(element.GetProperty("data")[0].ToString());
]]></code>
This sample shows how to call CreateImageVariationAsync with all request content and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    image = new object(),
    n = 1234L,
    size = "256x256",
    response_format = "url",
    user = "<user>",
}).ToStream());
Result result = await client.CreateImageVariationAsync(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("created").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("url").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("b64_json").ToString());
]]></code></example>
    </member>
    <member name="CreateImageVariation(RequestBody,RequestOptions)">
      <example>
This sample shows how to call CreateImageVariation and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    image = new object(),
}).ToStream());
Result result = client.CreateImageVariation(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("created").ToString());
Console.WriteLine(element.GetProperty("data")[0].ToString());
]]></code>
This sample shows how to call CreateImageVariation with all request content and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    image = new object(),
    n = 1234L,
    size = "256x256",
    response_format = "url",
    user = "<user>",
}).ToStream());
Result result = client.CreateImageVariation(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("created").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("url").ToString());
Console.WriteLine(element.GetProperty("data")[0].GetProperty("b64_json").ToString());
]]></code></example>
    </member>
    <member name="CreateModerationAsync(CreateModerationRequest,CancellationToken)">
      <example>
This sample shows how to call CreateModerationAsync.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

CreateModerationRequest content = new CreateModerationRequest(BinaryData.FromObjectAsJson("<input>"));
Result<CreateModerationResponse> result = await client.CreateModerationAsync(content);
]]></code>
This sample shows how to call CreateModerationAsync with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

CreateModerationRequest content = new CreateModerationRequest(BinaryData.FromObjectAsJson("<input>"))
{
    Model = new CreateModerationRequestModel("<model>"),
};
Result<CreateModerationResponse> result = await client.CreateModerationAsync(content);
]]></code></example>
    </member>
    <member name="CreateModeration(CreateModerationRequest,CancellationToken)">
      <example>
This sample shows how to call CreateModeration.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

CreateModerationRequest content = new CreateModerationRequest(BinaryData.FromObjectAsJson("<input>"));
Result<CreateModerationResponse> result = client.CreateModeration(content);
]]></code>
This sample shows how to call CreateModeration with all parameters.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

CreateModerationRequest content = new CreateModerationRequest(BinaryData.FromObjectAsJson("<input>"))
{
    Model = new CreateModerationRequestModel("<model>"),
};
Result<CreateModerationResponse> result = client.CreateModeration(content);
]]></code></example>
    </member>
    <member name="CreateModerationAsync(RequestBody,RequestOptions)">
      <example>
This sample shows how to call CreateModerationAsync and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    input = "<input>",
}).ToStream());
Result result = await client.CreateModerationAsync(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("model").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("flagged").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("hate").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("hate/threatening").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("harassment").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("harassment/threatening").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("self-harm").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("self-harm/intent").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("self-harm/instructive").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("sexual").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("sexual/minors").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("violence").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("violence/graphic").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("hate").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("hate/threatening").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("harassment").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("harassment/threatening").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("self-harm").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("self-harm/intent").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("self-harm/instructive").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("sexual").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("sexual/minors").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("violence").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("violence/graphic").ToString());
]]></code>
This sample shows how to call CreateModerationAsync with all request content and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    input = "<input>",
    model = "<model>",
}).ToStream());
Result result = await client.CreateModerationAsync(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("model").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("flagged").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("hate").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("hate/threatening").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("harassment").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("harassment/threatening").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("self-harm").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("self-harm/intent").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("self-harm/instructive").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("sexual").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("sexual/minors").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("violence").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("violence/graphic").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("hate").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("hate/threatening").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("harassment").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("harassment/threatening").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("self-harm").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("self-harm/intent").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("self-harm/instructive").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("sexual").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("sexual/minors").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("violence").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("violence/graphic").ToString());
]]></code></example>
    </member>
    <member name="CreateModeration(RequestBody,RequestOptions)">
      <example>
This sample shows how to call CreateModeration and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    input = "<input>",
}).ToStream());
Result result = client.CreateModeration(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("model").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("flagged").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("hate").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("hate/threatening").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("harassment").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("harassment/threatening").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("self-harm").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("self-harm/intent").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("self-harm/instructive").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("sexual").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("sexual/minors").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("violence").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("violence/graphic").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("hate").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("hate/threatening").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("harassment").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("harassment/threatening").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("self-harm").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("self-harm/intent").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("self-harm/instructive").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("sexual").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("sexual/minors").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("violence").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("violence/graphic").ToString());
]]></code>
This sample shows how to call CreateModeration with all request content and parse the result.
<code><![CDATA[
KeyCredential credential = new KeyCredential("<key>");
OpenAIClient client = new OpenAIClient(credential);

RequestBody content = RequestBody.CreateFromStream(BinaryData.FromObjectAsJson(new
{
    input = "<input>",
    model = "<model>",
}).ToStream());
Result result = client.CreateModeration(content);

JsonElement element = JsonDocument.Parse(result.GetRawResponse().ContentStream).RootElement;
Console.WriteLine(element.GetProperty("id").ToString());
Console.WriteLine(element.GetProperty("model").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("flagged").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("hate").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("hate/threatening").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("harassment").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("harassment/threatening").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("self-harm").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("self-harm/intent").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("self-harm/instructive").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("sexual").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("sexual/minors").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("violence").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("categories").GetProperty("violence/graphic").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("hate").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("hate/threatening").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("harassment").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("harassment/threatening").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("self-harm").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("self-harm/intent").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("self-harm/instructive").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("sexual").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("sexual/minors").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("violence").ToString());
Console.WriteLine(element.GetProperty("results")[0].GetProperty("category_scores").GetProperty("violence/graphic").ToString());
]]></code></example>
    </member>
  </members>
</doc>