{
 "$id": "1",
 "Name": "OpenAI",
 "ApiVersions": [],
 "Enums": [
  {
   "$id": "2",
   "kind": "enum",
   "name": "CreateModerationRequestModel",
   "crossLanguageDefinitionId": "OpenAI.CreateModerationRequest.model.anonymous",
   "valueType": {
    "$id": "3",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "4",
     "kind": "enumvalue",
     "name": "text-moderation-latest",
     "value": "text-moderation-latest",
     "valueType": {
      "$id": "5",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "2"
     },
     "decorators": []
    },
    {
     "$id": "6",
     "kind": "enumvalue",
     "name": "text-moderation-stable",
     "value": "text-moderation-stable",
     "valueType": {
      "$id": "7",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "2"
     },
     "decorators": []
    }
   ],
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Json",
   "decorators": []
  },
  {
   "$id": "8",
   "kind": "enum",
   "name": "CreateImageRequestSize",
   "crossLanguageDefinitionId": "OpenAI.CreateImageRequest.size.anonymous",
   "valueType": {
    "$id": "9",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "10",
     "kind": "enumvalue",
     "name": "256x256",
     "value": "256x256",
     "valueType": {
      "$id": "11",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "8"
     },
     "decorators": []
    },
    {
     "$id": "12",
     "kind": "enumvalue",
     "name": "512x512",
     "value": "512x512",
     "valueType": {
      "$id": "13",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "8"
     },
     "decorators": []
    },
    {
     "$id": "14",
     "kind": "enumvalue",
     "name": "1024x1024",
     "value": "1024x1024",
     "valueType": {
      "$id": "15",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "8"
     },
     "decorators": []
    }
   ],
   "isFixed": true,
   "isFlags": false,
   "usage": "Input,Json",
   "decorators": []
  },
  {
   "$id": "16",
   "kind": "enum",
   "name": "CreateImageRequestResponseFormat",
   "crossLanguageDefinitionId": "OpenAI.CreateImageRequest.response_format.anonymous",
   "valueType": {
    "$id": "17",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "18",
     "kind": "enumvalue",
     "name": "url",
     "value": "url",
     "valueType": {
      "$id": "19",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "16"
     },
     "decorators": []
    },
    {
     "$id": "20",
     "kind": "enumvalue",
     "name": "b64_json",
     "value": "b64_json",
     "valueType": {
      "$id": "21",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "16"
     },
     "decorators": []
    }
   ],
   "isFixed": true,
   "isFlags": false,
   "usage": "Input,Json",
   "decorators": []
  },
  {
   "$id": "22",
   "kind": "enum",
   "name": "Model_object",
   "valueType": {
    "$id": "23",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "24",
     "kind": "enumvalue",
     "name": "model",
     "value": "model",
     "doc": "model",
     "valueType": {
      "$ref": "23"
     },
     "enumType": {
      "$ref": "22"
     }
    }
   ],
   "crossLanguageDefinitionId": "",
   "doc": "The Model_object",
   "isFixed": false,
   "isFlags": false,
   "usage": "Output,Json",
   "decorators": []
  },
  {
   "$id": "25",
   "kind": "enum",
   "name": "CreateFineTuneRequestModel",
   "crossLanguageDefinitionId": "OpenAI.CreateFineTuneRequest.model.anonymous",
   "valueType": {
    "$id": "26",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "27",
     "kind": "enumvalue",
     "name": "ada",
     "value": "ada",
     "valueType": {
      "$id": "28",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "25"
     },
     "decorators": []
    },
    {
     "$id": "29",
     "kind": "enumvalue",
     "name": "babbage",
     "value": "babbage",
     "valueType": {
      "$id": "30",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "25"
     },
     "decorators": []
    },
    {
     "$id": "31",
     "kind": "enumvalue",
     "name": "curie",
     "value": "curie",
     "valueType": {
      "$id": "32",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "25"
     },
     "decorators": []
    },
    {
     "$id": "33",
     "kind": "enumvalue",
     "name": "davinci",
     "value": "davinci",
     "valueType": {
      "$id": "34",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "25"
     },
     "decorators": []
    }
   ],
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Json",
   "decorators": []
  },
  {
   "$id": "35",
   "kind": "enum",
   "name": "FineTune_object",
   "valueType": {
    "$id": "36",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "37",
     "kind": "enumvalue",
     "name": "fine-tune",
     "value": "fine-tune",
     "doc": "fine-tune",
     "valueType": {
      "$ref": "36"
     },
     "enumType": {
      "$ref": "35"
     }
    }
   ],
   "crossLanguageDefinitionId": "",
   "doc": "The FineTune_object",
   "isFixed": false,
   "isFlags": false,
   "usage": "Output,Json",
   "decorators": []
  },
  {
   "$id": "38",
   "kind": "enum",
   "name": "FineTuneStatus",
   "crossLanguageDefinitionId": "OpenAI.FineTune.status.anonymous",
   "valueType": {
    "$id": "39",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "40",
     "kind": "enumvalue",
     "name": "created",
     "value": "created",
     "valueType": {
      "$id": "41",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "38"
     },
     "decorators": []
    },
    {
     "$id": "42",
     "kind": "enumvalue",
     "name": "running",
     "value": "running",
     "valueType": {
      "$id": "43",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "38"
     },
     "decorators": []
    },
    {
     "$id": "44",
     "kind": "enumvalue",
     "name": "succeeded",
     "value": "succeeded",
     "valueType": {
      "$id": "45",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "38"
     },
     "decorators": []
    },
    {
     "$id": "46",
     "kind": "enumvalue",
     "name": "failed",
     "value": "failed",
     "valueType": {
      "$id": "47",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "38"
     },
     "decorators": []
    },
    {
     "$id": "48",
     "kind": "enumvalue",
     "name": "cancelled",
     "value": "cancelled",
     "valueType": {
      "$id": "49",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "38"
     },
     "decorators": []
    }
   ],
   "isFixed": true,
   "isFlags": false,
   "usage": "Output,Json",
   "decorators": []
  },
  {
   "$id": "50",
   "kind": "enum",
   "name": "OpenAIFile_object",
   "valueType": {
    "$id": "51",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "52",
     "kind": "enumvalue",
     "name": "file",
     "value": "file",
     "doc": "file",
     "valueType": {
      "$ref": "51"
     },
     "enumType": {
      "$ref": "50"
     }
    }
   ],
   "crossLanguageDefinitionId": "",
   "doc": "The OpenAIFile_object",
   "isFixed": false,
   "isFlags": false,
   "usage": "Output,Json",
   "decorators": []
  },
  {
   "$id": "53",
   "kind": "enum",
   "name": "OpenAIFileStatus",
   "crossLanguageDefinitionId": "OpenAI.OpenAIFile.status.anonymous",
   "valueType": {
    "$id": "54",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "55",
     "kind": "enumvalue",
     "name": "uploaded",
     "value": "uploaded",
     "valueType": {
      "$id": "56",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "53"
     },
     "decorators": []
    },
    {
     "$id": "57",
     "kind": "enumvalue",
     "name": "processed",
     "value": "processed",
     "valueType": {
      "$id": "58",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "53"
     },
     "decorators": []
    },
    {
     "$id": "59",
     "kind": "enumvalue",
     "name": "pending",
     "value": "pending",
     "valueType": {
      "$id": "60",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "53"
     },
     "decorators": []
    },
    {
     "$id": "61",
     "kind": "enumvalue",
     "name": "error",
     "value": "error",
     "valueType": {
      "$id": "62",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "53"
     },
     "decorators": []
    },
    {
     "$id": "63",
     "kind": "enumvalue",
     "name": "deleting",
     "value": "deleting",
     "valueType": {
      "$id": "64",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "53"
     },
     "decorators": []
    },
    {
     "$id": "65",
     "kind": "enumvalue",
     "name": "deleted",
     "value": "deleted",
     "valueType": {
      "$id": "66",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "53"
     },
     "decorators": []
    }
   ],
   "isFixed": true,
   "isFlags": false,
   "usage": "Output,Json",
   "decorators": []
  },
  {
   "$id": "67",
   "kind": "enum",
   "name": "CreateEmbeddingRequestModel",
   "crossLanguageDefinitionId": "OpenAI.CreateEmbeddingRequest.model.anonymous",
   "valueType": {
    "$id": "68",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "69",
     "kind": "enumvalue",
     "name": "text-embedding-ada-002",
     "value": "text-embedding-ada-002",
     "valueType": {
      "$id": "70",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "67"
     },
     "decorators": []
    }
   ],
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Json",
   "decorators": []
  },
  {
   "$id": "71",
   "kind": "enum",
   "name": "CreateEmbeddingResponse_object",
   "valueType": {
    "$id": "72",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "73",
     "kind": "enumvalue",
     "name": "embedding",
     "value": "embedding",
     "doc": "embedding",
     "valueType": {
      "$ref": "72"
     },
     "enumType": {
      "$ref": "71"
     }
    }
   ],
   "crossLanguageDefinitionId": "",
   "doc": "The CreateEmbeddingResponse_object",
   "isFixed": false,
   "isFlags": false,
   "usage": "Output,Json",
   "decorators": []
  },
  {
   "$id": "74",
   "kind": "enum",
   "name": "Embedding_object",
   "valueType": {
    "$id": "75",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "76",
     "kind": "enumvalue",
     "name": "embedding",
     "value": "embedding",
     "doc": "embedding",
     "valueType": {
      "$ref": "75"
     },
     "enumType": {
      "$ref": "74"
     }
    }
   ],
   "crossLanguageDefinitionId": "",
   "doc": "The Embedding_object",
   "isFixed": false,
   "isFlags": false,
   "usage": "Output,Json",
   "decorators": []
  },
  {
   "$id": "77",
   "kind": "enum",
   "name": "CreateEditRequestModel",
   "crossLanguageDefinitionId": "OpenAI.CreateEditRequest.model.anonymous",
   "valueType": {
    "$id": "78",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "79",
     "kind": "enumvalue",
     "name": "text-davinci-edit-001",
     "value": "text-davinci-edit-001",
     "valueType": {
      "$id": "80",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "77"
     },
     "decorators": []
    },
    {
     "$id": "81",
     "kind": "enumvalue",
     "name": "code-davinci-edit-001",
     "value": "code-davinci-edit-001",
     "valueType": {
      "$id": "82",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "77"
     },
     "decorators": []
    }
   ],
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Json",
   "decorators": []
  },
  {
   "$id": "83",
   "kind": "enum",
   "name": "CreateEditResponse_object",
   "valueType": {
    "$id": "84",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "85",
     "kind": "enumvalue",
     "name": "edit",
     "value": "edit",
     "doc": "edit",
     "valueType": {
      "$ref": "84"
     },
     "enumType": {
      "$ref": "83"
     }
    }
   ],
   "crossLanguageDefinitionId": "",
   "doc": "The CreateEditResponse_object",
   "isFixed": false,
   "isFlags": false,
   "usage": "Output,Json",
   "decorators": []
  },
  {
   "$id": "86",
   "kind": "enum",
   "name": "CreateEditResponseChoiceFinishReason",
   "crossLanguageDefinitionId": "OpenAI.CreateEditResponse.choice.finish_reason.anonymous",
   "valueType": {
    "$id": "87",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "88",
     "kind": "enumvalue",
     "name": "stop",
     "value": "stop",
     "valueType": {
      "$id": "89",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "86"
     },
     "decorators": []
    },
    {
     "$id": "90",
     "kind": "enumvalue",
     "name": "length",
     "value": "length",
     "valueType": {
      "$id": "91",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "86"
     },
     "decorators": []
    }
   ],
   "isFixed": true,
   "isFlags": false,
   "usage": "Output,Json",
   "decorators": []
  },
  {
   "$id": "92",
   "kind": "enum",
   "name": "CreateCompletionRequestModel",
   "crossLanguageDefinitionId": "OpenAI.CreateCompletionRequest.model.anonymous",
   "valueType": {
    "$id": "93",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "94",
     "kind": "enumvalue",
     "name": "babbage-002",
     "value": "babbage-002",
     "valueType": {
      "$id": "95",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "92"
     },
     "decorators": []
    },
    {
     "$id": "96",
     "kind": "enumvalue",
     "name": "davinci-002",
     "value": "davinci-002",
     "valueType": {
      "$id": "97",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "92"
     },
     "decorators": []
    },
    {
     "$id": "98",
     "kind": "enumvalue",
     "name": "text-davinci-003",
     "value": "text-davinci-003",
     "valueType": {
      "$id": "99",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "92"
     },
     "decorators": []
    },
    {
     "$id": "100",
     "kind": "enumvalue",
     "name": "text-davinci-002",
     "value": "text-davinci-002",
     "valueType": {
      "$id": "101",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "92"
     },
     "decorators": []
    },
    {
     "$id": "102",
     "kind": "enumvalue",
     "name": "text-davinci-001",
     "value": "text-davinci-001",
     "valueType": {
      "$id": "103",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "92"
     },
     "decorators": []
    },
    {
     "$id": "104",
     "kind": "enumvalue",
     "name": "code-davinci-002",
     "value": "code-davinci-002",
     "valueType": {
      "$id": "105",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "92"
     },
     "decorators": []
    },
    {
     "$id": "106",
     "kind": "enumvalue",
     "name": "text-curie-001",
     "value": "text-curie-001",
     "valueType": {
      "$id": "107",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "92"
     },
     "decorators": []
    },
    {
     "$id": "108",
     "kind": "enumvalue",
     "name": "text-babbage-001",
     "value": "text-babbage-001",
     "valueType": {
      "$id": "109",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "92"
     },
     "decorators": []
    },
    {
     "$id": "110",
     "kind": "enumvalue",
     "name": "text-ada-001",
     "value": "text-ada-001",
     "valueType": {
      "$id": "111",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "92"
     },
     "decorators": []
    }
   ],
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Json",
   "decorators": []
  },
  {
   "$id": "112",
   "kind": "enum",
   "name": "CreateCompletionResponseChoiceFinishReason",
   "crossLanguageDefinitionId": "OpenAI.CreateCompletionResponse.choice.finish_reason.anonymous",
   "valueType": {
    "$id": "113",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "114",
     "kind": "enumvalue",
     "name": "stop",
     "value": "stop",
     "valueType": {
      "$id": "115",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "112"
     },
     "decorators": []
    },
    {
     "$id": "116",
     "kind": "enumvalue",
     "name": "length",
     "value": "length",
     "valueType": {
      "$id": "117",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "112"
     },
     "decorators": []
    },
    {
     "$id": "118",
     "kind": "enumvalue",
     "name": "content_filter",
     "value": "content_filter",
     "valueType": {
      "$id": "119",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "112"
     },
     "decorators": []
    }
   ],
   "isFixed": true,
   "isFlags": false,
   "usage": "Output,Json",
   "decorators": []
  },
  {
   "$id": "120",
   "kind": "enum",
   "name": "CreateFineTuningJobRequestModel",
   "crossLanguageDefinitionId": "OpenAI.CreateFineTuningJobRequest.model.anonymous",
   "valueType": {
    "$id": "121",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "122",
     "kind": "enumvalue",
     "name": "babbage-002",
     "value": "babbage-002",
     "valueType": {
      "$id": "123",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "120"
     },
     "decorators": []
    },
    {
     "$id": "124",
     "kind": "enumvalue",
     "name": "davinci-002",
     "value": "davinci-002",
     "valueType": {
      "$id": "125",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "120"
     },
     "decorators": []
    },
    {
     "$id": "126",
     "kind": "enumvalue",
     "name": "gpt-3.5-turbo",
     "value": "gpt-3.5-turbo",
     "valueType": {
      "$id": "127",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "120"
     },
     "decorators": []
    }
   ],
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Json",
   "decorators": []
  },
  {
   "$id": "128",
   "kind": "enum",
   "name": "FineTuningJob_object",
   "valueType": {
    "$id": "129",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "130",
     "kind": "enumvalue",
     "name": "fine_tuning.job",
     "value": "fine_tuning.job",
     "doc": "fine_tuning.job",
     "valueType": {
      "$ref": "129"
     },
     "enumType": {
      "$ref": "128"
     }
    }
   ],
   "crossLanguageDefinitionId": "",
   "doc": "The FineTuningJob_object",
   "isFixed": false,
   "isFlags": false,
   "usage": "Output,Json",
   "decorators": []
  },
  {
   "$id": "131",
   "kind": "enum",
   "name": "FineTuningJobStatus",
   "crossLanguageDefinitionId": "OpenAI.FineTuningJob.status.anonymous",
   "valueType": {
    "$id": "132",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "133",
     "kind": "enumvalue",
     "name": "created",
     "value": "created",
     "valueType": {
      "$id": "134",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "131"
     },
     "decorators": []
    },
    {
     "$id": "135",
     "kind": "enumvalue",
     "name": "pending",
     "value": "pending",
     "valueType": {
      "$id": "136",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "131"
     },
     "decorators": []
    },
    {
     "$id": "137",
     "kind": "enumvalue",
     "name": "running",
     "value": "running",
     "valueType": {
      "$id": "138",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "131"
     },
     "decorators": []
    },
    {
     "$id": "139",
     "kind": "enumvalue",
     "name": "succeeded",
     "value": "succeeded",
     "valueType": {
      "$id": "140",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "131"
     },
     "decorators": []
    },
    {
     "$id": "141",
     "kind": "enumvalue",
     "name": "failed",
     "value": "failed",
     "valueType": {
      "$id": "142",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "131"
     },
     "decorators": []
    },
    {
     "$id": "143",
     "kind": "enumvalue",
     "name": "cancelled",
     "value": "cancelled",
     "valueType": {
      "$id": "144",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "131"
     },
     "decorators": []
    }
   ],
   "isFixed": true,
   "isFlags": false,
   "usage": "Output,Json",
   "decorators": []
  },
  {
   "$id": "145",
   "kind": "enum",
   "name": "FineTuningJobEventLevel",
   "crossLanguageDefinitionId": "OpenAI.FineTuningJobEvent.level.anonymous",
   "valueType": {
    "$id": "146",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "147",
     "kind": "enumvalue",
     "name": "info",
     "value": "info",
     "valueType": {
      "$id": "148",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "145"
     },
     "decorators": []
    },
    {
     "$id": "149",
     "kind": "enumvalue",
     "name": "warn",
     "value": "warn",
     "valueType": {
      "$id": "150",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "145"
     },
     "decorators": []
    },
    {
     "$id": "151",
     "kind": "enumvalue",
     "name": "error",
     "value": "error",
     "valueType": {
      "$id": "152",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "145"
     },
     "decorators": []
    }
   ],
   "isFixed": true,
   "isFlags": false,
   "usage": "Output,Json",
   "decorators": []
  },
  {
   "$id": "153",
   "kind": "enum",
   "name": "CreateChatCompletionRequestModel",
   "crossLanguageDefinitionId": "OpenAI.CreateChatCompletionRequest.model.anonymous",
   "valueType": {
    "$id": "154",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "155",
     "kind": "enumvalue",
     "name": "gpt4",
     "value": "gpt4",
     "valueType": {
      "$id": "156",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "153"
     },
     "decorators": []
    },
    {
     "$id": "157",
     "kind": "enumvalue",
     "name": "gpt-4-0314",
     "value": "gpt-4-0314",
     "valueType": {
      "$id": "158",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "153"
     },
     "decorators": []
    },
    {
     "$id": "159",
     "kind": "enumvalue",
     "name": "gpt-4-0613",
     "value": "gpt-4-0613",
     "valueType": {
      "$id": "160",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "153"
     },
     "decorators": []
    },
    {
     "$id": "161",
     "kind": "enumvalue",
     "name": "gpt-4-32k",
     "value": "gpt-4-32k",
     "valueType": {
      "$id": "162",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "153"
     },
     "decorators": []
    },
    {
     "$id": "163",
     "kind": "enumvalue",
     "name": "gpt-4-32k-0314",
     "value": "gpt-4-32k-0314",
     "valueType": {
      "$id": "164",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "153"
     },
     "decorators": []
    },
    {
     "$id": "165",
     "kind": "enumvalue",
     "name": "gpt-4-32k-0613",
     "value": "gpt-4-32k-0613",
     "valueType": {
      "$id": "166",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "153"
     },
     "decorators": []
    },
    {
     "$id": "167",
     "kind": "enumvalue",
     "name": "gpt-3.5-turbo",
     "value": "gpt-3.5-turbo",
     "valueType": {
      "$id": "168",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "153"
     },
     "decorators": []
    },
    {
     "$id": "169",
     "kind": "enumvalue",
     "name": "gpt-3.5-turbo-16k",
     "value": "gpt-3.5-turbo-16k",
     "valueType": {
      "$id": "170",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "153"
     },
     "decorators": []
    },
    {
     "$id": "171",
     "kind": "enumvalue",
     "name": "gpt-3.5-turbo-0301",
     "value": "gpt-3.5-turbo-0301",
     "valueType": {
      "$id": "172",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "153"
     },
     "decorators": []
    },
    {
     "$id": "173",
     "kind": "enumvalue",
     "name": "gpt-3.5-turbo-0613",
     "value": "gpt-3.5-turbo-0613",
     "valueType": {
      "$id": "174",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "153"
     },
     "decorators": []
    },
    {
     "$id": "175",
     "kind": "enumvalue",
     "name": "gpt-3.5-turbo-16k-0613",
     "value": "gpt-3.5-turbo-16k-0613",
     "valueType": {
      "$id": "176",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "153"
     },
     "decorators": []
    }
   ],
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Json",
   "decorators": []
  },
  {
   "$id": "177",
   "kind": "enum",
   "name": "ChatCompletionRequestMessageRole",
   "crossLanguageDefinitionId": "OpenAI.ChatCompletionRequestMessage.role.anonymous",
   "valueType": {
    "$id": "178",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "179",
     "kind": "enumvalue",
     "name": "system",
     "value": "system",
     "valueType": {
      "$id": "180",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "177"
     },
     "decorators": []
    },
    {
     "$id": "181",
     "kind": "enumvalue",
     "name": "user",
     "value": "user",
     "valueType": {
      "$id": "182",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "177"
     },
     "decorators": []
    },
    {
     "$id": "183",
     "kind": "enumvalue",
     "name": "assistant",
     "value": "assistant",
     "valueType": {
      "$id": "184",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "177"
     },
     "decorators": []
    },
    {
     "$id": "185",
     "kind": "enumvalue",
     "name": "function",
     "value": "function",
     "valueType": {
      "$id": "186",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "177"
     },
     "decorators": []
    }
   ],
   "isFixed": true,
   "isFlags": false,
   "usage": "Input,Json",
   "decorators": []
  },
  {
   "$id": "187",
   "kind": "enum",
   "name": "ChatCompletionResponseMessageRole",
   "crossLanguageDefinitionId": "OpenAI.ChatCompletionResponseMessage.role.anonymous",
   "valueType": {
    "$id": "188",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "189",
     "kind": "enumvalue",
     "name": "system",
     "value": "system",
     "valueType": {
      "$id": "190",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "187"
     },
     "decorators": []
    },
    {
     "$id": "191",
     "kind": "enumvalue",
     "name": "user",
     "value": "user",
     "valueType": {
      "$id": "192",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "187"
     },
     "decorators": []
    },
    {
     "$id": "193",
     "kind": "enumvalue",
     "name": "assistant",
     "value": "assistant",
     "valueType": {
      "$id": "194",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "187"
     },
     "decorators": []
    },
    {
     "$id": "195",
     "kind": "enumvalue",
     "name": "function",
     "value": "function",
     "valueType": {
      "$id": "196",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "187"
     },
     "decorators": []
    }
   ],
   "isFixed": true,
   "isFlags": false,
   "usage": "Output,Json",
   "decorators": []
  },
  {
   "$id": "197",
   "kind": "enum",
   "name": "CreateChatCompletionResponseChoiceFinishReason",
   "crossLanguageDefinitionId": "OpenAI.CreateChatCompletionResponse.choice.finish_reason.anonymous",
   "valueType": {
    "$id": "198",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "199",
     "kind": "enumvalue",
     "name": "stop",
     "value": "stop",
     "valueType": {
      "$id": "200",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "197"
     },
     "decorators": []
    },
    {
     "$id": "201",
     "kind": "enumvalue",
     "name": "length",
     "value": "length",
     "valueType": {
      "$id": "202",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "197"
     },
     "decorators": []
    },
    {
     "$id": "203",
     "kind": "enumvalue",
     "name": "function_call",
     "value": "function_call",
     "valueType": {
      "$id": "204",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "197"
     },
     "decorators": []
    },
    {
     "$id": "205",
     "kind": "enumvalue",
     "name": "content_filter",
     "value": "content_filter",
     "valueType": {
      "$id": "206",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "197"
     },
     "decorators": []
    }
   ],
   "isFixed": true,
   "isFlags": false,
   "usage": "Output,Json",
   "decorators": []
  },
  {
   "$id": "207",
   "kind": "enum",
   "name": "CreateTranslationRequestModel",
   "crossLanguageDefinitionId": "OpenAI.CreateTranslationRequest.model.anonymous",
   "valueType": {
    "$id": "208",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "209",
     "kind": "enumvalue",
     "name": "whisper-1",
     "value": "whisper-1",
     "valueType": {
      "$id": "210",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "207"
     },
     "decorators": []
    }
   ],
   "isFixed": false,
   "isFlags": false,
   "usage": "Input",
   "decorators": []
  },
  {
   "$id": "211",
   "kind": "enum",
   "name": "CreateTranslationRequestResponseFormat",
   "crossLanguageDefinitionId": "OpenAI.CreateTranslationRequest.response_format.anonymous",
   "valueType": {
    "$id": "212",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "213",
     "kind": "enumvalue",
     "name": "json",
     "value": "json",
     "valueType": {
      "$id": "214",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "211"
     },
     "decorators": []
    },
    {
     "$id": "215",
     "kind": "enumvalue",
     "name": "text",
     "value": "text",
     "valueType": {
      "$id": "216",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "211"
     },
     "decorators": []
    },
    {
     "$id": "217",
     "kind": "enumvalue",
     "name": "srt",
     "value": "srt",
     "valueType": {
      "$id": "218",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "211"
     },
     "decorators": []
    },
    {
     "$id": "219",
     "kind": "enumvalue",
     "name": "verbose_json",
     "value": "verbose_json",
     "valueType": {
      "$id": "220",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "211"
     },
     "decorators": []
    },
    {
     "$id": "221",
     "kind": "enumvalue",
     "name": "vtt",
     "value": "vtt",
     "valueType": {
      "$id": "222",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "211"
     },
     "decorators": []
    }
   ],
   "isFixed": true,
   "isFlags": false,
   "usage": "Input",
   "decorators": []
  },
  {
   "$id": "223",
   "kind": "enum",
   "name": "CreateTranscriptionRequestModel",
   "crossLanguageDefinitionId": "OpenAI.CreateTranscriptionRequest.model.anonymous",
   "valueType": {
    "$id": "224",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "225",
     "kind": "enumvalue",
     "name": "whisper-1",
     "value": "whisper-1",
     "valueType": {
      "$id": "226",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "223"
     },
     "decorators": []
    }
   ],
   "isFixed": false,
   "isFlags": false,
   "usage": "Input",
   "decorators": []
  },
  {
   "$id": "227",
   "kind": "enum",
   "name": "CreateTranscriptionRequestResponseFormat",
   "crossLanguageDefinitionId": "OpenAI.CreateTranscriptionRequest.response_format.anonymous",
   "valueType": {
    "$id": "228",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "229",
     "kind": "enumvalue",
     "name": "json",
     "value": "json",
     "valueType": {
      "$id": "230",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "227"
     },
     "decorators": []
    },
    {
     "$id": "231",
     "kind": "enumvalue",
     "name": "text",
     "value": "text",
     "valueType": {
      "$id": "232",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "227"
     },
     "decorators": []
    },
    {
     "$id": "233",
     "kind": "enumvalue",
     "name": "srt",
     "value": "srt",
     "valueType": {
      "$id": "234",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "227"
     },
     "decorators": []
    },
    {
     "$id": "235",
     "kind": "enumvalue",
     "name": "verbose_json",
     "value": "verbose_json",
     "valueType": {
      "$id": "236",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "227"
     },
     "decorators": []
    },
    {
     "$id": "237",
     "kind": "enumvalue",
     "name": "vtt",
     "value": "vtt",
     "valueType": {
      "$id": "238",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "227"
     },
     "decorators": []
    }
   ],
   "isFixed": true,
   "isFlags": false,
   "usage": "Input",
   "decorators": []
  }
 ],
 "Models": [
  {
   "$id": "239",
   "kind": "model",
   "name": "CreateModerationRequest",
   "crossLanguageDefinitionId": "OpenAI.CreateModerationRequest",
   "usage": "Input,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "240",
     "kind": "property",
     "name": "input",
     "serializedName": "input",
     "doc": "The input text to classify",
     "type": {
      "$id": "241",
      "kind": "union",
      "name": "CreateModerationRequestInput",
      "variantTypes": [
       {
        "$id": "242",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       {
        "$id": "243",
        "kind": "array",
        "name": "Array",
        "valueType": {
         "$id": "244",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "crossLanguageDefinitionId": "TypeSpec.Array",
        "decorators": []
       }
      ],
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateModerationRequest.input",
     "serializationOptions": {
      "$id": "245",
      "json": {
       "$id": "246",
       "name": "input"
      }
     }
    },
    {
     "$id": "247",
     "kind": "property",
     "name": "model",
     "serializedName": "model",
     "doc": "Two content moderations models are available: `text-moderation-stable` and\n`text-moderation-latest`. The default is `text-moderation-latest` which will be automatically\nupgraded over time. This ensures you are always using our most accurate model. If you use\n`text-moderation-stable`, we will provide advanced notice before updating the model. Accuracy\nof `text-moderation-stable` may be slightly lower than for `text-moderation-latest`.",
     "type": {
      "$ref": "2"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateModerationRequest.model",
     "serializationOptions": {
      "$id": "248",
      "json": {
       "$id": "249",
       "name": "model"
      }
     }
    }
   ]
  },
  {
   "$id": "250",
   "kind": "model",
   "name": "CreateModerationResponse",
   "crossLanguageDefinitionId": "OpenAI.CreateModerationResponse",
   "usage": "Output,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "251",
     "kind": "property",
     "name": "id",
     "serializedName": "id",
     "doc": "The unique identifier for the moderation request.",
     "type": {
      "$id": "252",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateModerationResponse.id",
     "serializationOptions": {
      "$id": "253",
      "json": {
       "$id": "254",
       "name": "id"
      }
     }
    },
    {
     "$id": "255",
     "kind": "property",
     "name": "model",
     "serializedName": "model",
     "doc": "The model used to generate the moderation results.",
     "type": {
      "$id": "256",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateModerationResponse.model",
     "serializationOptions": {
      "$id": "257",
      "json": {
       "$id": "258",
       "name": "model"
      }
     }
    },
    {
     "$id": "259",
     "kind": "property",
     "name": "results",
     "serializedName": "results",
     "doc": "A list of moderation objects.",
     "type": {
      "$id": "260",
      "kind": "array",
      "name": "Array",
      "valueType": {
       "$id": "261",
       "kind": "model",
       "name": "CreateModerationResponseResult",
       "crossLanguageDefinitionId": "OpenAI.CreateModerationResponse.result.anonymous",
       "usage": "Output,Json",
       "decorators": [],
       "properties": [
        {
         "$id": "262",
         "kind": "property",
         "name": "flagged",
         "serializedName": "flagged",
         "doc": "Whether the content violates [OpenAI's usage policies](/policies/usage-policies).",
         "type": {
          "$id": "263",
          "kind": "boolean",
          "name": "boolean",
          "crossLanguageDefinitionId": "TypeSpec.boolean",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.CreateModerationResponse.result.anonymous.flagged",
         "serializationOptions": {
          "$id": "264",
          "json": {
           "$id": "265",
           "name": "flagged"
          }
         }
        },
        {
         "$id": "266",
         "kind": "property",
         "name": "categories",
         "serializedName": "categories",
         "doc": "A list of the categories, and whether they are flagged or not.",
         "type": {
          "$id": "267",
          "kind": "model",
          "name": "CreateModerationResponseResultCategories",
          "crossLanguageDefinitionId": "OpenAI.CreateModerationResponse.result.categories.anonymous",
          "usage": "Output,Json",
          "decorators": [],
          "properties": [
           {
            "$id": "268",
            "kind": "property",
            "name": "hate",
            "serializedName": "hate",
            "doc": "Content that expresses, incites, or promotes hate based on race, gender, ethnicity,\nreligion, nationality, sexual orientation, disability status, or caste. Hateful content\naimed at non-protected groups (e.g., chess players) is harrassment.",
            "type": {
             "$id": "269",
             "kind": "boolean",
             "name": "boolean",
             "crossLanguageDefinitionId": "TypeSpec.boolean",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "OpenAI.CreateModerationResponse.result.categories.anonymous.hate",
            "serializationOptions": {
             "$id": "270",
             "json": {
              "$id": "271",
              "name": "hate"
             }
            }
           },
           {
            "$id": "272",
            "kind": "property",
            "name": "hate/threatening",
            "serializedName": "hate/threatening",
            "doc": "Hateful content that also includes violence or serious harm towards the targeted group\nbased on race, gender, ethnicity, religion, nationality, sexual orientation, disability\nstatus, or caste.",
            "type": {
             "$id": "273",
             "kind": "boolean",
             "name": "boolean",
             "crossLanguageDefinitionId": "TypeSpec.boolean",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "OpenAI.CreateModerationResponse.result.categories.anonymous.hate/threatening",
            "serializationOptions": {
             "$id": "274",
             "json": {
              "$id": "275",
              "name": "hate/threatening"
             }
            }
           },
           {
            "$id": "276",
            "kind": "property",
            "name": "harassment",
            "serializedName": "harassment",
            "doc": "Content that expresses, incites, or promotes harassing language towards any target.",
            "type": {
             "$id": "277",
             "kind": "boolean",
             "name": "boolean",
             "crossLanguageDefinitionId": "TypeSpec.boolean",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "OpenAI.CreateModerationResponse.result.categories.anonymous.harassment",
            "serializationOptions": {
             "$id": "278",
             "json": {
              "$id": "279",
              "name": "harassment"
             }
            }
           },
           {
            "$id": "280",
            "kind": "property",
            "name": "harassment/threatening",
            "serializedName": "harassment/threatening",
            "doc": "Harassment content that also includes violence or serious harm towards any target.",
            "type": {
             "$id": "281",
             "kind": "boolean",
             "name": "boolean",
             "crossLanguageDefinitionId": "TypeSpec.boolean",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "OpenAI.CreateModerationResponse.result.categories.anonymous.harassment/threatening",
            "serializationOptions": {
             "$id": "282",
             "json": {
              "$id": "283",
              "name": "harassment/threatening"
             }
            }
           },
           {
            "$id": "284",
            "kind": "property",
            "name": "self-harm",
            "serializedName": "self-harm",
            "doc": "Content that promotes, encourages, or depicts acts of self-harm, such as suicide, cutting,\nand eating disorders.",
            "type": {
             "$id": "285",
             "kind": "boolean",
             "name": "boolean",
             "crossLanguageDefinitionId": "TypeSpec.boolean",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "OpenAI.CreateModerationResponse.result.categories.anonymous.self-harm",
            "serializationOptions": {
             "$id": "286",
             "json": {
              "$id": "287",
              "name": "self-harm"
             }
            }
           },
           {
            "$id": "288",
            "kind": "property",
            "name": "self-harm/intent",
            "serializedName": "self-harm/intent",
            "doc": "Content where the speaker expresses that they are engaging or intend to engage in acts of\nself-harm, such as suicide, cutting, and eating disorders.",
            "type": {
             "$id": "289",
             "kind": "boolean",
             "name": "boolean",
             "crossLanguageDefinitionId": "TypeSpec.boolean",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "OpenAI.CreateModerationResponse.result.categories.anonymous.self-harm/intent",
            "serializationOptions": {
             "$id": "290",
             "json": {
              "$id": "291",
              "name": "self-harm/intent"
             }
            }
           },
           {
            "$id": "292",
            "kind": "property",
            "name": "self-harm/instructive",
            "serializedName": "self-harm/instructive",
            "doc": "Content that encourages performing acts of self-harm, such as suicide, cutting, and eating\ndisorders, or that gives instructions or advice on how to commit such acts.",
            "type": {
             "$id": "293",
             "kind": "boolean",
             "name": "boolean",
             "crossLanguageDefinitionId": "TypeSpec.boolean",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "OpenAI.CreateModerationResponse.result.categories.anonymous.self-harm/instructive",
            "serializationOptions": {
             "$id": "294",
             "json": {
              "$id": "295",
              "name": "self-harm/instructive"
             }
            }
           },
           {
            "$id": "296",
            "kind": "property",
            "name": "sexual",
            "serializedName": "sexual",
            "doc": "Content meant to arouse sexual excitement, such as the description of sexual activity, or\nthat promotes sexual services (excluding sex education and wellness).",
            "type": {
             "$id": "297",
             "kind": "boolean",
             "name": "boolean",
             "crossLanguageDefinitionId": "TypeSpec.boolean",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "OpenAI.CreateModerationResponse.result.categories.anonymous.sexual",
            "serializationOptions": {
             "$id": "298",
             "json": {
              "$id": "299",
              "name": "sexual"
             }
            }
           },
           {
            "$id": "300",
            "kind": "property",
            "name": "sexual/minors",
            "serializedName": "sexual/minors",
            "doc": "Sexual content that includes an individual who is under 18 years old.",
            "type": {
             "$id": "301",
             "kind": "boolean",
             "name": "boolean",
             "crossLanguageDefinitionId": "TypeSpec.boolean",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "OpenAI.CreateModerationResponse.result.categories.anonymous.sexual/minors",
            "serializationOptions": {
             "$id": "302",
             "json": {
              "$id": "303",
              "name": "sexual/minors"
             }
            }
           },
           {
            "$id": "304",
            "kind": "property",
            "name": "violence",
            "serializedName": "violence",
            "doc": "Content that depicts death, violence, or physical injury.",
            "type": {
             "$id": "305",
             "kind": "boolean",
             "name": "boolean",
             "crossLanguageDefinitionId": "TypeSpec.boolean",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "OpenAI.CreateModerationResponse.result.categories.anonymous.violence",
            "serializationOptions": {
             "$id": "306",
             "json": {
              "$id": "307",
              "name": "violence"
             }
            }
           },
           {
            "$id": "308",
            "kind": "property",
            "name": "violence/graphic",
            "serializedName": "violence/graphic",
            "doc": "Content that depicts death, violence, or physical injury in graphic detail.",
            "type": {
             "$id": "309",
             "kind": "boolean",
             "name": "boolean",
             "crossLanguageDefinitionId": "TypeSpec.boolean",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "OpenAI.CreateModerationResponse.result.categories.anonymous.violence/graphic",
            "serializationOptions": {
             "$id": "310",
             "json": {
              "$id": "311",
              "name": "violence/graphic"
             }
            }
           }
          ]
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.CreateModerationResponse.result.anonymous.categories",
         "serializationOptions": {
          "$id": "312",
          "json": {
           "$id": "313",
           "name": "categories"
          }
         }
        },
        {
         "$id": "314",
         "kind": "property",
         "name": "category_scores",
         "serializedName": "category_scores",
         "doc": "A list of the categories along with their scores as predicted by model.",
         "type": {
          "$id": "315",
          "kind": "model",
          "name": "CreateModerationResponseResultCategoryScores",
          "crossLanguageDefinitionId": "OpenAI.CreateModerationResponse.result.category_scores.anonymous",
          "usage": "Output,Json",
          "decorators": [],
          "properties": [
           {
            "$id": "316",
            "kind": "property",
            "name": "hate",
            "serializedName": "hate",
            "doc": "The score for the category 'hate'.",
            "type": {
             "$id": "317",
             "kind": "float64",
             "name": "float64",
             "crossLanguageDefinitionId": "TypeSpec.float64",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "OpenAI.CreateModerationResponse.result.category_scores.anonymous.hate",
            "serializationOptions": {
             "$id": "318",
             "json": {
              "$id": "319",
              "name": "hate"
             }
            }
           },
           {
            "$id": "320",
            "kind": "property",
            "name": "hate/threatening",
            "serializedName": "hate/threatening",
            "doc": "The score for the category 'hate/threatening'.",
            "type": {
             "$id": "321",
             "kind": "float64",
             "name": "float64",
             "crossLanguageDefinitionId": "TypeSpec.float64",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "OpenAI.CreateModerationResponse.result.category_scores.anonymous.hate/threatening",
            "serializationOptions": {
             "$id": "322",
             "json": {
              "$id": "323",
              "name": "hate/threatening"
             }
            }
           },
           {
            "$id": "324",
            "kind": "property",
            "name": "harassment",
            "serializedName": "harassment",
            "doc": "The score for the category 'harassment'.",
            "type": {
             "$id": "325",
             "kind": "float64",
             "name": "float64",
             "crossLanguageDefinitionId": "TypeSpec.float64",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "OpenAI.CreateModerationResponse.result.category_scores.anonymous.harassment",
            "serializationOptions": {
             "$id": "326",
             "json": {
              "$id": "327",
              "name": "harassment"
             }
            }
           },
           {
            "$id": "328",
            "kind": "property",
            "name": "harassment/threatening",
            "serializedName": "harassment/threatening",
            "doc": "The score for the category 'harassment/threatening'.",
            "type": {
             "$id": "329",
             "kind": "float64",
             "name": "float64",
             "crossLanguageDefinitionId": "TypeSpec.float64",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "OpenAI.CreateModerationResponse.result.category_scores.anonymous.harassment/threatening",
            "serializationOptions": {
             "$id": "330",
             "json": {
              "$id": "331",
              "name": "harassment/threatening"
             }
            }
           },
           {
            "$id": "332",
            "kind": "property",
            "name": "self-harm",
            "serializedName": "self-harm",
            "doc": "The score for the category 'self-harm'.",
            "type": {
             "$id": "333",
             "kind": "float64",
             "name": "float64",
             "crossLanguageDefinitionId": "TypeSpec.float64",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "OpenAI.CreateModerationResponse.result.category_scores.anonymous.self-harm",
            "serializationOptions": {
             "$id": "334",
             "json": {
              "$id": "335",
              "name": "self-harm"
             }
            }
           },
           {
            "$id": "336",
            "kind": "property",
            "name": "self-harm/intent",
            "serializedName": "self-harm/intent",
            "doc": "The score for the category 'self-harm/intent'.",
            "type": {
             "$id": "337",
             "kind": "float64",
             "name": "float64",
             "crossLanguageDefinitionId": "TypeSpec.float64",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "OpenAI.CreateModerationResponse.result.category_scores.anonymous.self-harm/intent",
            "serializationOptions": {
             "$id": "338",
             "json": {
              "$id": "339",
              "name": "self-harm/intent"
             }
            }
           },
           {
            "$id": "340",
            "kind": "property",
            "name": "self-harm/instructive",
            "serializedName": "self-harm/instructive",
            "doc": "The score for the category 'self-harm/instructive'.",
            "type": {
             "$id": "341",
             "kind": "float64",
             "name": "float64",
             "crossLanguageDefinitionId": "TypeSpec.float64",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "OpenAI.CreateModerationResponse.result.category_scores.anonymous.self-harm/instructive",
            "serializationOptions": {
             "$id": "342",
             "json": {
              "$id": "343",
              "name": "self-harm/instructive"
             }
            }
           },
           {
            "$id": "344",
            "kind": "property",
            "name": "sexual",
            "serializedName": "sexual",
            "doc": "The score for the category 'sexual'.",
            "type": {
             "$id": "345",
             "kind": "float64",
             "name": "float64",
             "crossLanguageDefinitionId": "TypeSpec.float64",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "OpenAI.CreateModerationResponse.result.category_scores.anonymous.sexual",
            "serializationOptions": {
             "$id": "346",
             "json": {
              "$id": "347",
              "name": "sexual"
             }
            }
           },
           {
            "$id": "348",
            "kind": "property",
            "name": "sexual/minors",
            "serializedName": "sexual/minors",
            "doc": "The score for the category 'sexual/minors'.",
            "type": {
             "$id": "349",
             "kind": "float64",
             "name": "float64",
             "crossLanguageDefinitionId": "TypeSpec.float64",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "OpenAI.CreateModerationResponse.result.category_scores.anonymous.sexual/minors",
            "serializationOptions": {
             "$id": "350",
             "json": {
              "$id": "351",
              "name": "sexual/minors"
             }
            }
           },
           {
            "$id": "352",
            "kind": "property",
            "name": "violence",
            "serializedName": "violence",
            "doc": "The score for the category 'violence'.",
            "type": {
             "$id": "353",
             "kind": "float64",
             "name": "float64",
             "crossLanguageDefinitionId": "TypeSpec.float64",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "OpenAI.CreateModerationResponse.result.category_scores.anonymous.violence",
            "serializationOptions": {
             "$id": "354",
             "json": {
              "$id": "355",
              "name": "violence"
             }
            }
           },
           {
            "$id": "356",
            "kind": "property",
            "name": "violence/graphic",
            "serializedName": "violence/graphic",
            "doc": "The score for the category 'violence/graphic'.",
            "type": {
             "$id": "357",
             "kind": "float64",
             "name": "float64",
             "crossLanguageDefinitionId": "TypeSpec.float64",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "OpenAI.CreateModerationResponse.result.category_scores.anonymous.violence/graphic",
            "serializationOptions": {
             "$id": "358",
             "json": {
              "$id": "359",
              "name": "violence/graphic"
             }
            }
           }
          ]
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.CreateModerationResponse.result.anonymous.category_scores",
         "serializationOptions": {
          "$id": "360",
          "json": {
           "$id": "361",
           "name": "category_scores"
          }
         }
        }
       ]
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateModerationResponse.results",
     "serializationOptions": {
      "$id": "362",
      "json": {
       "$id": "363",
       "name": "results"
      }
     }
    }
   ]
  },
  {
   "$ref": "261"
  },
  {
   "$ref": "267"
  },
  {
   "$ref": "315"
  },
  {
   "$id": "364",
   "kind": "model",
   "name": "ErrorResponse",
   "crossLanguageDefinitionId": "OpenAI.ErrorResponse",
   "usage": "Error,Json,Exception",
   "decorators": [],
   "properties": [
    {
     "$id": "365",
     "kind": "property",
     "name": "error",
     "serializedName": "error",
     "type": {
      "$id": "366",
      "kind": "model",
      "name": "Error",
      "crossLanguageDefinitionId": "OpenAI.Error",
      "usage": "Json,Exception",
      "decorators": [],
      "properties": [
       {
        "$id": "367",
        "kind": "property",
        "name": "type",
        "serializedName": "type",
        "type": {
         "$id": "368",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "OpenAI.Error.type",
        "serializationOptions": {
         "$id": "369",
         "json": {
          "$id": "370",
          "name": "type"
         }
        }
       },
       {
        "$id": "371",
        "kind": "property",
        "name": "message",
        "serializedName": "message",
        "type": {
         "$id": "372",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "OpenAI.Error.message",
        "serializationOptions": {
         "$id": "373",
         "json": {
          "$id": "374",
          "name": "message"
         }
        }
       },
       {
        "$id": "375",
        "kind": "property",
        "name": "param",
        "serializedName": "param",
        "type": {
         "$id": "376",
         "kind": "nullable",
         "type": {
          "$id": "377",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         }
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "OpenAI.Error.param",
        "serializationOptions": {
         "$id": "378",
         "json": {
          "$id": "379",
          "name": "param"
         }
        }
       },
       {
        "$id": "380",
        "kind": "property",
        "name": "code",
        "serializedName": "code",
        "type": {
         "$id": "381",
         "kind": "nullable",
         "type": {
          "$id": "382",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         }
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "OpenAI.Error.code",
        "serializationOptions": {
         "$id": "383",
         "json": {
          "$id": "384",
          "name": "code"
         }
        }
       }
      ]
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.ErrorResponse.error",
     "serializationOptions": {
      "$id": "385",
      "json": {
       "$id": "386",
       "name": "error"
      }
     }
    }
   ]
  },
  {
   "$ref": "366"
  },
  {
   "$id": "387",
   "kind": "model",
   "name": "CreateImageRequest",
   "crossLanguageDefinitionId": "OpenAI.CreateImageRequest",
   "usage": "Input,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "388",
     "kind": "property",
     "name": "prompt",
     "serializedName": "prompt",
     "doc": "A text description of the desired image(s). The maximum length is 1000 characters.",
     "type": {
      "$id": "389",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateImageRequest.prompt",
     "serializationOptions": {
      "$id": "390",
      "json": {
       "$id": "391",
       "name": "prompt"
      }
     }
    },
    {
     "$id": "392",
     "kind": "property",
     "name": "n",
     "serializedName": "n",
     "doc": "The number of images to generate. Must be between 1 and 10.",
     "type": {
      "$id": "393",
      "kind": "nullable",
      "type": {
       "$id": "394",
       "kind": "safeint",
       "name": "ImagesN",
       "crossLanguageDefinitionId": "OpenAI.ImagesN",
       "baseType": {
        "$id": "395",
        "kind": "safeint",
        "name": "safeint",
        "crossLanguageDefinitionId": "TypeSpec.safeint",
        "decorators": []
       },
       "decorators": []
      }
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateImageRequest.n",
     "serializationOptions": {
      "$id": "396",
      "json": {
       "$id": "397",
       "name": "n"
      }
     }
    },
    {
     "$id": "398",
     "kind": "property",
     "name": "size",
     "serializedName": "size",
     "doc": "The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024`.",
     "type": {
      "$id": "399",
      "kind": "nullable",
      "type": {
       "$ref": "8"
      }
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateImageRequest.size",
     "serializationOptions": {
      "$id": "400",
      "json": {
       "$id": "401",
       "name": "size"
      }
     }
    },
    {
     "$id": "402",
     "kind": "property",
     "name": "response_format",
     "serializedName": "response_format",
     "doc": "The format in which the generated images are returned. Must be one of `url` or `b64_json`.",
     "type": {
      "$id": "403",
      "kind": "nullable",
      "type": {
       "$ref": "16"
      }
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateImageRequest.response_format",
     "serializationOptions": {
      "$id": "404",
      "json": {
       "$id": "405",
       "name": "response_format"
      }
     }
    },
    {
     "$id": "406",
     "kind": "property",
     "name": "user",
     "serializedName": "user",
     "type": {
      "$id": "407",
      "kind": "string",
      "name": "User",
      "crossLanguageDefinitionId": "OpenAI.User",
      "baseType": {
       "$id": "408",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateImageRequest.user",
     "serializationOptions": {
      "$id": "409",
      "json": {
       "$id": "410",
       "name": "user"
      }
     }
    }
   ]
  },
  {
   "$id": "411",
   "kind": "model",
   "name": "ImagesResponse",
   "crossLanguageDefinitionId": "OpenAI.ImagesResponse",
   "usage": "Output,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "412",
     "kind": "property",
     "name": "created",
     "serializedName": "created",
     "type": {
      "$id": "413",
      "kind": "utcDateTime",
      "name": "utcDateTime",
      "encode": "unixTimestamp",
      "wireType": {
       "$id": "414",
       "kind": "int32",
       "name": "int32",
       "crossLanguageDefinitionId": "TypeSpec.int32",
       "decorators": []
      },
      "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.ImagesResponse.created",
     "serializationOptions": {
      "$id": "415",
      "json": {
       "$id": "416",
       "name": "created"
      }
     }
    },
    {
     "$id": "417",
     "kind": "property",
     "name": "data",
     "serializedName": "data",
     "type": {
      "$id": "418",
      "kind": "array",
      "name": "ArrayImage",
      "valueType": {
       "$id": "419",
       "kind": "model",
       "name": "Image",
       "crossLanguageDefinitionId": "OpenAI.Image",
       "usage": "Output,Json",
       "doc": "Represents the url or the content of an image generated by the OpenAI API.",
       "decorators": [],
       "properties": [
        {
         "$id": "420",
         "kind": "property",
         "name": "url",
         "serializedName": "url",
         "doc": "The URL of the generated image, if `response_format` is `url` (default).",
         "type": {
          "$id": "421",
          "kind": "url",
          "name": "url",
          "crossLanguageDefinitionId": "TypeSpec.url",
          "decorators": []
         },
         "optional": true,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.Image.url",
         "serializationOptions": {
          "$id": "422",
          "json": {
           "$id": "423",
           "name": "url"
          }
         }
        },
        {
         "$id": "424",
         "kind": "property",
         "name": "b64_json",
         "serializedName": "b64_json",
         "doc": "The base64-encoded JSON of the generated image, if `response_format` is `b64_json`.",
         "type": {
          "$id": "425",
          "kind": "bytes",
          "name": "bytes",
          "encode": "base64",
          "crossLanguageDefinitionId": "TypeSpec.bytes",
          "decorators": []
         },
         "optional": true,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.Image.b64_json",
         "serializationOptions": {
          "$id": "426",
          "json": {
           "$id": "427",
           "name": "b64_json"
          }
         }
        }
       ]
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.ImagesResponse.data",
     "serializationOptions": {
      "$id": "428",
      "json": {
       "$id": "429",
       "name": "data"
      }
     }
    }
   ]
  },
  {
   "$ref": "419"
  },
  {
   "$id": "430",
   "kind": "model",
   "name": "CreateImageEditRequest",
   "crossLanguageDefinitionId": "OpenAI.CreateImageEditRequest",
   "usage": "Input,MultipartFormData",
   "decorators": [],
   "properties": [
    {
     "$id": "431",
     "kind": "property",
     "name": "prompt",
     "serializedName": "prompt",
     "doc": "A text description of the desired image(s). The maximum length is 1000 characters.",
     "type": {
      "$id": "432",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateImageEditRequest.prompt",
     "serializationOptions": {
      "$id": "433",
      "multipart": {
       "$id": "434",
       "isFilePart": false,
       "isMulti": false,
       "defaultContentTypes": [],
       "name": "prompt"
      }
     }
    },
    {
     "$id": "435",
     "kind": "property",
     "name": "image",
     "serializedName": "image",
     "doc": "The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask is not\nprovided, image must have transparency, which will be used as the mask.",
     "type": {
      "$id": "436",
      "kind": "bytes",
      "name": "bytes",
      "encode": "base64",
      "crossLanguageDefinitionId": "TypeSpec.bytes",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateImageEditRequest.image",
     "serializationOptions": {
      "$id": "437",
      "multipart": {
       "$id": "438",
       "isFilePart": true,
       "isMulti": false,
       "defaultContentTypes": [],
       "name": "image"
      }
     }
    },
    {
     "$id": "439",
     "kind": "property",
     "name": "mask",
     "serializedName": "mask",
     "doc": "An additional image whose fully transparent areas (e.g. where alpha is zero) indicate where\n`image` should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions\nas `image`.",
     "type": {
      "$id": "440",
      "kind": "bytes",
      "name": "bytes",
      "encode": "base64",
      "crossLanguageDefinitionId": "TypeSpec.bytes",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateImageEditRequest.mask",
     "serializationOptions": {
      "$id": "441",
      "multipart": {
       "$id": "442",
       "isFilePart": true,
       "isMulti": false,
       "defaultContentTypes": [],
       "name": "mask"
      }
     }
    },
    {
     "$id": "443",
     "kind": "property",
     "name": "n",
     "serializedName": "n",
     "doc": "The number of images to generate. Must be between 1 and 10.",
     "type": {
      "$ref": "393"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateImageEditRequest.n",
     "serializationOptions": {
      "$id": "444",
      "multipart": {
       "$id": "445",
       "isFilePart": false,
       "isMulti": false,
       "defaultContentTypes": [],
       "name": "n"
      }
     }
    },
    {
     "$id": "446",
     "kind": "property",
     "name": "size",
     "serializedName": "size",
     "doc": "The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024`.",
     "type": {
      "$ref": "399"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateImageEditRequest.size",
     "serializationOptions": {
      "$id": "447",
      "multipart": {
       "$id": "448",
       "isFilePart": false,
       "isMulti": false,
       "defaultContentTypes": [],
       "name": "size"
      }
     }
    },
    {
     "$id": "449",
     "kind": "property",
     "name": "response_format",
     "serializedName": "response_format",
     "doc": "The format in which the generated images are returned. Must be one of `url` or `b64_json`.",
     "type": {
      "$ref": "403"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateImageEditRequest.response_format",
     "serializationOptions": {
      "$id": "450",
      "multipart": {
       "$id": "451",
       "isFilePart": false,
       "isMulti": false,
       "defaultContentTypes": [],
       "name": "response_format"
      }
     }
    },
    {
     "$id": "452",
     "kind": "property",
     "name": "user",
     "serializedName": "user",
     "type": {
      "$id": "453",
      "kind": "string",
      "name": "User",
      "crossLanguageDefinitionId": "OpenAI.User",
      "baseType": {
       "$id": "454",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateImageEditRequest.user",
     "serializationOptions": {
      "$id": "455",
      "multipart": {
       "$id": "456",
       "isFilePart": false,
       "isMulti": false,
       "defaultContentTypes": [],
       "name": "user"
      }
     }
    }
   ]
  },
  {
   "$id": "457",
   "kind": "model",
   "name": "CreateImageVariationRequest",
   "crossLanguageDefinitionId": "OpenAI.CreateImageVariationRequest",
   "usage": "Input,MultipartFormData",
   "decorators": [],
   "properties": [
    {
     "$id": "458",
     "kind": "property",
     "name": "image",
     "serializedName": "image",
     "doc": "The image to use as the basis for the variation(s). Must be a valid PNG file, less than 4MB,\nand square.",
     "type": {
      "$id": "459",
      "kind": "bytes",
      "name": "bytes",
      "encode": "base64",
      "crossLanguageDefinitionId": "TypeSpec.bytes",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateImageVariationRequest.image",
     "serializationOptions": {
      "$id": "460",
      "multipart": {
       "$id": "461",
       "isFilePart": true,
       "isMulti": false,
       "defaultContentTypes": [],
       "name": "image"
      }
     }
    },
    {
     "$id": "462",
     "kind": "property",
     "name": "n",
     "serializedName": "n",
     "doc": "The number of images to generate. Must be between 1 and 10.",
     "type": {
      "$ref": "393"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateImageVariationRequest.n",
     "serializationOptions": {
      "$id": "463",
      "multipart": {
       "$id": "464",
       "isFilePart": false,
       "isMulti": false,
       "defaultContentTypes": [],
       "name": "n"
      }
     }
    },
    {
     "$id": "465",
     "kind": "property",
     "name": "size",
     "serializedName": "size",
     "doc": "The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024`.",
     "type": {
      "$ref": "399"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateImageVariationRequest.size",
     "serializationOptions": {
      "$id": "466",
      "multipart": {
       "$id": "467",
       "isFilePart": false,
       "isMulti": false,
       "defaultContentTypes": [],
       "name": "size"
      }
     }
    },
    {
     "$id": "468",
     "kind": "property",
     "name": "response_format",
     "serializedName": "response_format",
     "doc": "The format in which the generated images are returned. Must be one of `url` or `b64_json`.",
     "type": {
      "$ref": "403"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateImageVariationRequest.response_format",
     "serializationOptions": {
      "$id": "469",
      "multipart": {
       "$id": "470",
       "isFilePart": false,
       "isMulti": false,
       "defaultContentTypes": [],
       "name": "response_format"
      }
     }
    },
    {
     "$id": "471",
     "kind": "property",
     "name": "user",
     "serializedName": "user",
     "type": {
      "$id": "472",
      "kind": "string",
      "name": "User",
      "crossLanguageDefinitionId": "OpenAI.User",
      "baseType": {
       "$id": "473",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateImageVariationRequest.user",
     "serializationOptions": {
      "$id": "474",
      "multipart": {
       "$id": "475",
       "isFilePart": false,
       "isMulti": false,
       "defaultContentTypes": [],
       "name": "user"
      }
     }
    }
   ]
  },
  {
   "$id": "476",
   "kind": "model",
   "name": "ListModelsResponse",
   "crossLanguageDefinitionId": "OpenAI.ListModelsResponse",
   "usage": "Output,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "477",
     "kind": "property",
     "name": "object",
     "serializedName": "object",
     "type": {
      "$id": "478",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.ListModelsResponse.object",
     "serializationOptions": {
      "$id": "479",
      "json": {
       "$id": "480",
       "name": "object"
      }
     }
    },
    {
     "$id": "481",
     "kind": "property",
     "name": "data",
     "serializedName": "data",
     "type": {
      "$id": "482",
      "kind": "array",
      "name": "ArrayModel",
      "valueType": {
       "$id": "483",
       "kind": "model",
       "name": "Model",
       "crossLanguageDefinitionId": "OpenAI.Model",
       "usage": "Output,Json",
       "doc": "Describes an OpenAI model offering that can be used with the API.",
       "decorators": [],
       "properties": [
        {
         "$id": "484",
         "kind": "property",
         "name": "id",
         "serializedName": "id",
         "doc": "The model identifier, which can be referenced in the API endpoints.",
         "type": {
          "$id": "485",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.Model.id",
         "serializationOptions": {
          "$id": "486",
          "json": {
           "$id": "487",
           "name": "id"
          }
         }
        },
        {
         "$id": "488",
         "kind": "property",
         "name": "object",
         "serializedName": "object",
         "doc": "The object type, which is always \"model\".",
         "type": {
          "$id": "489",
          "kind": "constant",
          "valueType": {
           "$ref": "22"
          },
          "value": "model",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.Model.object",
         "serializationOptions": {
          "$id": "490",
          "json": {
           "$id": "491",
           "name": "object"
          }
         }
        },
        {
         "$id": "492",
         "kind": "property",
         "name": "created",
         "serializedName": "created",
         "doc": "The Unix timestamp (in seconds) when the model was created.",
         "type": {
          "$id": "493",
          "kind": "utcDateTime",
          "name": "utcDateTime",
          "encode": "unixTimestamp",
          "wireType": {
           "$id": "494",
           "kind": "int32",
           "name": "int32",
           "crossLanguageDefinitionId": "TypeSpec.int32",
           "decorators": []
          },
          "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.Model.created",
         "serializationOptions": {
          "$id": "495",
          "json": {
           "$id": "496",
           "name": "created"
          }
         }
        },
        {
         "$id": "497",
         "kind": "property",
         "name": "owned_by",
         "serializedName": "owned_by",
         "doc": "The organization that owns the model.",
         "type": {
          "$id": "498",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.Model.owned_by",
         "serializationOptions": {
          "$id": "499",
          "json": {
           "$id": "500",
           "name": "owned_by"
          }
         }
        }
       ]
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.ListModelsResponse.data",
     "serializationOptions": {
      "$id": "501",
      "json": {
       "$id": "502",
       "name": "data"
      }
     }
    }
   ]
  },
  {
   "$ref": "483"
  },
  {
   "$id": "503",
   "kind": "model",
   "name": "DeleteModelResponse",
   "crossLanguageDefinitionId": "OpenAI.DeleteModelResponse",
   "usage": "Output,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "504",
     "kind": "property",
     "name": "id",
     "serializedName": "id",
     "type": {
      "$id": "505",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.DeleteModelResponse.id",
     "serializationOptions": {
      "$id": "506",
      "json": {
       "$id": "507",
       "name": "id"
      }
     }
    },
    {
     "$id": "508",
     "kind": "property",
     "name": "object",
     "serializedName": "object",
     "type": {
      "$id": "509",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.DeleteModelResponse.object",
     "serializationOptions": {
      "$id": "510",
      "json": {
       "$id": "511",
       "name": "object"
      }
     }
    },
    {
     "$id": "512",
     "kind": "property",
     "name": "deleted",
     "serializedName": "deleted",
     "type": {
      "$id": "513",
      "kind": "boolean",
      "name": "boolean",
      "crossLanguageDefinitionId": "TypeSpec.boolean",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.DeleteModelResponse.deleted",
     "serializationOptions": {
      "$id": "514",
      "json": {
       "$id": "515",
       "name": "deleted"
      }
     }
    }
   ]
  },
  {
   "$id": "516",
   "kind": "model",
   "name": "CreateFineTuneRequest",
   "crossLanguageDefinitionId": "OpenAI.CreateFineTuneRequest",
   "usage": "Input,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "517",
     "kind": "property",
     "name": "training_file",
     "serializedName": "training_file",
     "doc": "The ID of an uploaded file that contains training data.\n\nSee [upload file](/docs/api-reference/files/upload) for how to upload a file.\n\nYour dataset must be formatted as a JSONL file, where each training example is a JSON object\nwith the keys \"prompt\" and \"completion\". Additionally, you must upload your file with the\npurpose `fine-tune`.\n\nSee the [fine-tuning guide](/docs/guides/legacy-fine-tuning/creating-training-data) for more\ndetails.",
     "type": {
      "$id": "518",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateFineTuneRequest.training_file",
     "serializationOptions": {
      "$id": "519",
      "json": {
       "$id": "520",
       "name": "training_file"
      }
     }
    },
    {
     "$id": "521",
     "kind": "property",
     "name": "validation_file",
     "serializedName": "validation_file",
     "doc": "The ID of an uploaded file that contains validation data.\n\nIf you provide this file, the data is used to generate validation metrics periodically during\nfine-tuning. These metrics can be viewed in the\n[fine-tuning results file](/docs/guides/legacy-fine-tuning/analyzing-your-fine-tuned-model).\nYour train and validation data should be mutually exclusive.\n\nYour dataset must be formatted as a JSONL file, where each validation example is a JSON object\nwith the keys \"prompt\" and \"completion\". Additionally, you must upload your file with the\npurpose `fine-tune`.\n\nSee the [fine-tuning guide](/docs/guides/legacy-fine-tuning/creating-training-data) for more\ndetails.",
     "type": {
      "$id": "522",
      "kind": "nullable",
      "type": {
       "$id": "523",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      }
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateFineTuneRequest.validation_file",
     "serializationOptions": {
      "$id": "524",
      "json": {
       "$id": "525",
       "name": "validation_file"
      }
     }
    },
    {
     "$id": "526",
     "kind": "property",
     "name": "model",
     "serializedName": "model",
     "doc": "The name of the base model to fine-tune. You can select one of \"ada\", \"babbage\", \"curie\",\n\"davinci\", or a fine-tuned model created after 2022-04-21 and before 2023-08-22. To learn more\nabout these models, see the [Models](/docs/models) documentation.",
     "type": {
      "$id": "527",
      "kind": "nullable",
      "type": {
       "$ref": "25"
      }
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateFineTuneRequest.model",
     "serializationOptions": {
      "$id": "528",
      "json": {
       "$id": "529",
       "name": "model"
      }
     }
    },
    {
     "$id": "530",
     "kind": "property",
     "name": "n_epochs",
     "serializedName": "n_epochs",
     "doc": "The number of epochs to train the model for. An epoch refers to one full cycle through the\ntraining dataset.",
     "type": {
      "$id": "531",
      "kind": "nullable",
      "type": {
       "$id": "532",
       "kind": "safeint",
       "name": "safeint",
       "crossLanguageDefinitionId": "TypeSpec.safeint",
       "decorators": []
      }
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateFineTuneRequest.n_epochs",
     "serializationOptions": {
      "$id": "533",
      "json": {
       "$id": "534",
       "name": "n_epochs"
      }
     }
    },
    {
     "$id": "535",
     "kind": "property",
     "name": "batch_size",
     "serializedName": "batch_size",
     "doc": "The batch size to use for training. The batch size is the number of training examples used to\ntrain a single forward and backward pass.\n\nBy default, the batch size will be dynamically configured to be ~0.2% of the number of examples\nin the training set, capped at 256 - in general, we've found that larger batch sizes tend to\nwork better for larger datasets.",
     "type": {
      "$id": "536",
      "kind": "nullable",
      "type": {
       "$id": "537",
       "kind": "safeint",
       "name": "safeint",
       "crossLanguageDefinitionId": "TypeSpec.safeint",
       "decorators": []
      }
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateFineTuneRequest.batch_size",
     "serializationOptions": {
      "$id": "538",
      "json": {
       "$id": "539",
       "name": "batch_size"
      }
     }
    },
    {
     "$id": "540",
     "kind": "property",
     "name": "learning_rate_multiplier",
     "serializedName": "learning_rate_multiplier",
     "doc": "The learning rate multiplier to use for training. The fine-tuning learning rate is the original\nlearning rate used for pretraining multiplied by this value.\n\nBy default, the learning rate multiplier is the 0.05, 0.1, or 0.2 depending on final\n`batch_size` (larger learning rates tend to perform better with larger batch sizes). We\nrecommend experimenting with values in the range 0.02 to 0.2 to see what produces the best\nresults.",
     "type": {
      "$id": "541",
      "kind": "nullable",
      "type": {
       "$id": "542",
       "kind": "float64",
       "name": "float64",
       "crossLanguageDefinitionId": "TypeSpec.float64",
       "decorators": []
      }
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateFineTuneRequest.learning_rate_multiplier",
     "serializationOptions": {
      "$id": "543",
      "json": {
       "$id": "544",
       "name": "learning_rate_multiplier"
      }
     }
    },
    {
     "$id": "545",
     "kind": "property",
     "name": "prompt_loss_rate",
     "serializedName": "prompt_loss_rate",
     "doc": "The weight to use for loss on the prompt tokens. This controls how much the model tries to\nlearn to generate the prompt (as compared to the completion which always has a weight of 1.0),\nand can add a stabilizing effect to training when completions are short.\n\nIf prompts are extremely long (relative to completions), it may make sense to reduce this\nweight so as to avoid over-prioritizing learning the prompt.",
     "type": {
      "$id": "546",
      "kind": "nullable",
      "type": {
       "$id": "547",
       "kind": "float64",
       "name": "float64",
       "crossLanguageDefinitionId": "TypeSpec.float64",
       "decorators": []
      }
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateFineTuneRequest.prompt_loss_rate",
     "serializationOptions": {
      "$id": "548",
      "json": {
       "$id": "549",
       "name": "prompt_loss_rate"
      }
     }
    },
    {
     "$id": "550",
     "kind": "property",
     "name": "compute_classification_metrics",
     "serializedName": "compute_classification_metrics",
     "doc": "If set, we calculate classification-specific metrics such as accuracy and F-1 score using the\nvalidation set at the end of every epoch. These metrics can be viewed in the\n[results file](/docs/guides/legacy-fine-tuning/analyzing-your-fine-tuned-model).\n\nIn order to compute classification metrics, you must provide a `validation_file`. Additionally,\nyou must specify `classification_n_classes` for multiclass classification or\n`classification_positive_class` for binary classification.",
     "type": {
      "$id": "551",
      "kind": "nullable",
      "type": {
       "$id": "552",
       "kind": "boolean",
       "name": "boolean",
       "crossLanguageDefinitionId": "TypeSpec.boolean",
       "decorators": []
      }
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateFineTuneRequest.compute_classification_metrics",
     "serializationOptions": {
      "$id": "553",
      "json": {
       "$id": "554",
       "name": "compute_classification_metrics"
      }
     }
    },
    {
     "$id": "555",
     "kind": "property",
     "name": "classification_n_classes",
     "serializedName": "classification_n_classes",
     "doc": "The number of classes in a classification task.\n\nThis parameter is required for multiclass classification.",
     "type": {
      "$id": "556",
      "kind": "nullable",
      "type": {
       "$id": "557",
       "kind": "safeint",
       "name": "safeint",
       "crossLanguageDefinitionId": "TypeSpec.safeint",
       "decorators": []
      }
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateFineTuneRequest.classification_n_classes",
     "serializationOptions": {
      "$id": "558",
      "json": {
       "$id": "559",
       "name": "classification_n_classes"
      }
     }
    },
    {
     "$id": "560",
     "kind": "property",
     "name": "classification_positive_class",
     "serializedName": "classification_positive_class",
     "doc": "The positive class in binary classification.\n\nThis parameter is needed to generate precision, recall, and F1 metrics when doing binary\nclassification.",
     "type": {
      "$id": "561",
      "kind": "nullable",
      "type": {
       "$id": "562",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      }
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateFineTuneRequest.classification_positive_class",
     "serializationOptions": {
      "$id": "563",
      "json": {
       "$id": "564",
       "name": "classification_positive_class"
      }
     }
    },
    {
     "$id": "565",
     "kind": "property",
     "name": "classification_betas",
     "serializedName": "classification_betas",
     "doc": "If this is provided, we calculate F-beta scores at the specified beta values. The F-beta score\nis a generalization of F-1 score. This is only used for binary classification.\n\nWith a beta of 1 (i.e. the F-1 score), precision and recall are given the same weight. A larger\nbeta score puts more weight on recall and less on precision. A smaller beta score puts more\nweight on precision and less on recall.",
     "type": {
      "$id": "566",
      "kind": "nullable",
      "type": {
       "$id": "567",
       "kind": "array",
       "name": "Array",
       "valueType": {
        "$id": "568",
        "kind": "float64",
        "name": "float64",
        "crossLanguageDefinitionId": "TypeSpec.float64",
        "decorators": []
       },
       "crossLanguageDefinitionId": "TypeSpec.Array",
       "decorators": []
      }
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateFineTuneRequest.classification_betas",
     "serializationOptions": {
      "$id": "569",
      "json": {
       "$id": "570",
       "name": "classification_betas"
      }
     }
    },
    {
     "$id": "571",
     "kind": "property",
     "name": "suffix",
     "serializedName": "suffix",
     "doc": "A string of up to 18 characters that will be added to your fine-tuned model name.\n\nFor example, a `suffix` of \"custom-model-name\" would produce a model name like\n`ada:ft-your-org:custom-model-name-2022-02-15-04-21-04`.",
     "type": {
      "$id": "572",
      "kind": "nullable",
      "type": {
       "$id": "573",
       "kind": "string",
       "name": "SuffixString",
       "crossLanguageDefinitionId": "OpenAI.SuffixString",
       "baseType": {
        "$id": "574",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "decorators": []
      }
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateFineTuneRequest.suffix",
     "serializationOptions": {
      "$id": "575",
      "json": {
       "$id": "576",
       "name": "suffix"
      }
     }
    }
   ]
  },
  {
   "$id": "577",
   "kind": "model",
   "name": "FineTune",
   "crossLanguageDefinitionId": "OpenAI.FineTune",
   "usage": "Output,Json",
   "deprecation": "deprecated",
   "doc": "The `FineTune` object represents a legacy fine-tune job that has been created through the API.",
   "decorators": [],
   "properties": [
    {
     "$id": "578",
     "kind": "property",
     "name": "id",
     "serializedName": "id",
     "doc": "The object identifier, which can be referenced in the API endpoints.",
     "type": {
      "$id": "579",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.FineTune.id",
     "serializationOptions": {
      "$id": "580",
      "json": {
       "$id": "581",
       "name": "id"
      }
     }
    },
    {
     "$id": "582",
     "kind": "property",
     "name": "object",
     "serializedName": "object",
     "doc": "The object type, which is always \"fine-tune\".",
     "type": {
      "$id": "583",
      "kind": "constant",
      "valueType": {
       "$ref": "35"
      },
      "value": "fine-tune",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.FineTune.object",
     "serializationOptions": {
      "$id": "584",
      "json": {
       "$id": "585",
       "name": "object"
      }
     }
    },
    {
     "$id": "586",
     "kind": "property",
     "name": "created_at",
     "serializedName": "created_at",
     "doc": "The Unix timestamp (in seconds) for when the fine-tuning job was created.",
     "type": {
      "$id": "587",
      "kind": "utcDateTime",
      "name": "utcDateTime",
      "encode": "unixTimestamp",
      "wireType": {
       "$id": "588",
       "kind": "int32",
       "name": "int32",
       "crossLanguageDefinitionId": "TypeSpec.int32",
       "decorators": []
      },
      "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.FineTune.created_at",
     "serializationOptions": {
      "$id": "589",
      "json": {
       "$id": "590",
       "name": "created_at"
      }
     }
    },
    {
     "$id": "591",
     "kind": "property",
     "name": "updated_at",
     "serializedName": "updated_at",
     "doc": "The Unix timestamp (in seconds) for when the fine-tuning job was last updated.",
     "type": {
      "$id": "592",
      "kind": "utcDateTime",
      "name": "utcDateTime",
      "encode": "unixTimestamp",
      "wireType": {
       "$id": "593",
       "kind": "int32",
       "name": "int32",
       "crossLanguageDefinitionId": "TypeSpec.int32",
       "decorators": []
      },
      "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.FineTune.updated_at",
     "serializationOptions": {
      "$id": "594",
      "json": {
       "$id": "595",
       "name": "updated_at"
      }
     }
    },
    {
     "$id": "596",
     "kind": "property",
     "name": "model",
     "serializedName": "model",
     "doc": "The base model that is being fine-tuned.",
     "type": {
      "$id": "597",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.FineTune.model",
     "serializationOptions": {
      "$id": "598",
      "json": {
       "$id": "599",
       "name": "model"
      }
     }
    },
    {
     "$id": "600",
     "kind": "property",
     "name": "fine_tuned_model",
     "serializedName": "fine_tuned_model",
     "doc": "The name of the fine-tuned model that is being created.",
     "type": {
      "$id": "601",
      "kind": "nullable",
      "type": {
       "$id": "602",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      }
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.FineTune.fine_tuned_model",
     "serializationOptions": {
      "$id": "603",
      "json": {
       "$id": "604",
       "name": "fine_tuned_model"
      }
     }
    },
    {
     "$id": "605",
     "kind": "property",
     "name": "organization_id",
     "serializedName": "organization_id",
     "doc": "The organization that owns the fine-tuning job.",
     "type": {
      "$id": "606",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.FineTune.organization_id",
     "serializationOptions": {
      "$id": "607",
      "json": {
       "$id": "608",
       "name": "organization_id"
      }
     }
    },
    {
     "$id": "609",
     "kind": "property",
     "name": "status",
     "serializedName": "status",
     "doc": "The current status of the fine-tuning job, which can be either `created`, `running`,\n`succeeded`, `failed`, or `cancelled`.",
     "type": {
      "$ref": "38"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.FineTune.status",
     "serializationOptions": {
      "$id": "610",
      "json": {
       "$id": "611",
       "name": "status"
      }
     }
    },
    {
     "$id": "612",
     "kind": "property",
     "name": "hyperparams",
     "serializedName": "hyperparams",
     "doc": "The hyperparameters used for the fine-tuning job. See the\n[fine-tuning guide](/docs/guides/legacy-fine-tuning/hyperparameters) for more details.",
     "type": {
      "$id": "613",
      "kind": "model",
      "name": "FineTuneHyperparams",
      "crossLanguageDefinitionId": "OpenAI.FineTune.hyperparams.anonymous",
      "usage": "Output,Json",
      "decorators": [],
      "properties": [
       {
        "$id": "614",
        "kind": "property",
        "name": "n_epochs",
        "serializedName": "n_epochs",
        "doc": "The number of epochs to train the model for. An epoch refers to one full cycle through the\ntraining dataset.",
        "type": {
         "$id": "615",
         "kind": "safeint",
         "name": "safeint",
         "crossLanguageDefinitionId": "TypeSpec.safeint",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "OpenAI.FineTune.hyperparams.anonymous.n_epochs",
        "serializationOptions": {
         "$id": "616",
         "json": {
          "$id": "617",
          "name": "n_epochs"
         }
        }
       },
       {
        "$id": "618",
        "kind": "property",
        "name": "batch_size",
        "serializedName": "batch_size",
        "doc": "The batch size to use for training. The batch size is the number of training examples used to\ntrain a single forward and backward pass.",
        "type": {
         "$id": "619",
         "kind": "safeint",
         "name": "safeint",
         "crossLanguageDefinitionId": "TypeSpec.safeint",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "OpenAI.FineTune.hyperparams.anonymous.batch_size",
        "serializationOptions": {
         "$id": "620",
         "json": {
          "$id": "621",
          "name": "batch_size"
         }
        }
       },
       {
        "$id": "622",
        "kind": "property",
        "name": "prompt_loss_weight",
        "serializedName": "prompt_loss_weight",
        "doc": "The weight to use for loss on the prompt tokens.",
        "type": {
         "$id": "623",
         "kind": "float64",
         "name": "float64",
         "crossLanguageDefinitionId": "TypeSpec.float64",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "OpenAI.FineTune.hyperparams.anonymous.prompt_loss_weight",
        "serializationOptions": {
         "$id": "624",
         "json": {
          "$id": "625",
          "name": "prompt_loss_weight"
         }
        }
       },
       {
        "$id": "626",
        "kind": "property",
        "name": "learning_rate_multiplier",
        "serializedName": "learning_rate_multiplier",
        "doc": "The learning rate multiplier to use for training.",
        "type": {
         "$id": "627",
         "kind": "float64",
         "name": "float64",
         "crossLanguageDefinitionId": "TypeSpec.float64",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "OpenAI.FineTune.hyperparams.anonymous.learning_rate_multiplier",
        "serializationOptions": {
         "$id": "628",
         "json": {
          "$id": "629",
          "name": "learning_rate_multiplier"
         }
        }
       },
       {
        "$id": "630",
        "kind": "property",
        "name": "compute_classification_metrics",
        "serializedName": "compute_classification_metrics",
        "doc": "The classification metrics to compute using the validation dataset at the end of every epoch.",
        "type": {
         "$id": "631",
         "kind": "boolean",
         "name": "boolean",
         "crossLanguageDefinitionId": "TypeSpec.boolean",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "OpenAI.FineTune.hyperparams.anonymous.compute_classification_metrics",
        "serializationOptions": {
         "$id": "632",
         "json": {
          "$id": "633",
          "name": "compute_classification_metrics"
         }
        }
       },
       {
        "$id": "634",
        "kind": "property",
        "name": "classification_positive_class",
        "serializedName": "classification_positive_class",
        "doc": "The positive class to use for computing classification metrics.",
        "type": {
         "$id": "635",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "OpenAI.FineTune.hyperparams.anonymous.classification_positive_class",
        "serializationOptions": {
         "$id": "636",
         "json": {
          "$id": "637",
          "name": "classification_positive_class"
         }
        }
       },
       {
        "$id": "638",
        "kind": "property",
        "name": "classification_n_classes",
        "serializedName": "classification_n_classes",
        "doc": "The number of classes to use for computing classification metrics.",
        "type": {
         "$id": "639",
         "kind": "safeint",
         "name": "safeint",
         "crossLanguageDefinitionId": "TypeSpec.safeint",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "OpenAI.FineTune.hyperparams.anonymous.classification_n_classes",
        "serializationOptions": {
         "$id": "640",
         "json": {
          "$id": "641",
          "name": "classification_n_classes"
         }
        }
       }
      ]
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.FineTune.hyperparams",
     "serializationOptions": {
      "$id": "642",
      "json": {
       "$id": "643",
       "name": "hyperparams"
      }
     }
    },
    {
     "$id": "644",
     "kind": "property",
     "name": "training_files",
     "serializedName": "training_files",
     "doc": "The list of files used for training.",
     "type": {
      "$id": "645",
      "kind": "array",
      "name": "ArrayOpenAiFile",
      "valueType": {
       "$id": "646",
       "kind": "model",
       "name": "OpenAIFile",
       "crossLanguageDefinitionId": "OpenAI.OpenAIFile",
       "usage": "Output,Json",
       "doc": "The `File` object represents a document that has been uploaded to OpenAI.",
       "decorators": [],
       "properties": [
        {
         "$id": "647",
         "kind": "property",
         "name": "id",
         "serializedName": "id",
         "doc": "The file identifier, which can be referenced in the API endpoints.",
         "type": {
          "$id": "648",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.OpenAIFile.id",
         "serializationOptions": {
          "$id": "649",
          "json": {
           "$id": "650",
           "name": "id"
          }
         }
        },
        {
         "$id": "651",
         "kind": "property",
         "name": "object",
         "serializedName": "object",
         "doc": "The object type, which is always \"file\".",
         "type": {
          "$id": "652",
          "kind": "constant",
          "valueType": {
           "$ref": "50"
          },
          "value": "file",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.OpenAIFile.object",
         "serializationOptions": {
          "$id": "653",
          "json": {
           "$id": "654",
           "name": "object"
          }
         }
        },
        {
         "$id": "655",
         "kind": "property",
         "name": "bytes",
         "serializedName": "bytes",
         "doc": "The size of the file in bytes.",
         "type": {
          "$id": "656",
          "kind": "safeint",
          "name": "safeint",
          "crossLanguageDefinitionId": "TypeSpec.safeint",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.OpenAIFile.bytes",
         "serializationOptions": {
          "$id": "657",
          "json": {
           "$id": "658",
           "name": "bytes"
          }
         }
        },
        {
         "$id": "659",
         "kind": "property",
         "name": "createdAt",
         "serializedName": "createdAt",
         "doc": "The Unix timestamp (in seconds) for when the file was created.",
         "type": {
          "$id": "660",
          "kind": "utcDateTime",
          "name": "utcDateTime",
          "encode": "unixTimestamp",
          "wireType": {
           "$id": "661",
           "kind": "int32",
           "name": "int32",
           "crossLanguageDefinitionId": "TypeSpec.int32",
           "decorators": []
          },
          "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.OpenAIFile.createdAt",
         "serializationOptions": {
          "$id": "662",
          "json": {
           "$id": "663",
           "name": "createdAt"
          }
         }
        },
        {
         "$id": "664",
         "kind": "property",
         "name": "filename",
         "serializedName": "filename",
         "doc": "The name of the file.",
         "type": {
          "$id": "665",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.OpenAIFile.filename",
         "serializationOptions": {
          "$id": "666",
          "json": {
           "$id": "667",
           "name": "filename"
          }
         }
        },
        {
         "$id": "668",
         "kind": "property",
         "name": "purpose",
         "serializedName": "purpose",
         "doc": "The intended purpose of the file. Currently, only \"fine-tune\" is supported.",
         "type": {
          "$id": "669",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.OpenAIFile.purpose",
         "serializationOptions": {
          "$id": "670",
          "json": {
           "$id": "671",
           "name": "purpose"
          }
         }
        },
        {
         "$id": "672",
         "kind": "property",
         "name": "status",
         "serializedName": "status",
         "doc": "The current status of the file, which can be either `uploaded`, `processed`, `pending`,\n`error`, `deleting` or `deleted`.",
         "type": {
          "$ref": "53"
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.OpenAIFile.status",
         "serializationOptions": {
          "$id": "673",
          "json": {
           "$id": "674",
           "name": "status"
          }
         }
        },
        {
         "$id": "675",
         "kind": "property",
         "name": "status_details",
         "serializedName": "status_details",
         "doc": "Additional details about the status of the file. If the file is in the `error` state, this will\ninclude a message describing the error.",
         "type": {
          "$id": "676",
          "kind": "nullable",
          "type": {
           "$id": "677",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          }
         },
         "optional": true,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.OpenAIFile.status_details",
         "serializationOptions": {
          "$id": "678",
          "json": {
           "$id": "679",
           "name": "status_details"
          }
         }
        }
       ]
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.FineTune.training_files",
     "serializationOptions": {
      "$id": "680",
      "json": {
       "$id": "681",
       "name": "training_files"
      }
     }
    },
    {
     "$id": "682",
     "kind": "property",
     "name": "validation_files",
     "serializedName": "validation_files",
     "doc": "The list of files used for validation.",
     "type": {
      "$id": "683",
      "kind": "array",
      "name": "ArrayOpenAiFile",
      "valueType": {
       "$ref": "646"
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.FineTune.validation_files",
     "serializationOptions": {
      "$id": "684",
      "json": {
       "$id": "685",
       "name": "validation_files"
      }
     }
    },
    {
     "$id": "686",
     "kind": "property",
     "name": "result_files",
     "serializedName": "result_files",
     "doc": "The compiled results files for the fine-tuning job.",
     "type": {
      "$id": "687",
      "kind": "array",
      "name": "ArrayOpenAiFile",
      "valueType": {
       "$ref": "646"
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.FineTune.result_files",
     "serializationOptions": {
      "$id": "688",
      "json": {
       "$id": "689",
       "name": "result_files"
      }
     }
    },
    {
     "$id": "690",
     "kind": "property",
     "name": "events",
     "serializedName": "events",
     "doc": "The list of events that have been observed in the lifecycle of the FineTune job.",
     "type": {
      "$id": "691",
      "kind": "array",
      "name": "ArrayFineTuneEvent",
      "valueType": {
       "$id": "692",
       "kind": "model",
       "name": "FineTuneEvent",
       "crossLanguageDefinitionId": "OpenAI.FineTuneEvent",
       "usage": "Output,Json",
       "decorators": [],
       "properties": [
        {
         "$id": "693",
         "kind": "property",
         "name": "object",
         "serializedName": "object",
         "type": {
          "$id": "694",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.FineTuneEvent.object",
         "serializationOptions": {
          "$id": "695",
          "json": {
           "$id": "696",
           "name": "object"
          }
         }
        },
        {
         "$id": "697",
         "kind": "property",
         "name": "created_at",
         "serializedName": "created_at",
         "type": {
          "$id": "698",
          "kind": "utcDateTime",
          "name": "utcDateTime",
          "encode": "unixTimestamp",
          "wireType": {
           "$id": "699",
           "kind": "int32",
           "name": "int32",
           "crossLanguageDefinitionId": "TypeSpec.int32",
           "decorators": []
          },
          "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.FineTuneEvent.created_at",
         "serializationOptions": {
          "$id": "700",
          "json": {
           "$id": "701",
           "name": "created_at"
          }
         }
        },
        {
         "$id": "702",
         "kind": "property",
         "name": "level",
         "serializedName": "level",
         "type": {
          "$id": "703",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.FineTuneEvent.level",
         "serializationOptions": {
          "$id": "704",
          "json": {
           "$id": "705",
           "name": "level"
          }
         }
        },
        {
         "$id": "706",
         "kind": "property",
         "name": "message",
         "serializedName": "message",
         "type": {
          "$id": "707",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.FineTuneEvent.message",
         "serializationOptions": {
          "$id": "708",
          "json": {
           "$id": "709",
           "name": "message"
          }
         }
        }
       ]
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.FineTune.events",
     "serializationOptions": {
      "$id": "710",
      "json": {
       "$id": "711",
       "name": "events"
      }
     }
    }
   ]
  },
  {
   "$ref": "613"
  },
  {
   "$ref": "646"
  },
  {
   "$ref": "692"
  },
  {
   "$id": "712",
   "kind": "model",
   "name": "ListFineTunesResponse",
   "crossLanguageDefinitionId": "OpenAI.ListFineTunesResponse",
   "usage": "Output,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "713",
     "kind": "property",
     "name": "object",
     "serializedName": "object",
     "type": {
      "$id": "714",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.ListFineTunesResponse.object",
     "serializationOptions": {
      "$id": "715",
      "json": {
       "$id": "716",
       "name": "object"
      }
     }
    },
    {
     "$id": "717",
     "kind": "property",
     "name": "data",
     "serializedName": "data",
     "type": {
      "$id": "718",
      "kind": "array",
      "name": "ArrayFineTune",
      "valueType": {
       "$ref": "577"
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.ListFineTunesResponse.data",
     "serializationOptions": {
      "$id": "719",
      "json": {
       "$id": "720",
       "name": "data"
      }
     }
    }
   ]
  },
  {
   "$id": "721",
   "kind": "model",
   "name": "ListFineTuneEventsResponse",
   "crossLanguageDefinitionId": "OpenAI.ListFineTuneEventsResponse",
   "usage": "Output,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "722",
     "kind": "property",
     "name": "object",
     "serializedName": "object",
     "type": {
      "$id": "723",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.ListFineTuneEventsResponse.object",
     "serializationOptions": {
      "$id": "724",
      "json": {
       "$id": "725",
       "name": "object"
      }
     }
    },
    {
     "$id": "726",
     "kind": "property",
     "name": "data",
     "serializedName": "data",
     "type": {
      "$id": "727",
      "kind": "array",
      "name": "ArrayFineTuneEvent",
      "valueType": {
       "$ref": "692"
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.ListFineTuneEventsResponse.data",
     "serializationOptions": {
      "$id": "728",
      "json": {
       "$id": "729",
       "name": "data"
      }
     }
    }
   ]
  },
  {
   "$id": "730",
   "kind": "model",
   "name": "ListFilesResponse",
   "crossLanguageDefinitionId": "OpenAI.ListFilesResponse",
   "usage": "Output,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "731",
     "kind": "property",
     "name": "object",
     "serializedName": "object",
     "type": {
      "$id": "732",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.ListFilesResponse.object",
     "serializationOptions": {
      "$id": "733",
      "json": {
       "$id": "734",
       "name": "object"
      }
     }
    },
    {
     "$id": "735",
     "kind": "property",
     "name": "data",
     "serializedName": "data",
     "type": {
      "$id": "736",
      "kind": "array",
      "name": "ArrayOpenAiFile",
      "valueType": {
       "$ref": "646"
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.ListFilesResponse.data",
     "serializationOptions": {
      "$id": "737",
      "json": {
       "$id": "738",
       "name": "data"
      }
     }
    }
   ]
  },
  {
   "$id": "739",
   "kind": "model",
   "name": "CreateFileRequest",
   "crossLanguageDefinitionId": "OpenAI.CreateFileRequest",
   "usage": "Input,MultipartFormData",
   "decorators": [],
   "properties": [
    {
     "$id": "740",
     "kind": "property",
     "name": "file",
     "serializedName": "file",
     "doc": "Name of the [JSON Lines](https://jsonlines.readthedocs.io/en/latest/) file to be uploaded.\n\nIf the `purpose` is set to \"fine-tune\", the file will be used for fine-tuning.",
     "type": {
      "$id": "741",
      "kind": "bytes",
      "name": "bytes",
      "encode": "base64",
      "crossLanguageDefinitionId": "TypeSpec.bytes",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateFileRequest.file",
     "serializationOptions": {
      "$id": "742",
      "multipart": {
       "$id": "743",
       "isFilePart": true,
       "isMulti": false,
       "defaultContentTypes": [],
       "name": "file"
      }
     }
    },
    {
     "$id": "744",
     "kind": "property",
     "name": "purpose",
     "serializedName": "purpose",
     "doc": "The intended purpose of the uploaded documents. Use \"fine-tune\" for\n[fine-tuning](/docs/api-reference/fine-tuning). This allows us to validate the format of the\nuploaded file.",
     "type": {
      "$id": "745",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateFileRequest.purpose",
     "serializationOptions": {
      "$id": "746",
      "multipart": {
       "$id": "747",
       "isFilePart": false,
       "isMulti": false,
       "defaultContentTypes": [],
       "name": "purpose"
      }
     }
    }
   ]
  },
  {
   "$id": "748",
   "kind": "model",
   "name": "DeleteFileResponse",
   "crossLanguageDefinitionId": "OpenAI.DeleteFileResponse",
   "usage": "Output,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "749",
     "kind": "property",
     "name": "id",
     "serializedName": "id",
     "type": {
      "$id": "750",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.DeleteFileResponse.id",
     "serializationOptions": {
      "$id": "751",
      "json": {
       "$id": "752",
       "name": "id"
      }
     }
    },
    {
     "$id": "753",
     "kind": "property",
     "name": "object",
     "serializedName": "object",
     "type": {
      "$id": "754",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.DeleteFileResponse.object",
     "serializationOptions": {
      "$id": "755",
      "json": {
       "$id": "756",
       "name": "object"
      }
     }
    },
    {
     "$id": "757",
     "kind": "property",
     "name": "deleted",
     "serializedName": "deleted",
     "type": {
      "$id": "758",
      "kind": "boolean",
      "name": "boolean",
      "crossLanguageDefinitionId": "TypeSpec.boolean",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.DeleteFileResponse.deleted",
     "serializationOptions": {
      "$id": "759",
      "json": {
       "$id": "760",
       "name": "deleted"
      }
     }
    }
   ]
  },
  {
   "$id": "761",
   "kind": "model",
   "name": "CreateEmbeddingRequest",
   "crossLanguageDefinitionId": "OpenAI.CreateEmbeddingRequest",
   "usage": "Input,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "762",
     "kind": "property",
     "name": "model",
     "serializedName": "model",
     "doc": "ID of the model to use. You can use the [List models](/docs/api-reference/models/list) API to see all of your available models, or see our [Model overview](/docs/models/overview) for descriptions of them.",
     "type": {
      "$ref": "67"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateEmbeddingRequest.model",
     "serializationOptions": {
      "$id": "763",
      "json": {
       "$id": "764",
       "name": "model"
      }
     }
    },
    {
     "$id": "765",
     "kind": "property",
     "name": "input",
     "serializedName": "input",
     "doc": "Input text to embed, encoded as a string or array of tokens. To embed multiple inputs in a\nsingle request, pass an array of strings or array of token arrays. Each input must not exceed\nthe max input tokens for the model (8191 tokens for `text-embedding-ada-002`) and cannot be an empty string.\n[Example Python code](https://github.com/openai/openai-cookbook/blob/main/examples/How_to_count_tokens_with_tiktoken.ipynb)\nfor counting tokens.",
     "type": {
      "$id": "766",
      "kind": "union",
      "name": "CreateEmbeddingRequestInput",
      "variantTypes": [
       {
        "$id": "767",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       {
        "$id": "768",
        "kind": "array",
        "name": "Array",
        "valueType": {
         "$id": "769",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "crossLanguageDefinitionId": "TypeSpec.Array",
        "decorators": []
       },
       {
        "$id": "770",
        "kind": "array",
        "name": "TokenArray",
        "valueType": {
         "$id": "771",
         "kind": "safeint",
         "name": "safeint",
         "crossLanguageDefinitionId": "TypeSpec.safeint",
         "decorators": []
        },
        "crossLanguageDefinitionId": "OpenAI.TokenArray",
        "decorators": []
       },
       {
        "$id": "772",
        "kind": "array",
        "name": "TokenArrayArray",
        "valueType": {
         "$id": "773",
         "kind": "array",
         "name": "TokenArray",
         "valueType": {
          "$id": "774",
          "kind": "safeint",
          "name": "safeint",
          "crossLanguageDefinitionId": "TypeSpec.safeint",
          "decorators": []
         },
         "crossLanguageDefinitionId": "OpenAI.TokenArray",
         "decorators": []
        },
        "crossLanguageDefinitionId": "OpenAI.TokenArrayArray",
        "decorators": []
       }
      ],
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateEmbeddingRequest.input",
     "serializationOptions": {
      "$id": "775",
      "json": {
       "$id": "776",
       "name": "input"
      }
     }
    },
    {
     "$id": "777",
     "kind": "property",
     "name": "user",
     "serializedName": "user",
     "type": {
      "$id": "778",
      "kind": "string",
      "name": "User",
      "crossLanguageDefinitionId": "OpenAI.User",
      "baseType": {
       "$id": "779",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateEmbeddingRequest.user",
     "serializationOptions": {
      "$id": "780",
      "json": {
       "$id": "781",
       "name": "user"
      }
     }
    }
   ]
  },
  {
   "$id": "782",
   "kind": "model",
   "name": "CreateEmbeddingResponse",
   "crossLanguageDefinitionId": "OpenAI.CreateEmbeddingResponse",
   "usage": "Output,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "783",
     "kind": "property",
     "name": "object",
     "serializedName": "object",
     "doc": "The object type, which is always \"embedding\".",
     "type": {
      "$id": "784",
      "kind": "constant",
      "valueType": {
       "$ref": "71"
      },
      "value": "embedding",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateEmbeddingResponse.object",
     "serializationOptions": {
      "$id": "785",
      "json": {
       "$id": "786",
       "name": "object"
      }
     }
    },
    {
     "$id": "787",
     "kind": "property",
     "name": "model",
     "serializedName": "model",
     "doc": "The name of the model used to generate the embedding.",
     "type": {
      "$id": "788",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateEmbeddingResponse.model",
     "serializationOptions": {
      "$id": "789",
      "json": {
       "$id": "790",
       "name": "model"
      }
     }
    },
    {
     "$id": "791",
     "kind": "property",
     "name": "data",
     "serializedName": "data",
     "doc": "The list of embeddings generated by the model.",
     "type": {
      "$id": "792",
      "kind": "array",
      "name": "ArrayEmbedding",
      "valueType": {
       "$id": "793",
       "kind": "model",
       "name": "Embedding",
       "crossLanguageDefinitionId": "OpenAI.Embedding",
       "usage": "Output,Json",
       "doc": "Represents an embedding vector returned by embedding endpoint.",
       "decorators": [],
       "properties": [
        {
         "$id": "794",
         "kind": "property",
         "name": "index",
         "serializedName": "index",
         "doc": "The index of the embedding in the list of embeddings.",
         "type": {
          "$id": "795",
          "kind": "safeint",
          "name": "safeint",
          "crossLanguageDefinitionId": "TypeSpec.safeint",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.Embedding.index",
         "serializationOptions": {
          "$id": "796",
          "json": {
           "$id": "797",
           "name": "index"
          }
         }
        },
        {
         "$id": "798",
         "kind": "property",
         "name": "object",
         "serializedName": "object",
         "doc": "The object type, which is always \"embedding\".",
         "type": {
          "$id": "799",
          "kind": "constant",
          "valueType": {
           "$ref": "74"
          },
          "value": "embedding",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.Embedding.object",
         "serializationOptions": {
          "$id": "800",
          "json": {
           "$id": "801",
           "name": "object"
          }
         }
        },
        {
         "$id": "802",
         "kind": "property",
         "name": "embedding",
         "serializedName": "embedding",
         "doc": "The embedding vector, which is a list of floats. The length of vector depends on the model as\\\nlisted in the [embedding guide](/docs/guides/embeddings).",
         "type": {
          "$id": "803",
          "kind": "array",
          "name": "Array",
          "valueType": {
           "$id": "804",
           "kind": "float64",
           "name": "float64",
           "crossLanguageDefinitionId": "TypeSpec.float64",
           "decorators": []
          },
          "crossLanguageDefinitionId": "TypeSpec.Array",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.Embedding.embedding",
         "serializationOptions": {
          "$id": "805",
          "json": {
           "$id": "806",
           "name": "embedding"
          }
         }
        }
       ]
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateEmbeddingResponse.data",
     "serializationOptions": {
      "$id": "807",
      "json": {
       "$id": "808",
       "name": "data"
      }
     }
    },
    {
     "$id": "809",
     "kind": "property",
     "name": "usage",
     "serializedName": "usage",
     "doc": "The usage information for the request.",
     "type": {
      "$id": "810",
      "kind": "model",
      "name": "CreateEmbeddingResponseUsage",
      "crossLanguageDefinitionId": "OpenAI.CreateEmbeddingResponse.usage.anonymous",
      "usage": "Output,Json",
      "decorators": [],
      "properties": [
       {
        "$id": "811",
        "kind": "property",
        "name": "prompt_tokens",
        "serializedName": "prompt_tokens",
        "doc": "The number of tokens used by the prompt.",
        "type": {
         "$id": "812",
         "kind": "safeint",
         "name": "safeint",
         "crossLanguageDefinitionId": "TypeSpec.safeint",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "OpenAI.CreateEmbeddingResponse.usage.anonymous.prompt_tokens",
        "serializationOptions": {
         "$id": "813",
         "json": {
          "$id": "814",
          "name": "prompt_tokens"
         }
        }
       },
       {
        "$id": "815",
        "kind": "property",
        "name": "total_tokens",
        "serializedName": "total_tokens",
        "doc": "The total number of tokens used by the request.",
        "type": {
         "$id": "816",
         "kind": "safeint",
         "name": "safeint",
         "crossLanguageDefinitionId": "TypeSpec.safeint",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "OpenAI.CreateEmbeddingResponse.usage.anonymous.total_tokens",
        "serializationOptions": {
         "$id": "817",
         "json": {
          "$id": "818",
          "name": "total_tokens"
         }
        }
       }
      ]
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateEmbeddingResponse.usage",
     "serializationOptions": {
      "$id": "819",
      "json": {
       "$id": "820",
       "name": "usage"
      }
     }
    }
   ]
  },
  {
   "$ref": "793"
  },
  {
   "$ref": "810"
  },
  {
   "$id": "821",
   "kind": "model",
   "name": "CreateEditRequest",
   "crossLanguageDefinitionId": "OpenAI.CreateEditRequest",
   "usage": "Input,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "822",
     "kind": "property",
     "name": "model",
     "serializedName": "model",
     "doc": "ID of the model to use. You can use the `text-davinci-edit-001` or `code-davinci-edit-001`\nmodel with this endpoint.",
     "type": {
      "$ref": "77"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateEditRequest.model",
     "serializationOptions": {
      "$id": "823",
      "json": {
       "$id": "824",
       "name": "model"
      }
     }
    },
    {
     "$id": "825",
     "kind": "property",
     "name": "input",
     "serializedName": "input",
     "doc": "The input text to use as a starting point for the edit.",
     "type": {
      "$id": "826",
      "kind": "nullable",
      "type": {
       "$id": "827",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      }
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateEditRequest.input",
     "serializationOptions": {
      "$id": "828",
      "json": {
       "$id": "829",
       "name": "input"
      }
     }
    },
    {
     "$id": "830",
     "kind": "property",
     "name": "instruction",
     "serializedName": "instruction",
     "doc": "The instruction that tells the model how to edit the prompt.",
     "type": {
      "$id": "831",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateEditRequest.instruction",
     "serializationOptions": {
      "$id": "832",
      "json": {
       "$id": "833",
       "name": "instruction"
      }
     }
    },
    {
     "$id": "834",
     "kind": "property",
     "name": "n",
     "serializedName": "n",
     "doc": "How many edits to generate for the input and instruction.",
     "type": {
      "$id": "835",
      "kind": "nullable",
      "type": {
       "$id": "836",
       "kind": "safeint",
       "name": "EditN",
       "crossLanguageDefinitionId": "OpenAI.EditN",
       "baseType": {
        "$id": "837",
        "kind": "safeint",
        "name": "safeint",
        "crossLanguageDefinitionId": "TypeSpec.safeint",
        "decorators": []
       },
       "decorators": []
      }
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateEditRequest.n",
     "serializationOptions": {
      "$id": "838",
      "json": {
       "$id": "839",
       "name": "n"
      }
     }
    },
    {
     "$id": "840",
     "kind": "property",
     "name": "temperature",
     "serializedName": "temperature",
     "doc": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output\nmore random, while lower values like 0.2 will make it more focused and deterministic.\n\nWe generally recommend altering this or `top_p` but not both.",
     "type": {
      "$id": "841",
      "kind": "nullable",
      "type": {
       "$id": "842",
       "kind": "float64",
       "name": "Temperature",
       "crossLanguageDefinitionId": "OpenAI.Temperature",
       "baseType": {
        "$id": "843",
        "kind": "float64",
        "name": "float64",
        "crossLanguageDefinitionId": "TypeSpec.float64",
        "decorators": []
       },
       "decorators": []
      }
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateEditRequest.temperature",
     "serializationOptions": {
      "$id": "844",
      "json": {
       "$id": "845",
       "name": "temperature"
      }
     }
    },
    {
     "$id": "846",
     "kind": "property",
     "name": "top_p",
     "serializedName": "top_p",
     "doc": "An alternative to sampling with temperature, called nucleus sampling, where the model considers\nthe results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising\nthe top 10% probability mass are considered.\n\nWe generally recommend altering this or `temperature` but not both.",
     "type": {
      "$id": "847",
      "kind": "nullable",
      "type": {
       "$id": "848",
       "kind": "float64",
       "name": "TopP",
       "crossLanguageDefinitionId": "OpenAI.TopP",
       "baseType": {
        "$id": "849",
        "kind": "float64",
        "name": "float64",
        "crossLanguageDefinitionId": "TypeSpec.float64",
        "decorators": []
       },
       "decorators": []
      }
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateEditRequest.top_p",
     "serializationOptions": {
      "$id": "850",
      "json": {
       "$id": "851",
       "name": "top_p"
      }
     }
    }
   ]
  },
  {
   "$id": "852",
   "kind": "model",
   "name": "CreateEditResponse",
   "crossLanguageDefinitionId": "OpenAI.CreateEditResponse",
   "usage": "Output,Json",
   "deprecation": "deprecated",
   "decorators": [],
   "properties": [
    {
     "$id": "853",
     "kind": "property",
     "name": "object",
     "serializedName": "object",
     "doc": "The object type, which is always `edit`.",
     "type": {
      "$id": "854",
      "kind": "constant",
      "valueType": {
       "$ref": "83"
      },
      "value": "edit",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateEditResponse.object",
     "serializationOptions": {
      "$id": "855",
      "json": {
       "$id": "856",
       "name": "object"
      }
     }
    },
    {
     "$id": "857",
     "kind": "property",
     "name": "created",
     "serializedName": "created",
     "doc": "The Unix timestamp (in seconds) of when the edit was created.",
     "type": {
      "$id": "858",
      "kind": "utcDateTime",
      "name": "utcDateTime",
      "encode": "unixTimestamp",
      "wireType": {
       "$id": "859",
       "kind": "int32",
       "name": "int32",
       "crossLanguageDefinitionId": "TypeSpec.int32",
       "decorators": []
      },
      "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateEditResponse.created",
     "serializationOptions": {
      "$id": "860",
      "json": {
       "$id": "861",
       "name": "created"
      }
     }
    },
    {
     "$id": "862",
     "kind": "property",
     "name": "choices",
     "serializedName": "choices",
     "doc": "description: A list of edit choices. Can be more than one if `n` is greater than 1.",
     "type": {
      "$id": "863",
      "kind": "array",
      "name": "Array",
      "valueType": {
       "$id": "864",
       "kind": "model",
       "name": "CreateEditResponseChoice",
       "crossLanguageDefinitionId": "OpenAI.CreateEditResponse.choice.anonymous",
       "usage": "Output,Json",
       "decorators": [],
       "properties": [
        {
         "$id": "865",
         "kind": "property",
         "name": "text",
         "serializedName": "text",
         "doc": "The edited result.",
         "type": {
          "$id": "866",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.CreateEditResponse.choice.anonymous.text",
         "serializationOptions": {
          "$id": "867",
          "json": {
           "$id": "868",
           "name": "text"
          }
         }
        },
        {
         "$id": "869",
         "kind": "property",
         "name": "index",
         "serializedName": "index",
         "doc": "The index of the choice in the list of choices.",
         "type": {
          "$id": "870",
          "kind": "safeint",
          "name": "safeint",
          "crossLanguageDefinitionId": "TypeSpec.safeint",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.CreateEditResponse.choice.anonymous.index",
         "serializationOptions": {
          "$id": "871",
          "json": {
           "$id": "872",
           "name": "index"
          }
         }
        },
        {
         "$id": "873",
         "kind": "property",
         "name": "finish_reason",
         "serializedName": "finish_reason",
         "doc": "The reason the model stopped generating tokens. This will be `stop` if the model hit a\nnatural stop point or a provided stop sequence, or `length` if the maximum number of tokens\nspecified in the request was reached.",
         "type": {
          "$ref": "86"
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.CreateEditResponse.choice.anonymous.finish_reason",
         "serializationOptions": {
          "$id": "874",
          "json": {
           "$id": "875",
           "name": "finish_reason"
          }
         }
        }
       ]
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateEditResponse.choices",
     "serializationOptions": {
      "$id": "876",
      "json": {
       "$id": "877",
       "name": "choices"
      }
     }
    },
    {
     "$id": "878",
     "kind": "property",
     "name": "usage",
     "serializedName": "usage",
     "type": {
      "$id": "879",
      "kind": "model",
      "name": "CompletionUsage",
      "crossLanguageDefinitionId": "OpenAI.CompletionUsage",
      "usage": "Output,Json",
      "doc": "Usage statistics for the completion request.",
      "decorators": [],
      "properties": [
       {
        "$id": "880",
        "kind": "property",
        "name": "prompt_tokens",
        "serializedName": "prompt_tokens",
        "doc": "Number of tokens in the prompt.",
        "type": {
         "$id": "881",
         "kind": "safeint",
         "name": "safeint",
         "crossLanguageDefinitionId": "TypeSpec.safeint",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "OpenAI.CompletionUsage.prompt_tokens",
        "serializationOptions": {
         "$id": "882",
         "json": {
          "$id": "883",
          "name": "prompt_tokens"
         }
        }
       },
       {
        "$id": "884",
        "kind": "property",
        "name": "completion_tokens",
        "serializedName": "completion_tokens",
        "doc": "Number of tokens in the generated completion",
        "type": {
         "$id": "885",
         "kind": "safeint",
         "name": "safeint",
         "crossLanguageDefinitionId": "TypeSpec.safeint",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "OpenAI.CompletionUsage.completion_tokens",
        "serializationOptions": {
         "$id": "886",
         "json": {
          "$id": "887",
          "name": "completion_tokens"
         }
        }
       },
       {
        "$id": "888",
        "kind": "property",
        "name": "total_tokens",
        "serializedName": "total_tokens",
        "doc": "Total number of tokens used in the request (prompt + completion).",
        "type": {
         "$id": "889",
         "kind": "safeint",
         "name": "safeint",
         "crossLanguageDefinitionId": "TypeSpec.safeint",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "OpenAI.CompletionUsage.total_tokens",
        "serializationOptions": {
         "$id": "890",
         "json": {
          "$id": "891",
          "name": "total_tokens"
         }
        }
       }
      ]
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateEditResponse.usage",
     "serializationOptions": {
      "$id": "892",
      "json": {
       "$id": "893",
       "name": "usage"
      }
     }
    }
   ]
  },
  {
   "$ref": "864"
  },
  {
   "$ref": "879"
  },
  {
   "$id": "894",
   "kind": "model",
   "name": "CreateCompletionRequest",
   "crossLanguageDefinitionId": "OpenAI.CreateCompletionRequest",
   "usage": "Spread,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "895",
     "kind": "property",
     "name": "model",
     "serializedName": "model",
     "doc": "ID of the model to use. You can use the [List models](/docs/api-reference/models/list) API to\nsee all of your available models, or see our [Model overview](/docs/models/overview) for\ndescriptions of them.",
     "type": {
      "$ref": "92"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateCompletionRequest.model",
     "serializationOptions": {
      "$id": "896",
      "json": {
       "$id": "897",
       "name": "model"
      }
     }
    },
    {
     "$id": "898",
     "kind": "property",
     "name": "prompt",
     "serializedName": "prompt",
     "doc": "The prompt(s) to generate completions for, encoded as a string, array of strings, array of\ntokens, or array of token arrays.\n\nNote that <|endoftext|> is the document separator that the model sees during training, so if a\nprompt is not specified the model will generate as if from the beginning of a new document.",
     "type": {
      "$id": "899",
      "kind": "nullable",
      "type": {
       "$id": "900",
       "kind": "union",
       "name": "Prompt",
       "variantTypes": [
        {
         "$id": "901",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        {
         "$id": "902",
         "kind": "array",
         "name": "Array",
         "valueType": {
          "$id": "903",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "crossLanguageDefinitionId": "TypeSpec.Array",
         "decorators": []
        },
        {
         "$id": "904",
         "kind": "array",
         "name": "TokenArray",
         "valueType": {
          "$id": "905",
          "kind": "safeint",
          "name": "safeint",
          "crossLanguageDefinitionId": "TypeSpec.safeint",
          "decorators": []
         },
         "crossLanguageDefinitionId": "OpenAI.TokenArray",
         "decorators": []
        },
        {
         "$id": "906",
         "kind": "array",
         "name": "TokenArrayArray",
         "valueType": {
          "$id": "907",
          "kind": "array",
          "name": "TokenArray",
          "valueType": {
           "$id": "908",
           "kind": "safeint",
           "name": "safeint",
           "crossLanguageDefinitionId": "TypeSpec.safeint",
           "decorators": []
          },
          "crossLanguageDefinitionId": "OpenAI.TokenArray",
          "decorators": []
         },
         "crossLanguageDefinitionId": "OpenAI.TokenArrayArray",
         "decorators": []
        }
       ],
       "decorators": []
      }
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateCompletionRequest.prompt",
     "serializationOptions": {
      "$id": "909",
      "json": {
       "$id": "910",
       "name": "prompt"
      }
     }
    },
    {
     "$id": "911",
     "kind": "property",
     "name": "suffix",
     "serializedName": "suffix",
     "doc": "The suffix that comes after a completion of inserted text.",
     "type": {
      "$id": "912",
      "kind": "nullable",
      "type": {
       "$id": "913",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      }
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateCompletionRequest.suffix",
     "serializationOptions": {
      "$id": "914",
      "json": {
       "$id": "915",
       "name": "suffix"
      }
     }
    },
    {
     "$id": "916",
     "kind": "property",
     "name": "temperature",
     "serializedName": "temperature",
     "doc": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output\nmore random, while lower values like 0.2 will make it more focused and deterministic.\n\nWe generally recommend altering this or `top_p` but not both.",
     "type": {
      "$id": "917",
      "kind": "nullable",
      "type": {
       "$id": "918",
       "kind": "float64",
       "name": "Temperature",
       "crossLanguageDefinitionId": "OpenAI.Temperature",
       "baseType": {
        "$id": "919",
        "kind": "float64",
        "name": "float64",
        "crossLanguageDefinitionId": "TypeSpec.float64",
        "decorators": []
       },
       "decorators": []
      }
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateCompletionRequest.temperature",
     "serializationOptions": {
      "$id": "920",
      "json": {
       "$id": "921",
       "name": "temperature"
      }
     }
    },
    {
     "$id": "922",
     "kind": "property",
     "name": "top_p",
     "serializedName": "top_p",
     "doc": "An alternative to sampling with temperature, called nucleus sampling, where the model considers\nthe results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising\nthe top 10% probability mass are considered.\n\nWe generally recommend altering this or `temperature` but not both.",
     "type": {
      "$id": "923",
      "kind": "nullable",
      "type": {
       "$id": "924",
       "kind": "float64",
       "name": "TopP",
       "crossLanguageDefinitionId": "OpenAI.TopP",
       "baseType": {
        "$id": "925",
        "kind": "float64",
        "name": "float64",
        "crossLanguageDefinitionId": "TypeSpec.float64",
        "decorators": []
       },
       "decorators": []
      }
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateCompletionRequest.top_p",
     "serializationOptions": {
      "$id": "926",
      "json": {
       "$id": "927",
       "name": "top_p"
      }
     }
    },
    {
     "$id": "928",
     "kind": "property",
     "name": "n",
     "serializedName": "n",
     "doc": "How many completions to generate for each prompt.\n**Note:** Because this parameter generates many completions, it can quickly consume your token\nquota. Use carefully and ensure that you have reasonable settings for `max_tokens` and `stop`.",
     "type": {
      "$id": "929",
      "kind": "nullable",
      "type": {
       "$id": "930",
       "kind": "safeint",
       "name": "N",
       "crossLanguageDefinitionId": "OpenAI.N",
       "baseType": {
        "$id": "931",
        "kind": "safeint",
        "name": "safeint",
        "crossLanguageDefinitionId": "TypeSpec.safeint",
        "decorators": []
       },
       "decorators": []
      }
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateCompletionRequest.n",
     "serializationOptions": {
      "$id": "932",
      "json": {
       "$id": "933",
       "name": "n"
      }
     }
    },
    {
     "$id": "934",
     "kind": "property",
     "name": "max_tokens",
     "serializedName": "max_tokens",
     "doc": "The maximum number of [tokens](/tokenizer) to generate in the completion.\n\nThe token count of your prompt plus `max_tokens` cannot exceed the model's context length.\n[Example Python code](https://github.com/openai/openai-cookbook/blob/main/examples/How_to_count_tokens_with_tiktoken.ipynb)\nfor counting tokens.",
     "type": {
      "$id": "935",
      "kind": "nullable",
      "type": {
       "$id": "936",
       "kind": "safeint",
       "name": "MaxTokens",
       "crossLanguageDefinitionId": "OpenAI.MaxTokens",
       "baseType": {
        "$id": "937",
        "kind": "safeint",
        "name": "safeint",
        "crossLanguageDefinitionId": "TypeSpec.safeint",
        "decorators": []
       },
       "decorators": []
      }
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateCompletionRequest.max_tokens",
     "serializationOptions": {
      "$id": "938",
      "json": {
       "$id": "939",
       "name": "max_tokens"
      }
     }
    },
    {
     "$id": "940",
     "kind": "property",
     "name": "stop",
     "serializedName": "stop",
     "doc": "Up to 4 sequences where the API will stop generating further tokens.",
     "type": {
      "$id": "941",
      "kind": "nullable",
      "type": {
       "$id": "942",
       "kind": "union",
       "name": "Stop",
       "variantTypes": [
        {
         "$id": "943",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        {
         "$id": "944",
         "kind": "array",
         "name": "StopSequences",
         "valueType": {
          "$id": "945",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "crossLanguageDefinitionId": "OpenAI.StopSequences",
         "decorators": []
        }
       ],
       "decorators": []
      }
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateCompletionRequest.stop",
     "serializationOptions": {
      "$id": "946",
      "json": {
       "$id": "947",
       "name": "stop"
      }
     }
    },
    {
     "$id": "948",
     "kind": "property",
     "name": "presence_penalty",
     "serializedName": "presence_penalty",
     "doc": "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear\nin the text so far, increasing the model's likelihood to talk about new topics.\n\n[See more information about frequency and presence penalties.](/docs/guides/gpt/parameter-details)",
     "type": {
      "$id": "949",
      "kind": "nullable",
      "type": {
       "$id": "950",
       "kind": "float64",
       "name": "Penalty",
       "crossLanguageDefinitionId": "OpenAI.Penalty",
       "baseType": {
        "$id": "951",
        "kind": "float64",
        "name": "float64",
        "crossLanguageDefinitionId": "TypeSpec.float64",
        "decorators": []
       },
       "decorators": []
      }
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateCompletionRequest.presence_penalty",
     "serializationOptions": {
      "$id": "952",
      "json": {
       "$id": "953",
       "name": "presence_penalty"
      }
     }
    },
    {
     "$id": "954",
     "kind": "property",
     "name": "frequency_penalty",
     "serializedName": "frequency_penalty",
     "doc": "Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing\nfrequency in the text so far, decreasing the model's likelihood to repeat the same line\nverbatim.\n\n[See more information about frequency and presence penalties.](/docs/guides/gpt/parameter-details)",
     "type": {
      "$id": "955",
      "kind": "nullable",
      "type": {
       "$id": "956",
       "kind": "float64",
       "name": "Penalty",
       "crossLanguageDefinitionId": "OpenAI.Penalty",
       "baseType": {
        "$id": "957",
        "kind": "float64",
        "name": "float64",
        "crossLanguageDefinitionId": "TypeSpec.float64",
        "decorators": []
       },
       "decorators": []
      }
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateCompletionRequest.frequency_penalty",
     "serializationOptions": {
      "$id": "958",
      "json": {
       "$id": "959",
       "name": "frequency_penalty"
      }
     }
    },
    {
     "$id": "960",
     "kind": "property",
     "name": "logit_bias",
     "serializedName": "logit_bias",
     "doc": "Modify the likelihood of specified tokens appearing in the completion.\nAccepts a json object that maps tokens (specified by their token ID in the tokenizer) to an\nassociated bias value from -100 to 100. Mathematically, the bias is added to the logits\ngenerated by the model prior to sampling. The exact effect will vary per model, but values\nbetween -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100\nshould result in a ban or exclusive selection of the relevant token.",
     "type": {
      "$id": "961",
      "kind": "nullable",
      "type": {
       "$id": "962",
       "kind": "dict",
       "keyType": {
        "$id": "963",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "valueType": {
        "$id": "964",
        "kind": "safeint",
        "name": "safeint",
        "crossLanguageDefinitionId": "TypeSpec.safeint",
        "decorators": []
       },
       "decorators": []
      }
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateCompletionRequest.logit_bias",
     "serializationOptions": {
      "$id": "965",
      "json": {
       "$id": "966",
       "name": "logit_bias"
      }
     }
    },
    {
     "$id": "967",
     "kind": "property",
     "name": "user",
     "serializedName": "user",
     "doc": "A unique identifier representing your end-user, which can help OpenAI to monitor and detect\nabuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).",
     "type": {
      "$id": "968",
      "kind": "string",
      "name": "User",
      "crossLanguageDefinitionId": "OpenAI.User",
      "baseType": {
       "$id": "969",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateCompletionRequest.user",
     "serializationOptions": {
      "$id": "970",
      "json": {
       "$id": "971",
       "name": "user"
      }
     }
    },
    {
     "$id": "972",
     "kind": "property",
     "name": "stream",
     "serializedName": "stream",
     "doc": "If set, partial message deltas will be sent, like in ChatGPT. Tokens will be sent as data-only\n[server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format)\nas they become available, with the stream terminated by a `data: [DONE]` message.\n[Example Python code](https://github.com/openai/openai-cookbook/blob/main/examples/How_to_stream_completions.ipynb).",
     "type": {
      "$id": "973",
      "kind": "nullable",
      "type": {
       "$id": "974",
       "kind": "boolean",
       "name": "boolean",
       "crossLanguageDefinitionId": "TypeSpec.boolean",
       "decorators": []
      }
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateCompletionRequest.stream",
     "serializationOptions": {
      "$id": "975",
      "json": {
       "$id": "976",
       "name": "stream"
      }
     }
    },
    {
     "$id": "977",
     "kind": "property",
     "name": "logprobs",
     "serializedName": "logprobs",
     "doc": "Include the log probabilities on the `logprobs` most likely tokens, as well the chosen tokens.\nFor example, if `logprobs` is 5, the API will return a list of the 5 most likely tokens. The\nAPI will always return the `logprob` of the sampled token, so there may be up to `logprobs+1`\nelements in the response.\n\nThe maximum value for `logprobs` is 5.",
     "type": {
      "$id": "978",
      "kind": "nullable",
      "type": {
       "$id": "979",
       "kind": "safeint",
       "name": "safeint",
       "crossLanguageDefinitionId": "TypeSpec.safeint",
       "decorators": []
      }
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateCompletionRequest.logprobs",
     "serializationOptions": {
      "$id": "980",
      "json": {
       "$id": "981",
       "name": "logprobs"
      }
     }
    },
    {
     "$id": "982",
     "kind": "property",
     "name": "echo",
     "serializedName": "echo",
     "doc": "Echo back the prompt in addition to the completion",
     "type": {
      "$id": "983",
      "kind": "nullable",
      "type": {
       "$id": "984",
       "kind": "boolean",
       "name": "boolean",
       "crossLanguageDefinitionId": "TypeSpec.boolean",
       "decorators": []
      }
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateCompletionRequest.echo",
     "serializationOptions": {
      "$id": "985",
      "json": {
       "$id": "986",
       "name": "echo"
      }
     }
    },
    {
     "$id": "987",
     "kind": "property",
     "name": "best_of",
     "serializedName": "best_of",
     "doc": "Generates `best_of` completions server-side and returns the \"best\" (the one with the highest\nlog probability per token). Results cannot be streamed.\n\nWhen used with `n`, `best_of` controls the number of candidate completions and `n` specifies\nhow many to return – `best_of` must be greater than `n`.\n\n**Note:** Because this parameter generates many completions, it can quickly consume your token\nquota. Use carefully and ensure that you have reasonable settings for `max_tokens` and `stop`.",
     "type": {
      "$id": "988",
      "kind": "nullable",
      "type": {
       "$id": "989",
       "kind": "safeint",
       "name": "safeint",
       "crossLanguageDefinitionId": "TypeSpec.safeint",
       "decorators": []
      }
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateCompletionRequest.best_of",
     "serializationOptions": {
      "$id": "990",
      "json": {
       "$id": "991",
       "name": "best_of"
      }
     }
    }
   ]
  },
  {
   "$id": "992",
   "kind": "model",
   "name": "CreateCompletionResponse",
   "crossLanguageDefinitionId": "OpenAI.CreateCompletionResponse",
   "usage": "Output,Json",
   "doc": "Represents a completion response from the API. Note: both the streamed and non-streamed response\nobjects share the same shape (unlike the chat endpoint).",
   "decorators": [],
   "properties": [
    {
     "$id": "993",
     "kind": "property",
     "name": "id",
     "serializedName": "id",
     "doc": "A unique identifier for the completion.",
     "type": {
      "$id": "994",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateCompletionResponse.id",
     "serializationOptions": {
      "$id": "995",
      "json": {
       "$id": "996",
       "name": "id"
      }
     }
    },
    {
     "$id": "997",
     "kind": "property",
     "name": "object",
     "serializedName": "object",
     "doc": "The object type, which is always `text_completion`.",
     "type": {
      "$id": "998",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateCompletionResponse.object",
     "serializationOptions": {
      "$id": "999",
      "json": {
       "$id": "1000",
       "name": "object"
      }
     }
    },
    {
     "$id": "1001",
     "kind": "property",
     "name": "created",
     "serializedName": "created",
     "doc": "The Unix timestamp (in seconds) of when the completion was created.",
     "type": {
      "$id": "1002",
      "kind": "utcDateTime",
      "name": "utcDateTime",
      "encode": "unixTimestamp",
      "wireType": {
       "$id": "1003",
       "kind": "int32",
       "name": "int32",
       "crossLanguageDefinitionId": "TypeSpec.int32",
       "decorators": []
      },
      "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateCompletionResponse.created",
     "serializationOptions": {
      "$id": "1004",
      "json": {
       "$id": "1005",
       "name": "created"
      }
     }
    },
    {
     "$id": "1006",
     "kind": "property",
     "name": "model",
     "serializedName": "model",
     "doc": "The model used for the completion.",
     "type": {
      "$id": "1007",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateCompletionResponse.model",
     "serializationOptions": {
      "$id": "1008",
      "json": {
       "$id": "1009",
       "name": "model"
      }
     }
    },
    {
     "$id": "1010",
     "kind": "property",
     "name": "choices",
     "serializedName": "choices",
     "doc": "The list of completion choices the model generated for the input.",
     "type": {
      "$id": "1011",
      "kind": "array",
      "name": "Array",
      "valueType": {
       "$id": "1012",
       "kind": "model",
       "name": "CreateCompletionResponseChoice",
       "crossLanguageDefinitionId": "OpenAI.CreateCompletionResponse.choice.anonymous",
       "usage": "Output,Json",
       "decorators": [],
       "properties": [
        {
         "$id": "1013",
         "kind": "property",
         "name": "index",
         "serializedName": "index",
         "type": {
          "$id": "1014",
          "kind": "safeint",
          "name": "safeint",
          "crossLanguageDefinitionId": "TypeSpec.safeint",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.CreateCompletionResponse.choice.anonymous.index",
         "serializationOptions": {
          "$id": "1015",
          "json": {
           "$id": "1016",
           "name": "index"
          }
         }
        },
        {
         "$id": "1017",
         "kind": "property",
         "name": "text",
         "serializedName": "text",
         "type": {
          "$id": "1018",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.CreateCompletionResponse.choice.anonymous.text",
         "serializationOptions": {
          "$id": "1019",
          "json": {
           "$id": "1020",
           "name": "text"
          }
         }
        },
        {
         "$id": "1021",
         "kind": "property",
         "name": "logprobs",
         "serializedName": "logprobs",
         "type": {
          "$id": "1022",
          "kind": "nullable",
          "type": {
           "$id": "1023",
           "kind": "model",
           "name": "CreateCompletionResponseChoiceLogprobs",
           "crossLanguageDefinitionId": "OpenAI.CreateCompletionResponse.choice.logprobs.anonymous",
           "usage": "Output,Json",
           "decorators": [],
           "properties": [
            {
             "$id": "1024",
             "kind": "property",
             "name": "tokens",
             "serializedName": "tokens",
             "type": {
              "$id": "1025",
              "kind": "array",
              "name": "Array",
              "valueType": {
               "$id": "1026",
               "kind": "string",
               "name": "string",
               "crossLanguageDefinitionId": "TypeSpec.string",
               "decorators": []
              },
              "crossLanguageDefinitionId": "TypeSpec.Array",
              "decorators": []
             },
             "optional": false,
             "readOnly": false,
             "discriminator": false,
             "flatten": false,
             "decorators": [],
             "crossLanguageDefinitionId": "OpenAI.CreateCompletionResponse.choice.logprobs.anonymous.tokens",
             "serializationOptions": {
              "$id": "1027",
              "json": {
               "$id": "1028",
               "name": "tokens"
              }
             }
            },
            {
             "$id": "1029",
             "kind": "property",
             "name": "token_logprobs",
             "serializedName": "token_logprobs",
             "type": {
              "$id": "1030",
              "kind": "array",
              "name": "Array",
              "valueType": {
               "$id": "1031",
               "kind": "float64",
               "name": "float64",
               "crossLanguageDefinitionId": "TypeSpec.float64",
               "decorators": []
              },
              "crossLanguageDefinitionId": "TypeSpec.Array",
              "decorators": []
             },
             "optional": false,
             "readOnly": false,
             "discriminator": false,
             "flatten": false,
             "decorators": [],
             "crossLanguageDefinitionId": "OpenAI.CreateCompletionResponse.choice.logprobs.anonymous.token_logprobs",
             "serializationOptions": {
              "$id": "1032",
              "json": {
               "$id": "1033",
               "name": "token_logprobs"
              }
             }
            },
            {
             "$id": "1034",
             "kind": "property",
             "name": "top_logprobs",
             "serializedName": "top_logprobs",
             "type": {
              "$id": "1035",
              "kind": "array",
              "name": "ArrayRecord",
              "valueType": {
               "$id": "1036",
               "kind": "dict",
               "keyType": {
                "$id": "1037",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
               },
               "valueType": {
                "$id": "1038",
                "kind": "safeint",
                "name": "safeint",
                "crossLanguageDefinitionId": "TypeSpec.safeint",
                "decorators": []
               },
               "decorators": []
              },
              "crossLanguageDefinitionId": "TypeSpec.Array",
              "decorators": []
             },
             "optional": false,
             "readOnly": false,
             "discriminator": false,
             "flatten": false,
             "decorators": [],
             "crossLanguageDefinitionId": "OpenAI.CreateCompletionResponse.choice.logprobs.anonymous.top_logprobs",
             "serializationOptions": {
              "$id": "1039",
              "json": {
               "$id": "1040",
               "name": "top_logprobs"
              }
             }
            },
            {
             "$id": "1041",
             "kind": "property",
             "name": "text_offset",
             "serializedName": "text_offset",
             "type": {
              "$id": "1042",
              "kind": "array",
              "name": "Array",
              "valueType": {
               "$id": "1043",
               "kind": "safeint",
               "name": "safeint",
               "crossLanguageDefinitionId": "TypeSpec.safeint",
               "decorators": []
              },
              "crossLanguageDefinitionId": "TypeSpec.Array",
              "decorators": []
             },
             "optional": false,
             "readOnly": false,
             "discriminator": false,
             "flatten": false,
             "decorators": [],
             "crossLanguageDefinitionId": "OpenAI.CreateCompletionResponse.choice.logprobs.anonymous.text_offset",
             "serializationOptions": {
              "$id": "1044",
              "json": {
               "$id": "1045",
               "name": "text_offset"
              }
             }
            }
           ]
          }
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.CreateCompletionResponse.choice.anonymous.logprobs",
         "serializationOptions": {
          "$id": "1046",
          "json": {
           "$id": "1047",
           "name": "logprobs"
          }
         }
        },
        {
         "$id": "1048",
         "kind": "property",
         "name": "finish_reason",
         "serializedName": "finish_reason",
         "doc": "The reason the model stopped generating tokens. This will be `stop` if the model hit a\nnatural stop point or a provided stop sequence, or `content_filter` if content was omitted\ndue to a flag from our content filters, `length` if the maximum number of tokens specified\nin the request was reached, or `content_filter` if content was omitted due to a flag from our\ncontent filters.",
         "type": {
          "$ref": "112"
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.CreateCompletionResponse.choice.anonymous.finish_reason",
         "serializationOptions": {
          "$id": "1049",
          "json": {
           "$id": "1050",
           "name": "finish_reason"
          }
         }
        }
       ]
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateCompletionResponse.choices",
     "serializationOptions": {
      "$id": "1051",
      "json": {
       "$id": "1052",
       "name": "choices"
      }
     }
    },
    {
     "$id": "1053",
     "kind": "property",
     "name": "usage",
     "serializedName": "usage",
     "type": {
      "$ref": "879"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateCompletionResponse.usage",
     "serializationOptions": {
      "$id": "1054",
      "json": {
       "$id": "1055",
       "name": "usage"
      }
     }
    }
   ]
  },
  {
   "$ref": "1012"
  },
  {
   "$ref": "1023"
  },
  {
   "$id": "1056",
   "kind": "model",
   "name": "CreateFineTuningJobRequest",
   "crossLanguageDefinitionId": "OpenAI.CreateFineTuningJobRequest",
   "usage": "Input,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "1057",
     "kind": "property",
     "name": "training_file",
     "serializedName": "training_file",
     "doc": "The ID of an uploaded file that contains training data.\n\nSee [upload file](/docs/api-reference/files/upload) for how to upload a file.\n\nYour dataset must be formatted as a JSONL file. Additionally, you must upload your file with\nthe purpose `fine-tune`.\n\nSee the [fine-tuning guide](/docs/guides/fine-tuning) for more details.",
     "type": {
      "$id": "1058",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateFineTuningJobRequest.training_file",
     "serializationOptions": {
      "$id": "1059",
      "json": {
       "$id": "1060",
       "name": "training_file"
      }
     }
    },
    {
     "$id": "1061",
     "kind": "property",
     "name": "validation_file",
     "serializedName": "validation_file",
     "doc": "The ID of an uploaded file that contains validation data.\n\nIf you provide this file, the data is used to generate validation metrics periodically during\nfine-tuning. These metrics can be viewed in the fine-tuning results file. The same data should\nnot be present in both train and validation files.\n\nYour dataset must be formatted as a JSONL file. You must upload your file with the purpose\n`fine-tune`.\n\nSee the [fine-tuning guide](/docs/guides/fine-tuning) for more details.",
     "type": {
      "$id": "1062",
      "kind": "nullable",
      "type": {
       "$id": "1063",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      }
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateFineTuningJobRequest.validation_file",
     "serializationOptions": {
      "$id": "1064",
      "json": {
       "$id": "1065",
       "name": "validation_file"
      }
     }
    },
    {
     "$id": "1066",
     "kind": "property",
     "name": "model",
     "serializedName": "model",
     "doc": "The name of the model to fine-tune. You can select one of the\n[supported models](/docs/guides/fine-tuning/what-models-can-be-fine-tuned).",
     "type": {
      "$ref": "120"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateFineTuningJobRequest.model",
     "serializationOptions": {
      "$id": "1067",
      "json": {
       "$id": "1068",
       "name": "model"
      }
     }
    },
    {
     "$id": "1069",
     "kind": "property",
     "name": "hyperparameters",
     "serializedName": "hyperparameters",
     "doc": "The hyperparameters used for the fine-tuning job.",
     "type": {
      "$id": "1070",
      "kind": "model",
      "name": "CreateFineTuningJobRequestHyperparameters",
      "crossLanguageDefinitionId": "OpenAI.CreateFineTuningJobRequest.hyperparameters.anonymous",
      "usage": "Input,Json",
      "decorators": [],
      "properties": [
       {
        "$id": "1071",
        "kind": "property",
        "name": "n_epochs",
        "serializedName": "n_epochs",
        "doc": "The number of epochs to train the model for. An epoch refers to one full cycle through the\ntraining dataset.",
        "type": {
         "$id": "1072",
         "kind": "union",
         "name": "CreateFineTuningJobRequestHyperparametersNEpochs",
         "variantTypes": [
          {
           "$id": "1073",
           "kind": "constant",
           "valueType": {
            "$id": "1074",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           },
           "value": "auto",
           "decorators": []
          },
          {
           "$id": "1075",
           "kind": "safeint",
           "name": "NEpochs",
           "crossLanguageDefinitionId": "OpenAI.NEpochs",
           "baseType": {
            "$id": "1076",
            "kind": "safeint",
            "name": "safeint",
            "crossLanguageDefinitionId": "TypeSpec.safeint",
            "decorators": []
           },
           "decorators": []
          }
         ],
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "OpenAI.CreateFineTuningJobRequest.hyperparameters.anonymous.n_epochs",
        "serializationOptions": {
         "$id": "1077",
         "json": {
          "$id": "1078",
          "name": "n_epochs"
         }
        }
       }
      ]
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateFineTuningJobRequest.hyperparameters",
     "serializationOptions": {
      "$id": "1079",
      "json": {
       "$id": "1080",
       "name": "hyperparameters"
      }
     }
    },
    {
     "$id": "1081",
     "kind": "property",
     "name": "suffix",
     "serializedName": "suffix",
     "doc": "A string of up to 18 characters that will be added to your fine-tuned model name.\n\nFor example, a `suffix` of \"custom-model-name\" would produce a model name like\n`ft:gpt-3.5-turbo:openai:custom-model-name:7p4lURel`.",
     "type": {
      "$id": "1082",
      "kind": "nullable",
      "type": {
       "$id": "1083",
       "kind": "string",
       "name": "SuffixString",
       "crossLanguageDefinitionId": "OpenAI.SuffixString",
       "baseType": {
        "$id": "1084",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "decorators": []
      }
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateFineTuningJobRequest.suffix",
     "serializationOptions": {
      "$id": "1085",
      "json": {
       "$id": "1086",
       "name": "suffix"
      }
     }
    }
   ]
  },
  {
   "$ref": "1070"
  },
  {
   "$id": "1087",
   "kind": "model",
   "name": "FineTuningJob",
   "crossLanguageDefinitionId": "OpenAI.FineTuningJob",
   "usage": "Output,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "1088",
     "kind": "property",
     "name": "id",
     "serializedName": "id",
     "doc": "The object identifier, which can be referenced in the API endpoints.",
     "type": {
      "$id": "1089",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.FineTuningJob.id",
     "serializationOptions": {
      "$id": "1090",
      "json": {
       "$id": "1091",
       "name": "id"
      }
     }
    },
    {
     "$id": "1092",
     "kind": "property",
     "name": "object",
     "serializedName": "object",
     "doc": "The object type, which is always \"fine_tuning.job\".",
     "type": {
      "$id": "1093",
      "kind": "constant",
      "valueType": {
       "$ref": "128"
      },
      "value": "fine_tuning.job",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.FineTuningJob.object",
     "serializationOptions": {
      "$id": "1094",
      "json": {
       "$id": "1095",
       "name": "object"
      }
     }
    },
    {
     "$id": "1096",
     "kind": "property",
     "name": "created_at",
     "serializedName": "created_at",
     "doc": "The Unix timestamp (in seconds) for when the fine-tuning job was created.",
     "type": {
      "$id": "1097",
      "kind": "utcDateTime",
      "name": "utcDateTime",
      "encode": "unixTimestamp",
      "wireType": {
       "$id": "1098",
       "kind": "int32",
       "name": "int32",
       "crossLanguageDefinitionId": "TypeSpec.int32",
       "decorators": []
      },
      "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.FineTuningJob.created_at",
     "serializationOptions": {
      "$id": "1099",
      "json": {
       "$id": "1100",
       "name": "created_at"
      }
     }
    },
    {
     "$id": "1101",
     "kind": "property",
     "name": "finished_at",
     "serializedName": "finished_at",
     "doc": "The Unix timestamp (in seconds) for when the fine-tuning job was finished. The value will be\nnull if the fine-tuning job is still running.",
     "type": {
      "$id": "1102",
      "kind": "nullable",
      "type": {
       "$id": "1103",
       "kind": "utcDateTime",
       "name": "utcDateTime",
       "encode": "unixTimestamp",
       "wireType": {
        "$id": "1104",
        "kind": "int32",
        "name": "int32",
        "crossLanguageDefinitionId": "TypeSpec.int32",
        "decorators": []
       },
       "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
       "decorators": []
      }
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.FineTuningJob.finished_at",
     "serializationOptions": {
      "$id": "1105",
      "json": {
       "$id": "1106",
       "name": "finished_at"
      }
     }
    },
    {
     "$id": "1107",
     "kind": "property",
     "name": "model",
     "serializedName": "model",
     "doc": "The base model that is being fine-tuned.",
     "type": {
      "$id": "1108",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.FineTuningJob.model",
     "serializationOptions": {
      "$id": "1109",
      "json": {
       "$id": "1110",
       "name": "model"
      }
     }
    },
    {
     "$id": "1111",
     "kind": "property",
     "name": "fine_tuned_model",
     "serializedName": "fine_tuned_model",
     "doc": "The name of the fine-tuned model that is being created. The value will be null if the\nfine-tuning job is still running.",
     "type": {
      "$id": "1112",
      "kind": "nullable",
      "type": {
       "$id": "1113",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      }
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.FineTuningJob.fine_tuned_model",
     "serializationOptions": {
      "$id": "1114",
      "json": {
       "$id": "1115",
       "name": "fine_tuned_model"
      }
     }
    },
    {
     "$id": "1116",
     "kind": "property",
     "name": "organization_id",
     "serializedName": "organization_id",
     "doc": "The organization that owns the fine-tuning job.",
     "type": {
      "$id": "1117",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.FineTuningJob.organization_id",
     "serializationOptions": {
      "$id": "1118",
      "json": {
       "$id": "1119",
       "name": "organization_id"
      }
     }
    },
    {
     "$id": "1120",
     "kind": "property",
     "name": "status",
     "serializedName": "status",
     "doc": "The current status of the fine-tuning job, which can be either `created`, `pending`, `running`,\n`succeeded`, `failed`, or `cancelled`.",
     "type": {
      "$ref": "131"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.FineTuningJob.status",
     "serializationOptions": {
      "$id": "1121",
      "json": {
       "$id": "1122",
       "name": "status"
      }
     }
    },
    {
     "$id": "1123",
     "kind": "property",
     "name": "hyperparameters",
     "serializedName": "hyperparameters",
     "doc": "The hyperparameters used for the fine-tuning job. See the\n[fine-tuning guide](/docs/guides/fine-tuning) for more details.",
     "type": {
      "$id": "1124",
      "kind": "model",
      "name": "FineTuningJobHyperparameters",
      "crossLanguageDefinitionId": "OpenAI.FineTuningJob.hyperparameters.anonymous",
      "usage": "Output,Json",
      "decorators": [],
      "properties": [
       {
        "$id": "1125",
        "kind": "property",
        "name": "n_epochs",
        "serializedName": "n_epochs",
        "doc": "The number of epochs to train the model for. An epoch refers to one full cycle through the\ntraining dataset.\n\n\"Auto\" decides the optimal number of epochs based on the size of the dataset. If setting the\nnumber manually, we support any number between 1 and 50 epochs.",
        "type": {
         "$id": "1126",
         "kind": "union",
         "name": "FineTuningJobHyperparametersNEpochs",
         "variantTypes": [
          {
           "$id": "1127",
           "kind": "constant",
           "valueType": {
            "$id": "1128",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           },
           "value": "auto",
           "decorators": []
          },
          {
           "$id": "1129",
           "kind": "safeint",
           "name": "NEpochs",
           "crossLanguageDefinitionId": "OpenAI.NEpochs",
           "baseType": {
            "$id": "1130",
            "kind": "safeint",
            "name": "safeint",
            "crossLanguageDefinitionId": "TypeSpec.safeint",
            "decorators": []
           },
           "decorators": []
          }
         ],
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "OpenAI.FineTuningJob.hyperparameters.anonymous.n_epochs",
        "serializationOptions": {
         "$id": "1131",
         "json": {
          "$id": "1132",
          "name": "n_epochs"
         }
        }
       }
      ]
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.FineTuningJob.hyperparameters",
     "serializationOptions": {
      "$id": "1133",
      "json": {
       "$id": "1134",
       "name": "hyperparameters"
      }
     }
    },
    {
     "$id": "1135",
     "kind": "property",
     "name": "training_file",
     "serializedName": "training_file",
     "doc": "The file ID used for training. You can retrieve the training data with the\n[Files API](/docs/api-reference/files/retrieve-contents).",
     "type": {
      "$id": "1136",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.FineTuningJob.training_file",
     "serializationOptions": {
      "$id": "1137",
      "json": {
       "$id": "1138",
       "name": "training_file"
      }
     }
    },
    {
     "$id": "1139",
     "kind": "property",
     "name": "validation_file",
     "serializedName": "validation_file",
     "doc": "The file ID used for validation. You can retrieve the validation results with the\n[Files API](/docs/api-reference/files/retrieve-contents).",
     "type": {
      "$id": "1140",
      "kind": "nullable",
      "type": {
       "$id": "1141",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      }
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.FineTuningJob.validation_file",
     "serializationOptions": {
      "$id": "1142",
      "json": {
       "$id": "1143",
       "name": "validation_file"
      }
     }
    },
    {
     "$id": "1144",
     "kind": "property",
     "name": "result_files",
     "serializedName": "result_files",
     "doc": "The compiled results file ID(s) for the fine-tuning job. You can retrieve the results with the\n[Files API](/docs/api-reference/files/retrieve-contents).",
     "type": {
      "$id": "1145",
      "kind": "array",
      "name": "Array",
      "valueType": {
       "$id": "1146",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.FineTuningJob.result_files",
     "serializationOptions": {
      "$id": "1147",
      "json": {
       "$id": "1148",
       "name": "result_files"
      }
     }
    },
    {
     "$id": "1149",
     "kind": "property",
     "name": "trained_tokens",
     "serializedName": "trained_tokens",
     "doc": "The total number of billable tokens processed by this fine tuning job. The value will be null\nif the fine-tuning job is still running.",
     "type": {
      "$id": "1150",
      "kind": "nullable",
      "type": {
       "$id": "1151",
       "kind": "safeint",
       "name": "safeint",
       "crossLanguageDefinitionId": "TypeSpec.safeint",
       "decorators": []
      }
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.FineTuningJob.trained_tokens",
     "serializationOptions": {
      "$id": "1152",
      "json": {
       "$id": "1153",
       "name": "trained_tokens"
      }
     }
    },
    {
     "$id": "1154",
     "kind": "property",
     "name": "error",
     "serializedName": "error",
     "doc": "For fine-tuning jobs that have `failed`, this will contain more information on the cause of the\nfailure.",
     "type": {
      "$id": "1155",
      "kind": "nullable",
      "type": {
       "$id": "1156",
       "kind": "model",
       "name": "FineTuningJobError",
       "crossLanguageDefinitionId": "OpenAI.FineTuningJob.error.anonymous",
       "usage": "Output,Json",
       "decorators": [],
       "properties": [
        {
         "$id": "1157",
         "kind": "property",
         "name": "message",
         "serializedName": "message",
         "doc": "A human-readable error message.",
         "type": {
          "$id": "1158",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": true,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.FineTuningJob.error.anonymous.message",
         "serializationOptions": {
          "$id": "1159",
          "json": {
           "$id": "1160",
           "name": "message"
          }
         }
        },
        {
         "$id": "1161",
         "kind": "property",
         "name": "code",
         "serializedName": "code",
         "doc": "A machine-readable error code.",
         "type": {
          "$id": "1162",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": true,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.FineTuningJob.error.anonymous.code",
         "serializationOptions": {
          "$id": "1163",
          "json": {
           "$id": "1164",
           "name": "code"
          }
         }
        },
        {
         "$id": "1165",
         "kind": "property",
         "name": "param",
         "serializedName": "param",
         "doc": "The parameter that was invalid, usually `training_file` or `validation_file`. This field\nwill be null if the failure was not parameter-specific.",
         "type": {
          "$id": "1166",
          "kind": "nullable",
          "type": {
           "$id": "1167",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          }
         },
         "optional": true,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.FineTuningJob.error.anonymous.param",
         "serializationOptions": {
          "$id": "1168",
          "json": {
           "$id": "1169",
           "name": "param"
          }
         }
        }
       ]
      }
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.FineTuningJob.error",
     "serializationOptions": {
      "$id": "1170",
      "json": {
       "$id": "1171",
       "name": "error"
      }
     }
    }
   ]
  },
  {
   "$ref": "1124"
  },
  {
   "$ref": "1156"
  },
  {
   "$id": "1172",
   "kind": "model",
   "name": "ListPaginatedFineTuningJobsResponse",
   "crossLanguageDefinitionId": "OpenAI.ListPaginatedFineTuningJobsResponse",
   "usage": "Output,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "1173",
     "kind": "property",
     "name": "object",
     "serializedName": "object",
     "type": {
      "$id": "1174",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.ListPaginatedFineTuningJobsResponse.object",
     "serializationOptions": {
      "$id": "1175",
      "json": {
       "$id": "1176",
       "name": "object"
      }
     }
    },
    {
     "$id": "1177",
     "kind": "property",
     "name": "data",
     "serializedName": "data",
     "type": {
      "$id": "1178",
      "kind": "array",
      "name": "ArrayFineTuningJob",
      "valueType": {
       "$ref": "1087"
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.ListPaginatedFineTuningJobsResponse.data",
     "serializationOptions": {
      "$id": "1179",
      "json": {
       "$id": "1180",
       "name": "data"
      }
     }
    },
    {
     "$id": "1181",
     "kind": "property",
     "name": "has_more",
     "serializedName": "has_more",
     "type": {
      "$id": "1182",
      "kind": "boolean",
      "name": "boolean",
      "crossLanguageDefinitionId": "TypeSpec.boolean",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.ListPaginatedFineTuningJobsResponse.has_more",
     "serializationOptions": {
      "$id": "1183",
      "json": {
       "$id": "1184",
       "name": "has_more"
      }
     }
    }
   ]
  },
  {
   "$id": "1185",
   "kind": "model",
   "name": "ListFineTuningJobEventsResponse",
   "crossLanguageDefinitionId": "OpenAI.ListFineTuningJobEventsResponse",
   "usage": "Output,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "1186",
     "kind": "property",
     "name": "object",
     "serializedName": "object",
     "type": {
      "$id": "1187",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.ListFineTuningJobEventsResponse.object",
     "serializationOptions": {
      "$id": "1188",
      "json": {
       "$id": "1189",
       "name": "object"
      }
     }
    },
    {
     "$id": "1190",
     "kind": "property",
     "name": "data",
     "serializedName": "data",
     "type": {
      "$id": "1191",
      "kind": "array",
      "name": "ArrayFineTuningJobEvent",
      "valueType": {
       "$id": "1192",
       "kind": "model",
       "name": "FineTuningJobEvent",
       "crossLanguageDefinitionId": "OpenAI.FineTuningJobEvent",
       "usage": "Output,Json",
       "decorators": [],
       "properties": [
        {
         "$id": "1193",
         "kind": "property",
         "name": "id",
         "serializedName": "id",
         "type": {
          "$id": "1194",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.FineTuningJobEvent.id",
         "serializationOptions": {
          "$id": "1195",
          "json": {
           "$id": "1196",
           "name": "id"
          }
         }
        },
        {
         "$id": "1197",
         "kind": "property",
         "name": "object",
         "serializedName": "object",
         "type": {
          "$id": "1198",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.FineTuningJobEvent.object",
         "serializationOptions": {
          "$id": "1199",
          "json": {
           "$id": "1200",
           "name": "object"
          }
         }
        },
        {
         "$id": "1201",
         "kind": "property",
         "name": "created_at",
         "serializedName": "created_at",
         "type": {
          "$id": "1202",
          "kind": "utcDateTime",
          "name": "utcDateTime",
          "encode": "unixTimestamp",
          "wireType": {
           "$id": "1203",
           "kind": "int32",
           "name": "int32",
           "crossLanguageDefinitionId": "TypeSpec.int32",
           "decorators": []
          },
          "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.FineTuningJobEvent.created_at",
         "serializationOptions": {
          "$id": "1204",
          "json": {
           "$id": "1205",
           "name": "created_at"
          }
         }
        },
        {
         "$id": "1206",
         "kind": "property",
         "name": "level",
         "serializedName": "level",
         "type": {
          "$ref": "145"
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.FineTuningJobEvent.level",
         "serializationOptions": {
          "$id": "1207",
          "json": {
           "$id": "1208",
           "name": "level"
          }
         }
        },
        {
         "$id": "1209",
         "kind": "property",
         "name": "message",
         "serializedName": "message",
         "type": {
          "$id": "1210",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.FineTuningJobEvent.message",
         "serializationOptions": {
          "$id": "1211",
          "json": {
           "$id": "1212",
           "name": "message"
          }
         }
        }
       ]
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.ListFineTuningJobEventsResponse.data",
     "serializationOptions": {
      "$id": "1213",
      "json": {
       "$id": "1214",
       "name": "data"
      }
     }
    }
   ]
  },
  {
   "$ref": "1192"
  },
  {
   "$id": "1215",
   "kind": "model",
   "name": "ChatCompletionRequestMessage",
   "crossLanguageDefinitionId": "OpenAI.ChatCompletionRequestMessage",
   "usage": "Input,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "1216",
     "kind": "property",
     "name": "role",
     "serializedName": "role",
     "doc": "The role of the messages author. One of `system`, `user`, `assistant`, or `function`.",
     "type": {
      "$ref": "177"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.ChatCompletionRequestMessage.role",
     "serializationOptions": {
      "$id": "1217",
      "json": {
       "$id": "1218",
       "name": "role"
      }
     }
    },
    {
     "$id": "1219",
     "kind": "property",
     "name": "content",
     "serializedName": "content",
     "doc": "The contents of the message. `content` is required for all messages, and may be null for\nassistant messages with function calls.",
     "type": {
      "$id": "1220",
      "kind": "nullable",
      "type": {
       "$id": "1221",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      }
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.ChatCompletionRequestMessage.content",
     "serializationOptions": {
      "$id": "1222",
      "json": {
       "$id": "1223",
       "name": "content"
      }
     }
    },
    {
     "$id": "1224",
     "kind": "property",
     "name": "name",
     "serializedName": "name",
     "doc": "The name of the author of this message. `name` is required if role is `function`, and it\nshould be the name of the function whose response is in the `content`. May contain a-z,\nA-Z, 0-9, and underscores, with a maximum length of 64 characters.",
     "type": {
      "$id": "1225",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.ChatCompletionRequestMessage.name",
     "serializationOptions": {
      "$id": "1226",
      "json": {
       "$id": "1227",
       "name": "name"
      }
     }
    },
    {
     "$id": "1228",
     "kind": "property",
     "name": "function_call",
     "serializedName": "function_call",
     "doc": "The name and arguments of a function that should be called, as generated by the model.",
     "type": {
      "$id": "1229",
      "kind": "model",
      "name": "ChatCompletionRequestMessageFunctionCall",
      "crossLanguageDefinitionId": "OpenAI.ChatCompletionRequestMessage.function_call.anonymous",
      "usage": "Input,Json",
      "decorators": [],
      "properties": [
       {
        "$id": "1230",
        "kind": "property",
        "name": "name",
        "serializedName": "name",
        "doc": "The name of the function to call.",
        "type": {
         "$id": "1231",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "OpenAI.ChatCompletionRequestMessage.function_call.anonymous.name",
        "serializationOptions": {
         "$id": "1232",
         "json": {
          "$id": "1233",
          "name": "name"
         }
        }
       },
       {
        "$id": "1234",
        "kind": "property",
        "name": "arguments",
        "serializedName": "arguments",
        "doc": "The arguments to call the function with, as generated by the model in JSON format. Note that\nthe model does not always generate valid JSON, and may hallucinate parameters not defined by\nyour function schema. Validate the arguments in your code before calling your function.",
        "type": {
         "$id": "1235",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "OpenAI.ChatCompletionRequestMessage.function_call.anonymous.arguments",
        "serializationOptions": {
         "$id": "1236",
         "json": {
          "$id": "1237",
          "name": "arguments"
         }
        }
       }
      ]
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.ChatCompletionRequestMessage.function_call",
     "serializationOptions": {
      "$id": "1238",
      "json": {
       "$id": "1239",
       "name": "function_call"
      }
     }
    }
   ]
  },
  {
   "$ref": "1229"
  },
  {
   "$id": "1240",
   "kind": "model",
   "name": "ChatCompletionFunctions",
   "crossLanguageDefinitionId": "OpenAI.ChatCompletionFunctions",
   "usage": "Input,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "1241",
     "kind": "property",
     "name": "name",
     "serializedName": "name",
     "doc": "The name of the function to be called. Must be a-z, A-Z, 0-9, or contain underscores and\ndashes, with a maximum length of 64.",
     "type": {
      "$id": "1242",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.ChatCompletionFunctions.name",
     "serializationOptions": {
      "$id": "1243",
      "json": {
       "$id": "1244",
       "name": "name"
      }
     }
    },
    {
     "$id": "1245",
     "kind": "property",
     "name": "description",
     "serializedName": "description",
     "doc": "A description of what the function does, used by the model to choose when and how to call the\nfunction.",
     "type": {
      "$id": "1246",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.ChatCompletionFunctions.description",
     "serializationOptions": {
      "$id": "1247",
      "json": {
       "$id": "1248",
       "name": "description"
      }
     }
    },
    {
     "$id": "1249",
     "kind": "property",
     "name": "parameters",
     "serializedName": "parameters",
     "doc": "The parameters the functions accepts, described as a JSON Schema object. See the\n[guide](/docs/guides/gpt/function-calling) for examples, and the\n[JSON Schema reference](https://json-schema.org/understanding-json-schema/) for documentation\nabout the format.\\n\\nTo describe a function that accepts no parameters, provide the value\n`{\\\"type\\\": \\\"object\\\", \\\"properties\\\": {}}`.",
     "type": {
      "$id": "1250",
      "kind": "model",
      "name": "ChatCompletionFunctionParameters",
      "crossLanguageDefinitionId": "OpenAI.ChatCompletionFunctionParameters",
      "usage": "Input,Json",
      "decorators": [],
      "additionalProperties": {
       "$id": "1251",
       "kind": "unknown",
       "name": "unknown",
       "crossLanguageDefinitionId": "",
       "decorators": []
      },
      "properties": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.ChatCompletionFunctions.parameters",
     "serializationOptions": {
      "$id": "1252",
      "json": {
       "$id": "1253",
       "name": "parameters"
      }
     }
    }
   ]
  },
  {
   "$ref": "1250"
  },
  {
   "$id": "1254",
   "kind": "model",
   "name": "ChatCompletionFunctionCallOption",
   "crossLanguageDefinitionId": "OpenAI.ChatCompletionFunctionCallOption",
   "usage": "Input,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "1255",
     "kind": "property",
     "name": "name",
     "serializedName": "name",
     "doc": "The name of the function to call.",
     "type": {
      "$id": "1256",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.ChatCompletionFunctionCallOption.name",
     "serializationOptions": {
      "$id": "1257",
      "json": {
       "$id": "1258",
       "name": "name"
      }
     }
    }
   ]
  },
  {
   "$id": "1259",
   "kind": "model",
   "name": "CreateChatCompletionRequest",
   "crossLanguageDefinitionId": "OpenAI.CreateChatCompletionRequest",
   "usage": "Spread,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "1260",
     "kind": "property",
     "name": "model",
     "serializedName": "model",
     "doc": "ID of the model to use. See the [model endpoint compatibility](/docs/models/model-endpoint-compatibility)\ntable for details on which models work with the Chat API.",
     "type": {
      "$ref": "153"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateChatCompletionRequest.model",
     "serializationOptions": {
      "$id": "1261",
      "json": {
       "$id": "1262",
       "name": "model"
      }
     }
    },
    {
     "$id": "1263",
     "kind": "property",
     "name": "messages",
     "serializedName": "messages",
     "doc": "A list of messages comprising the conversation so far.\n[Example Python code](https://github.com/openai/openai-cookbook/blob/main/examples/How_to_format_inputs_to_ChatGPT_models.ipynb).",
     "type": {
      "$id": "1264",
      "kind": "array",
      "name": "ArrayChatCompletionRequestMessage",
      "valueType": {
       "$ref": "1215"
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateChatCompletionRequest.messages",
     "serializationOptions": {
      "$id": "1265",
      "json": {
       "$id": "1266",
       "name": "messages"
      }
     }
    },
    {
     "$id": "1267",
     "kind": "property",
     "name": "functions",
     "serializedName": "functions",
     "doc": "A list of functions the model may generate JSON inputs for.",
     "type": {
      "$id": "1268",
      "kind": "array",
      "name": "ArrayChatCompletionFunctions",
      "valueType": {
       "$ref": "1240"
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateChatCompletionRequest.functions",
     "serializationOptions": {
      "$id": "1269",
      "json": {
       "$id": "1270",
       "name": "functions"
      }
     }
    },
    {
     "$id": "1271",
     "kind": "property",
     "name": "function_call",
     "serializedName": "function_call",
     "doc": "Controls how the model responds to function calls. `none` means the model does not call a\nfunction, and responds to the end-user. `auto` means the model can pick between an end-user or\ncalling a function.  Specifying a particular function via `{\\\"name\":\\ \\\"my_function\\\"}` forces the\nmodel to call that function. `none` is the default when no functions are present. `auto` is the\ndefault if functions are present.",
     "type": {
      "$id": "1272",
      "kind": "union",
      "name": "CreateChatCompletionRequestFunctionCall1",
      "variantTypes": [
       {
        "$id": "1273",
        "kind": "constant",
        "valueType": {
         "$id": "1274",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "none",
        "decorators": []
       },
       {
        "$id": "1275",
        "kind": "constant",
        "valueType": {
         "$id": "1276",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "auto",
        "decorators": []
       },
       {
        "$ref": "1254"
       }
      ],
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateChatCompletionRequest.function_call",
     "serializationOptions": {
      "$id": "1277",
      "json": {
       "$id": "1278",
       "name": "function_call"
      }
     }
    },
    {
     "$id": "1279",
     "kind": "property",
     "name": "temperature",
     "serializedName": "temperature",
     "doc": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output\nmore random, while lower values like 0.2 will make it more focused and deterministic.\n\nWe generally recommend altering this or `top_p` but not both.",
     "type": {
      "$ref": "917"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateChatCompletionRequest.temperature",
     "serializationOptions": {
      "$id": "1280",
      "json": {
       "$id": "1281",
       "name": "temperature"
      }
     }
    },
    {
     "$id": "1282",
     "kind": "property",
     "name": "top_p",
     "serializedName": "top_p",
     "doc": "An alternative to sampling with temperature, called nucleus sampling, where the model considers\nthe results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising\nthe top 10% probability mass are considered.\n\nWe generally recommend altering this or `temperature` but not both.",
     "type": {
      "$ref": "923"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateChatCompletionRequest.top_p",
     "serializationOptions": {
      "$id": "1283",
      "json": {
       "$id": "1284",
       "name": "top_p"
      }
     }
    },
    {
     "$id": "1285",
     "kind": "property",
     "name": "n",
     "serializedName": "n",
     "doc": "How many completions to generate for each prompt.\n**Note:** Because this parameter generates many completions, it can quickly consume your token\nquota. Use carefully and ensure that you have reasonable settings for `max_tokens` and `stop`.",
     "type": {
      "$ref": "929"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateChatCompletionRequest.n",
     "serializationOptions": {
      "$id": "1286",
      "json": {
       "$id": "1287",
       "name": "n"
      }
     }
    },
    {
     "$id": "1288",
     "kind": "property",
     "name": "max_tokens",
     "serializedName": "max_tokens",
     "doc": "The maximum number of [tokens](/tokenizer) to generate in the completion.\n\nThe token count of your prompt plus `max_tokens` cannot exceed the model's context length.\n[Example Python code](https://github.com/openai/openai-cookbook/blob/main/examples/How_to_count_tokens_with_tiktoken.ipynb)\nfor counting tokens.",
     "type": {
      "$ref": "935"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateChatCompletionRequest.max_tokens",
     "serializationOptions": {
      "$id": "1289",
      "json": {
       "$id": "1290",
       "name": "max_tokens"
      }
     }
    },
    {
     "$id": "1291",
     "kind": "property",
     "name": "stop",
     "serializedName": "stop",
     "doc": "Up to 4 sequences where the API will stop generating further tokens.",
     "type": {
      "$ref": "941"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateChatCompletionRequest.stop",
     "serializationOptions": {
      "$id": "1292",
      "json": {
       "$id": "1293",
       "name": "stop"
      }
     }
    },
    {
     "$id": "1294",
     "kind": "property",
     "name": "presence_penalty",
     "serializedName": "presence_penalty",
     "doc": "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear\nin the text so far, increasing the model's likelihood to talk about new topics.\n\n[See more information about frequency and presence penalties.](/docs/guides/gpt/parameter-details)",
     "type": {
      "$ref": "949"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateChatCompletionRequest.presence_penalty",
     "serializationOptions": {
      "$id": "1295",
      "json": {
       "$id": "1296",
       "name": "presence_penalty"
      }
     }
    },
    {
     "$id": "1297",
     "kind": "property",
     "name": "frequency_penalty",
     "serializedName": "frequency_penalty",
     "doc": "Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing\nfrequency in the text so far, decreasing the model's likelihood to repeat the same line\nverbatim.\n\n[See more information about frequency and presence penalties.](/docs/guides/gpt/parameter-details)",
     "type": {
      "$ref": "955"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateChatCompletionRequest.frequency_penalty",
     "serializationOptions": {
      "$id": "1298",
      "json": {
       "$id": "1299",
       "name": "frequency_penalty"
      }
     }
    },
    {
     "$id": "1300",
     "kind": "property",
     "name": "logit_bias",
     "serializedName": "logit_bias",
     "doc": "Modify the likelihood of specified tokens appearing in the completion.\nAccepts a json object that maps tokens (specified by their token ID in the tokenizer) to an\nassociated bias value from -100 to 100. Mathematically, the bias is added to the logits\ngenerated by the model prior to sampling. The exact effect will vary per model, but values\nbetween -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100\nshould result in a ban or exclusive selection of the relevant token.",
     "type": {
      "$ref": "961"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateChatCompletionRequest.logit_bias",
     "serializationOptions": {
      "$id": "1301",
      "json": {
       "$id": "1302",
       "name": "logit_bias"
      }
     }
    },
    {
     "$id": "1303",
     "kind": "property",
     "name": "user",
     "serializedName": "user",
     "doc": "A unique identifier representing your end-user, which can help OpenAI to monitor and detect\nabuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).",
     "type": {
      "$id": "1304",
      "kind": "string",
      "name": "User",
      "crossLanguageDefinitionId": "OpenAI.User",
      "baseType": {
       "$id": "1305",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateChatCompletionRequest.user",
     "serializationOptions": {
      "$id": "1306",
      "json": {
       "$id": "1307",
       "name": "user"
      }
     }
    },
    {
     "$id": "1308",
     "kind": "property",
     "name": "stream",
     "serializedName": "stream",
     "doc": "If set, partial message deltas will be sent, like in ChatGPT. Tokens will be sent as data-only\n[server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format)\nas they become available, with the stream terminated by a `data: [DONE]` message.\n[Example Python code](https://github.com/openai/openai-cookbook/blob/main/examples/How_to_stream_completions.ipynb).",
     "type": {
      "$ref": "973"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateChatCompletionRequest.stream",
     "serializationOptions": {
      "$id": "1309",
      "json": {
       "$id": "1310",
       "name": "stream"
      }
     }
    }
   ]
  },
  {
   "$id": "1311",
   "kind": "model",
   "name": "CreateChatCompletionResponse",
   "crossLanguageDefinitionId": "OpenAI.CreateChatCompletionResponse",
   "usage": "Output,Json",
   "doc": "Represents a chat completion response returned by model, based on the provided input.",
   "decorators": [],
   "properties": [
    {
     "$id": "1312",
     "kind": "property",
     "name": "id",
     "serializedName": "id",
     "doc": "A unique identifier for the chat completion.",
     "type": {
      "$id": "1313",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateChatCompletionResponse.id",
     "serializationOptions": {
      "$id": "1314",
      "json": {
       "$id": "1315",
       "name": "id"
      }
     }
    },
    {
     "$id": "1316",
     "kind": "property",
     "name": "object",
     "serializedName": "object",
     "doc": "The object type, which is always `chat.completion`.",
     "type": {
      "$id": "1317",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateChatCompletionResponse.object",
     "serializationOptions": {
      "$id": "1318",
      "json": {
       "$id": "1319",
       "name": "object"
      }
     }
    },
    {
     "$id": "1320",
     "kind": "property",
     "name": "created",
     "serializedName": "created",
     "doc": "The Unix timestamp (in seconds) of when the chat completion was created.",
     "type": {
      "$id": "1321",
      "kind": "utcDateTime",
      "name": "utcDateTime",
      "encode": "unixTimestamp",
      "wireType": {
       "$id": "1322",
       "kind": "int32",
       "name": "int32",
       "crossLanguageDefinitionId": "TypeSpec.int32",
       "decorators": []
      },
      "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateChatCompletionResponse.created",
     "serializationOptions": {
      "$id": "1323",
      "json": {
       "$id": "1324",
       "name": "created"
      }
     }
    },
    {
     "$id": "1325",
     "kind": "property",
     "name": "model",
     "serializedName": "model",
     "doc": "The model used for the chat completion.",
     "type": {
      "$id": "1326",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateChatCompletionResponse.model",
     "serializationOptions": {
      "$id": "1327",
      "json": {
       "$id": "1328",
       "name": "model"
      }
     }
    },
    {
     "$id": "1329",
     "kind": "property",
     "name": "choices",
     "serializedName": "choices",
     "doc": "A list of chat completion choices. Can be more than one if `n` is greater than 1.",
     "type": {
      "$id": "1330",
      "kind": "array",
      "name": "Array",
      "valueType": {
       "$id": "1331",
       "kind": "model",
       "name": "CreateChatCompletionResponseChoice",
       "crossLanguageDefinitionId": "OpenAI.CreateChatCompletionResponse.choice.anonymous",
       "usage": "Output,Json",
       "decorators": [],
       "properties": [
        {
         "$id": "1332",
         "kind": "property",
         "name": "index",
         "serializedName": "index",
         "doc": "The index of the choice in the list of choices.",
         "type": {
          "$id": "1333",
          "kind": "safeint",
          "name": "safeint",
          "crossLanguageDefinitionId": "TypeSpec.safeint",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.CreateChatCompletionResponse.choice.anonymous.index",
         "serializationOptions": {
          "$id": "1334",
          "json": {
           "$id": "1335",
           "name": "index"
          }
         }
        },
        {
         "$id": "1336",
         "kind": "property",
         "name": "message",
         "serializedName": "message",
         "type": {
          "$id": "1337",
          "kind": "model",
          "name": "ChatCompletionResponseMessage",
          "crossLanguageDefinitionId": "OpenAI.ChatCompletionResponseMessage",
          "usage": "Output,Json",
          "decorators": [],
          "properties": [
           {
            "$id": "1338",
            "kind": "property",
            "name": "role",
            "serializedName": "role",
            "doc": "The role of the author of this message.",
            "type": {
             "$ref": "187"
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "OpenAI.ChatCompletionResponseMessage.role",
            "serializationOptions": {
             "$id": "1339",
             "json": {
              "$id": "1340",
              "name": "role"
             }
            }
           },
           {
            "$id": "1341",
            "kind": "property",
            "name": "content",
            "serializedName": "content",
            "doc": "The contents of the message.",
            "type": {
             "$id": "1342",
             "kind": "nullable",
             "type": {
              "$id": "1343",
              "kind": "string",
              "name": "string",
              "crossLanguageDefinitionId": "TypeSpec.string",
              "decorators": []
             }
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "OpenAI.ChatCompletionResponseMessage.content",
            "serializationOptions": {
             "$id": "1344",
             "json": {
              "$id": "1345",
              "name": "content"
             }
            }
           },
           {
            "$id": "1346",
            "kind": "property",
            "name": "function_call",
            "serializedName": "function_call",
            "doc": "The name and arguments of a function that should be called, as generated by the model.",
            "type": {
             "$id": "1347",
             "kind": "model",
             "name": "ChatCompletionResponseMessageFunctionCall",
             "crossLanguageDefinitionId": "OpenAI.ChatCompletionResponseMessage.function_call.anonymous",
             "usage": "Output,Json",
             "decorators": [],
             "properties": [
              {
               "$id": "1348",
               "kind": "property",
               "name": "name",
               "serializedName": "name",
               "doc": "The name of the function to call.",
               "type": {
                "$id": "1349",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
               },
               "optional": false,
               "readOnly": false,
               "discriminator": false,
               "flatten": false,
               "decorators": [],
               "crossLanguageDefinitionId": "OpenAI.ChatCompletionResponseMessage.function_call.anonymous.name",
               "serializationOptions": {
                "$id": "1350",
                "json": {
                 "$id": "1351",
                 "name": "name"
                }
               }
              },
              {
               "$id": "1352",
               "kind": "property",
               "name": "arguments",
               "serializedName": "arguments",
               "doc": "The arguments to call the function with, as generated by the model in JSON format. Note that\nthe model does not always generate valid JSON, and may hallucinate parameters not defined by\nyour function schema. Validate the arguments in your code before calling your function.",
               "type": {
                "$id": "1353",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
               },
               "optional": false,
               "readOnly": false,
               "discriminator": false,
               "flatten": false,
               "decorators": [],
               "crossLanguageDefinitionId": "OpenAI.ChatCompletionResponseMessage.function_call.anonymous.arguments",
               "serializationOptions": {
                "$id": "1354",
                "json": {
                 "$id": "1355",
                 "name": "arguments"
                }
               }
              }
             ]
            },
            "optional": true,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "OpenAI.ChatCompletionResponseMessage.function_call",
            "serializationOptions": {
             "$id": "1356",
             "json": {
              "$id": "1357",
              "name": "function_call"
             }
            }
           }
          ]
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.CreateChatCompletionResponse.choice.anonymous.message",
         "serializationOptions": {
          "$id": "1358",
          "json": {
           "$id": "1359",
           "name": "message"
          }
         }
        },
        {
         "$id": "1360",
         "kind": "property",
         "name": "finish_reason",
         "serializedName": "finish_reason",
         "doc": "The reason the model stopped generating tokens. This will be `stop` if the model hit a\nnatural stop point or a provided stop sequence, `length` if the maximum number of tokens\nspecified in the request was reached, `content_filter` if the content was omitted due to\na flag from our content filters, or `function_call` if the model called a function.",
         "type": {
          "$ref": "197"
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "OpenAI.CreateChatCompletionResponse.choice.anonymous.finish_reason",
         "serializationOptions": {
          "$id": "1361",
          "json": {
           "$id": "1362",
           "name": "finish_reason"
          }
         }
        }
       ]
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateChatCompletionResponse.choices",
     "serializationOptions": {
      "$id": "1363",
      "json": {
       "$id": "1364",
       "name": "choices"
      }
     }
    },
    {
     "$id": "1365",
     "kind": "property",
     "name": "usage",
     "serializedName": "usage",
     "type": {
      "$ref": "879"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateChatCompletionResponse.usage",
     "serializationOptions": {
      "$id": "1366",
      "json": {
       "$id": "1367",
       "name": "usage"
      }
     }
    }
   ]
  },
  {
   "$ref": "1331"
  },
  {
   "$ref": "1337"
  },
  {
   "$ref": "1347"
  },
  {
   "$id": "1368",
   "kind": "model",
   "name": "CreateTranslationRequest",
   "crossLanguageDefinitionId": "OpenAI.CreateTranslationRequest",
   "usage": "Input,MultipartFormData",
   "decorators": [],
   "properties": [
    {
     "$id": "1369",
     "kind": "property",
     "name": "file",
     "serializedName": "file",
     "doc": "The audio file object (not file name) to translate, in one of these formats: flac, mp3, mp4,\nmpeg, mpga, m4a, ogg, wav, or webm.",
     "type": {
      "$id": "1370",
      "kind": "bytes",
      "name": "bytes",
      "encode": "base64",
      "crossLanguageDefinitionId": "TypeSpec.bytes",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateTranslationRequest.file",
     "serializationOptions": {
      "$id": "1371",
      "multipart": {
       "$id": "1372",
       "isFilePart": true,
       "isMulti": false,
       "defaultContentTypes": [],
       "name": "file"
      }
     }
    },
    {
     "$id": "1373",
     "kind": "property",
     "name": "model",
     "serializedName": "model",
     "doc": "ID of the model to use. Only `whisper-1` is currently available.",
     "type": {
      "$ref": "207"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateTranslationRequest.model",
     "serializationOptions": {
      "$id": "1374",
      "multipart": {
       "$id": "1375",
       "isFilePart": false,
       "isMulti": false,
       "defaultContentTypes": [],
       "name": "model"
      }
     }
    },
    {
     "$id": "1376",
     "kind": "property",
     "name": "prompt",
     "serializedName": "prompt",
     "doc": "An optional text to guide the model's style or continue a previous audio segment. The\n[prompt](/docs/guides/speech-to-text/prompting) should match the audio language.",
     "type": {
      "$id": "1377",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateTranslationRequest.prompt",
     "serializationOptions": {
      "$id": "1378",
      "multipart": {
       "$id": "1379",
       "isFilePart": false,
       "isMulti": false,
       "defaultContentTypes": [],
       "name": "prompt"
      }
     }
    },
    {
     "$id": "1380",
     "kind": "property",
     "name": "response_format",
     "serializedName": "response_format",
     "doc": "The format of the transcript output, in one of these options: json, text, srt, verbose_json, or\nvtt.",
     "type": {
      "$ref": "211"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateTranslationRequest.response_format",
     "serializationOptions": {
      "$id": "1381",
      "multipart": {
       "$id": "1382",
       "isFilePart": false,
       "isMulti": false,
       "defaultContentTypes": [],
       "name": "response_format"
      }
     }
    },
    {
     "$id": "1383",
     "kind": "property",
     "name": "temperature",
     "serializedName": "temperature",
     "doc": "The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more\nrandom, while lower values like 0.2 will make it more focused and deterministic. If set to 0,\nthe model will use [log probability](https://en.wikipedia.org/wiki/Log_probability) to\nautomatically increase the temperature until certain thresholds are hit.",
     "type": {
      "$id": "1384",
      "kind": "float64",
      "name": "float64",
      "crossLanguageDefinitionId": "TypeSpec.float64",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateTranslationRequest.temperature",
     "serializationOptions": {
      "$id": "1385",
      "multipart": {
       "$id": "1386",
       "isFilePart": false,
       "isMulti": false,
       "defaultContentTypes": [],
       "name": "temperature"
      }
     }
    }
   ]
  },
  {
   "$id": "1387",
   "kind": "model",
   "name": "CreateTranslationResponse",
   "crossLanguageDefinitionId": "OpenAI.CreateTranslationResponse",
   "usage": "Output,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "1388",
     "kind": "property",
     "name": "text",
     "serializedName": "text",
     "type": {
      "$id": "1389",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateTranslationResponse.text",
     "serializationOptions": {
      "$id": "1390",
      "json": {
       "$id": "1391",
       "name": "text"
      }
     }
    }
   ]
  },
  {
   "$id": "1392",
   "kind": "model",
   "name": "CreateTranscriptionRequest",
   "crossLanguageDefinitionId": "OpenAI.CreateTranscriptionRequest",
   "usage": "Input,MultipartFormData",
   "decorators": [],
   "properties": [
    {
     "$id": "1393",
     "kind": "property",
     "name": "file",
     "serializedName": "file",
     "doc": "The audio file object (not file name) to transcribe, in one of these formats: flac, mp3, mp4,\nmpeg, mpga, m4a, ogg, wav, or webm.",
     "type": {
      "$id": "1394",
      "kind": "bytes",
      "name": "bytes",
      "encode": "base64",
      "crossLanguageDefinitionId": "TypeSpec.bytes",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateTranscriptionRequest.file",
     "serializationOptions": {
      "$id": "1395",
      "multipart": {
       "$id": "1396",
       "isFilePart": true,
       "isMulti": false,
       "defaultContentTypes": [],
       "name": "file"
      }
     }
    },
    {
     "$id": "1397",
     "kind": "property",
     "name": "model",
     "serializedName": "model",
     "doc": "ID of the model to use. Only `whisper-1` is currently available.",
     "type": {
      "$ref": "223"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateTranscriptionRequest.model",
     "serializationOptions": {
      "$id": "1398",
      "multipart": {
       "$id": "1399",
       "isFilePart": false,
       "isMulti": false,
       "defaultContentTypes": [],
       "name": "model"
      }
     }
    },
    {
     "$id": "1400",
     "kind": "property",
     "name": "prompt",
     "serializedName": "prompt",
     "doc": "An optional text to guide the model's style or continue a previous audio segment. The\n[prompt](/docs/guides/speech-to-text/prompting) should match the audio language.",
     "type": {
      "$id": "1401",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateTranscriptionRequest.prompt",
     "serializationOptions": {
      "$id": "1402",
      "multipart": {
       "$id": "1403",
       "isFilePart": false,
       "isMulti": false,
       "defaultContentTypes": [],
       "name": "prompt"
      }
     }
    },
    {
     "$id": "1404",
     "kind": "property",
     "name": "response_format",
     "serializedName": "response_format",
     "doc": "The format of the transcript output, in one of these options: json, text, srt, verbose_json, or\nvtt.",
     "type": {
      "$ref": "227"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateTranscriptionRequest.response_format",
     "serializationOptions": {
      "$id": "1405",
      "multipart": {
       "$id": "1406",
       "isFilePart": false,
       "isMulti": false,
       "defaultContentTypes": [],
       "name": "response_format"
      }
     }
    },
    {
     "$id": "1407",
     "kind": "property",
     "name": "temperature",
     "serializedName": "temperature",
     "doc": "The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more\nrandom, while lower values like 0.2 will make it more focused and deterministic. If set to 0,\nthe model will use [log probability](https://en.wikipedia.org/wiki/Log_probability) to\nautomatically increase the temperature until certain thresholds are hit.",
     "type": {
      "$id": "1408",
      "kind": "float64",
      "name": "float64",
      "crossLanguageDefinitionId": "TypeSpec.float64",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateTranscriptionRequest.temperature",
     "serializationOptions": {
      "$id": "1409",
      "multipart": {
       "$id": "1410",
       "isFilePart": false,
       "isMulti": false,
       "defaultContentTypes": [],
       "name": "temperature"
      }
     }
    },
    {
     "$id": "1411",
     "kind": "property",
     "name": "language",
     "serializedName": "language",
     "doc": "The language of the input audio. Supplying the input language in\n[ISO-639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format will improve accuracy\nand latency.",
     "type": {
      "$id": "1412",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateTranscriptionRequest.language",
     "serializationOptions": {
      "$id": "1413",
      "multipart": {
       "$id": "1414",
       "isFilePart": false,
       "isMulti": false,
       "defaultContentTypes": [],
       "name": "language"
      }
     }
    }
   ]
  },
  {
   "$id": "1415",
   "kind": "model",
   "name": "CreateTranscriptionResponse",
   "crossLanguageDefinitionId": "OpenAI.CreateTranscriptionResponse",
   "usage": "Output,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "1416",
     "kind": "property",
     "name": "text",
     "serializedName": "text",
     "type": {
      "$id": "1417",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "OpenAI.CreateTranscriptionResponse.text",
     "serializationOptions": {
      "$id": "1418",
      "json": {
       "$id": "1419",
       "name": "text"
      }
     }
    }
   ]
  }
 ],
 "Clients": [
  {
   "$id": "1420",
   "Name": "OpenAIClient",
   "Doc": "The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.",
   "Operations": [],
   "Protocol": {
    "$id": "1421"
   },
   "Parameters": [
    {
     "$id": "1422",
     "Name": "endpoint",
     "NameInRequest": "endpoint",
     "Doc": "Service host",
     "Type": {
      "$id": "1423",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "Location": "Uri",
     "IsApiVersion": false,
     "IsResourceParameter": false,
     "IsContentType": false,
     "IsRequired": true,
     "IsEndpoint": true,
     "SkipUrlEncoding": false,
     "Explode": false,
     "Kind": "Client",
     "DefaultValue": {
      "$id": "1424",
      "Type": {
       "$id": "1425",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string"
      },
      "Value": "https://api.openai.com/v1"
     }
    }
   ],
   "Decorators": []
  },
  {
   "$id": "1426",
   "Name": "Audio",
   "Operations": [],
   "Protocol": {
    "$id": "1427"
   },
   "Parent": "OpenAIClient",
   "Parameters": [
    {
     "$id": "1428",
     "Name": "endpoint",
     "NameInRequest": "endpoint",
     "Doc": "Service host",
     "Type": {
      "$id": "1429",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "Location": "Uri",
     "IsApiVersion": false,
     "IsResourceParameter": false,
     "IsContentType": false,
     "IsRequired": true,
     "IsEndpoint": true,
     "SkipUrlEncoding": false,
     "Explode": false,
     "Kind": "Client",
     "DefaultValue": {
      "$id": "1430",
      "Type": {
       "$id": "1431",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string"
      },
      "Value": "https://api.openai.com/v1"
     }
    }
   ],
   "Decorators": []
  },
  {
   "$id": "1432",
   "Name": "AudioTranscriptions",
   "Operations": [
    {
     "$id": "1433",
     "Name": "create",
     "ResourceName": "Transcriptions",
     "Summary": "Transcribes audio into the input language.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "1434",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Type": {
        "$id": "1435",
        "kind": "constant",
        "valueType": {
         "$id": "1436",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "multipart/form-data",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1437",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1438",
        "kind": "constant",
        "valueType": {
         "$id": "1439",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1440",
       "Name": "audio",
       "NameInRequest": "audio",
       "Type": {
        "$ref": "1392"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1441",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "1415"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{endpoint}",
     "Path": "/audio/transcriptions",
     "RequestMediaTypes": [
      "multipart/form-data"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "OpenAI.Audio.Transcriptions.create",
     "Decorators": []
    }
   ],
   "Protocol": {
    "$id": "1442"
   },
   "Parent": "Audio",
   "Parameters": [
    {
     "$id": "1443",
     "Name": "endpoint",
     "NameInRequest": "endpoint",
     "Doc": "Service host",
     "Type": {
      "$id": "1444",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "Location": "Uri",
     "IsApiVersion": false,
     "IsResourceParameter": false,
     "IsContentType": false,
     "IsRequired": true,
     "IsEndpoint": true,
     "SkipUrlEncoding": false,
     "Explode": false,
     "Kind": "Client",
     "DefaultValue": {
      "$id": "1445",
      "Type": {
       "$id": "1446",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string"
      },
      "Value": "https://api.openai.com/v1"
     }
    }
   ],
   "Decorators": []
  },
  {
   "$id": "1447",
   "Name": "AudioTranslations",
   "Operations": [
    {
     "$id": "1448",
     "Name": "create",
     "ResourceName": "Translations",
     "Summary": "Transcribes audio into the input language.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "1449",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Type": {
        "$id": "1450",
        "kind": "constant",
        "valueType": {
         "$id": "1451",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "multipart/form-data",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1452",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1453",
        "kind": "constant",
        "valueType": {
         "$id": "1454",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1455",
       "Name": "audio",
       "NameInRequest": "audio",
       "Type": {
        "$ref": "1368"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1456",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "1387"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{endpoint}",
     "Path": "/audio/translations",
     "RequestMediaTypes": [
      "multipart/form-data"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "OpenAI.Audio.Translations.create",
     "Decorators": []
    }
   ],
   "Protocol": {
    "$id": "1457"
   },
   "Parent": "Audio",
   "Parameters": [
    {
     "$id": "1458",
     "Name": "endpoint",
     "NameInRequest": "endpoint",
     "Doc": "Service host",
     "Type": {
      "$id": "1459",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "Location": "Uri",
     "IsApiVersion": false,
     "IsResourceParameter": false,
     "IsContentType": false,
     "IsRequired": true,
     "IsEndpoint": true,
     "SkipUrlEncoding": false,
     "Explode": false,
     "Kind": "Client",
     "DefaultValue": {
      "$id": "1460",
      "Type": {
       "$id": "1461",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string"
      },
      "Value": "https://api.openai.com/v1"
     }
    }
   ],
   "Decorators": []
  },
  {
   "$id": "1462",
   "Name": "Chat",
   "Operations": [],
   "Protocol": {
    "$id": "1463"
   },
   "Parent": "OpenAIClient",
   "Parameters": [
    {
     "$id": "1464",
     "Name": "endpoint",
     "NameInRequest": "endpoint",
     "Doc": "Service host",
     "Type": {
      "$id": "1465",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "Location": "Uri",
     "IsApiVersion": false,
     "IsResourceParameter": false,
     "IsContentType": false,
     "IsRequired": true,
     "IsEndpoint": true,
     "SkipUrlEncoding": false,
     "Explode": false,
     "Kind": "Client",
     "DefaultValue": {
      "$id": "1466",
      "Type": {
       "$id": "1467",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string"
      },
      "Value": "https://api.openai.com/v1"
     }
    }
   ],
   "Decorators": []
  },
  {
   "$id": "1468",
   "Name": "ChatCompletions",
   "Operations": [
    {
     "$id": "1469",
     "Name": "create",
     "ResourceName": "Completions",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "1470",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Doc": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "1471",
        "kind": "constant",
        "valueType": {
         "$id": "1472",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1473",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1474",
        "kind": "constant",
        "valueType": {
         "$id": "1475",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1476",
       "Name": "createChatCompletionRequest",
       "NameInRequest": "createChatCompletionRequest",
       "Type": {
        "$ref": "1259"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Spread",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1477",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "1311"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{endpoint}",
     "Path": "/chat/completions",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "OpenAI.Chat.Completions.create",
     "Decorators": []
    }
   ],
   "Protocol": {
    "$id": "1478"
   },
   "Parent": "Chat",
   "Parameters": [
    {
     "$id": "1479",
     "Name": "endpoint",
     "NameInRequest": "endpoint",
     "Doc": "Service host",
     "Type": {
      "$id": "1480",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "Location": "Uri",
     "IsApiVersion": false,
     "IsResourceParameter": false,
     "IsContentType": false,
     "IsRequired": true,
     "IsEndpoint": true,
     "SkipUrlEncoding": false,
     "Explode": false,
     "Kind": "Client",
     "DefaultValue": {
      "$id": "1481",
      "Type": {
       "$id": "1482",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string"
      },
      "Value": "https://api.openai.com/v1"
     }
    }
   ],
   "Decorators": []
  },
  {
   "$id": "1483",
   "Name": "FineTuning",
   "Operations": [],
   "Protocol": {
    "$id": "1484"
   },
   "Parent": "OpenAIClient",
   "Parameters": [
    {
     "$id": "1485",
     "Name": "endpoint",
     "NameInRequest": "endpoint",
     "Doc": "Service host",
     "Type": {
      "$id": "1486",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "Location": "Uri",
     "IsApiVersion": false,
     "IsResourceParameter": false,
     "IsContentType": false,
     "IsRequired": true,
     "IsEndpoint": true,
     "SkipUrlEncoding": false,
     "Explode": false,
     "Kind": "Client",
     "DefaultValue": {
      "$id": "1487",
      "Type": {
       "$id": "1488",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string"
      },
      "Value": "https://api.openai.com/v1"
     }
    }
   ],
   "Decorators": []
  },
  {
   "$id": "1489",
   "Name": "FineTuningJobs",
   "Operations": [
    {
     "$id": "1490",
     "Name": "create",
     "ResourceName": "Jobs",
     "Doc": "Creates a job that fine-tunes a specified model from a given dataset.\n\nResponse includes details of the enqueued job including job status and the name of the\nfine-tuned models once complete.\n\n[Learn more about fine-tuning](/docs/guides/fine-tuning)",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "1491",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Doc": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "1492",
        "kind": "constant",
        "valueType": {
         "$id": "1493",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1494",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1495",
        "kind": "constant",
        "valueType": {
         "$id": "1496",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1497",
       "Name": "job",
       "NameInRequest": "job",
       "Type": {
        "$ref": "1056"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1498",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "1087"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{endpoint}",
     "Path": "/fine_tuning/jobs",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "OpenAI.FineTuning.Jobs.create",
     "Decorators": []
    },
    {
     "$id": "1499",
     "Name": "listPaginated",
     "ResourceName": "Jobs",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "1500",
       "Name": "after",
       "NameInRequest": "after",
       "Doc": "Identifier for the last job from the previous pagination request.",
       "Type": {
        "$id": "1501",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1502",
       "Name": "limit",
       "NameInRequest": "limit",
       "Doc": "Number of fine-tuning jobs to retrieve.",
       "Type": {
        "$id": "1503",
        "kind": "safeint",
        "name": "safeint",
        "crossLanguageDefinitionId": "TypeSpec.safeint",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1504",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1505",
        "kind": "constant",
        "valueType": {
         "$id": "1506",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1507",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "1172"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}",
     "Path": "/fine_tuning/jobs",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "OpenAI.FineTuning.Jobs.listPaginated",
     "Decorators": []
    },
    {
     "$id": "1508",
     "Name": "retrieve",
     "ResourceName": "Jobs",
     "Summary": "Get info about a fine-tuning job.\n\n[Learn more about fine-tuning](/docs/guides/fine-tuning)",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "1509",
       "Name": "fine_tuning_job_id",
       "NameInRequest": "fine_tuning_job_id",
       "Type": {
        "$id": "1510",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1511",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1512",
        "kind": "constant",
        "valueType": {
         "$id": "1513",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1514",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "1087"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}",
     "Path": "/fine_tuning/jobs/{fine_tuning_job_id}",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "OpenAI.FineTuning.Jobs.retrieve",
     "Decorators": []
    },
    {
     "$id": "1515",
     "Name": "listEvents",
     "ResourceName": "Jobs",
     "Summary": "Get status updates for a fine-tuning job.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "1516",
       "Name": "fine_tuning_job_id",
       "NameInRequest": "fine_tuning_job_id",
       "Doc": "The ID of the fine-tuning job to get events for.",
       "Type": {
        "$id": "1517",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1518",
       "Name": "after",
       "NameInRequest": "after",
       "Doc": "Identifier for the last event from the previous pagination request.",
       "Type": {
        "$id": "1519",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1520",
       "Name": "limit",
       "NameInRequest": "limit",
       "Doc": "Number of events to retrieve.",
       "Type": {
        "$id": "1521",
        "kind": "integer",
        "name": "integer",
        "crossLanguageDefinitionId": "TypeSpec.integer",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1522",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1523",
        "kind": "constant",
        "valueType": {
         "$id": "1524",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1525",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "1185"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}",
     "Path": "/fine_tuning/jobs/{fine_tuning_job_id}/events",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "OpenAI.FineTuning.Jobs.listEvents",
     "Decorators": []
    },
    {
     "$id": "1526",
     "Name": "cancel",
     "ResourceName": "Jobs",
     "Summary": "Immediately cancel a fine-tune job.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "1527",
       "Name": "fine_tuning_job_id",
       "NameInRequest": "fine_tuning_job_id",
       "Doc": "The ID of the fine-tuning job to cancel.",
       "Type": {
        "$id": "1528",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1529",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1530",
        "kind": "constant",
        "valueType": {
         "$id": "1531",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1532",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "1087"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}",
     "Path": "/fine_tuning/jobs/{fine_tuning_job_id}/cancel",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "OpenAI.FineTuning.Jobs.cancel",
     "Decorators": []
    }
   ],
   "Protocol": {
    "$id": "1533"
   },
   "Parent": "FineTuning",
   "Parameters": [
    {
     "$id": "1534",
     "Name": "endpoint",
     "NameInRequest": "endpoint",
     "Doc": "Service host",
     "Type": {
      "$id": "1535",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "Location": "Uri",
     "IsApiVersion": false,
     "IsResourceParameter": false,
     "IsContentType": false,
     "IsRequired": true,
     "IsEndpoint": true,
     "SkipUrlEncoding": false,
     "Explode": false,
     "Kind": "Client",
     "DefaultValue": {
      "$id": "1536",
      "Type": {
       "$id": "1537",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string"
      },
      "Value": "https://api.openai.com/v1"
     }
    }
   ],
   "Decorators": []
  },
  {
   "$id": "1538",
   "Name": "Completions",
   "Operations": [
    {
     "$id": "1539",
     "Name": "create",
     "ResourceName": "Completions",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "1540",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Doc": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "1541",
        "kind": "constant",
        "valueType": {
         "$id": "1542",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1543",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1544",
        "kind": "constant",
        "valueType": {
         "$id": "1545",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1546",
       "Name": "createCompletionRequest",
       "NameInRequest": "createCompletionRequest",
       "Type": {
        "$ref": "894"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Spread",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1547",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "992"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{endpoint}",
     "Path": "/completions",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "OpenAI.Completions.create",
     "Decorators": []
    }
   ],
   "Protocol": {
    "$id": "1548"
   },
   "Parent": "OpenAIClient",
   "Parameters": [
    {
     "$id": "1549",
     "Name": "endpoint",
     "NameInRequest": "endpoint",
     "Doc": "Service host",
     "Type": {
      "$id": "1550",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "Location": "Uri",
     "IsApiVersion": false,
     "IsResourceParameter": false,
     "IsContentType": false,
     "IsRequired": true,
     "IsEndpoint": true,
     "SkipUrlEncoding": false,
     "Explode": false,
     "Kind": "Client",
     "DefaultValue": {
      "$id": "1551",
      "Type": {
       "$id": "1552",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string"
      },
      "Value": "https://api.openai.com/v1"
     }
    }
   ],
   "Decorators": []
  },
  {
   "$id": "1553",
   "Name": "Edits",
   "Operations": [
    {
     "$id": "1554",
     "Name": "create",
     "ResourceName": "Edits",
     "Deprecated": "deprecated",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "1555",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Doc": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "1556",
        "kind": "constant",
        "valueType": {
         "$id": "1557",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1558",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1559",
        "kind": "constant",
        "valueType": {
         "$id": "1560",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1561",
       "Name": "edit",
       "NameInRequest": "edit",
       "Type": {
        "$ref": "821"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1562",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "852"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{endpoint}",
     "Path": "/edits",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "OpenAI.Edits.create",
     "Decorators": []
    }
   ],
   "Protocol": {
    "$id": "1563"
   },
   "Parent": "OpenAIClient",
   "Parameters": [
    {
     "$id": "1564",
     "Name": "endpoint",
     "NameInRequest": "endpoint",
     "Doc": "Service host",
     "Type": {
      "$id": "1565",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "Location": "Uri",
     "IsApiVersion": false,
     "IsResourceParameter": false,
     "IsContentType": false,
     "IsRequired": true,
     "IsEndpoint": true,
     "SkipUrlEncoding": false,
     "Explode": false,
     "Kind": "Client",
     "DefaultValue": {
      "$id": "1566",
      "Type": {
       "$id": "1567",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string"
      },
      "Value": "https://api.openai.com/v1"
     }
    }
   ],
   "Decorators": []
  },
  {
   "$id": "1568",
   "Name": "Embeddings",
   "Operations": [
    {
     "$id": "1569",
     "Name": "create",
     "ResourceName": "Embeddings",
     "Summary": "Creates an embedding vector representing the input text.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "1570",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Doc": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "1571",
        "kind": "constant",
        "valueType": {
         "$id": "1572",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1573",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1574",
        "kind": "constant",
        "valueType": {
         "$id": "1575",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1576",
       "Name": "embedding",
       "NameInRequest": "embedding",
       "Type": {
        "$ref": "761"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1577",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "782"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{endpoint}",
     "Path": "/embeddings",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "OpenAI.Embeddings.create",
     "Decorators": []
    }
   ],
   "Protocol": {
    "$id": "1578"
   },
   "Parent": "OpenAIClient",
   "Parameters": [
    {
     "$id": "1579",
     "Name": "endpoint",
     "NameInRequest": "endpoint",
     "Doc": "Service host",
     "Type": {
      "$id": "1580",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "Location": "Uri",
     "IsApiVersion": false,
     "IsResourceParameter": false,
     "IsContentType": false,
     "IsRequired": true,
     "IsEndpoint": true,
     "SkipUrlEncoding": false,
     "Explode": false,
     "Kind": "Client",
     "DefaultValue": {
      "$id": "1581",
      "Type": {
       "$id": "1582",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string"
      },
      "Value": "https://api.openai.com/v1"
     }
    }
   ],
   "Decorators": []
  },
  {
   "$id": "1583",
   "Name": "Files",
   "Operations": [
    {
     "$id": "1584",
     "Name": "list",
     "ResourceName": "Files",
     "Summary": "Returns a list of files that belong to the user's organization.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "1585",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1586",
        "kind": "constant",
        "valueType": {
         "$id": "1587",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1588",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "730"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}",
     "Path": "/files",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "OpenAI.Files.list",
     "Decorators": []
    },
    {
     "$id": "1589",
     "Name": "create",
     "ResourceName": "Files",
     "Summary": "Returns a list of files that belong to the user's organization.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "1590",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Type": {
        "$id": "1591",
        "kind": "constant",
        "valueType": {
         "$id": "1592",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "multipart/form-data",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1593",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1594",
        "kind": "constant",
        "valueType": {
         "$id": "1595",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1596",
       "Name": "file",
       "NameInRequest": "file",
       "Type": {
        "$ref": "739"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1597",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "646"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{endpoint}",
     "Path": "/files",
     "RequestMediaTypes": [
      "multipart/form-data"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "OpenAI.Files.create",
     "Decorators": []
    },
    {
     "$id": "1598",
     "Name": "retrieve",
     "ResourceName": "Files",
     "Summary": "Returns information about a specific file.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "1599",
       "Name": "file_id",
       "NameInRequest": "file_id",
       "Doc": "The ID of the file to use for this request.",
       "Type": {
        "$id": "1600",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1601",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1602",
        "kind": "constant",
        "valueType": {
         "$id": "1603",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1604",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "646"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}",
     "Path": "/files/files/{file_id}",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "OpenAI.Files.retrieve",
     "Decorators": []
    },
    {
     "$id": "1605",
     "Name": "delete",
     "ResourceName": "Files",
     "Summary": "Delete a file",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "1606",
       "Name": "file_id",
       "NameInRequest": "file_id",
       "Doc": "The ID of the file to use for this request.",
       "Type": {
        "$id": "1607",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1608",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1609",
        "kind": "constant",
        "valueType": {
         "$id": "1610",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1611",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "748"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "DELETE",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}",
     "Path": "/files/files/{file_id}",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "OpenAI.Files.delete",
     "Decorators": []
    },
    {
     "$id": "1612",
     "Name": "download",
     "ResourceName": "Files",
     "Summary": "Returns the contents of the specified file.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "1613",
       "Name": "file_id",
       "NameInRequest": "file_id",
       "Doc": "The ID of the file to use for this request.",
       "Type": {
        "$id": "1614",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1615",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1616",
        "kind": "constant",
        "valueType": {
         "$id": "1617",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1618",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$id": "1619",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}",
     "Path": "/files/files/{file_id}/content",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "OpenAI.Files.download",
     "Decorators": []
    }
   ],
   "Protocol": {
    "$id": "1620"
   },
   "Parent": "OpenAIClient",
   "Parameters": [
    {
     "$id": "1621",
     "Name": "endpoint",
     "NameInRequest": "endpoint",
     "Doc": "Service host",
     "Type": {
      "$id": "1622",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "Location": "Uri",
     "IsApiVersion": false,
     "IsResourceParameter": false,
     "IsContentType": false,
     "IsRequired": true,
     "IsEndpoint": true,
     "SkipUrlEncoding": false,
     "Explode": false,
     "Kind": "Client",
     "DefaultValue": {
      "$id": "1623",
      "Type": {
       "$id": "1624",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string"
      },
      "Value": "https://api.openai.com/v1"
     }
    }
   ],
   "Decorators": []
  },
  {
   "$id": "1625",
   "Name": "FineTunes",
   "Operations": [
    {
     "$id": "1626",
     "Name": "create",
     "ResourceName": "FineTunes",
     "Deprecated": "deprecated",
     "Summary": "Creates a job that fine-tunes a specified model from a given dataset.\n\nResponse includes details of the enqueued job including job status and the name of the fine-tuned models once complete.\n\n[Learn more about fine-tuning](/docs/guides/legacy-fine-tuning)",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "1627",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Doc": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "1628",
        "kind": "constant",
        "valueType": {
         "$id": "1629",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1630",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1631",
        "kind": "constant",
        "valueType": {
         "$id": "1632",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1633",
       "Name": "fine_tune",
       "NameInRequest": "fine_tune",
       "Type": {
        "$ref": "516"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1634",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "577"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{endpoint}",
     "Path": "/fine-tunes",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "OpenAI.FineTunes.create",
     "Decorators": []
    },
    {
     "$id": "1635",
     "Name": "list",
     "ResourceName": "FineTunes",
     "Deprecated": "deprecated",
     "Summary": "List your organization's fine-tuning jobs",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "1636",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1637",
        "kind": "constant",
        "valueType": {
         "$id": "1638",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1639",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "712"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}",
     "Path": "/fine-tunes",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "OpenAI.FineTunes.list",
     "Decorators": []
    },
    {
     "$id": "1640",
     "Name": "retrieve",
     "ResourceName": "FineTunes",
     "Deprecated": "deprecated",
     "Summary": "Gets info about the fine-tune job.\n\n[Learn more about fine-tuning](/docs/guides/legacy-fine-tuning)",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "1641",
       "Name": "fine_tune_id",
       "NameInRequest": "fine_tune_id",
       "Doc": "The ID of the fine-tune job",
       "Type": {
        "$id": "1642",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1643",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1644",
        "kind": "constant",
        "valueType": {
         "$id": "1645",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1646",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "577"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}",
     "Path": "/fine-tunes/{fine_tune_id}",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "OpenAI.FineTunes.retrieve",
     "Decorators": []
    },
    {
     "$id": "1647",
     "Name": "listEvents",
     "ResourceName": "FineTunes",
     "Deprecated": "deprecated",
     "Summary": "Get fine-grained status updates for a fine-tune job.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "1648",
       "Name": "fine_tune_id",
       "NameInRequest": "fine_tune_id",
       "Doc": "The ID of the fine-tune job to get events for.",
       "Type": {
        "$id": "1649",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1650",
       "Name": "stream",
       "NameInRequest": "stream",
       "Doc": "Whether to stream events for the fine-tune job. If set to true, events will be sent as\ndata-only\n[server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format)\nas they become available. The stream will terminate with a `data: [DONE]` message when the\njob is finished (succeeded, cancelled, or failed).\n\nIf set to false, only events generated so far will be returned.",
       "Type": {
        "$id": "1651",
        "kind": "boolean",
        "name": "boolean",
        "crossLanguageDefinitionId": "TypeSpec.boolean",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1652",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1653",
        "kind": "constant",
        "valueType": {
         "$id": "1654",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1655",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "721"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}",
     "Path": "/fine-tunes/{fine_tune_id}/events",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "OpenAI.FineTunes.listEvents",
     "Decorators": []
    },
    {
     "$id": "1656",
     "Name": "cancel",
     "ResourceName": "FineTunes",
     "Deprecated": "deprecated",
     "Summary": "Immediately cancel a fine-tune job.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "1657",
       "Name": "fine_tune_id",
       "NameInRequest": "fine_tune_id",
       "Doc": "The ID of the fine-tune job to cancel",
       "Type": {
        "$id": "1658",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1659",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1660",
        "kind": "constant",
        "valueType": {
         "$id": "1661",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1662",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "577"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}",
     "Path": "/fine-tunes/{fine_tune_id}/cancel",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "OpenAI.FineTunes.cancel",
     "Decorators": []
    }
   ],
   "Protocol": {
    "$id": "1663"
   },
   "Parent": "OpenAIClient",
   "Parameters": [
    {
     "$id": "1664",
     "Name": "endpoint",
     "NameInRequest": "endpoint",
     "Doc": "Service host",
     "Type": {
      "$id": "1665",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "Location": "Uri",
     "IsApiVersion": false,
     "IsResourceParameter": false,
     "IsContentType": false,
     "IsRequired": true,
     "IsEndpoint": true,
     "SkipUrlEncoding": false,
     "Explode": false,
     "Kind": "Client",
     "DefaultValue": {
      "$id": "1666",
      "Type": {
       "$id": "1667",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string"
      },
      "Value": "https://api.openai.com/v1"
     }
    }
   ],
   "Decorators": []
  },
  {
   "$id": "1668",
   "Name": "ModelsOps",
   "Operations": [
    {
     "$id": "1669",
     "Name": "list",
     "ResourceName": "Models",
     "Summary": "Lists the currently available models, and provides basic information about each one such as the\nowner and availability.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "1670",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1671",
        "kind": "constant",
        "valueType": {
         "$id": "1672",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1673",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "476"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}",
     "Path": "/models",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "OpenAI.Models.list",
     "Decorators": []
    },
    {
     "$id": "1674",
     "Name": "retrieve",
     "ResourceName": "Models",
     "Summary": "Retrieves a model instance, providing basic information about the model such as the owner and\npermissioning.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "1675",
       "Name": "model",
       "NameInRequest": "model",
       "Doc": "The ID of the model to use for this request.",
       "Type": {
        "$id": "1676",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1677",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1678",
        "kind": "constant",
        "valueType": {
         "$id": "1679",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1680",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "483"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}",
     "Path": "/models/{model}",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "OpenAI.Models.retrieve",
     "Decorators": []
    },
    {
     "$id": "1681",
     "Name": "delete",
     "ResourceName": "Models",
     "Summary": "Delete a fine-tuned model. You must have the Owner role in your organization to delete a model.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "1682",
       "Name": "model",
       "NameInRequest": "model",
       "Doc": "The model to delete",
       "Type": {
        "$id": "1683",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1684",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1685",
        "kind": "constant",
        "valueType": {
         "$id": "1686",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1687",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "503"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "DELETE",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}",
     "Path": "/models/{model}",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "OpenAI.Models.delete",
     "Decorators": []
    }
   ],
   "Protocol": {
    "$id": "1688"
   },
   "Parent": "OpenAIClient",
   "Parameters": [
    {
     "$id": "1689",
     "Name": "endpoint",
     "NameInRequest": "endpoint",
     "Doc": "Service host",
     "Type": {
      "$id": "1690",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "Location": "Uri",
     "IsApiVersion": false,
     "IsResourceParameter": false,
     "IsContentType": false,
     "IsRequired": true,
     "IsEndpoint": true,
     "SkipUrlEncoding": false,
     "Explode": false,
     "Kind": "Client",
     "DefaultValue": {
      "$id": "1691",
      "Type": {
       "$id": "1692",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string"
      },
      "Value": "https://api.openai.com/v1"
     }
    }
   ],
   "Decorators": []
  },
  {
   "$id": "1693",
   "Name": "Images",
   "Operations": [
    {
     "$id": "1694",
     "Name": "create",
     "ResourceName": "Images",
     "Summary": "Creates an image given a prompt",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "1695",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Doc": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "1696",
        "kind": "constant",
        "valueType": {
         "$id": "1697",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1698",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1699",
        "kind": "constant",
        "valueType": {
         "$id": "1700",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1701",
       "Name": "image",
       "NameInRequest": "image",
       "Type": {
        "$ref": "387"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1702",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "411"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{endpoint}",
     "Path": "/images/generations",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "OpenAI.Images.create",
     "Decorators": []
    },
    {
     "$id": "1703",
     "Name": "createEdit",
     "ResourceName": "Images",
     "Summary": "Creates an edited or extended image given an original image and a prompt.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "1704",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Type": {
        "$id": "1705",
        "kind": "constant",
        "valueType": {
         "$id": "1706",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "multipart/form-data",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1707",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1708",
        "kind": "constant",
        "valueType": {
         "$id": "1709",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1710",
       "Name": "image",
       "NameInRequest": "image",
       "Type": {
        "$ref": "430"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1711",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "411"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{endpoint}",
     "Path": "/images/edits",
     "RequestMediaTypes": [
      "multipart/form-data"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "OpenAI.Images.createEdit",
     "Decorators": []
    },
    {
     "$id": "1712",
     "Name": "createVariation",
     "ResourceName": "Images",
     "Summary": "Creates an edited or extended image given an original image and a prompt.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "1713",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Type": {
        "$id": "1714",
        "kind": "constant",
        "valueType": {
         "$id": "1715",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "multipart/form-data",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1716",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1717",
        "kind": "constant",
        "valueType": {
         "$id": "1718",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1719",
       "Name": "image",
       "NameInRequest": "image",
       "Type": {
        "$ref": "457"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1720",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "411"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{endpoint}",
     "Path": "/images/variations",
     "RequestMediaTypes": [
      "multipart/form-data"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "OpenAI.Images.createVariation",
     "Decorators": []
    }
   ],
   "Protocol": {
    "$id": "1721"
   },
   "Parent": "OpenAIClient",
   "Parameters": [
    {
     "$id": "1722",
     "Name": "endpoint",
     "NameInRequest": "endpoint",
     "Doc": "Service host",
     "Type": {
      "$id": "1723",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "Location": "Uri",
     "IsApiVersion": false,
     "IsResourceParameter": false,
     "IsContentType": false,
     "IsRequired": true,
     "IsEndpoint": true,
     "SkipUrlEncoding": false,
     "Explode": false,
     "Kind": "Client",
     "DefaultValue": {
      "$id": "1724",
      "Type": {
       "$id": "1725",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string"
      },
      "Value": "https://api.openai.com/v1"
     }
    }
   ],
   "Decorators": []
  },
  {
   "$id": "1726",
   "Name": "Moderations",
   "Operations": [
    {
     "$id": "1727",
     "Name": "create",
     "ResourceName": "Moderations",
     "Summary": "Classifies if text violates OpenAI's Content Policy",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "1728",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Doc": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "1729",
        "kind": "constant",
        "valueType": {
         "$id": "1730",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1731",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1732",
        "kind": "constant",
        "valueType": {
         "$id": "1733",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1734",
       "Name": "content",
       "NameInRequest": "content",
       "Type": {
        "$ref": "239"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1735",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "250"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{endpoint}",
     "Path": "/moderations",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "OpenAI.Moderations.create",
     "Decorators": []
    }
   ],
   "Protocol": {
    "$id": "1736"
   },
   "Parent": "OpenAIClient",
   "Parameters": [
    {
     "$id": "1737",
     "Name": "endpoint",
     "NameInRequest": "endpoint",
     "Doc": "Service host",
     "Type": {
      "$id": "1738",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "Location": "Uri",
     "IsApiVersion": false,
     "IsResourceParameter": false,
     "IsContentType": false,
     "IsRequired": true,
     "IsEndpoint": true,
     "SkipUrlEncoding": false,
     "Explode": false,
     "Kind": "Client",
     "DefaultValue": {
      "$id": "1739",
      "Type": {
       "$id": "1740",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string"
      },
      "Value": "https://api.openai.com/v1"
     }
    }
   ],
   "Decorators": []
  }
 ],
 "Auth": {
  "$id": "1741",
  "ApiKey": {
   "$id": "1742",
   "Name": "Authorization",
   "In": "header",
   "Prefix": "Bearer"
  }
 }
}
