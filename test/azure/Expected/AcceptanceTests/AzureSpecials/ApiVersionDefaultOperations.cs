// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>

namespace Fixtures.Azure.AcceptanceTestsAzureSpecials
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.IO;
    using System.Linq;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// ApiVersionDefaultOperations operations.
    /// </summary>
    public partial class ApiVersionDefaultOperations : IApiVersionDefaultOperations
    {
        /// <summary>
        /// Initializes a new instance of the ApiVersionDefaultOperations class.
        /// </summary>
        /// <param name='operationsWithHttpMessages'>
        /// Reference to the low level operations
        /// </param>
        /// <exception cref='System.ArgumentNullException'>
        /// Thrown when a required parameter is null.
        /// </exception>
        public ApiVersionDefaultOperations(IApiVersionDefaultOperationsWithHttpMessages operationsWithHttpMessages)
        {
            if (operationsWithHttpMessages == null)
            {
                throw new System.ArgumentNullException(nameof(operationsWithHttpMessages));
            }
            OperationsWithHttpMessages = operationsWithHttpMessages;
        }

        private IApiVersionDefaultOperationsWithHttpMessages OperationsWithHttpMessages { get; set; }

        public IApiVersionDefaultOperationsWithHttpMessages WithHttpMessages()
        {
            return OperationsWithHttpMessages;
        }

        /// <summary>
        /// GET method with api-version modeled in global settings.
        /// </summary>
        public void GetMethodGlobalValid()
        {
            GetMethodGlobalValidAsync().GetAwaiter().GetResult();
        }

        /// <summary>
        /// GET method with api-version modeled in global settings.
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public async Task GetMethodGlobalValidAsync(CancellationToken cancellationToken = default(CancellationToken))
        {
            (await OperationsWithHttpMessages.GetMethodGlobalValidAsync(null, cancellationToken).ConfigureAwait(false)).Dispose();
        }

        /// <summary>
        /// GET method with api-version modeled in global settings.
        /// </summary>
        public void GetMethodGlobalNotProvidedValid()
        {
            GetMethodGlobalNotProvidedValidAsync().GetAwaiter().GetResult();
        }

        /// <summary>
        /// GET method with api-version modeled in global settings.
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public async Task GetMethodGlobalNotProvidedValidAsync(CancellationToken cancellationToken = default(CancellationToken))
        {
            (await OperationsWithHttpMessages.GetMethodGlobalNotProvidedValidAsync(null, cancellationToken).ConfigureAwait(false)).Dispose();
        }

        /// <summary>
        /// GET method with api-version modeled in global settings.
        /// </summary>
        public void GetPathGlobalValid()
        {
            GetPathGlobalValidAsync().GetAwaiter().GetResult();
        }

        /// <summary>
        /// GET method with api-version modeled in global settings.
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public async Task GetPathGlobalValidAsync(CancellationToken cancellationToken = default(CancellationToken))
        {
            (await OperationsWithHttpMessages.GetPathGlobalValidAsync(null, cancellationToken).ConfigureAwait(false)).Dispose();
        }

        /// <summary>
        /// GET method with api-version modeled in global settings.
        /// </summary>
        public void GetSwaggerGlobalValid()
        {
            GetSwaggerGlobalValidAsync().GetAwaiter().GetResult();
        }

        /// <summary>
        /// GET method with api-version modeled in global settings.
        /// </summary>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public async Task GetSwaggerGlobalValidAsync(CancellationToken cancellationToken = default(CancellationToken))
        {
            (await OperationsWithHttpMessages.GetSwaggerGlobalValidAsync(null, cancellationToken).ConfigureAwait(false)).Dispose();
        }

    }
}
