// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Scm._Type.Property.AdditionalProperties.Models
{
    /// <summary> The WidgetData1_kind. </summary>
    public readonly partial struct WidgetData1Kind : IEquatable<WidgetData1Kind>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="WidgetData1Kind"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public WidgetData1Kind(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string Kind1Value = "kind1";

        /// <summary> kind1. </summary>
        public static WidgetData1Kind Kind1 { get; } = new WidgetData1Kind(Kind1Value);
        /// <summary> Determines if two <see cref="WidgetData1Kind"/> values are the same. </summary>
        public static bool operator ==(WidgetData1Kind left, WidgetData1Kind right) => left.Equals(right);
        /// <summary> Determines if two <see cref="WidgetData1Kind"/> values are not the same. </summary>
        public static bool operator !=(WidgetData1Kind left, WidgetData1Kind right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="WidgetData1Kind"/>. </summary>
        public static implicit operator WidgetData1Kind(string value) => new WidgetData1Kind(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is WidgetData1Kind other && Equals(other);
        /// <inheritdoc />
        public bool Equals(WidgetData1Kind other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
