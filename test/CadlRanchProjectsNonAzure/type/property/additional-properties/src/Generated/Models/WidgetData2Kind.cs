// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Scm._Type.Property.AdditionalProperties.Models
{
    /// <summary> The WidgetData2_kind. </summary>
    public readonly partial struct WidgetData2Kind : IEquatable<WidgetData2Kind>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="WidgetData2Kind"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public WidgetData2Kind(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string Kind1Value = "kind1";

        /// <summary> kind1. </summary>
        public static WidgetData2Kind Kind1 { get; } = new WidgetData2Kind(Kind1Value);
        /// <summary> Determines if two <see cref="WidgetData2Kind"/> values are the same. </summary>
        public static bool operator ==(WidgetData2Kind left, WidgetData2Kind right) => left.Equals(right);
        /// <summary> Determines if two <see cref="WidgetData2Kind"/> values are not the same. </summary>
        public static bool operator !=(WidgetData2Kind left, WidgetData2Kind right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="WidgetData2Kind"/>. </summary>
        public static implicit operator WidgetData2Kind(string value) => new WidgetData2Kind(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is WidgetData2Kind other && Equals(other);
        /// <inheritdoc />
        public bool Equals(WidgetData2Kind other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
