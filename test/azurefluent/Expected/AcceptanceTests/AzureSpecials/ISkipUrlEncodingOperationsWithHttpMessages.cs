// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>

namespace Fixtures.Azure.Fluent.AcceptanceTestsAzureSpecials
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// SkipUrlEncodingOperations operations.
    /// </summary>
    public partial interface ISkipUrlEncodingOperationsWithHttpMessages
    {
        /// <summary>
        /// Get method with unencoded path parameter with value 'path1/path2/path3'
        /// </summary>
        /// <param name='unencodedPathParam'>
        /// Unencoded path parameter with value 'path1/path2/path3'
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref='ErrorException'>
        /// Thrown when the operation returned an invalid status code.
        /// </exception>
        /// <exception cref='Microsoft.Rest.ValidationException'>
        /// Thrown when a required parameter is null.
        /// </exception>
        Task<AzureOperationResponse> GetMethodPathValidAsync(string unencodedPathParam, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get method with unencoded path parameter with value 'path1/path2/path3'
        /// </summary>
        /// <param name='unencodedPathParam'>
        /// Unencoded path parameter with value 'path1/path2/path3'
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref='ErrorException'>
        /// Thrown when the operation returned an invalid status code.
        /// </exception>
        /// <exception cref='Microsoft.Rest.ValidationException'>
        /// Thrown when a required parameter is null.
        /// </exception>
        Task<AzureOperationResponse> GetPathPathValidAsync(string unencodedPathParam, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get method with unencoded path parameter with value 'path1/path2/path3'
        /// </summary>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref='ErrorException'>
        /// Thrown when the operation returned an invalid status code.
        /// </exception>
        /// <exception cref='Microsoft.Rest.ValidationException'>
        /// Thrown when a required parameter is null.
        /// </exception>
        Task<AzureOperationResponse> GetSwaggerPathValidAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get method with unencoded query parameter with value 'value1&amp;q2=value2&amp;q3=value3'
        /// </summary>
        /// <param name='q1'>
        /// Unencoded query parameter with value 'value1&amp;q2=value2&amp;q3=value3'
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref='ErrorException'>
        /// Thrown when the operation returned an invalid status code.
        /// </exception>
        /// <exception cref='Microsoft.Rest.ValidationException'>
        /// Thrown when a required parameter is null.
        /// </exception>
        Task<AzureOperationResponse> GetMethodQueryValidAsync(string q1, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get method with unencoded query parameter with value null
        /// </summary>
        /// <param name='q1'>
        /// Unencoded query parameter with value null
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref='ErrorException'>
        /// Thrown when the operation returned an invalid status code.
        /// </exception>
        Task<AzureOperationResponse> GetMethodQueryNullAsync(string q1 = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get method with unencoded query parameter with value 'value1&amp;q2=value2&amp;q3=value3'
        /// </summary>
        /// <param name='q1'>
        /// Unencoded query parameter with value 'value1&amp;q2=value2&amp;q3=value3'
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref='ErrorException'>
        /// Thrown when the operation returned an invalid status code.
        /// </exception>
        /// <exception cref='Microsoft.Rest.ValidationException'>
        /// Thrown when a required parameter is null.
        /// </exception>
        Task<AzureOperationResponse> GetPathQueryValidAsync(string q1, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get method with unencoded query parameter with value 'value1&amp;q2=value2&amp;q3=value3'
        /// </summary>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref='ErrorException'>
        /// Thrown when the operation returned an invalid status code.
        /// </exception>
        /// <exception cref='Microsoft.Rest.ValidationException'>
        /// Thrown when a required parameter is null.
        /// </exception>
        Task<AzureOperationResponse> GetSwaggerQueryValidAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
