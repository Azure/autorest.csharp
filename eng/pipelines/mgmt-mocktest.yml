trigger:
  branches:
    include:
    - feature/*
    - pipelinetest

pr:
  branches:
    include:
    - feature/*
    - pipelinetest

variables:
  BlobFeedUrl: https://azuresdkartifacts.blob.core.windows.net/azure-sdk-tools/index.json
  OfficialBuildId: $(Build.BuildNumber)
  NugetSecurityAnalysisWarningLevel: 'none'

resources:
  repositories:
    - repository: azure-sdk-tools
      type: github
      name: Azure/azure-sdk-tools
      endpoint: azure
    - repository: azure-sdk-for-net
      type: github
      name: Azure/azure-sdk-for-net
      endpoint: azure
    - repository: azure-sdk-build-tools
      type: git
      name: internal/azure-sdk-build-tools
      ref: refs/tags/azure-sdk-build-tools_20211215.1

stages:
  - stage: 'Build_and_Test'
    jobs:
      - job: MockInit
        timeoutInMinutes: 180
        pool:
          name: azsdk-pool-mms-win-2019-general
          vmImage: MMS2019
        steps:
          - checkout: self
          - checkout: azure-sdk-tools
          - task: UseDotNet@2
            displayName: 'Use .NET Core SDK'
            retryCountOnTaskFailure: 3
            inputs:
              useGlobalJson: true
              performMultiLevelLookup: true
          - task: NodeTool@0
            displayName: "Install Node 16.x"
            inputs:
              # https://github.com/nodejs/node/issues/40468
              versionSpec: '16.6.2'
          - script: |
              npm ci
            displayName: "Install packages"
            workingDirectory: $(Build.SourcesDirectory)/autorest.csharp
          - script: 'dotnet pack src/AutoRest.CSharp/AutoRest.CSharp.csproj -o $(Build.ArtifactStagingDirectory) -warnaserror -c Release'
            name: Package
            displayName: 'Package'
            workingDirectory: $(Build.SourcesDirectory)/autorest.csharp
            env:
              DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
              DOTNET_CLI_TELEMETRY_OPTOUT: 1
              DOTNET_MULTILEVEL_LOOKUP: 0
          - script: |
              pwsh ./eng/GenerateAndExecuteMockTest.ps1
            displayName: "GenerateAndExecuteMockTest"
            workingDirectory: $(Build.SourcesDirectory)/autorest.csharp
        parameters:
          name: SmokeTest_S_Z
          filter: "^[s-z]"
  - ${{if and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables['System.TeamProject'], 'internal'))}}:
    - template: pipelines/stages/net-release-to-feed.yml@azure-sdk-build-tools
      parameters:
        ShouldTag: false
        ShouldSign: false
        ShouldPublishSymbols: false
    - stage: 'Update_azure_sdk_for_net'
      dependsOn:
        - Build_and_Test
        - Release
      jobs:
        - job: Update
          pool:
            vmImage: ubuntu-20.04
          variables:
            AutorestCSharpVersion: $[stageDependencies.Build_and_Test.Build.outputs['Package.AutorestCSharpVersion']]
          steps:
            - checkout: self
            - checkout: azure-sdk-for-net
            - checkout: azure-sdk-tools
            - task: UseDotNet@2
              displayName: 'Use .NET Core SDK'
              inputs:
                useGlobalJson: true
                performMultiLevelLookup: true
            - pwsh: ./eng/UpdateAzureSdkForNet.ps1 -Version $(AutorestCSharpVersion) -SdkRepoRoot $(Build.SourcesDirectory)/azure-sdk-for-net
              failOnStderr: false
              workingDirectory: $(Build.SourcesDirectory)/autorest.csharp
              displayName: 'Update generator version in Azure SDK repo'
            - template: /eng/common/pipelines/templates/steps/create-pull-request.yml@azure-sdk-tools
              parameters:
                BaseBranchName: main
                RepoName: azure-sdk-for-net
                PRBranchName: auto-update-autorest
                CommitMsg: Update AutoRest C# version to $(AutorestCSharpVersion)
                PRBody: Update AutoRest C# version to $(AutorestCSharpVersion)
                PRTitle:  Update AutoRest C# version
                PushArgs: -f
                WorkingDirectory: $(Build.SourcesDirectory)/azure-sdk-for-net
                ScriptDirectory: $(Build.SourcesDirectory)/azure-sdk-tools/eng/common/scripts
