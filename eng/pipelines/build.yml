trigger:
  branches:
    include:
    - feature/*

pr:
  branches:
    include:
    - feature/*

variables:
  BlobFeedUrl: https://azuresdkartifacts.blob.core.windows.net/azure-sdk-tools/index.json
  OfficialBuildId: $(Build.BuildNumber)
  NugetSecurityAnalysisWarningLevel: 'none'

resources:
  repositories:
    - repository: azure-sdk-tools
      type: github
      name: Azure/azure-sdk-tools
      endpoint: azure
      ref: refs/tags/azure-sdk-tools_20220404.3
    - repository: azure-sdk-for-net
      type: github
      name: Azure/azure-sdk-for-net
      endpoint: azure
    - repository: azure-sdk-build-tools
      type: git
      name: internal/azure-sdk-build-tools
      ref: refs/tags/azure-sdk-build-tools_20230119.1

stages:
  - stage: 'Build_and_Test'
    jobs:
      - job: Build
        timeoutInMinutes: 120
        pool:
          name: azsdk-pool-mms-win-2022-general
          vmImage: MMS2022Compliant
        steps:
          - checkout: self
          - checkout: azure-sdk-tools
          - task: UseDotNet@2
            displayName: 'Use .NET Core SDK'
            retryCountOnTaskFailure: 3
            inputs:
              useGlobalJson: true
              performMultiLevelLookup: true
          - task: NodeTool@0
            displayName: "Install Node 18.13.0"
            inputs:
              versionSpec: '18.13.0'
          - script: |
              npm ci
            displayName: "Install packages"
            workingDirectory: $(Build.SourcesDirectory)/autorest.csharp
          - script: |
              npm run prettier
            displayName: "Emitter format check"
            workingDirectory: $(Build.SourcesDirectory)/autorest.csharp/src/CADL.Extension/Emitter.Csharp
          - script: 'dotnet pack src/AutoRest.CSharp/AutoRest.CSharp.csproj -o $(Build.ArtifactStagingDirectory) -warnaserror -c Release'
            name: Package
            displayName: 'Package'
            workingDirectory: $(Build.SourcesDirectory)/autorest.csharp
            env:
              DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
              DOTNET_CLI_TELEMETRY_OPTOUT: 1
              DOTNET_MULTILEVEL_LOOKUP: 0
          - pwsh: ./eng/SharedCodeCheck.ps1
            displayName: "Check if shared source code is up-to-date"
            workingDirectory: $(Build.SourcesDirectory)/autorest.csharp
          - task: Npm@1
            displayName: 'Build CADL Ranch Mock Api project'
            inputs:
              command: custom
              customCommand: run build
              workingDir: $(Build.SourcesDirectory)/autorest.csharp/test/CadlRanchMockApis
          - script: |
              dotnet test AutoRest.CSharp.sln
            displayName: "Test"
            env:
              DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
              DOTNET_CLI_TELEMETRY_OPTOUT: 1
              DOTNET_MULTILEVEL_LOOKUP: 0
            workingDirectory: $(Build.SourcesDirectory)/autorest.csharp
          - script: |
              dotnet test AutoRest.CSharp.sln -c Release
            displayName: "Test Release Configuration"
            env:
              DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
              DOTNET_CLI_TELEMETRY_OPTOUT: 1
              DOTNET_MULTILEVEL_LOOKUP: 0
            workingDirectory: $(Build.SourcesDirectory)/autorest.csharp
          - task: Npm@1
            displayName: 'Build CADL csharp emitter'
            inputs:
              command: custom
              customCommand: run build
              workingDir: $(Build.SourcesDirectory)/autorest.csharp/src/CADL.Extension/Emitter.Csharp
          - pwsh: ./eng/ExecuteCadlEmitterUnitTests.ps1
            displayName: 'E2E Test for CADL emitter'
            workingDirectory: $(Build.SourcesDirectory)/autorest.csharp
          - script: |
              npm run test --prefix src/CADL.Extension/Emitter.Csharp
            displayName: 'Unit Test'
            workingDirectory: $(Build.SourcesDirectory)/autorest.csharp
          - task: PublishBuildArtifacts@1
            condition: succeededOrFailed()
            displayName: 'Publish Artifacts'
            inputs:
              ArtifactName: packages
          - ${{if and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables['System.TeamProject'], 'internal'))}}:
            - pwsh: >
                ./eng/PublishRelease.ps1
                -AutorestArtifactDirectory ./artifacts/bin/AutoRest.CSharp/Release/net6.0/
                -CoverageDirectory ./artifacts/coverage
                -CadlEmitterDirectory ./src/CADL.Extension/Emitter.Csharp
                -GitHubToken $(azuresdk-github-pat)
                -NpmToken $(azure-sdk-npm-token)
                -BuildNumber $(Build.BuildNumber)
                -Sha $(Build.SourceVersion)
                -CoverageUser $(storage-coverage-user)
                -CoveragePass $(storage-coverage-pass)
              name: Publish
              failOnStderr: false
              displayName: 'Publish to GitHub, npm and coverage report'
              workingDirectory: $(Build.SourcesDirectory)/autorest.csharp
          - publish: $(Build.SourcesDirectory)/autorest.csharp/artifacts/coverage/cadl-ranch-coverage-csharp.json
            artifact: CoverageReport
          - task: AzureCLI@2
            displayName: 'Upload to Cadl Ranch Coverage Report'
            condition: and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables['System.TeamProject'], 'internal'))
            inputs:
              azureSubscription: "Cadl Ranch Storage"
              scriptType: "bash"
              scriptLocation: "inlineScript"
              inlineScript: npx cadl-ranch upload-coverage --coverageFile ./artifacts/coverage/cadl-ranch-coverage-csharp.json --generatorName csharp --storageAccountName azuresdkcadlranch --generatorVersion $(node -p -e "require('./src/CADL.Extension/Emitter.Csharp/package.json').version")
              workingDirectory: $(Build.SourcesDirectory)/autorest.csharp
      - template: check-code-generation.yml
        parameters:
          name: Check_Code_Generation_A_C
          filter: "^[a-b]"
      - template: check-code-generation.yml
        parameters:
          name: Check_Code_Generation_C_I
          filter: "^[c-i]"
      - template: check-code-generation.yml
        parameters:
          name: Check_Code_Generation_J_R
          filter: "^[j-r]"
      - template: check-code-generation.yml
        parameters:
          name: Check_Code_Generation_S_Z
          filter: "^[s-z]"
  - ${{if and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables['System.TeamProject'], 'internal'))}}:
    - template: pipelines/stages/net-release-to-feed.yml@azure-sdk-build-tools
      parameters:
        ShouldTag: false
        ShouldSign: false
        ShouldPublishSymbols: false
    - stage: 'Update_azure_sdk_for_net'
      dependsOn:
        - Build_and_Test
        - Release
      jobs:
        - job: Update
          timeoutInMinutes: 180
          pool:
            vmImage: ubuntu-20.04
          variables:
            AutorestCSharpVersion: $[stageDependencies.Build_and_Test.Build.outputs['Package.AutorestCSharpVersion']]
            CadlEmitterVersion: $[stageDependencies.Build_and_Test.Build.outputs['Publish.CadlEmitterVersion']]
          steps:
            - checkout: self
            - checkout: azure-sdk-for-net
            - checkout: azure-sdk-tools
            - task: UseDotNet@2
              displayName: 'Use .NET Core SDK'
              inputs:
                useGlobalJson: true
                performMultiLevelLookup: true
            - pwsh: ./eng/UpdateAzureSdkForNet.ps1 -AutorestCSharpVersion $(AutorestCSharpVersion) -CadlEmitterVersion $(CadlEmitterVersion) -SdkRepoRoot $(Build.SourcesDirectory)/azure-sdk-for-net
              failOnStderr: false
              workingDirectory: $(Build.SourcesDirectory)/autorest.csharp
              displayName: 'Update generator version in Azure SDK repo'
            - template: /eng/common/pipelines/templates/steps/create-pull-request.yml@azure-sdk-tools
              parameters:
                BaseBranchName: main
                RepoName: azure-sdk-for-net
                PRBranchName: auto-update-autorest
                CommitMsg: Update AutoRest C# version to $(AutorestCSharpVersion)
                PRBody: Update AutoRest C# version to $(AutorestCSharpVersion)
                PRTitle:  Update AutoRest C# version
                PushArgs: -f
                WorkingDirectory: $(Build.SourcesDirectory)/azure-sdk-for-net
                ScriptDirectory: $(Build.SourcesDirectory)/azure-sdk-tools/eng/common/scripts
