# Generate projects of smoke tests, projects under `samples` and `test` folders.
# Also check if projects under `samples` and `test` folders are updated.

parameters:
  - name: name
    type: string
  - name: filter
    type: string
  - name: usePackageJsonFromArtifacts
    type: boolean
    default: false
  - name: dependsOn
    type: object
    default: []

jobs:
- job: ${{ parameters.name }}
  pool:
    name: azsdk-pool-mms-ubuntu-2204-general
    vmImage: ubuntu-22.04
  dependsOn: ${{ parameters.dependsOn }}
  steps:
    - task: NodeTool@0
      displayName: "Install Node 18.x"
      inputs:
        versionSpec: '18.x'
    - template: /eng/pipelines/templates/steps/install-dotnet.yml
    - ${{ if eq(parameters.usePackageJsonFromArtifacts, 'true') }}:
      - task: DownloadPipelineArtifact@2
        displayName: 'Download package-json artifact'
        inputs: 
          buildType: current
          artifact: package-json
          targetPath: $(Build.SourcesDirectory)
      - pwsh: |
          Move-Item ./emitter-package.json ./src/TypeSpec.Extension/Emitter.Csharp/package.json -Force
          git add './package.json' './package-lock.json' './src/TypeSpec.Extension/Emitter.Csharp/package.json'
        displayName: 'Replace Emitter.Csharp/package.json'
        workingDirectory: $(Build.SourcesDirectory)
    - script: |
        npm ci
      displayName: "Install packages"
    - script: |
        npm ls -a
      displayName: "List packages"
    - pwsh: .\eng\CodeGenerationCheck.ps1 -Filter "${{ parameters.filter }}"
      displayName: "Check if generated code is up-to-date"
      env:
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
        DOTNET_CLI_TELEMETRY_OPTOUT: 1
        DOTNET_MULTILEVEL_LOOKUP: 0
