<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="OpWithHeadAsync(String,RequestContent,RequestContext)">
<example>
This sample shows how to call OpWithHeadAsync with required parameters and request content.
<code><![CDATA[
var client = new HeadClientClient();

var data = new {
    name = "<name>",
};

Response response = await client.OpWithHeadAsync("<headParameter>", RequestContent.Create(data));
Console.WriteLine(response.Status);
]]></code>
</example>
<remarks>
Below is the JSON schema for the request payload.

Request Body:

Schema for <c>Thing</c>:
<code>{
  name: string, # Required. name of the Thing
}
</code>

</remarks>
    </member>
    <member name="OpWithHead(String,RequestContent,RequestContext)">
<example>
This sample shows how to call OpWithHead with required parameters and request content.
<code><![CDATA[
var client = new HeadClientClient();

var data = new {
    name = "<name>",
};

Response response = client.OpWithHead("<headParameter>", RequestContent.Create(data));
Console.WriteLine(response.Status);
]]></code>
</example>
<remarks>
Below is the JSON schema for the request payload.

Request Body:

Schema for <c>Thing</c>:
<code>{
  name: string, # Required. name of the Thing
}
</code>

</remarks>
    </member>
    <member name="OpWithContentTypeHeadAsync(RequestContent,RequestContext)">
<example>
This sample shows how to call OpWithContentTypeHeadAsync with required request content.
<code><![CDATA[
var client = new HeadClientClient();

var data = new {
    name = "<name>",
};

Response response = await client.OpWithContentTypeHeadAsync(RequestContent.Create(data));
Console.WriteLine(response.Status);
]]></code>
</example>
<remarks>
Below is the JSON schema for the request payload.

Request Body:

Schema for <c>Thing</c>:
<code>{
  name: string, # Required. name of the Thing
}
</code>

</remarks>
    </member>
    <member name="OpWithContentTypeHead(RequestContent,RequestContext)">
<example>
This sample shows how to call OpWithContentTypeHead with required request content.
<code><![CDATA[
var client = new HeadClientClient();

var data = new {
    name = "<name>",
};

Response response = client.OpWithContentTypeHead(RequestContent.Create(data));
Console.WriteLine(response.Status);
]]></code>
</example>
<remarks>
Below is the JSON schema for the request payload.

Request Body:

Schema for <c>Thing</c>:
<code>{
  name: string, # Required. name of the Thing
}
</code>

</remarks>
    </member>
  </members>
</doc>