<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="CreateOrUpdateAsync(String,RequestContent,RequestContext)">
<example>
This sample shows how to call CreateOrUpdateAsync with required parameters and request content, and how to parse the result.
<code><![CDATA[
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new LroOperationClient(endpoint);

var data = new {
    age = 1234,
};

Response response = await client.CreateOrUpdateAsync("<name>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("age").ToString());
]]></code>
This sample shows how to call CreateOrUpdateAsync with all parameters and request content, and how to parse the result.
<code><![CDATA[
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new LroOperationClient(endpoint);

var data = new {
    tag = "<tag>",
    age = 1234,
};

Response response = await client.CreateOrUpdateAsync("<name>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("tag").ToString());
Console.WriteLine(result.GetProperty("age").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the request and response payloads.

Request Body:

Schema for <c>Pet</c>:
<code>{
  name: string, # Required.
  tag: string, # Optional.
  age: number, # Required.
}
</code>

Response Body:

Schema for <c>Pet</c>:
<code>{
  name: string, # Required.
  tag: string, # Optional.
  age: number, # Required.
}
</code>

</remarks>
    </member>
    <member name="CreateOrUpdate(String,RequestContent,RequestContext)">
<example>
This sample shows how to call CreateOrUpdate with required parameters and request content, and how to parse the result.
<code><![CDATA[
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new LroOperationClient(endpoint);

var data = new {
    age = 1234,
};

Response response = client.CreateOrUpdate("<name>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("age").ToString());
]]></code>
This sample shows how to call CreateOrUpdate with all parameters and request content, and how to parse the result.
<code><![CDATA[
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new LroOperationClient(endpoint);

var data = new {
    tag = "<tag>",
    age = 1234,
};

Response response = client.CreateOrUpdate("<name>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("tag").ToString());
Console.WriteLine(result.GetProperty("age").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the request and response payloads.

Request Body:

Schema for <c>Pet</c>:
<code>{
  name: string, # Required.
  tag: string, # Optional.
  age: number, # Required.
}
</code>

Response Body:

Schema for <c>Pet</c>:
<code>{
  name: string, # Required.
  tag: string, # Optional.
  age: number, # Required.
}
</code>

</remarks>
    </member>
  </members>
</doc>