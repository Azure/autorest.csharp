// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace TypeSpec.EnumPropertiesBasic.Models
{
    internal static partial class FixedDayOfTheWeekExtensions
    {
        public static string ToSerialString(this FixedDayOfTheWeek value) => value switch
        {
            FixedDayOfTheWeek.Monday => "Monday",
            FixedDayOfTheWeek.Tuesday => "Tuesday",
            FixedDayOfTheWeek.Wednesday => "Wednesday",
            FixedDayOfTheWeek.Thursday => "Thursday",
            FixedDayOfTheWeek.Friday => "Friday",
            FixedDayOfTheWeek.Saturday => "Saturday",
            FixedDayOfTheWeek.Sunday => "Sunday",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown FixedDayOfTheWeek value.")
        };

        public static FixedDayOfTheWeek ToFixedDayOfTheWeek(this string value)
        {
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Monday")) return FixedDayOfTheWeek.Monday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Tuesday")) return FixedDayOfTheWeek.Tuesday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Wednesday")) return FixedDayOfTheWeek.Wednesday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Thursday")) return FixedDayOfTheWeek.Thursday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Friday")) return FixedDayOfTheWeek.Friday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Saturday")) return FixedDayOfTheWeek.Saturday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Sunday")) return FixedDayOfTheWeek.Sunday;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown FixedDayOfTheWeek value.");
        }
    }
}
