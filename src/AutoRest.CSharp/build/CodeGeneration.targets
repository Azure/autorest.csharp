<Project>

  <PropertyGroup>
    <_DefaultInputName Condition="Exists('$(MSBuildProjectDirectory)/autorest.md')">$(MSBuildProjectDirectory)/autorest.md</_DefaultInputName>
    <AutoRestInput Condition="'$(AutoRestInput)' == ''">$(_DefaultInputName)</AutoRestInput>
    <!--
      <AutoRestAdditionalParameters></AutoRestAdditionalParameters>
     
      Allows passing additional AutoRest command line arguments, for example to run in interactive mode 
      use the following command line (remove the space between minus minus): dotnet msbuild /t:GenerateCode /p:AutoRestAdditionalParameters="- -interactive"
    -->
    
    <IncludeAzureCoreSharedCode Condition="'$(IncludeAzureCoreSharedCode)' == ''">true</IncludeAzureCoreSharedCode>
    <AzureCoreSharedCodeDirectory Condition="'$(AzureCoreSharedCodeDirectory)' == ''">$(MSBuildThisFileDirectory)../content/Azure.Core.Shared/</AzureCoreSharedCodeDirectory>
    <AutoRestSharedCodeDirectory>$(MSBuildThisFileDirectory)../content/Generator.Shared/</AutoRestSharedCodeDirectory>
    <ManagementSharedCodeDirectory>$(MSBuildThisFileDirectory)../content/Management.Shared/</ManagementSharedCodeDirectory>

    <_GenerateCode Condition="'$(AutoRestInput)' != ''">true</_GenerateCode>
  </PropertyGroup>

  <Target Name="GenerateCode" Condition="'$(_GenerateCode)' == 'true'" >
    <ReadLinesFromFile File="$(AutoRestInput)">
       <Output TaskParameter="Lines" ItemName="AutoRestInputLines"/>
    </ReadLinesFromFile>

   <ItemGroup>
      <GithubUrls Include="$([System.Text.RegularExpressions.Regex]::Match('%(AutoRestInputLines.Identity)', 'https?://(raw.)?github.+'))" />
      <GithubUrlsWithoutIssues Include="%(GithubUrls.Identity)" Condition="! ($([System.Text.RegularExpressions.Regex]::IsMatch('%(GithubUrls.Identity)', '/issues/\d+')))" />
      <GithubUrlsWithoutHash Include="%(GithubUrlsWithoutIssues.Identity)" Condition="! ($([System.Text.RegularExpressions.Regex]::IsMatch('%(GithubUrlsWithoutIssues.Identity)', '[\w\d]{40}')))" />
    </ItemGroup>

    <Error Text="Following GitHub URLs do not contain commit hash: @(GithubUrlsWithoutHash) please use permalinks for code generation inputs (see https://help.github.com/en/github/managing-files-in-a-repository/getting-permanent-links-to-files) " Condition="'@(GithubUrlsWithoutHash)' != ''" />

    <Exec Command="npx autorest@$(AutoRestVersion) --skip-csproj --skip-upgrade-check --version=$(AutoRestCoreVersion) $(AutoRestInput) $(AutoRestAdditionalParameters) --use=$(MSBuildThisFileDirectory)../tools/netcoreapp3.1/any/ --output-folder=$(MSBuildProjectDirectory)/Generated --clear-output-folder=true --namespace=$(RootNamespace) --shared-source-folders=&quot;$(AzureCoreSharedCodeDirectory);$(AutoRestSharedCodeDirectory)&quot;" />
  </Target>

  <PropertyGroup Condition="'$(_GenerateCode)' == 'true'">
    <NoWarn>$(NoWarn);CA1812</NoWarn>
  </PropertyGroup>

  <ItemGroup Condition="'$(_GenerateCode)' == 'true' OR '$(IncludeGeneratorSharedCode)' == 'true'">
    <Compile Include="$(AzureCoreSharedCodeDirectory)/**/*.cs" Condition="'$(IncludeAzureCoreSharedCode)' == 'true'" Link="Shared/Core/%(RecursiveDir)/%(Filename)%(Extension)" />
    <Compile Include="$(AutoRestSharedCodeDirectory)/**/*.cs" Link="Shared/AutoRest/%(RecursiveDir)/%(Filename)%(Extension)" />
  </ItemGroup>

  <ItemGroup Condition="'$(IncludeManagementSharedCode)' == 'true'">
    <Compile Include="$(ManagementSharedCodeDirectory)/**/*.cs" Link="Shared/Management/%(RecursiveDir)/%(Filename)%(Extension)" />
  </ItemGroup>

</Project>
