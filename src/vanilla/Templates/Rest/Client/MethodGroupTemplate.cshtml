@using AutoRest.CSharp.Model
@using AutoRest.CSharp.vanilla.Templates.Rest.Common
@inherits TemplateCs<AutoRest.CSharp.Model.MethodGroupCs>
@Header("// ")
@EmptyLine
namespace @Settings.Namespace
{
    using System.Linq;
    using System.IO;
    using Microsoft.Rest;
@foreach (var usingString in Model.Usings) {
    @:using @usingString;
}
@EmptyLine
    @XmlDocSummary($"{Model.TypeName} operations.")
    public partial class @(Model.TypeName) : I@(Model.TypeName)
    {
        @XmlDocCtor(Model.TypeName)
        @XmlDocParamRaw("operationsWithHttpMessages", $"Reference to the low level operations")
        @XmlDocException("System.ArgumentNullException", "a required parameter is null")
        public @(Model.TypeName)(I@(Model.TypeName)WithHttpMessages operationsWithHttpMessages)
        {
            @ParamNullCheck("operationsWithHttpMessages")
            this.OperationsWithHttpMessages = operationsWithHttpMessages;
        }
        @EmptyLine
        private I@(Model.TypeName)WithHttpMessages OperationsWithHttpMessages { get; set; }
        @EmptyLine
        public I@(Model.TypeName)WithHttpMessages WithHttpMessages()
        {
            return this.OperationsWithHttpMessages;
        }
        @EmptyLine
        @foreach (MethodCs method in Model.Methods)
        {
            if (method.ExcludeFromInterface)
            {
                continue;
            }

        @:@(Include(new MethodTemplate(), method))
        @EmptyLine
        }
    }
}