swagger: '2.0'
info:
  title: Hermes API
  version: '2'
  contact:
    name: Hermes
    email: it-hermes-dev@agoda.com
    url: https://confluence.agoda.local/display/HB/
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json

#  ██████╗  █████╗ ████████╗██╗  ██╗███████╗
#  ██╔══██╗██╔══██╗╚══██╔══╝██║  ██║██╔════╝
#  ██████╔╝███████║   ██║   ███████║███████╗
#  ██╔═══╝ ██╔══██║   ██║   ██╔══██║╚════██║
#  ██║     ██║  ██║   ██║   ██║  ██║███████║
#  ╚═╝     ╚═╝  ╚═╝   ╚═╝   ╚═╝  ╚═╝╚══════╝
paths:

  # ----------------------------------------------
  /v2/AutoResponse:
    post:
      tags:
        - AutoResponse
      description: |
        The endpointe is intended to test the auto response on dictator.
        if the question is compatible with a predefined intent, it will get an auto response otherwise it will go through the hermes classical process
      operationId: SendAutoResponseMessage
      parameters:
        - name: message
          in: body
          description: Message to be sent
          schema:
            $ref: '#/definitions/MessageRequest'
          required: true
      responses:
        '200':
          description: The request has succeeded
          schema:
            $ref: '#/definitions/AutoResponseMessageResponse'
        '202':
          description: The request has succeeded
          schema:
            $ref: '#/definitions/MessageResponse'
        '403':
          description: Forbidden
        '451':
          description: Unavailable For Legal Reasons
  # ----------------------------------------------
  /v2/conversations:
    get:
      tags:
        - conversations
      description: |
        Returns a list of most recent conversations of the given host or guest.
        Messages in conversations are sorted from newest to oldest
      operationId: GetConversations
      parameters:
        - name: host
          in: query
          description: The internal Agoda ID of the property
          type: integer
          format: int32
          required: false
        - name: guest
          in: query
          description: The internal Agoda ID of the guest
          type: integer
          format: int32
          required: false
        - name: checkin
          in: query
          description: |
            Check-in date in format: YYYY-MM-DD
          type: string
          format: date
          required: false
        - name: checkout
          in: query
          description: |
            Check-out date in format: YYYY-MM-DD
          type: string
          format: date
          required: false
        - name: n
          in: query
          description: |
            The number of messages returned in a conversation.
            Default is 0
          type: integer
          format: int32
          default: 0
          required: false
        - name: caller
          in: query
          type: string
          enum: ['guest', 'host', 'agoda']
          description: |
            This parameter is used to filter out messages that should not be visible to the caller
          required: false
        - $ref: "#/parameters/offset"
        - $ref: "#/parameters/limit"
        - $ref: "#/parameters/since"
        - $ref: "#/parameters/before"
      responses:
        '200':
          description: The request has succeeded
          schema:
            description: list of conversations
            type: array
            items:
              $ref: '#/definitions/Conversation'
  # ----------------------------------------------
  /v2/conversations/{id}:
    get:
      tags:
        - conversations
      description:
        Returns a conversation by id
      operationId: GetConversationById
      parameters:
        - name: id
          in: path
          description: Conversation id
          type: integer
          format: int64
          required: true
        - name: n
          in: query
          description: |
            The number of messages returned in the conversation.
            Default is 0
          type: integer
          format: int32
          default: 0
          required: false
        - name: caller
          in: query
          type: string
          enum: ['guest', 'host', 'agoda']
          description: |
            This parameter is used to filter out messages that should not be visible to the caller
          required: false
      responses:
        '200':
          description: The request has succeeded
          schema:
            $ref: '#/definitions/Conversation'
    put:
      tags:
        - conversations
      description:
        Update the property email address associated with one conversation
      operationId: UpdateEmailForConversation
      parameters:
        - name: id
          in: path
          description: Conversation id
          type: integer
          format: int64
          required: true
        - name: host
          in: body
          description: New email of property
          required: true
          schema:
            $ref: '#/definitions/ConversationUpdate'
      responses:
        '200':
          description: The update request has succeeded
        '400':
          description: Missing email or malformatted JSON
        '404':
          description: Found no conversation given ID
        '500':
          description: Internal server exception, e.g. DB throws exception
  # ----------------------------------------------
  /v2/conversations/{id}/enabled:
    get:
      tags:
        - conversations
      description:
        Returns a conversation status by id
      operationId: GetConversationEnabledById
      parameters:
        - name: id
          in: path
          description: Conversation id
          type: integer
          format: int64
          required: true

      responses:
        '200':
          description: The request has succeeded
          schema:
            type: boolean
        '404':
          description: The conversation is not found
        '500':
          description: Internal server exception
  # ----------------------------------------------
  /v2/conversations/{id}/messages:
    get:
      tags:
        - conversations
      description: |
        Returns conversation messages by id
      operationId: GetConversationMessagesById
      parameters:
        - name: id
          in: path
          description: Conversation id
          type: integer
          format: int64
          required: true
        - name: caller
          in: query
          type: string
          enum: ['guest', 'host', 'agoda']
          description: |
            This parameter is used to filter out messages that should not be visible to the caller
          required: false
        - $ref: "#/parameters/offset"
        - $ref: "#/parameters/limit"
        - $ref: "#/parameters/since"
        - $ref: "#/parameters/before"
      responses:
        '200':
          description: The request has succeeded
          schema:
            description: list of replied messages
            type: array
            items:
              $ref: '#/definitions/ConversationMessage'
    post:
      tags:
        - conversations
      description: |
        Sends a new message to the specified target from the specified sender.
        Returns the message id created
      operationId: SendMessageToConversation
      parameters:
        - name: id
          in: path
          description: Conversation id
          type: integer
          format: int64
          required: true
        - name: message
          in: body
          description: Message to be created
          schema:
            $ref: '#/definitions/MessageRequest'
          required: true
      responses:
        '202':
          description: The request has succeeded
          schema:
            $ref: '#/definitions/MessageResponse'
        '403':
          description: Forbidden
        '451':
          description: Unavailable For Legal Reasons
  # ----------------------------------------------
  /v2/conversations/{id}/host/read:
    post:
      tags:
        - conversations
      description: |
        Reset the unread count of the host to 0
      operationId: ReadMessageHost
      parameters:
        - name: id
          in: path
          description: Conversation id
          type: integer
          format: int64
          required: true
      responses:
        '200':
          description: The request has succeeded
  # ----------------------------------------------
  /v2/conversations/{id}/guest/read:
    post:
      tags:
        - conversations
      description: |
        Reset the unread count of the guest to 0
      operationId: ReadMessageGuest
      parameters:
        - name: id
          in: path
          description: Conversation id
          type: integer
          format: int64
          required: true
      responses:
        '200':
          description: The request has succeeded
  # ----------------------------------------------
  /v2/conversations/{id}/disable:
    put:
      tags:
        - conversations
      description: |
        Disable the conversation
      operationId: DisableConversation
      parameters:
        - name: id
          in: path
          description: Conversation id
          type: integer
          format: int64
          required: true
      responses:
        '200':
          description: The request has succeeded
        '404':
          description: Conversation was not found
        '500':
          description: There was an internal server exception
  # ----------------------------------------------
  /v2/conversations/{id}/enable:
    put:
      tags:
        - conversations
      description: |
        Enable the conversation
      operationId: EnableConversation
      parameters:
        - name: id
          in: path
          description: Conversation id
          type: integer
          format: int64
          required: true
      responses:
        '200':
          description: The request has succeeded
  # ----------------------------------------------
  /v2/conversations/{id}/disable_email:
    put:
      tags:
        - conversations
      description: |
        Disable email for this conversation
      operationId: DisableEmailForConversation
      parameters:
        - name: id
          in: path
          description: Conversation id
          type: integer
          format: int64
          required: true
      responses:
        '200':
          description: The request has succeeded
  # ----------------------------------------------
  /v2/conversations/{id}/enable_email:
    put:
      tags:
        - conversations
      description: |
        Enable email for this conversation
      operationId: EnableEmailForConversation
      parameters:
        - name: id
          in: path
          description: Conversation id
          type: integer
          format: int64
          required: true
      responses:
        '200':
          description: The request has succeeded
  # ----------------------------------------------
  /v2/messages:
    get:
      tags:
        - messages
      description: |
        Returns a list of most recent messages in a conversation
        between the given host and guest
      operationId: GetMessages
      parameters:
        - name: host
          in: query
          description: The internal Agoda ID of the property
          type: integer
          format: int32
          required: true
        - name: guest
          in: query
          description: The internal Agoda ID of the guest
          type: integer
          format: int32
          required: true
        - name: checkin
          in: query
          description: |
            Check-in date in format: YYYY-MM-DD
          type: string
          format: date
          required: false
        - name: checkout
          in: query
          description: |
            Check-out date in format: YYYY-MM-DD
          type: string
          format: date
          required: false
        - name: caller
          in: query
          type: string
          enum: ['guest', 'host', 'agoda']
          description: |
            This parameter is used to filter out messages that should not be visible to the caller
          required: false
        - $ref: "#/parameters/offset"
        - $ref: "#/parameters/limit"
        - $ref: "#/parameters/since"
        - $ref: "#/parameters/before"
      responses:
        '200':
          description: The request has succeeded
          schema:
            description: list of replied messages
            type: array
            items:
              $ref: '#/definitions/Message'
    post:
      tags:
        - messages
      description: |
        Sends a new message to the specified target from the specified sender.
        Returns the message id created
      operationId: SendMessage
      parameters:
        - name: message
          in: body
          description: Message to be created
          schema:
            $ref: '#/definitions/MessageRequest'
          required: true
      responses:
        '202':
          description: The request has succeeded
          schema:
            $ref: '#/definitions/MessageResponse'
        '403':
          description: Forbidden
        '451':
          description: Unavailable For Legal Reasons
  # ----------------------------------------------
  /v2/messages/{id}:
    get:
      tags:
        - messages
      description: |
        Returns a message by id
      operationId: GetMessage
      parameters:
        - name: id
          in: path
          description: Message id
          type: integer
          format: int64
          required: true
      responses:
        '200':
          description: The request has succeeded
          schema:
            $ref: '#/definitions/Message'
  # ----------------------------------------------
  /v2/messages/{id}/escalate:
    put:
      tags:
        - messages
      description: |
        Escalates a message to property
      operationId: EscalateMessage
      parameters:
        - name: id
          in: path
          description: Message id
          type: integer
          format: int64
          required: true
      responses:
        '200':
          description: The request has succeeded
          schema:
            $ref: '#/definitions/Message'
        '403':
          description: Forbidden
  # ----------------------------------------------
  /v2/messages/{id}/replay:
    post:
      tags:
        - messages
      description: |
        Sends the message to FSM
      operationId: SendMessageToFSM
      parameters:
        - name: id
          in: path
          description: Message id
          type: integer
          format: int64
          required: true
      responses:
        '200':
          description: The request has succeeded
          schema:
            $ref: '#/definitions/Message'
        '451':
          description: Unavailable For Legal Reasons
  # ----------------------------------------------
  /v2/messages/{id}/status:
    get:
      tags:
        - messages
      description: |
        Returns a the status code and description of message
      operationId: GetMessageStatus
      parameters:
        - name: id
          in: path
          description: The internal Message ID
          type: integer
          format: int64
          required: true
      responses:
        '200':
          description: The request has succeeded
          schema:
            $ref: '#/definitions/StatusMessage'
        '403':
          description: Forbidden
        '451':
          description: Unavailable For Legal Reasons
  # ----------------------------------------------
  /v2/email:
    post:
      tags:
        - email
      description: Creates a Hermes message from incoming email, Returns the message id created
      operationId: SendEmailMessage
      parameters:
        - name: from
          in: query
          description: Email address
          type: string
          format: email
          required: true
        - name: email
          in: body
          schema:
            type: string
          description: Content of the message
          required: true
      responses:
        '202':
          description: The request has succeeded
          schema:
            $ref: '#/definitions/MessageResponse'
        '403':
          description: Forbidden
        '451':
          description: Unavailable For Legal Reasons
  # ----------------------------------------------
  /v2/email/request_address:
    post:
      tags:
        - email
      description: |
        Creates an email address for "reply by email" feature.
        The address is specific to conversation and recipient.
      operationId: CreateEmailRequestAddress
      parameters:
        - name: request
          in: body
          required: true
          schema:
            type: object
            properties:
              host:
                $ref: '#/definitions/Host'
              guest:
                $ref: '#/definitions/Guest'
              booking_inquiry:
                $ref: '#/definitions/BookingInquiry'
              recipient:
                type: string
                enum: ['guest', 'host', 'agoda']
                description: Recipient type
            required:
              - host
              - guest
              - booking_inquiry
              - recipient
      responses:
        '200':
          description: The request has succeeded
          schema:
            format: String
            example: ah_46dtj6ka70u1jdv1t99bo8bfr1fb7v5mlj0ve@agodabiz.com
  # ----------------------------------------------
  /v2/email/{id}/{recipient}:
    get:
      tags:
        - email
      description:
        Returns an email address that recipient party can use to contact the opposite party for the conversation given by id.
      operationId: GetConversationEmailAddress
      parameters:
        - name: id
          in: path
          description: Conversation ID
          type: integer
          format: int64
          required: true
        - name: recipient
          in: path
          description: recipient of the email address (not the recipient of the email when the address is used)
          type: string
          enum: ['guest', 'host', 'agoda']
          required: true
      responses:
        '200':
          description: The request has succeeded
          schema:
            format: String
            example: reply+f11gmha7sgh00c2859g6mzj0wkzg@agoda-messaging.com
        '404':
          description: Conversation or recipient type was not found
  # ----------------------------------------------
  /v2/email/decrypt:
    get:
      tags:
        - email
      description: Decrypts given reply key
      operationId: DecryptKeyForId
      parameters:
        - name: address
          in: query
          description: Reply address
          type: string
          required: true
      responses:
        '200':
          description: The request has succeeded
          schema:
            type: object
            properties:
              id:
                type: integer
                format: int64
                description: |
                  The ID of an existing message or conversation
              recipient:
                type: string
                enum: ['guest', 'host', 'agoda']
                description: Who is recipient of the email with the given reply key
        '404':
          description: Wrong reply key
        '500':
           description: Exception occurred while decrypting.
# ----------------------------------------------
  /v2/email/keys/{key}:
    get:
      tags:
        - email
      description: Decrypts given reply key and return the conversation behind the key
      operationId: DecryptKeyForConversation
      parameters:
        - name: key
          in: path
          description: Reply key
          type: string
          required: true
      responses:
        '200':
          description: The request has succeeded
          schema:
            type: object
            properties:
              conversation:
                $ref: '#/definitions/Conversation'
              recipient:
                type: string
                enum: ['guest', 'host', 'agoda']
                description: Who is recipient of the email with the given reply key
        '404':
          description: The reply key is not found
# ----------------------------------------------
  /v2/email/masked_address:
    post:
      tags:
        - email
      description: |
        Generate a masked email based on the inputs given.
        The address is same for same inputs.
      operationId: GenerateMaskedEmailAddress
      parameters:
        - name: request
          in: body
          required: true
          schema:
            type: object
            properties:
              id:
                type: integer
                format: int32
                description: An unique ID to be masked
                example: 452678192847
              tag:
                type: string
                description: Additional data to be masked such as recipient/direction
                example: host
              prefix:
                type: string
                description: A string to add at the head of email
                example: replyqa+
              domain:
                type: string
                description: Email domain to be used(agoda-messagin.com/agodabiz.com)
                example: agoda-messaging.com
            required:
              - id
      responses:
        '200':
          description: The request has succeeded
          schema:
            format: String
            example: ah_46dtj6ka70u1jdv1t99bo8bfr1fb7v5mlj0ve@agodabiz.com
        '400':
          description: Bad Request
  # ----------------------------------------------
  /v2/email/masked_address/decode:
    get:
      tags:
        - email
      description: Decode masked email address
      operationId: DecodeMaskedEmailAddress
      parameters:
        - name: address
          in: query
          description: Masked email address
          type: string
          required: true
      responses:
        '200':
          description: The request has succeeded
          schema:
            type: object
            properties:
              id:
                type: integer
                format: int64
                description: |
                  The ID used to generate masked email
                example: 452678192847
              tag:
                type: string
                description: Tag used to generate masked email
                example: host
        '404':
          description: Wrong reply key
        '500':
           description: Exception occurred while decrypting.

  # ----------------------------------------------
  /v2/email/flight/masked_address:
    post:
      tags:
        - email
      description: |
        Generate a masked email for flight based on the inputs given.
        The address is same for same inputs.
      operationId: GenerateFlightMaskedEmailAddress
      parameters:
        - name: request
          in: body
          required: true
          schema:
            type: object
            properties:
              id:
                type: integer
                format: int32
                description: An unique ID to be masked
                example: 952678192847111400
            required:
              - id
      responses:
        '200':
          description: The request has succeeded
          schema:
            format: String
            example: ah_46dtj6ka70u1jdv1t99bo8bfr1fb7v5mlj0ve@agodabiz.com
        '400':
          description: Bad Request
  # ----------------------------------------------
  /v2/email/flight/masked_address/decrypt:
    get:
      tags:
        - email
      description: Decode masked flight email address
      operationId: DecodeFlightMaskedEmailAddress
      parameters:
        - name: address
          in: query
          description: Masked email address
          type: string
          required: true
      responses:
        '200':
          description: The request has succeeded
          schema:
            type: object
            properties:
              id:
                type: integer
                format: int64
                description: |
                  The ID used to generate masked email
                example: 952678192847111400
              tag:
                type: string
                description: Tag used to generate masked email
                example: host
        '404':
          description: Wrong reply key
        '500':
           description: Exception occurred while decrypting.
  # ----------------------------------------------
  /v2/guests/{id}/unread:
    get:
      tags:
        - unread
      description: |
        Returns the number of unread conversations and messages by member id
      operationId: GetUnreadCountGuest
      parameters:
        - name: id
          in: path
          description: Member id
          type: integer
          format: int64
          required: true
      responses:
        '200':
          description: The request has succeeded
          schema:
            $ref: '#/definitions/Unread'
  # ----------------------------------------------
  /v2/hosts/{id}/unread:
    get:
      tags:
        - unread
      description: |
        Returns the number of unread conversations and messages by host id
      operationId: GetUnreadCountHost
      parameters:
        - name: id
          in: path
          description: Property id
          type: integer
          format: int64
          required: true
      responses:
        '200':
          description: The request has succeeded
          schema:
            $ref: '#/definitions/Unread'
  # ----------------------------------------------
  /v2/token:
    get:
      tags:
        - token
      description: |
        Returns a token containing the claims in clear text encoded in base64, the format is claim=claimName1,claimValue1&claim=claimName2,claimValue2&.....
      operationId: GetToken
      parameters:
        - name: claim
          in: query
          description: List of claim containing the data to be embedded in the token, multiple claims can be provided and will be part of the output token
          type: string
          required: false

        - name: callLimit
          in: query
          description: limit the number of calls using this token
          type: integer
          format: int32
          minimum: 0
          required: false

      responses:
        '200':
          description: The request has succeeded
          schema:
            type: string
            example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJoZXJtZXMiLCJjbmQiOiI5LDIyMywzNzIsMDM2LDg1NCw3NzUsODA3In0.L1acanmTQd65kiGsIVG6I0q5Ow90AcdO_YEkYCVuqSs"
        '400':
          description: Wrong Request Parameter
  # ----------------------------------------------
  /v2/token/encrypt:
    get:
      tags:
        - token
      description: |
        Returns a token contianing the claims in an encrypted format, the format is claim=claimName1,claimValue1&claim=claimName2,claimValue2&.....
      operationId: GetEncryptedToken
      parameters:
        - name: claim
          in: query
          description: List of claim containing the data to be embedded in the token, multiple claims can be provided and will be part of the output token
          type: string
          required: true

        - name: callLimit
          in: query
          description: limit the number of calls using this token
          type: integer
          format: int32
          minimum: 0
          required: false

      responses:
        '200':
          description: The request has succeeded
          schema:
            type: string
            example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJoZXJtZXMiLCJjbmQiOiI5LDIyMywzNzIsMDM2LDg1NCw3NzUsODA3In0.L1acanmTQd65kiGsIVG6I0q5Ow90AcdO_YEkYCVuqSs"
        '400':
          description: Wrong Request Parameter
  # ----------------------------------------------
  /v2/token/claims:
    get:
      tags:
        - token
      description: |
        Returns the value of the claim contained inside the token, multiple claims can be retrived in one call, the token must be generated without encryption using /v2/token/, if the claim doesnt exist it will be ignored in the output
      operationId: GetClaimToken
      parameters:
        - name: token
          in: query
          description: The generated token from /v2/token/
          type: string
          required: true

        - name: claim
          in: query
          description: The name of the claim you are trying to recover
          type: string
          required: true
      responses:
        '200':
          description: The request has succeeded
          schema:
            type: string
            example: "{
                          claim1: '8'
                          claim2: '1452'
                          }"
        '406':
          description: Validation Failed
  # ----------------------------------------------
  /v2/token/claims/decrypt:
    get:
      tags:
        - token
      description: |
        Returns the value of the claim contained inside the token, multiple claims can be retrived in one call, the token must be generated with encryption using /v2/token/encrypt, if the claim doesnt exist it will be ignored in the output
      operationId: DecryptClaimToken
      parameters:
        - name: token
          in: query
          description: The generated token
          type: string
          required: true

        - name: claim
          in: query
          description: The name of the claim you are trying to recover
          type: string
          required: true
      responses:
        '200':
          description: The request has succeeded
          schema:
            type: string
            example: "{
                          claim1: '8'
                          claim2: '1452'
                          }"
        '406':
          description: Validation Failed
  # ----------------------------------------------
  /v2/token/validate:
    get:
      tags:
        - token
      description: |
        Checks if the token is valid
      operationId: ValidateToken
      parameters:
        - name: token
          in: query
          description: The generated token
          type: string
          required: true
      responses:
        '200':
          description: The request has succeeded
          schema:
            type: boolean
            example: true
        '406':
          description: Validation Failed
  # ----------------------------------------------
  /v2/token/reset:
    get:
      tags:
        - token
      description: |
        reset the number of access used for a token
      operationId: ResetTokenAccessCount
      parameters:
        - name: token
          in: query
          description: The generated token
          type: string
          required: true
      responses:
        '200':
          description: The request has succeeded
          schema:
            type: boolean
            example: true
        '406':
          description: Validation Failed
        '400':
          description: Wrong Request Parameter
  # ----------------------------------------------
  /v2/im/line/{property_id}:
    get:
      tags:
        - messengers, line
      description: |
        Returns LINE accounts connected to the given property
      operationId: GetLineProfile
      parameters:
        - name: property_id
          in: path
          description: Property id
          type: integer
          format: int32
          required: true
      responses:
        '200':
          description: The request has succeeded
          schema:
            description: list of Line mappings
            type: array
            items:
              $ref: '#/definitions/LineProfile'
    post:
      tags:
        - messengers, line
      description: |
        Connects LINE account to the given property. Sends a greeting message to the connected account
      operationId: CreateLineProfile
      parameters:
        - name: property_id
          in: path
          description: Property id
          type: integer
          format: int32
          required: true
        - name: greeting_message
          in: query
          description: Send a greeting message to the connected LINE account. By default is true
          type: boolean
          default: true
          required: false
        - name: mapping
          in: body
          schema:
            $ref: '#/definitions/LineProfileInput'
          required: true
      responses:
        '200':
          description: The request has succeeded
          schema:
            $ref: '#/definitions/LineProfile'
  # ----------------------------------------------
  /v2/im/line/{property_id}/{user_id}:
    get:
      tags:
        - messengers, line
      description: |
        Returns a LINE account connected to the given property
      operationId: GetLineProfileByLineUserId
      parameters:
        - name: property_id
          in: path
          description: Property id
          type: integer
          format: int32
          required: true
        - name: user_id
          in: path
          description: LINE user id
          type: string
          required: true
      responses:
        '200':
          description: The request has succeeded
          schema:
            $ref: '#/definitions/LineProfile'
    delete:
      tags:
        - messengers, line
      description: |
        Disconnects a LINE account from the given property
      operationId: DeleteLineProfile
      parameters:
        - name: property_id
          in: path
          description: Property id
          type: integer
          format: int32
          required: true
        - name: user_id
          in: path
          description: LINE user id
          type: string
          required: true
        - name: farewell_message
          in: query
          description: Send a farewell message to the disconnected LINE account. By default is true
          type: boolean
          default: true
          required: false
      responses:
        '200':
          description: The request has succeeded
          schema:
            $ref: '#/definitions/LineProfile'
# ----------------------------------------------

#  ██████╗ ███████╗███████╗██╗███╗   ██╗██╗████████╗██╗ ██████╗ ███╗   ██╗███████╗
#  ██╔══██╗██╔════╝██╔════╝██║████╗  ██║██║╚══██╔══╝██║██╔═══██╗████╗  ██║██╔════╝
#  ██║  ██║█████╗  █████╗  ██║██╔██╗ ██║██║   ██║   ██║██║   ██║██╔██╗ ██║███████╗
#  ██║  ██║██╔══╝  ██╔══╝  ██║██║╚██╗██║██║   ██║   ██║██║   ██║██║╚██╗██║╚════██║
#  ██████╔╝███████╗██║     ██║██║ ╚████║██║   ██║   ██║╚██████╔╝██║ ╚████║███████║
#  ╚═════╝ ╚══════╝╚═╝     ╚═╝╚═╝  ╚═══╝╚═╝   ╚═╝   ╚═╝ ╚═════╝ ╚═╝  ╚═══╝╚══════╝
definitions:
  # ----------------------------------------------
  Message:
    type: object
    description: Message
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
        description: |
          Message id. The value of this field will be automatically generated
          by Hermes API
      created_at:
        type: string
        format: date-time
        readOnly: true
        description: |
          Timestamp of creation of the Message. The value of this field will
          be automatically generated
          by Hermes API
      conversation_id:
        type: integer
        format: int64
        readOnly: true
        description: Conversation id
      parent_id:
        type: integer
        format: int64
        description: |
          The ID of an existing message that the message is in reply to.
          You can skip specifying host and guest parameters if the `parent_id`
          is set
      host:
        $ref: '#/definitions/Host'
      guest:
        $ref: '#/definitions/Guest'
      booking_inquiry:
        $ref: '#/definitions/BookingInquiry'
      sender:
        type: string
        enum: ['guest', 'host', 'agoda']
        description: Specifies who is sender of the message
      target:
        type: string
        enum: ['guest', 'host', 'agoda']
        description: Specifies to whom the message was sent
      properties:
        $ref: '#/definitions/MetaData'
      message:
        type: string
        maxLength: 4000
        description: |
          Message content. Clients should provide ability to do
          CMS substitutions. CMS identifiers intended for substitution
          should be embedded in ${}.
      detected_lang:
        type: string
        description: The detected language of the message
      special_requests:
        type: array
        items:
          $ref: '#/definitions/SpecialRequest'
    required:
      - host
      - guest
      - booking_inquiry
      - sender
      - target
      - properties
      - message
  # ----------------------------------------------

  MessageResponse:
    type: object
    description: A reponse of message posted
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
        description: |
          Message id. The value of this field will be automatically generated
          by Hermes API
      created_at:
        type: string
        format: date-time
        readOnly: true
        description: |
          Timestamp of creation of the Message. The value of this field will
          be automatically generated
          by Hermes API
      conversation_id:
        type: integer
        format: int64
        readOnly: true
        description: Conversation id
      host:
        $ref: '#/definitions/Host'
      guest:
        $ref: '#/definitions/Guest'
      booking_inquiry:
        $ref: '#/definitions/BookingInquiry'
      sender:
        type: string
        enum: ['guest', 'host', 'agoda']
        description: Specifies who is sender of the message
      target:
        type: string
        enum: ['guest', 'host', 'agoda']
        description: Specifies to whom the message was sent
    required:
      - sender
      - target
      - properties

  # ----------------------------------------------

  AutoResponseMessageResponse:
    type: object
    description: An auto reponse of message posted
    properties:
      RequestMessage:
        type: string
        description: |
          The actual question leading to an auto response

      AutoResponse:
        type: string
        description: |
          The auto response returned from the message request
    required:
      - RequestMessage
      - AutoResponse

  # ----------------------------------------------

  StatusMessage:
    type: object
    description: A reponse of get message status
    properties:
      message_id:
        type: integer
        format: int64
        readOnly: true
        description: |
          Message id. The value of this field will be automatically generated
          by Hermes API
      status_code:
        type: integer
        format: int32
        readOnly: true
        description: |
          Processing status of the message:
          * `0` - Message is being processed
          * `100` - Message has been published
          * `101` - Message not found
          * `102` - Conversation has expired
          * `103` - Booking id is 0
          * `104` - Special request with no BID
          * `105` - Fraud alert
        enum:
          - 0
          - 100
          - 101
          - 102
          - 103
          - 104
          - 105
      status_info:
        type: string
        readOnly: true
        description: Description of status id
        enum:
          - Message is being processed
          - Message has been published
          - Message not found
          - Conversation has expired
          - Booking id is 0
          - Special request with no BID
          - Fraud alert
    required:
      - id
  # ----------------------------------------------

  ConversationMessage:
    type: object
    description: A message nested in a Conversation object
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
        description: |
          Message id. The value of this field will be automatically generated
          by Hermes API
      created_at:
        type: string
        format: date-time
        readOnly: true
        description: |
          Timestamp of creation of the Message. The value of this field will
          be automatically generated
          by Hermes API
      parent_id:
        type: integer
        format: int64
        description: |
          The ID of an existing message that the message is in reply to.
          You can skip specifying host and guest parameters if the `parent_id`
          is set
      sender:
        type: string
        enum: ['guest', 'host', 'agoda']
        description: Specifies who is sender of the message
      target:
        type: string
        enum: ['guest', 'host', 'agoda']
        description: Specifies to whom the message was sent
      properties:
        $ref: '#/definitions/MetaData'
      message:
        type: string
        description: |
          Message content. Clients should provide ability to do
          CMS substitutions. CMS identifiers intended for substitution
          should be embedded in ${}.
      detected_lang:
        type: string
        description: The detected language of the message
      special_requests:
        type: array
        items:
          $ref: '#/definitions/SpecialRequest'
    required:
      - sender
      - target
      - properties
      - message
  # ----------------------------------------------
  Unread:
    type: object
    properties:
      unread_conversations:
        type: integer
        example: 1
        description: The number of unread conversations
      unread_messages:
        type: integer
        example: 3
        description: The number of unread messages
    required:
      - unread_conversations
      - unread_messages
  # ----------------------------------------------
  Guest:
    type: object
    properties:
      id:
        description: The internal Agoda ID of the guest
        type: integer
        format: int32
      email:
        type: string
        format: email
        example: john.doe@mailserver.xyz
        minLength: 1
        maxLength: 100
      first_name:
        type: string
        example: John
        minLength: 1
        maxLength: 100
      last_name:
        type: string
        example: Doe
        minLength: 1
        maxLength: 100
      language:
        type: string
        example: zh-HK
        description: RFC 5646 Language Tag
        minLength: 2
        maxLength: 35
      language_id:
        type: integer
        format: int32
        description: The internal Agoda ID of the language
        example: 7
    required:
      - id
      - email
      - first_name
      - last_name
  # ----------------------------------------------
  Host:
    type: object
    properties:
      id:
        description: The internal Agoda ID of the property
        type: integer
        format: int32
      email:
        type: string
        format: email
        example: inquiry@testproperty.xyz
        minLength: 1
        maxLength: 100
      name:
        type: string
        example: Test Property
        minLength: 1
        maxLength: 100
      language:
        type: string
        example: en-US
        description: RFC 5646 Language Tag
        minLength: 2
        maxLength: 35
      language_id:
        type: integer
        format: int32
        description: The internal Agoda ID of the language
        example: 1
    required:
      - id
      - name
  # ----------------------------------------------
  BookingInquiry:
    type: object
    description: |
      Booking inquiry information.
    properties:
      checkin_date:
        type: string
        format: date
        example: '2014-03-19'
      checkout_date:
        type: string
        format: date
        example: '2014-03-20'
      booking_id:
        description: |
          The internal Agoda ID of the booking. The value is present only if the
          booking has been made.
        type: integer
        format: int32
        minimum: 1
      room_type_id:
        description: The room type id.
        type: integer
        format: int32
      adults:
        type: integer
        format: int32
        example: 2
        description: Number of adults
      children:
        type: integer
        format: int32
        example: 2
        description: Number of children
      rooms:
        type: integer
        format: int32
        example: 2
        description: Number of rooms
      currency:
        type: string
        description: Currency of the inquiry in ISO 4217 format
        example: USD
        enum:
          - ADP
          - AED
          - AFA
          - AFN
          - ALL
          - AMD
          - ANG
          - AOA
          - ARS
          - ATS
          - AUD
          - AWG
          - AYM
          - AZM
          - AZN
          - BAM
          - BBD
          - BDT
          - BEF
          - BGL
          - BGN
          - BHD
          - BIF
          - BMD
          - BND
          - BOB
          - BOV
          - BRL
          - BSD
          - BTN
          - BWP
          - BYB
          - BYR
          - BZD
          - CAD
          - CDF
          - CHE
          - CHF
          - CHW
          - CLF
          - CLP
          - CNY
          - COP
          - COU
          - CRC
          - CSD
          - CUC
          - CUP
          - CVE
          - CYP
          - CZK
          - DEM
          - DJF
          - DKK
          - DOP
          - DZD
          - EEK
          - EGP
          - ERN
          - ESP
          - ETB
          - EUR
          - FIM
          - FJD
          - FKP
          - FRF
          - GBP
          - GEL
          - GHC
          - GHS
          - GIP
          - GMD
          - GNF
          - GRD
          - GTQ
          - GWP
          - GYD
          - HKD
          - HNL
          - HRK
          - HTG
          - HUF
          - IDR
          - IEP
          - ILS
          - INR
          - IQD
          - IRR
          - ISK
          - ITL
          - JMD
          - JOD
          - JPY
          - KES
          - KGS
          - KHR
          - KMF
          - KPW
          - KRW
          - KWD
          - KYD
          - KZT
          - LAK
          - LBP
          - LKR
          - LRD
          - LSL
          - LTL
          - LUF
          - LVL
          - LYD
          - MAD
          - MDL
          - MGA
          - MGF
          - MKD
          - MMK
          - MNT
          - MOP
          - MRO
          - MTL
          - MUR
          - MVR
          - MWK
          - MXN
          - MXV
          - MYR
          - MZM
          - MZN
          - NAD
          - NGN
          - NIO
          - NLG
          - NOK
          - NPR
          - NZD
          - OMR
          - PAB
          - PEN
          - PGK
          - PHP
          - PKR
          - PLN
          - PTE
          - PYG
          - QAR
          - ROL
          - RON
          - RSD
          - RUB
          - RUR
          - RWF
          - SAR
          - SBD
          - SCR
          - SDD
          - SDG
          - SEK
          - SGD
          - SHP
          - SIT
          - SKK
          - SLL
          - SOS
          - SRD
          - SRG
          - SSP
          - STD
          - SVC
          - SYP
          - SZL
          - THB
          - TJS
          - TMM
          - TMT
          - TND
          - TOP
          - TPE
          - TRL
          - TRY
          - TTD
          - TWD
          - TZS
          - UAH
          - UGX
          - USD
          - USN
          - USS
          - UYI
          - UYU
          - UZS
          - VEB
          - VEF
          - VND
          - VUV
          - WST
          - XAF
          - XAG
          - XAU
          - XBA
          - XBB
          - XBC
          - XBD
          - XCD
          - XDR
          - XFO
          - XFU
          - XOF
          - XPD
          - XPF
          - XPT
          - XSU
          - XTS
          - XUA
          - XXX
          - YER
          - YUM
          - ZAR
          - ZMK
          - ZMW
          - ZWD
          - ZWL
          - ZWN
          - ZWR
    required:
      - checkin_date
      - checkout_date
  # ----------------------------------------------
  Conversation:
    type: object
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
        description: |
          Conversation id
      host:
        $ref: '#/definitions/Host'
      guest:
        $ref: '#/definitions/Guest'
      booking_inquiry:
        $ref: '#/definitions/BookingInquiry'
      created_at:
        type: string
        format: date-time
        readOnly: true
        description: Timestamp of creation of the Conversation.
      updated_at:
        type: string
        format: date-time
        readOnly: true
        description: Timestamp of the latest message of the messages returned on the conversation.
      host_unread_count:
        type: integer
        format: int32
        description: Count of unread messages by the host
      guest_unread_count:
        type: integer
        format: int32
        description: Count of unread messages by the guest
      is_active:
        type: boolean
        description: Indicates whether this conversation is active. Null or true if the conversation is active.
      has_host_replied:
        type: boolean
        description: Indicates whether this conversation has a sender type of host. Null if conversation initiated by host.
      messages:
        description: Conversation messages
        type: array
        items:
          $ref: '#/definitions/ConversationMessage'
    required:
      - host
      - guest
      - booking_inquiry
      - host_unread_count
      - guest_unread_count
      - messages
  # ----------------------------------------------
  MetaData:
    description: |
      Additional properties of the message.
    type: object
    properties:
      message_type:
        type: string
        enum: ['regular', 'notification', 'special_request', 'in_house', 'agoda_auto_response', 'cancellation_waiver', 'offer', 'cancellation_reminder', 'community', 'offer_catalog']
        description: Message type
      message_tags:
        type: array
        items:
          type: string
          enum:
            - airport_transfer
            - confirmed_greeting
            - amp_offer
            - fraud_disclaimer
            - cancellation_reminder
        description: Message tags
      target_only:
        type: boolean
        description: |
          This meta flag tells Hermes clients that you don't want this message to be visible to anyone except
          the receiver.
      mark_unread:
        type: boolean
        description: Indicates whether the message should show up in the thread as already being read
      push:
        type: boolean
        description: Indicated whether push notification should be sent for this message
      email:
        type: boolean
        description: Indicated whether email should be sent for this message
      sms:
        type: boolean
        description: Indicated whether SMS should be sent for this message
      escalated:
        type: boolean
        description: Indicates whether the message was escalated to property
      no_translate:
        type: boolean
        description: |
          When Hermes clients recognize that the content of the message is not in the language that the receiver is
          likely to want to read, the clients may translate it. However, there may be situations where this is not
          desired. This meta flag tells Hermes clients that you don't want this message to be translated.
      short_message:
        type: string
        description: Message for sending to SMS
      push_header:
        type: string
        description: Custom push notification header
      push_message:
        type: string
        description: Custom push notification body
      push_url:
        type: string
        description: Custom push notification link
      push_buttons:
        type: array
        description: Custom push notification buttons
        items:
          $ref: '#/definitions/PushButtons'
  # ----------------------------------------------
  ConversationMetadata:
    description: |
      Additional properties of the conversation.
    type: object
    properties:
      tags:
        description: list of tags for the conversation
        type: array
        items:
          type: string
      expiry_days:
        description: updates the number of days at which the conversation is considered expired after checkout
        type: integer
        format: int32
      property_reference_id:
        description: original property id
        type: integer
        format: int32
      property_reference_name:
        description: charlie
        type: string
    required:
      - tags
  # ----------------------------------------------
  Problem:
    type: object
    properties:
      title:
        type: string
        description: A short summary
        example: A short summary
      detail:
        type: string
        description: A bit more detailed description
        example: A bit more detailed description=
    required:
      - title
  # ----------------------------------------------
  LineProfileInput:
    type: object
    properties:
      user_id:
        type: string
        maxLength: 100
        description: LINE user identifier
      display_name:
        type: string
        maxLength: 100
        description: LINE user display name
      picture_url:
        type: string
        maxLength: 1000
        description: |
          LINE profile picture URL. Not included if the user
          doesn't have a profile image.
    required:
      - user_id
      - display_name
  # ----------------------------------------------
  LineProfile:
    type: object
    properties:
      user_id:
        type: string
        maxLength: 100
        description: LINE user identifier
      display_name:
        type: string
        maxLength: 100
        description: LINE user display name
      picture_url:
        type: string
        maxLength: 1000
        description: |
          LINE profile picture URL. Not included if the user
          doesn't have a profile image.
      created_date:
        type: string
        format: date-time
        description: |
          Date when property receive message from Hermes
  # ----------------------------------------------
  SpecialRequest:
    type: object
    properties:
      cms_id:
        type: integer
        format: int32
        description: CMS Id
      name:
        type: string
        enum:
          - arrival-flight-no
          - arrival-flight-time
          - arrival-time
          - airport-transfer
          - additional-notes
          - non-smoke
          - high-floor
          - large-bed
          - twin-beds
          - quiet-room
          - adjoining-room
          - baby-cot
          - inter-connecting-rooms
          - honeymoon
          - low-floor
          - smoking-room
          - room-with-bath-tub
          - early-check-in
          - late-check-in
          - late-check-out
        description: The name of special request
      value:
        type: string
        maxLength: 4000
        example: '03:00 - 04:00'
    required:
      - cms_id
      - name
  # ----------------------------------------------
  ConversationUpdate:
    type: object
    description: Conversation update
    properties:
      host:
        type: object
        properties:
          email:
            type: string
            description: New email address of host
            maxLength: 100
            minLength: 1
            example: 'newAddress@property.com'
  # ----------------------------------------------
  MessageRequest:
    type: object
    description: Message to be created
    properties:
      parent_id:
        type: integer
        format: int64
        description: |
          The ID of an existing message that the message is in reply to.
      origin:
        type: string
        enum: ['web', 'mobile', 'email', 'ebe', 'hermes', 'inbox_web', 'inbox_app', 'nha', 'web_mmb', 'app_reception', 'ceg_tobo', 'web_contact_us', 'email_canned', 'ycs_bkg_list', 'marketplace', 'janus']
        description: Origin of the message
      host:
        $ref: '#/definitions/Host'
      guest:
        $ref: '#/definitions/Guest'
      booking_inquiry:
        $ref: '#/definitions/BookingInquiry'
      sender:
        type: string
        enum: ['guest', 'host', 'agoda']
        description: Specifies who is sender of the message
      target:
        type: string
        enum: ['guest', 'host', 'agoda']
        description: Specifies to whom the message was sent
      properties:
        $ref: '#/definitions/MetaData'
      message:
        type: string
        maxLength: 4000
        description: |
          Message content. Clients should provide ability to do
          CMS substitutions. CMS identifiers intended for substitution
          should be embedded in ${}.
      conversation_properties:
        $ref: '#/definitions/ConversationMetadata'
    required:
      - origin
      - sender
      - target
      - message
  # ----------------------------------------------
  PushButtons:
    type: object
    properties:
      text:
        type: string
        description: Button name
      uri:
        type: string
        description: URI when click on button
    required:
      - text
      - uri
# ----------------------------------------------

#  ██████╗  █████╗ ██████╗  █████╗ ███╗   ███╗███████╗
#  ██╔══██╗██╔══██╗██╔══██╗██╔══██╗████╗ ████║██╔════╝
#  ██████╔╝███████║██████╔╝███████║██╔████╔██║███████╗
#  ██╔═══╝ ██╔══██║██╔══██╗██╔══██║██║╚██╔╝██║╚════██║
#  ██║     ██║  ██║██║  ██║██║  ██║██║ ╚═╝ ██║███████║
#  ╚═╝     ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝     ╚═╝╚══════╝
parameters:
  # ----------------------------------------------
  offset:
    name: offset
    in: query
    description: The offset of the first item returned. Default is 0
    type: integer
    format: int32
    required: false
    default: 0
    minimum: 0
  # ----------------------------------------------
  limit:
    name: limit
    in: query
    description: |
      Limits the number of items returned in one page. Default is 20.
      If the given number is negative then it returns the oldest number of items,
      otherwise the latest.
    type: integer
    format: int32
    required: false
    default: 20
    minimum: 1
    maximum: 1000
  # ----------------------------------------------
  since:
    name: since
    in: query
    description: |
      Show items updated after the given time.
      This is a timestamp in RFC3339 format: YYYY-MM-DDTHH:MM:SSZ
    type: string
    format: date-time
    required: false
  # ----------------------------------------------
  before:
    name: before
    in: query
    description: |
      Show items updated before the given time.
      This is a timestamp in RFC3339 format: YYYY-MM-DDTHH:MM:SSZ
    type: string
    format: date-time
    required: false
